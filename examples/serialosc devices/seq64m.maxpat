{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 6,
			"revision" : 3,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "box",
		"rect" : [ 69.0, 147.0, 1187.0, 944.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"assistshowspatchername" : 0,
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-32",
					"maxclass" : "message",
					"numinlets" : 2,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 413.0, 146.0, 106.0, 22.0 ],
					"text" : "/sys/prefix s grid-a"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-30",
					"maxclass" : "message",
					"numinlets" : 2,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 853.5, 552.0, 94.0, 22.0 ],
					"text" : "/arc/ring/all 2. 0."
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 832.5, 447.800005912780762, 115.0, 22.0 ],
					"text" : "prepend /arc/ring/all"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-14",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 833.0, 396.800005912780762, 98.0, 22.0 ],
					"text" : "route /arc/ring/all"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-29",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 568.500008523464203, 250.100003063678741, 149.0, 22.0 ],
					"text" : "udpsend unit02.local 1234"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-21",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 427.200006365776062, 538.400008022785187, 137.0, 22.0 ],
					"text" : "routepass /arc/enc/delta"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-20",
					"linecount" : 3,
					"maxclass" : "comment",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 564.500008523464203, 91.600003063678741, 106.0, 47.0 ],
					"text" : "reprogram the note assignments with a list"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-19",
					"linecount" : 2,
					"maxclass" : "comment",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 386.400005757808685, 205.600003063678741, 153.0, 33.0 ],
					"text" : "there are eight preset note assigments"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "comment",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 40.000000596046448, 71.200001060962677, 305.0, 20.0 ],
					"text" : "64 step monophonic sequencer for 128 and optional arc"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-314",
					"maxclass" : "live.line",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 40.000000596046448, 36.800000548362732, 976.0, 6.0 ]
				}

			}
, 			{
				"box" : 				{
					"fontsize" : 24.0,
					"id" : "obj-315",
					"maxclass" : "comment",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 40.000000596046448, 36.800000548362732, 99.0, 33.0 ],
					"text" : "seq64m"
				}

			}
, 			{
				"box" : 				{
					"attr" : "Root",
					"id" : "obj-11",
					"maxclass" : "attrui",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 724.800010800361633, 250.400003731250763, 150.0, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"attr" : "Scale",
					"id" : "obj-24",
					"maxclass" : "attrui",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 724.800010800361633, 220.000003278255463, 150.0, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-15",
					"maxclass" : "number",
					"numinlets" : 1,
					"numoutlets" : 2,
					"outlettype" : [ "", "bang" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 724.800010800361633, 174.400002598762512, 50.0, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-16",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 724.800010800361633, 140.000002086162567, 58.0, 22.0 ],
					"text" : "bp.bintott"
				}

			}
, 			{
				"box" : 				{
					"bgmode" : 0,
					"border" : 0,
					"clickthrough" : 0,
					"enablehscroll" : 0,
					"enablevscroll" : 0,
					"id" : "obj-17",
					"lockeddragscroll" : 0,
					"lockedsize" : 0,
					"maxclass" : "bpatcher",
					"name" : "bp.kspitch.maxpat",
					"numinlets" : 1,
					"numoutlets" : 1,
					"offset" : [ 0.0, 0.0 ],
					"outlettype" : [ "" ],
					"patching_rect" : [ 724.800010800361633, 70.400001049041748, 91.025635600090027, 57.051278650760651 ],
					"varname" : "bp.kspitch[1]",
					"viewvisibility" : 1
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-9",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 568.500008523464203, 205.600003063678741, 105.0, 22.0 ],
					"text" : "prepend /notepool"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "message",
					"numinlets" : 2,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 568.500008523464203, 159.600003063678741, 85.0, 22.0 ],
					"text" : "0 1 2 3 4 5 6 7"
				}

			}
, 			{
				"box" : 				{
					"attr" : "patchername",
					"id" : "obj-326",
					"maxclass" : "attrui",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 978.400014579296112, 275.200004100799561, 217.0, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-85",
					"maxclass" : "toggle",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "int" ],
					"parameter_enable" : 1,
					"patching_rect" : [ 1114.400014579296112, 439.534890532493591, 24.0, 24.0 ],
					"saved_attribute_attributes" : 					{
						"valueof" : 						{
							"parameter_enum" : [ "off", "on" ],
							"parameter_longname" : "toggle[6]",
							"parameter_mmax" : 1,
							"parameter_modmode" : 0,
							"parameter_shortname" : "toggle[1]",
							"parameter_type" : 2
						}

					}
,
					"varname" : "toggle[6]"
				}

			}
, 			{
				"box" : 				{
					"fontsize" : 13.0,
					"id" : "obj-86",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 1114.400014579296112, 403.100781440734863, 102.0, 23.0 ],
					"text" : "route connected"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-291",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 3,
					"outlettype" : [ "list", "int", "list" ],
					"patching_rect" : [ 978.400014579296112, 353.600005269050598, 155.0, 22.0 ],
					"text" : "rnbo.remote @name unit02"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-10",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 8,
					"outlettype" : [ "", "", "", "int", "int", "", "int", "" ],
					"patching_rect" : [ 113.600001692771912, 628.00000935792923, 92.5, 22.0 ],
					"text" : "midiparse"
				}

			}
, 			{
				"box" : 				{
					"attr" : "Notelist",
					"id" : "obj-28",
					"maxclass" : "attrui",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 386.400005757808685, 247.200003683567047, 165.5, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-26",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 694.400010347366333, 448.000006675720215, 119.0, 22.0 ],
					"text" : "prepend /arc/ring/set"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-27",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 695.200010359287262, 396.800005912780762, 102.0, 22.0 ],
					"text" : "route /arc/ring/set"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-25",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 215.200003206729889, 424.000006318092346, 79.0, 22.0 ],
					"text" : "vexpr int($f1)"
				}

			}
, 			{
				"box" : 				{
					"attr" : "Lane",
					"id" : "obj-6",
					"maxclass" : "attrui",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 202.400003015995026, 247.200003683567047, 165.5, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"attr" : "Page",
					"id" : "obj-3",
					"maxclass" : "attrui",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 40.000000596046448, 247.200003683567047, 150.0, 22.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-23",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 0,
					"patching_rect" : [ 187.200002789497375, 794.400011837482452, 35.0, 22.0 ],
					"text" : "dac~"
				}

			}
, 			{
				"box" : 				{
					"autosave" : 1,
					"bgmode" : 0,
					"border" : 0,
					"clickthrough" : 0,
					"id" : "obj-22",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 8,
					"offset" : [ 0.0, 0.0 ],
					"outlettype" : [ "signal", "signal", "", "list", "int", "", "", "" ],
					"patching_rect" : [ 187.200002789497375, 669.600009977817535, 300.0, 100.0 ],
					"save" : [ "#N", "vst~", "loaduniqueid", 0, "C74_VST3:/Kontakt 7", ";" ],
					"saved_attribute_attributes" : 					{
						"valueof" : 						{
							"parameter_invisible" : 1,
							"parameter_longname" : "vst~",
							"parameter_modmode" : 0,
							"parameter_shortname" : "vst~",
							"parameter_type" : 3
						}

					}
,
					"saved_object_attributes" : 					{
						"parameter_enable" : 1,
						"parameter_mappable" : 0
					}
,
					"snapshot" : 					{
						"filetype" : "C74Snapshot",
						"version" : 2,
						"minorversion" : 0,
						"name" : "snapshotlist",
						"origin" : "vst~",
						"type" : "list",
						"subtype" : "Undefined",
						"embed" : 1,
						"snapshot" : 						{
							"pluginname" : "Kontakt 7.vst3info",
							"plugindisplayname" : "Kontakt 7",
							"pluginsavedname" : "C74_VST3:/Kontakt 7",
							"pluginsaveduniqueid" : 2116049625,
							"version" : 1,
							"isbank" : 0,
							"isbase64" : 1,
							"sliderorder" : [  ],
							"slidervisibility
							"blob" : "343918.VMjLgT1OE..O+fWarAhckI2bo8la8HRLt.iHfTlai8FYo41Y8HRUTYTK3HxO9.BOVMEUy.Ea0cVZtMEcgQWY9vSRC8Vav8lak4Fc9HSM2fiLz3hY2jiKt3hKt3hKP4hKt3hKt0zUZQWQt3hKt3hKt3hKtD1cssTPMQmbKEURyEGQzM0QzYSSgkURt3hKt3hKt3hKD0TUR4TVG4hKt.kKt3hKtfTPt3hKt3hKt3hKQM0ZpMEbA4hKtPjKt3hKtXjKt3hKt3hKt3BT5QURzPkKt3hKtDjKt3hKD4hKt3BTt3hKt3RPt3hKtPjKt3hKt3hKt3hKt3hKt3hKt3hKt.0PnUkUmEjKt3hKy3hXP4hKt3hKt3RPt3hKtPjKt3hKt3hKt3hKt3hKt3hKt3hKtXmKt3hKtXmKtvjKtLjKt3hKt3hKt3hKt3hKt3hKt3hKt3hKD4hKt3BTt3hKt3hKt3hKt.kdTkDMTMlKt3hKNQSNt3hKt3hKt.kKt3hKt3VSWoEcE4hKt3hKt3hKt3BS13jcxbERIMTUr0lZ2P1UwnVbkcWMmYyPt3hKt3hKtPTSUIkSUcjKt3BTt3hKt3hcxjiKt3hKt3hKtD0Tqo1T4EjKt3BQt3hKt3hQt3hKt3hKt3hKPoGUIQCUt3hKt3RPt3hKtPjKt3hKP4hKt3hKtbSX1LjKt3hKt3hKA4hKt3hYwH1azXkKt3hKt3hKt3hKHcmMtESc1QCZ5sDZFo2U3.ySZQlREYjKt3hKt3hKt3BT5QURzPkKt3hKtDjKt3hKD4hKt3BTt3hKt3RPt3hKt3hKt3hKtzzRqo1TC4hKt3hbVYyPt3hKt3hKtDjKt3hKlEiXuQiUt3hKt3hKt3hKt.URygEd4fSYEo2LDokZSMGaSojPCMCat3hKt3hKt3hKPkmTIQidt3hKt3RPt3hKtPERt3hKt3hKt3hKD0TUR4TUF4hKt.kKt3hKtHUPt3hKt3hKt3hKQM0ZpMEbA4hKtPjKt3hKtXjKt3hKt3hKt3BT5QURzPkKt3hKtDjKt3hKD4hKt3BTt3hKt3RPt3hKtPjKt3hKP4hKt3hKC4hKt3BTC4xLtXWSt3hKt3hKt3hKt3hKrUyStECQt3hKt3hKB4hKt3BQt3hKtXWPt3hKtHiKlsjKpMjKz4hKL4xLB4hct3hKtPjKt3hKtDjKt3hKt3hKt3BT5QURzPTXt3hKt3xQt3hKt3hKt3BTt3hKt3haMckVzUjKt3hKt3hKt3hKxTzMIUTakomRAgEbqfzby8ldyYSTBkkKt3hKt3hKt3BQMUkTNcmQt3hKP4hKt3hKX4hKt3hKt3hKt3RTSslZSEjKt3hKD4hKt3BTt3hKt3RPt3hKtfjKt3hKP4hKt3hKt3hKt3hdt3hKtX1TtPkQtHSPtfjKlIjKpEDTY4BVF4xYAA0XtXmQtnWPPojKt3hKt3hKt3hKt3hKt3hKt3hKt3hK1sxJqrxJqrxJqrxPt3hKt3hKt3hKt3hKt3hKt3hKt3BTt3hKt3RPt3hKtfjKt3hK1EjKt3hKKEjcg4xLF4hdAAEVtHmQtnWPlEjKt3hKMEDTi4hcF4hdAAkVtvzQt3hKt3hKt3hKt3hcA4hKt3xQt3hKtXWQt3RP1gkK2XjKxEjcg4BRG4RPt3hKt3xPtDkKt3hK1UjKtDjKY4BUF4RLAAkVtvjQtrVPtLlKpcjK1EDTY4BVF4hbAAEVtHlQtjWPP4hKt3hK24hcB4hKt3hXA4BTtvzQtTWPPMlKyXjKpEjKi4hZG4hcAAUVtPjKt3hKtvjKh4hKt3hKW4hKD4hdAAUVtnmQtXWP1ElKD4hKt3hKL4BVt3hKt3xUt3BQtDSPPkkKHcjKxEjYA4hKt3xctX1RtH1PtPmKPwjKPMjKF4hKt3hcE4hKAY1XtPkQtfWPPElKX4hKt3BTL4xLB4hLtX1RtPzPtnmK1EjKt3hKhEjKP4BVG4xaAYmXtnlQtfVPP4hKt3hK14BTt3hKt3hKt3hKtfjKt3hKtD0Tqo1TzDjKt3hYF4hKt3hKt3hKtDjKt3hKlEiXuQiUt3hKt3hKt3hKtPkY2jkXNkVMnQUQEIzS2cDNjY0P2bjSt3hKt3hKt3hKPoGUIQCUj4hKt3RPt3hKtXVPt3hKt3hKt3hKD0TUR4TQt3hKt.kKt3hKtDjKt3hKD4hKt3BTt3hKt3hKt3hKtPjKt3hKt3hKt3hKA4hKt3BT5QURzPzXt3hKt3jZ43hKt3hKt3BTt3hKt3haMckVzUjKt3hKt3hKt3hKtjyZ2kDd2YVRAkTbQsRPtfEcAYmPyzTMC4hKt3hKt3BQMUkTNE0Qt3hKP4hKt3hKEkVNt3hKt3hKt3RTSslZSkWPt3hKD4hKt3hKF4hKt3hKt3hKt.kdTkDMT4hKt3hKA4hKt3BQt3hKt.kKt3hKtDDT4n1Xt3RZt8jKtzzJPQVULYiSZIDMi0TbFokb2bjbpsVLwEzQPozP1klK3f2ZHMSRQk1QLgyQ3HlR0kSdxAWZ4rzZzQjRngSVy0VNwrFZ44RUJQSR4fDcvMjXRU1MlkDQ3DlL2QzPtD1biYGMmc0aTcDYGYWaTcENJIUcsozXToEMzTCTwvlamk2RQ0DMxDlayg2PXwTM1DFZJYUZxIzQI0VM2oUY13VTL0DLoICYhgFRyEzaOUVNiASdvLyQO0jTXUyJrYVaOQjLtLSamokdqbFdGYTNvHjPCIyRqbUbI4TMEA2Z2fiMvUSTAsVMiUDcTASQLcVS2DUcqvzZLAUM3rlRpgGQOM1JGQSSLolaS8FZ2TjXTI1XYczSm4TP2HyY0PzTwE2S4zFQzjlLE4VMgsDSvTjT4gCURIFYJQUTqElTzgUX5g1MxgmTpU2SzgTSTwTPmc2UFUDLOozPYk2UnESMy3hKyXTPvkiVXUWd3kVPFg1UykCbzMCSqjFdgMlS2MiS2L0T3g1bj4jYP4DaCMiLzMzY5c0bzYmaFIyMMI2YGcSS1TyRG4xbyombks1JpAkVFICYq.kPyjSPw.WaYIjbj0TbtnDSXkSdQQmZ5kzamQSdPIEMAICYGcSZhoDLAMWNyvTLvnEaBI0bqbFTGoTRFMmMGkDapU1SuIUN0UmaXIyJHMFNRs1UiUSdko0UKwTZ4.ybvLDQromblYkVvkVN0ciVgcVX3AUV4IyY4QSa1jVRGgFdvUESq31LxMiSY4TSrwFLoYDQUgzJFQkcgAiVigGRxfFd4fGRJEzSnkTaVQSVWASTnQUdKgCdBsRbGYlYLkSZH4lXYgTSwrldkMFavLjX18zcicVUBQ0S1ICVMEER3j2SoAiMz4jSRgVdIsDLvP2YoQmRjIGdygEQ4oWZWMjKzXjUtfzTOgUZSQEMvHjSIQzboMjc3ImQ1fSVGkyZIYjQ0rVSA8TbxDlQP0VLt4VP2QiQmEyY3.GYvfySnsxJ2ECS0AEbjEFRqETcDQ2SxYWRTAUc3vFV4rhcSk1Tz.kTlcCYtfTN2D0Zv3Fb0k1ai41MJMTXJcGTKAEZuIVNhcSVDIGZBoFVyrjUR4hR2TFNNMUPPQCZncTaIE1SJkzcSoGU3blZloDYxoEaXEGNHoDMoEWTkAkasshV1jzcQYVRJQFLhcVZNMjUzfSP0n2TjA2LPomaoImSnUmPQQ0JxXDSvASPHQ2JxXSVQgScycVMtrlbynVcMgzPRUGbuMmXLMSYXg1XlEmMvckQPciROETbOo0QYcyMic2JwQmL3rBLQkCbPUCcvLycFE2PE8lUk01LicSTsokPhoVL0MyS1MyQyvlVMIUUm8DYmsVR3wDUMgFcNE2TC8la2gDMFQmPZMzS2szTqHWS20FTL8DVk01Q2EEUIMzQUkEYtLka3HVcxAkat7zJAEFdsg2Sx.0avYWdLk0MIYEc3c0RPwjQOoUZ0H1QwfjLynEUWgmQXkiKxjmMrIEb4XWMyzlLRMSYioTQqwzSPYSVncTS4fETDQyS0EyRGsjPJAkUpkFa3ozQKA0aqnTUqTUU3k1M0fycX8lTNEiP4Q0JWYibCgkZ3ECSx01PTcVUjMmUgk2UVsFR3ckVv01aJglMP8jQYQkVYc0bIEVcOQjXlQTQFoFLssjZxXkLzL1bNQyRL4lPwbWdzYmQXgzYDQWcgYEUwU1T1fVcqTCa2IjTybUQ1EEarYiQCE2JBg0UGI0XnY1aGI2R40zcoAyaRAGMKc1Tk4VU1QmTYYTM0UkRiA2ZNwjRy3DTQEzJYIUbi8DUO0lL4jDdSMFLNMlTFUFYTQ2QtDSaHMibCQVUNoEdy4FbzwTLxsDQCgUcs41UycVcYUFcBUGVEIWRSMUSwnTd0IkLRwFS0IkQCYSVYM2bnE2LmslbJYCRjQEbjU0PvnmSu8DMw8TVV8TQx4jPU8FVmwTa0PSVr4jPEcyUkwzJFU1T3DybYQSYCwVLCYlP4fjVkQjS5E0cXwzPGEmQiEUP3MEZqDVQiMiRHUzSj4VTQs1ZgwjTvEmVtEkXiECSIgWNCwDLwbVboYUNMQFUsMFYU4Vd4DCLuIkKEklajEEQywDTZsFYMMDYxgCMyQlc2XCNtH2coY2RtbiZsASR3DUVLcELSkFYIEmSHwzaXIkUyLyX1PWS5c2Ji4lb4blMyIlQNwDdHUiSqnTZxE1YFQTMw4lQqUDTNEyQvIWNIckVCAmYzYyYAQ0XLcEUZUCUCsRaTAyYJ8TYzP0UpoTVH4VN0IWX4AkTwEyJWIWPsciLwbCcNEWXHIlRx0Td4D0Q0LjYYQGdoo1J4DmSNYkaCQjbssxLZYlaAombqHEZ4jTYAMEM3XURwTCYAolR0ElKuQTLwEiRvDiaKMVP2QjZy.UdjEkPyQ1bSkkYzjGSyMDMXcWMWozPs4TNMYmLx8Da0gFdmcUSzsxJkcWZ5YkKpI2Z2YVbmkyTZM0UvoTdzcmP3UmUxPlR2EUcKkVPyPlPA0TN1wVVlYlQCAGZjUlRZQlQu0VbyMjYTMULlcCd2gUVW4DZ2bFdVoVT1AiL3ojZW8TNZQWVNciTJQlL5cjLjc0TJMGSHo2awjUXgY2SBgTUxgGT3UyTwYSaxHVTIIiRwM0L5IFTvzjd5MSbls1MRsFRuAUcuoGLRUlT2I0Sz.iMHo2MscjU1k2ZxQiPxnFLWEmM3jCYRQkc1HUV4wTLt3BLKsRLyEEc3UEaFckbyUTYxU2akM2cgMib4ESV2rhK2bjTuAEdtTEbB8TVgoWTSEzXxnmQy3xRi4xRNYkPskESU4TP4XWUv7DVKElKzXkcNoTTh8FLCc0JkMzTzAyRtQVSxfjbuYTPLY1StL1J3MELk8FShEVMQ0VRp8zR4glPMU0MlITQyflMyfjXGwFTAQEYpgGbOEGRPEzb1PWayHFSnEWQVEULvoWY0D2LgoWSjglb4.ibqQTNRMyQUkyRyUCaBUiMYQjLn8DS3Q2UgEFMwbyJnQWZ0YSUtAUY5gmTCo0JyYVL2UWZKczQMoDVTIlKpYkRo0jas8FQ4UScisDTFEWYHgiTHMmavsTdtYycGMTag8jYREkPFISaNcCUyHTXvAkVDkkbwHTTocFNEQyaxD1SFcCdTgkSHIGUwnzR0f1QK0lPqrBTjkSLwY0RjYCRRUFYAklRKgCRYkGV281ZzDDU3slb2QUNv3laZQlTmUGL0TVMB8TPvQURnM2bNIlXl8VUHQyRWMUTxbEN0EVc1YmTAUlVqnFdvwTPlkSdxTmS0zVYX4lax8DbBk1avwFL2UFU4vVSQkDbZwDY4DVUnETN43TUHsRNB8jVvzVUukTZyzlZjUDZD4BbS8DLHMjY2slajoGLJciVwvVXooGMPs1ToIWb2XTatPEVPYTVyYGVzHGSD4FdCMzLIMkL1fWUig2JT0ldvEVcVczZz4xR5IkMgcVMOQDQgkVctbyLzoGcp4BNvMlY3YCZFYkckI1LXc1YycUQqI0PRU0YroUQCMDLWIyPGIiXK4lXLYlRzQFS2wlLDAGRFomdKk2LjgldwnkRTclVw7Td1XiTiEGaKoDa4XWUUgyZT8FRy0DNqTGbFM2MN0zaDc1YlUmPK8TUBczbGshXEoTZpEzSyLkbyQEayb1YYUWZwYURDgzTugVL2PTXQ8jTtHUUzcWU1ICZ0PSPvfENJMVPKsVXMQGR5klVAQVZ4EmSwnzcEg0SQQjZnckM2AEVEc2ZAElUwISXToFN3jFdokzSvklcOQEc3YWc0AUREIVQpAGYhkkPpYkZnEVZ0LiQ2kScvgUTgQVbiwzJ2AWSE4xbYg0cv.iLgokLGkmPkYSLGcFVPklV4fFcOQ2M0ozJT4BTnsRaVciYz3xRYkTRqYEZnUDdTIEUpsVXqEiKYMjPWgGSIkGSwkmcXYSdpQyZUcDSjo1M2XEZ1XkcwE2ZJgTXQQkboUELHIUcnczU0ciPw.SRy.EM1HEQzTCSpM1XXEGZUkkVAgCaO0TdFkSV2TiMOsDbXQjKj4FdjomKmEFdwo2Z2nzbMYjYyQ1cgIEYyUWbL0lb2LUcNkySvUzLLEEUYQ2YxDCRAYGZ3o2cFcSMyTDRlMzTyECZIcUXH4RPpgEcnI2bsETc3b1YZAUXrUSXXgkPSM0JxcyLqHDZm0DSDk2Mz3jPWUFaOMyTOUjPUAWMrwzXGk1UlQkZHwzMWIjKroVc0gDV1T1U0XGLhIyMFo2Ur0zSqklQgIkbxIGMGACUnA0P3TUZvXzTvcFV5QSchY0Mq31MPQUXSU0TUUSbjkCVEUWUAASV1fET5cVSLI1Mu41MjUjX23DTwYiUx4jdR4TbI4jMgQkSFEDMnoTMpw1YVkSZXQSdlkmKmQUL3TkXsQFchwzaJEzcZcTbFUWP0QDcNI2XooEdkcjPsMGYwPmUIYVL3bkP5oEQyfyPsEiQQkScxjCVrEicJUCR4XzSTQjPSMiYSMULYsxRzf1UwDDUCMWNCgFUSkiSwglZzkUS2bmRMECaybFaC01RQcjSog1TsIiXUMDY5QkLBcici4lbHo1ZukmRYcVdxzVXvgjMt7zazYmKhIlL3gmV0LVYzgGNr8DUJMzcBsFbG8FZz7TNEUVSAUUPwzTU1HzcYkjVLEmTSkUax.ETGMDVKgEMwnjRBQCcA4zLwA2Tzw1cIQWPWUDRtjkP1LUNmYGSF4DNpYVcEIWNMkTS00VS5Y2Q4HjKNgCQDg1LyXmYYgmKqM0XtYTbr8TYDAyX0j0JqsDLo8VYqDlcrkGTGQ2bSIDQ0DDSXISbvjzYqrFdZklLvMzYwISVr4DZw8TZqkCM20TTrQSTTMmKtvFTjolKZEDYxLSM2DDMUcjSzjySogGb4YGLLUjMKokMuY1SwQTaqPVaSgWV0rjXnYTMhIEZrolSAQSRowTLvH2XVYlLvXmbkgTQkACc1AkUpgEYnkzT0QSMwQlXtQiZJUTZMM1PTUlU1.kdvokQlEjVrkzPJU1c3rjb2YzRJI2QyQjTqAyQ0AEb4rjbTQmSCwVd4PmUJEkVZoTTvz1cvYCUOUkTFAWYqr1cLIWa0U0UxXFLSMSVFUEUCIUYMAyQEQySDoGMu4jV1n2M0nzM1Q0LokzYyHGNVolStkGL2UVaxTTQTcEVqrlUoklYA0VdyTScg0VVosVd4oVcFkGSqUkVC0zT1IlUg4haTYmLzcmU1Izct4RRmgySqrjMgwTMGgkaUImUDQUZ1EUahIWQPQVSwLyZnkya28FR0I2UxjjUEkFSgQibBcyc27VVgoTZgkSNFYWV3gVTzjSdZQGSsACa50TarcmMyD0M0XjM3kESyf2XBgUMxTjd3UkLjEGS0gzbykUNL4BMqESdYIzXkMVRPgmX0PEM2cTRwb2UogFVzsFbqQkPi0VZgU2aKQGZxcmLJcCQVcEMyHmahYkQ3cTRQkkc0TCY2E1TEcTRoAUNGkUQr0FNjk1byDzYjMybo0Fay4VcxXTaPAyTYkGMk0FTwrFTSUzRJ0VN1fTM1HkdGg1PRQjTSoTQKQmU5Q2QNYDVCECdKE1PjgkRXEkXTkSZLUkYCE0MDk0PA4BZJEFMFUCawzjKqXCMCk0QwoDLkAiKGQDUrUkMpQEVgQCZzQVbZMGc0X2PWUWMTkkSNYUTzI2cLMWMpIFL3LTVrIlPmUlT101SCUiUYgEbScyJ0kCVugETBMUZlQ1XRgmLoYzaBITLogyMp4DZCYjP3zTdqjWckMUcuQCNBU2bYwlLxjzbEcUSBASLrg0QxjDV3oFQ5wzZqcmPZ4BLMM0ZyYkZhQkXtQjcrsDc0DiYFoTLyHCLYUUM4kGS0nWbVszQ331TTklX1XUSWMzayP1JgcUSHkSNzLWQOsxSqDiTRwDS2.EYlIEUwUCZngjcyokMxXGRtUCSqczT4kkUNg2cBg0XAwVToAyQ2cla4YTdhMzcoAUZXMVbE4VSUE2ZKQkQ1omT2P2SiY1P1wlS00zatvVaWkzRhoEVzHURZk1P4zFVrwFagkCaHkFT1YiayYibwbUMhIUXxgTbqQlMsMGbWYUMH0TRnEFZXUlPuczcOMkaPoVcpckZioFUY4TTzHGT2MVTBkmYnQSNAc1Y5MVQVQEbCQDQzXmRlI2J2PWNSsTUOYTVQYERPo0Qwn0JuMySoozaRcGS0LSdxL2aFkyYh41PJUULEMlZtDlTXwlczPWLTkibw8VNGkzJJczPT4RXFo1QvDTbqcUL40FLzbWZ1YGQpcmYvsBLuEGT4U0Y2DGaO0TY0DDMnIiXvcTUvfzRzLTTQkybrMmM1QjQq3VXZEjbVYkS1giZScTZnITbQIyU0f0T1HSMG8zJyM2U5wTPFE0LuEVUvjiSxDkRmkjZ4rzTTomYvvzbqfiK4A0QqflUYQWcTUVcOoFREUiPuEWa00Fa0PyaQ4TSw0jKuYGc3QGT1c0QHUSUDIGSG4TRw4jZUYWaYMERpc1URYyRC0lcSgmd0Akc4L2ZCsjb0TFRpsTbjI0cyH1ZyE2a4fTQOo0L5c2SPQjXtQ2R0XFNRA0Y4LyJO0jckwjdEcUVNg2TxrhZg4jZP4FUGU1JwDFSMQSNNcmchYmQvrTNFQmRoMWSislSn4DbDQCUBcWZokWN5cUY4fWSRk1ZnA2XBYUdp4xUh0DVpkUM48VaFEST2sDQNg1URYyJqDFa4ITTyTjLvUUNqLEdFoUbIkCRGwTRSYTLiUCS4bTbRcEQAk0UBQDczXGQ3TGSukET0DlQyjSNxcGQLUma04jQqUUN1.EQRYyXRszcw.mYocjdxI0R2TibJYlb4IibhkTd4DWVg0DT4biTmsVQ1UUZyEmYBgUQG4TVtXiQkYjaVgCd4rBcUkzPTkiQmMDRPQGSGgzUDoEMQcWT4MFYVozZ48jbQYmaHshZEITc2PiXKslYA4lMSUUaqQ2cNEjYn0zRSEyL5AEZh4RQQIFTTUDV3YjaDQyLso0UVsFNuY1YVk0Swk2RzA0JLkDdRgzUgUTSyrDVSw1LjIEagUlawQDMuMiPrYjLKgCRRIUYtHWSQIVMRY0SNIic18lPzoUTugTSZQzQNQWatXGU1UyQGMmYjYGZCgSdCEiSyrhLNYFRpclSsQyXxEVYm4BQoAiYtXlZjMCdEYiUDgycV4BVMEUbu4zRNQFcWMlLl4TRyjWPwb0QtY2RzESVFUiStImVNQjagoVMMojX0DWcO4VbCcjZgIidg4zMyEWcEYidVU1QyzjKIEicysDQxPCNlMGcK4jPHczcmUlZloTPynUcmkFb0DWSogFRoUiQkYEYIo1T4YENqM0TiYFaEYlZsIlQIQzaEgVYvsjVxD0JugicGgGQjkCctTSUtIjVxgDUPYDSo4DSQA2YhcjUFMCRPciTEwFNL0TRvn2PG8lcKczXvfzcSs1RRQzTIkiSWQDZtLEb0cUbKUDVNQGMDY1cWsDcr0VL5YGREEiMKsVLtUmRBgGUB41T3nmShY1ZvLlLDQmV3IGNAQTYBszLAwjdYUSMssjLskVTqg1UTgmROITT1cFQB4lRFMmQFIkRKQzSXIDa2QkXFAUT3jGauQDTE8jcNYyZvMmQq7FVTMCbzDDU2DTNrc2PtTmcq4VPyEWcVgCMVUEMTkSZjMjV5sRYzsDdxfFVSkzZYcyYUU1ZZsFYNQ2JOYWc5gzZAsxStYVQ2UyYFM0TwU1PFYyXOcSYmUWdSkVdpoTUocCNZIlSqbzZGojSmImcsgTRyXCVIQCZhkjMns1Rh4FMyDjTFokPDQkSAYyZvDycUk0R1QFUVkkXx8TSwjzaAYVMjAWXnE0MQokP3UzUmgGTC8DVvwFQOk2XyrjRoYSZJYiYFUVMkQzX1ICZ2TUbNsjK1YUajcWXCECRu8lQKQSXDciKvnVLg0lTLUyUwfTQjASTCgWdCYFZhMFcsYCYq3RdKMjUGAWNtTyXtDFZqfSbybmS4rjUtn1bywjPVQjSqYTbZwVREcCTio1MJM1Q1HVcv4zZvUVM1gFa04Rb2LEcqMGTJkkQwESaTshY3LyZqwVcvjzRmMzanYGRDQ2XIsDdMASXlkFZ54FNkUFNhslXhgkMHo0cwTDMOQ0YVkiVyMSPUIWSCASdPUmU0T2PhgVNUUCZ1UDMSITaNgkRq01ZBUCLgQWdzYUNBEiPM0FYyUmQ4czQmAyYIshUXE0ZB8DZ4ICdlUFcsc2LsYVPAUlVGIiQx0lVXYTUoQjaL8zZsszLOcVQJcjavTSVwfjTjIzRColasoETm4lTOECLhsFSvHiLPszJs0FTvc0UOo2PrkTVsAka3.SSD81TmQmSZU0b1jyMW0lQIIFR3T0aBojcRMkQhA0URETVAUFLQUzR4gWQtHVUnMEVUkDSMsxQSQDLXUVPuIUQ4HyPyA2TMIjd2X2JrIFbBUkZvrDMrcSUmM1P1E2PXEiPrgGaVUyUHUWbGwVYqLiRqoFMr0zQ03TZQI0bmElSl8lZtbCNI4DLtwDbNYGdwgjY2LTX1IyQxojdVcyT0gTc2rxb2LUMZgScvwjXFciT4E0Mv4hatTFRmwjYxMDZwX0UPoEMsUWP081L5QDb1HjP4MSLkA2b0HGL5oFUnoWdt7TZWkiVmU2UocCN3nVPtnGNhU0ZoIkU3olVNY0Qrk0PlIGdSQkctMiYuMCYxgmZjo0angCUNkiaFEmSCEkUrECRzc1ZncUXPkmbQEUVOcmUiY1bMMUP0YFamUUQscSd4b1S4nzL5gWXCUCY2cmclszbQQ0YlszSMISXqTzTVkGMxHkQK4xMP0FcxczT48DSoIGQnUmLNgiZEYzZ4kycSMzQvUEbEQSNN4FLW0jQsciPrczb4A2bY41QLYyRyMUPnAUXOglSw0FUM4lROkSdvQiXXQCbGkEZDk2S2DFNVUjZnoFVs8Fb0gyYnsBNwUEcN8VaqEFVjM2aCMlYnAEaDwVYXEkZOYEMzHkRBQEdlklLGkSZPgSNwHEYyjjatcTcQMmS3HlP2kjKQ4DVq4RYF8DSw7VLAQlb37zZ4MWVGkSVwQDMFIid1fWMigGd1A2SEQyTKEDdzPCSAIyM1QUVVMWNLsjZEoUXNwTLSs1LQgSNhshVmMDavHWQVUSdXU2MlsFLvYiQqHWLTolYvgTND81U0Mmbg4hZ3LjMHYScpQDQzclZxM2RvHWYxPzXqrBctDUPwsFYIMmZPg0MkgSaHMlVYIDV1HkZuQmMggiMx3FZroEbggEbBoWaocSdZIlXjg0TXUWNyk1bGgCQDAGQPwTYRYUShYSPPUjXCgmSW4VbKEDM4EDLQYlMCESL4Xic2oWbWwDcoY2UwU2QwjyUtTUZS0lQDQzPr0zYqYWRus1TQMSahQGTrIEStYkZwIScvnWVx.2TuUjT3EkbVk2RrkFcosBVlsVatfCbyrTVKECVOIEZnUEMMojRYE0YrgDRCUUdEciVS8zROo0XwE0buQmZqgDZwIGYRYTYt3lbtc2PzUGS0bmL0HVPVMzLPsRS4TVd2fiLzfSbHclQ4TmRLISaioVdvQkVzvDM2kDUwkidtUlUvoWaYUTdzjiKVYUXyUUTAYlVlkUMvjSbzbCc2zlRogVY0HGRCkzLvYSdocGcrIGZGAGcvsFYZMmMtsFN2U0Umw1Qz3RS4QUavEmbLQFaAMTTw.CaQE1ZOUUa3PUTDwjLsMiLwMSNXsDN3UVZiUiP1PCdzk0QiI1QSszRhsFQnY2ZtEzZZcmTXgSPA4xQjIiQSkkZnsjTKU0YoESNWsxXoEmKFgUcqUyQogSZ4EjKTg1b5o0RtfVSioEMXg0MGQSctcDQt.Ebt41YyIFa1HTaNMDYSIFU0XkZVo2cnQFch4RTyozcqo2aN0TTVMWVl0DZOQlKrkyJyYkMwPyRDgSLtDzcwnTMXwVUtUEQq3FdxLWLwnVTywTN5MidYAmU1UiVMwDcNQ2b2HGZ0wlTw3Rc4oENwjWLuQzTYcTPjgVVrkCYWE2X30jYYoWMqnVPColM2IzRvPDV4IGMyjjMHkTQqIzMGI0Pt4RPkUFb1wFd1fUXxgmM1gVayEzMYYTQJg2QSICYnkSMucCVHEWbvjETAIzS5gTRHIEbwE1TOMURxMTakkELqL1cu81bvYjTqjSVqYERrMiaBEUQIgCaOgSPy7zT0HUXjkkX4gUSQUiKpAmK4gDR4jDQJUCZGkmYlUSVs8VZwQEYW0VUIsjKkY0TTQjRDYjXIoEMxflaIMCTEM2RrE0PKk1ULkzJjkSVzXWbMgjXEIFV0UjKYcUNIYjV33TRyPVSQEDcFk2cFUyZyIVS07lcmEkRW4VYLQCL08FcUUCTTMlSuQUQKYTTowzc1XGb1LFUNUFaWsBRMUFa4IDRAkyTsEURusVd0LTb4b0QPoEYyUEU3wzXnACNu4jTjMGZ3kEQkIDTncSP2P1Qh8jXNIUNkETZRAkZ3bSP14lVEojcKg1ROUVMzDWTzkUM3nVcFkEQwHjRKMCSyMDSzTiVEglQ0YyaCclVMsRdwkmVAkkS44xbRYVVCEGSuU0QqwTVogDQEMDQ1n1Z0bzJOgiQYo2UqX0cCEVc0cDUHQ1JqkUTlYmSkcWXhgzX3LTc0vjbPwVc0oEQIUWdy4RMUIkb4gEcKUWPGsBUWEyPkECYRk0aNo2UXQFSQkmXX4hb5EUUEkVUCMjXxTDMvAmUEsDd3.kLS4VdiUzRqwjTjUEaqkzQFcjTZUWRWsDLzcDTXUlXCkEYzQUdqTlMVEiSI8lSgYTcOkEYIkFbxPkbQQGUtjGRzXCZmcicQA0UjcmKFECcVcSYSYzLAgSQhgiavojLhQiKPkTRMYCQHQUaHcEaKslMFMVc0j2b4kSdtbzJEgzRo4xXL4lUukTNrAiR4o0PHYCLyjCQBUEYhIDQQQVSPYSd1gVdmsDdEMzX1TjTg0lPkkiSZQSYQw1X1YVQ1gzctP0bzECMpMma1ECUCw1L0Y0U1YiQjojQ1TEL0MiUMEyUpoldOYESqI2choVUt4zbEAibDImKFclVvA0PpgzPX8TSznTR4EybFQmZLo2Jx0zUwAiQ3DiZlgVQ0vlPhwVUrIlS0XkdVU1UQkzbEkzQqI1POUESXcFZqf1T3klXMQENwfTaLEyb03hVWc1ZZEkVsIkTBASNyYzPwHCd3PScqfUa3.WZTIFaDcDatDkUYESUBojK03BRmQzXhUTPB8DdGwzQCQla0bzcAEURikFMXEjTJIFNHYScuIUMH0TdNgmSy41Ltb0LXIzcZY0Z4.WVwIlTr0zPqI0STgGdkcVT3QSLE4TZCs1JsESMtIybH4TR23DZ14hRkwjZPUScQYkVZMUazHTL1I2MzTWbvkkT2HST0gld3vVTgkERyfVdxQVNAIGdjYTaFs1RVoFbMMFY1n2brUzTFcCVlg0LzQjTPEFLJIldRszX0rRRkEkU2fDNJcCVhQ1Q50lZKsjVKI0RqnFTOgSc2bmUpMFU4vTTvrjaqgWXNgjLWoDYtLFQEklYkYTchQ2MtACRxXmPyb1bUAUVOslLWglTSw1Uq8lLoQUaPgVSKQVSFMCLvYyMvUTTMIiUqo1TLECSnYEUrMlMr8DRoMSNsQlVyEmLvnGQgI1P5AEZAEVT2kSU2wlXn4DdxnGSMUEbYsTQLclatnDbA8VaZwlVWYld3jSRrMzaskTTvgSSngmVMs1UrEWSuI0JEIFcyUiRwc2ZugTYqDiLW4jTAY1bJM1TEMCbZ4DVpQkbQMyJwfGNM8DY1oVN4fmKQUDYHMWMKwlbXEyZ0H2cXolTwjDQqHFc2cTamk2XnIyPwYkSXUTXRMVVgQTcVEjYkshLtjkUVAWbnEld0fGRZk1RUkkbVUScrUWNN8lUqYDTmMFRqLjUTI0PTIDa0bScoQWdG41P04DUhYzQoQlUwITMmcyPNM0LnQzPzP2YwgkRL4zL1MzXCkCRRkVcHozJpETSEQFQ2DFNqXjczcUbXU1LBQTSq31b4zVcAMyJGMSLsglKxfUboEWXSE0bFQmdwgUY20jK2kWN1DkcNoVdDQkKLk0bq7jKq.kQKEkPXQEYqQzcRASNGIjQsAkSuczY1YyYNAmXkgFY4o0S2PTXkIzQ0zlMncDMwL0LEombDsVMnIVayI1LyIWXyElYgUCQyoGSOITLIUjcvUFMAUGZgYWbLgUZ2TkcYwFVZkCaukybtIWQ1TGRzkGZGoFZNUSPgMlXo0lbLESXn0zLiUCNWQlXTQEMMcWL1HSNp4TcIMEbjEUZyEmQ3f0XyoWYvEzMoEUd14DcVEjK1YTaLgiKZkmbhQkUCkyTTMCclMyYtoTa4PlVqAkZVk2POk0RgsDcG8zMzXWQjA0XIQkQtXiVvQDZOgFRAkGVloTdzcDSY4DYtoUatoFZqfzaxQjQwUTaqTidRQTUyIzMtQ0MkUlPvcVPzoFSuozQ2sjSTECZ0PEcmYmY3YWLMk2JocCZ1PkUiYTZ0DUUx7TaMk1JrckT4H1XTczbPUkcPImYYgTYjomRzLGT38jRpE0RQgCc1UEUREyTRAGMqgWZUQEL1zVUE4Rc1.GLCQmKrozLWEjMzMVVEE0P3oGVzEWYyA2amI2XA8jUMkiKJ4hMvQVcVoWLYk2R1PWSRQCTvYCVQU2aikkZwPCazACVIYWdOkWcgI1TogkTPsVRNc2PWMUdr8zXJ0VZug0argEdmYjKU4DNwH2Sp8jRBICR5EGbFYER50lPiYWSnoVViM0YmIUMyYmYIETZwnGYBcDR0HlRzgFYScCLRcyZZQDciY2SHc2LDkDLFgFZPAEVp4RcLcSXiETNvgCduwFMxzVTCkkQSEWPBY2Pu0zQSIVaAkjZ2kWUHMmPqg2UwHmKkw1J5w1bhgWdlM1JyrzRjsRdvkCbgw1bRMGVUkEdSgkaJEEdAQyQMUia2gkVDYWcgYzM1DSMKomajMTLCIEYMYURIQFTFc0SsczPvMFaFEWTzPkK4.GQwsRavTVcjYVXvLDTHUzQyrFUBYzQiI1QgkjRUEGTIYDQKIkRLYmMkAmQVQkS2HET5IENG4BamQkdCEUYM8DThQEaDYjcFE2QtHCZugSS1Q0ZgUGMooTU2UkZ3.mT0bGMCgESTISUvTUPRUmUg01LsQmZvsVbuIkb3rBYCcWauQVLJYkLYEzTlIFa0jUPLgGdUcUV1LETOQGQ2UkZvIENpc2cToDd0TiYFYEdxQGSDAWXyQlauc1PqolKPIjSXoUSVEkXv8zZvsjazLlaocSUqUVQ0jybGYVZtE1bDEyMIUSQZYGbzkDYCQVPkMWaCIWYV0jUPIlcWshUykSVkEWLyU2X14lPMITdqblUrYFN5IUURg0ZwTVMkwjPwTzXj81QggmVSgEQZYVTogyc2n2aAgFR3rhdBgSZOU0ZV0ldiY1axEmby3jKBkzXiQSSpYVTScDNlISXvDDTncVVPoFN1rlar0TX3wlZXkjaCoVTYMDY5IjVJQWXOY0PxrzZFUERiE1MngWLqfiSlQjKRwFUVY2XDgSbR0zUYciUyzFV2cyTzkTNRcWXxflRFk0cVQDVrwTLYYzbE0lakQCRGMULycFTIgGLYo0Rqj2Qz3FVxjFMmUGVIQmRyLWU5oFMUAmRzbiMy3VNAMWb1szbMYzQsY0Ut.2b2clVjoWM5QVVCojQVMlbSgSPh8DcgYGMIIUSvL1cwIGczkEVAACbHAET27DUhESQNglTRgGUUg1M3nTbnsVQYMiPz31MH4DUyT2LvvVb0.2RrkkQogjVHIiL4j2QrYSStETYq.kXl4xQGkGah0DSxkEMIQTUUYVMyDGU1sDViEVNUAWMgoVV5YGdzfET4k0PQQkavkyMTYmc0.mSyDTZOciMZgSY5cjd0UlQEMTTGYlKkYFNyHlRxkyZyc1a2D0QGcCc0kWRlgzc3P2Mpk1UE4TMgUWN2MFYwIDROUzPxQiTwMUTzACRyUWUlsFN3cSN4I1QxPTSs0DSvUUazz1TtIkQgYEcRsjbrITcPESNxHlQTYSXw01R2UTSjQmVtXzbmASLxc1XygTNMk0YpkkSJshVGUiMY4FMtLkZIo2YEEVb3ckY3DDNz4xbvgyat.UQiYDQZ4FbnUyQpgiVEgzJ0U0TRkiMUcFcDkEN4cGS0nFYPkEaxsRYkgzXL81PuEDT3LVQuMlUzTjQjolY0HDSt.GMWQjQTwjUXwld50zSrUibPoGMjg2b2jiTvT0btQ1cz4hMwDCUOwDUTgWP0o0TLgFQosxJTIVZybCLOckL2UEcUsRczkVZzQEay0FNuAmVlclT5UTcmIjUYcEQvLEc3bCTtTWLWIlUyImLsgyYp0FVMMVLyLUM2DDbg0lSG4hLnYyYBUlYSIiT2kjb3ojZyLGdLUEUHsVQAklRL8lTh81ZygERlsDYnYidUUiXHc2XKclQCQUaXY1LwEEdMomRUciaynza5ETLmIDVY4RXgklM0PkRVkFaKYiKFUTTvIjTEMlLpM2cgcVPUc2PDwTa2YDM0omPvQ0PiwDUyEDQqTyRKIiUzHzJxDUdYITQPMyY3AWbnMzakgGS2LGbwoWXxjUdtbWaUEDdYwFSJEUYQQjc3jCdtjSQTMWQiMiQvDEdPYSVYQia1IENIEzalokbycWc0cVa0kidkE1PvMiUxEiMvMWSpAULDkFQPQVTqH1LwoVZmczUi4VPoMET1j0aBYmaKcVLSYiZpczQWQ1QSEDdvYVRQQSYwTiSsMGVAcVd2n0R3T1QoEUXzclUIszb1sxLlAmUOIVUvYFZgw1a0fkQYMzPsoTdDQFYVMULEYjc4kicQEWcDISTG8jKFAWNGM0ZwrRcukTUAkDcFUFQMgWQRUGb4LTVqHWXzQDNgYWMHglVFwzJ3fDagImSBkyZPolTqPiTOYmX2LlYyz1SU8jVyASavP2XvUldsoTQqkzYY4hYtHDUFIiKCQ1bOgGbkMVZvXmdUkEMEg0SwMWa4bCaREDVMc1XhUDUJMDbjs1TYYGbysBYUYjc4H0YtH1SzEzczD0PXYCaVkDYsYVMJQEULsRbxEUUTkFYC01X2clXts1PYMWbwczYQg1UJs1JUcjKYAEcTETS2U1PjgkMYkWZuQzcOgWMBETMQAUTTUzbRU0UpAETsISbuoEcFEUdmQidhkSNo8FU0PWVPsTMqQkaqAWYzQCYYUkRoMCcqIEVSUSPvvVXGEGTyMCcuIDZSEWU1T0cvIlMuMmTCszPoslT2Aidx7zMDkyJWIyRrAmLCUSSJE0QpIzLTYDQSM0S5UCcyHmZhMiTO4VTK8DVUAUU5Y2XVUmKgEVN4AyRIYCL03VNM01TBoGL4bEb4EET3jWVpACLRI2QnYlcwj2RP8jUmQlUxkmK4HTYqbkQnUTPQoDQVACa5EUQ0XkTsgVZiQUZhgFT2AyUL0zUMs1ZqU2MokjROUlQCg1T2f1PN81a4Y0chsRTqPlKx0jPNkUcyDSYt7DY1PiSWsTSxX1S04hLwn0QM0lMzPCSyE1P1EVcz.yLKkzZ2.GUhYDVvbDLn0DRzPjZvH1TkYCRyXWdjgVNynmUkMjUjsjduomKgE0MtolVS4RU2XTbrwzS1bDUqzTcKshZ1TiLygEYy81Y0MUNmEkXOEyPhwzYyfjaKoFY38VRvojUyETZkg0MqglM5YDYzo0JCk0Ut4TPtsFTpU1U1flbCkSd2QCUmomPUcCNGISZGEDLJYVdw.SLMwVNkoDa4LFMvMDbzXDcJcUdwTlQiokcM4xUtH0THwlaC8DaUUTMtcUXybWUYY2YiQ2cW0VbzE0MzHUTV8VNmQ1XRgyJi4jT3j0PxDES1jGUPwldqAmYGEiZ3b1LysFYyImdqwjQCMldUAGMtz1MpQ1MhM0R5MzaCQ2MWI1aLQCTvXjYZImUnoTQLY1cF8lMhE1cD4FVzjlM0Y2PEUjMnkWQjY2P1oWVKgiXzfVXVEmS0nkV0.UMUUGN3YiXGsFSAYDUlIzP0LmSqrlL3slS4flUpQycAMyJ27zRgYEL5ImLuYiTQIiMpoGbxvjL4cCLngDboUjMQ8lMlMUcpIkbBc2QxQzZgMzJWcCVpQCYzkEaJoGVnsTYnYTShszMO0zcsgkSrMWX4PkZJAmQD0FalI2QVgyRWoTRvEEMIIzYpsVVYIWRSgSSyUFV4DCctzTQ44lX0LEYmM2cVEyb2cEc3nTQtcWUwUTRgkGLxfVYvASNgYCVrAGT43hZqslTxQ1SybVPrY0ajcWa4czZOgGSskyatfFVqEzPkEFcTozJmc1JggyYvcGdSsxSqEmdt8DbpkFS0QmZxE0SYoEaZk0SlAGaZcWM0MSMoUiMxDSS2PGbEE0JJkzPvQCMlMFZG4xQ0kGZyo1XQoEdIIiY24RdZgiPmUFYqLmYIQyb24TQAo0Jsg1T2jGboAmLEQyP3MWaZQkROQ0LBsRcOkGMNgESPo2R4A0bCEkQpMlPZcVXtbCN2giX3vFTC0jL0TmR0E0UzkUNoUSSDcCdkEELxIzUNclTvkWMvgDLnEyZ3zjalU1Z3g1L37lQZwTNxjUNHIjKxUFcqzVNHcVVpY1Q3L0LVsBZmECRXImL4HEYqfid2gzc4X1bzjCYhcVPWIiQnMmd2PEYM0jRRISTvLibhElZlcWYxf2bYAEbyokcgcGMHE2aX41MrMEMy8FRMwFTEoFLjUESWUWaHojX0L0QtozJVI1cqrhQnkScAgGUhMzajoTbIUmcgEycp4jRybmc0f2QKs1L4XUVzIzQAYicjwVQt7zJ3P1SP81S04TNuUWYY81SWIlS1ITasszSz3DbmQkZAQCZqvFUwcGQO4DbAk1SX4zQZAkbkwjLU0jYukDNJ0lXx4xZX4xUk8lVMYER2PUdwQSQsEmSBMSNwvTXPIicxMkLOIiR4HCNxAUc28TPlEldNMyRXQ0ZpsxYR4lbvjlZ4XzQzQjXUESbKkCRMkjbUoETzf0TyDzJnEmVzTmShIUdFUmP2oESRMUQrUGQyIjUPk2SxjjQ0jiXZIEZ3HWP1b1bKYCQKQiVLkFNqshXuMVRUMjdpg1U1IzausVS1DEaVgzT03lVPAScG0lRzU0cgUEVso1TpolPT4VT0QyPyLkaVUjZ1kVNXIkVlk2YJEDRVUkT1rzU1rFM2UDRwwjRLISN4g2M4U1bMgWXv4hSqPVXqIiTBMFcTcmKrgiXzD0arICcFMUdoI0axTSbgo1RIoDUYUVQrkUQqnVTTgGbX8Fc3QjdHo2L4TDbwfSRqnzMWkDR2o1JyoVThgmdrY2YPgSP14FLvojSh4BTVk0QvMUYuokbuo0JwMTT3.kX0TDbpoFQVUUZ1T2S3n2QN81QVIFQtkDQIo0PIgGRCQSZvMCTTYkX5cmKPUmSFUEUxzzUqDjMzUjYWciXAwza0P2c2D1MHsBQ1XUVFQEVZcjY0L1Qwb0cyfiTLIDVucjTwUUPJklaRw1YqcCZwLkMx.mPwnURrYCSqQ1MrMSStUmK1jjP3jmZ2s1MJgWd2EzRZUSTVMTTzUFdMsVcZEySoc2ZPI0LNIyPuQzQsMFa5UlQGgSQWsVU4YiU3nGS4jyRlclYVI2QLYmbBkUMggkPwYUNVAWMG4VS1o1JBYiLBIiYVUSYhECLzHkQDUkbLoUalY1bgElSI01Z5QiVkY0Pl8VNq.0c4YEQBAUXmkyShQWcxQTUYgkdoIkQvojPOMjT2IELWcidVMWdvkjSzbzSgsxRXY1JMYSZDoDVNA2Zys1XOsFbyXTP3b1P4.yavI1U0EFZmo2TK41azbib44jaKESTCQmLj01ZugWSk4jPPQFU5sTUqbTNiQzcQsjYCgFNkoDRh0VbrolXHcEakYFanUVcn8zTP41MicTTw.kP3nGQXQEUvYyZx8DawszShIWY3M1c2MFQ4bkXpQkbHM0awDkbvczQ0w1Z3QWYDIiKSM2U0.WUtQCa5gTT44VLyYlYYESTqcmYvLGNwflU2USYsoGVTMVYzo0LIs1YRcDVNI2T28zYv0DbtkyQSUTaQUWNmQ2Pw7VTnMTQAAGSLsVY1gmYhMCU2LFRCgiVBQSPvwVU0gzP3b0JvXCVmAkU2DjR3XGR131YqIGcCUjLkcGa4EUX3kVVrAWUyjkYQgyasETLrYFdukUX2czLSkyZ03FUyEzZlUyLwk2LyjDYHoUNTkmTqfSSjElQqfSNFcFYZYiaEQlXLgySIgkanwldRQUTxTyJiYmVzQ1Z4kyTs4FbTUEUUIENIciVzDSQEgTaqcFQwkVSlEzRpAyPBMkZ1jTMFIDRTUlZVMiR2TTbEgWUBczXTcjPAU0aOUCMVcUbVglSj8jY2XCLjo1YYE1bKMicGECZ4fEdwbVU4MFSzEDdGckM2XFbMklUFMGVqLGdsUUPNoWQQgTbAMiKLUiYkYmLzXGTVY1TynGdoETNFUlKtLkYo8zLxXjdGAiSyLyLzcyUDwzJ3TTQZcTPEAiSY8DV3bFT4EDbiISUBUSQGAWdIQkUngyPMkybYQmSzAWXoMkRDgzZVUSLyEmZzomQ33lZ4ojROsRdlIjLDgDS5YEVUMmY40FNnMmPOQjXFQTLAcmSCIUUggzUgQSdqUFaZQWPq0DVhI1YxDmSxEGa2LiUAMEaPEGQ1bGMjUSYG8TZTUjMoMFczHVRtP1J2L0JvgiVYU2MxETLzY0XMQEcNIjdLkWZ1ITQ2nUTPsjQsYzSTEWayslY4DzMg8jcgUDa1PDLsAid34hR4PmMSIWXCAEQqklak8FQRQSNwEzY3zFdKQjYBclKSEGcOQmLTcibtQUXIUSVBcDNpYCc1PUQzAkbFYEMqPDNvrxa3QCQpoER4LGd1LTSKUFb2MzXFIVTS4DMM8VYpQlVxnURrMUN4HmYlcldrkmbWEWV1LTcqbTTgo2aCQGUKECVUEzb54RQ4P2XDolSyQkUIolRD01JYYzXLQmZXgmU0DjLqMjYvDjXHYDd3TWbVkDMxHjKxnmYy7VX0cWR3DGQ1.SYmcmQhQ1Z3I1Y5cEc5QVUoUGTwcmSQg2PvITNhQ1LxMTZ1nmcvn2XrszXyXlXNYmcFQ0cigDM0gGaGk2akoWSqPGY5oWRIcjdSICNyAUQxckXUIjdp0TZGYmbsYWNYYWVDQ0LS4DTUAUblkUR5EjMXkUYX41SQ0TUQMFaFgzRvXDV2DWPrsDdyXUa3QWSoEDNo8DZNMUbsQkKpIFZBY0T4gWcMUmYP8la2rhTuMzZFIjPzbDTPIiUWcCZ3kVLugFZOMkY1HVSqo2cDIkd5A0PhAmVi4xRwkDSP8zbJMWUIM2RiUFbME0R0gEZUcEcGE1aUIEVvb0M04VLvHDYys1PlYFbEQSSkcybWcmSw.WMD8DUS4RLh0TUyv1XzgiRw.WbZkDcGQmQHsTMlgWUNQVYLYkSnkzYvI0XEgGQUUmRmITaHAiXVgTd4IFb5QFNWsjTDQTRPEzbAQ1PWsBdUMCSnUjbncULlYEcqMWL18VYxj2PyXEaZ0FRXAyYjEVZL81M33DNOUWZ1ojdCYjMBQDYYI2RR8jbZsFNAACVEYmbvUmRHUmUTcCMJQiUsUjUJMSNBokPyLTd2olVpICV3PFQZczLmcjZiMkPyEzS0.0RmkDSUA2YiAUbuAUMtjTPHkiTmA0ZIQCb1fjcx4DZtXyQxXUaPgmPugzZuIVMmoUXAImLOcGTMciaJglbX8jMvIyUlASUGMlVCUWMkMDRscVcLQVTyjzTjoESwEzTqTkYz3TUo01UFM0ZJgTUgsFZpgkSZ4FcJg1XOM2JRgSQLEEMyQTVZwlPkEWNP41bwYWQ2k2ZPgSRwc1ZSgCUAcGbWclSDImViUUNvwzMTEVMDEzTRojQ4glatgDY2HTPP0zTUQFN1glb0Yya3XScTclTXA2UZkDc3z1QxHDdRkEMzHGdOgEa50TXvMWR2PiSokVPoczQo0lQsEDL0IWMqTzJjkjPUcSUPgkMtTSVCgiY3XVYiYTMtEWYIY1P3LUQNUFNXMyb2kzQVo2RwPSaIIDVwnUXHQmZk8jR201TTMGa4omU2YjKq.CaFk0MAAyMy8Td0f2L2c2TrQ0MAkzTVMGZsMSMVwVL3QWTosjbwwjZ1YFRT0zbO4VQok0Pz.ULKwFcmcGLEE0ZBkmKz.yUsUFSzk1LYgiTBUGLgg1bjgjMnEjX3UUaI4lY4XkbnQWZUYzYxk0PFUCSogyQAglKncmP1DVaJcTRVMWPQYjdz0lVvcFT3rxJqM2J0LyLUEWaIAyY58lPNkmcvDjQBwVLJcWQmE1RXQSczHyQR4hb33RVvDTTxszcWEUX3ECLmQWVUkjZF8FawklK4IyMK8TbhcyPiIkaCcEaPg0MncmXycjbIMGbI41Mq.EbMMFdQASdSshcHcSUxEVTz3hRFECa1zTcQEUVkYjby31QtIlTxjWY1jVMTIWdyQyc0PjZUEiVgECRHIUPuUWcu8VYtMCLvgVSyUyXHo2bD0DS5YWbxo2ZxYFN1PVbKYTMqfySLgibBYyXFEWbNokYPc0QJIjUHEFLlcVQGE2PqIkVvTGVKU1bnozLSISY3YCNmgDUCMyQ2TGSV4BQisjRVA0ZvfkRMYkUgQ2P3gSPJomQYgyRqvzS1jzJ3zVPoomS3UmUjM1UYkCYRYlbzshQVYkagsxajgTZoE1PtUkYicVVpsVTRIFQVo0XBozLq01TyPTTwgla0UVVocWVJUWVCI1RYcjbwszQ2f1ZiYyX2QSUg4VMNgEQugUMHMzYNYyavD0P3k0YNUEUHszckQmdkEDZlUUN2.SMJkkbtbVZWY0J2M1R1EldCkDUSwDbk4hYRgEZvTySIIjTooVXIw1brMFcNI2U0UiR0MTSvoFYiQjZLciPQ4lSHomRFs1XHcETUgVd2kVSvMzLJE2cnElKtLiMEkyPKk1QAISYVkzctgUMlEFaqz1UhQiZNYkayMGM4Iib3QUXQ4zX4ElMAYiSRUjLs01RzPSZ2bEQ1omRqojdxkCYF0VM5glRwQ2RAM2ciACNIc1X4Y1RBUSNQYSQyHzSuMjXWIUYvTUZTU1ZAYFNzL1cjIyXiUFcscSVOIUUFMVN3IkSGszJOYmL5QjR0YjVrQyXKQWcxAyYzEEM2sRSqEDTRIGVJ81LwwVZMUGS0bDL4PVN1vlUYUCYiMUT3sFNgI1RhYDLzMCLLkyPPMjLqQybBoVdrA2Rn0lVtrBMgYTL4M1LvwjSxLFQGUlV34Rc30Ta231bAImXBUjQHsTSi0jTTo2bz.2QrgSR50VRtEkdvPjP4LjPz3RcZ8DNtzzL2DUcCQUPBslX4TVQ4bVbSkWLwUWQYMWdWoWcwcDYvASToAycgsRcKQUSDglQWcFY4IGVWkDN5wzRHclKjk2MqAEUrI1QoozRKoGZ441SNIWYo4hQwLCaVQVTZI2ULMictb1Z1rxaxAmKoEGSroTY0UScUUzZ1slLHEWZPAURNkmZhsRMhcyUSoFcyTUQzkDdUQjSggkMqPlQ3ImYgQ2JIcWZjo0btozThkkQoEjVjAmZMIWcEE1cuAWXYoGMJYjcDc1QMgjSGQmXyHWXzw1Pkc2YqbSTtDSLRQCcDI1PTQTc3Q2Slo1YFEyPYMDZMUyX1QjarYGUtQ1YzTiTwoDb1kGZwDVViYjSqUEZQsjPhEVZvzjV2klVhI2LYMCMCgSUHkzM54zY0bjYOMCM4MUM1XyPHEidOESbTU2QK4lcyfiZzXGUQEWVDAyLHQWNM41RZcUYlo1ZtsjMtXjLKgWS1jGUxjVLkIyMybTX4k0Z2HzZ1n1SzUFSEkkbZMjKDEmTyHTbxLlVEwFVtTTcMMGRwLyMAkyYpgmcqImVZ0VTtnTTHIyPTYCSTAUTlgVavTid1k0MmIDZ3Q0JzjFaCEFYQElYugVUXEDb1MEQwYmbhM0aKsVbNMlXQkyUMgFVDgySMglUCYUSZUkPyn0aqfESnojMgMkPSklYDUlKEUTSwQVTwXFN2jlVTsTSE81aRU1Tu01YAACSzQGdxDDZqMzQ4TCTpIDY4k1apYidYEESWYlXHUkSLEjYHgiPYsRbjQWP4gGSqbEUhISLBszQroUbvUiX1PlYwMFbWgzZMcSL1TlT4bCV2sRb4YjUTUSSz.2SIUGLMIkV2YCQyvjTJQVaFoGawTkapIUUMETVFwlTAEGYzIVTiIFZIcUMwcldWEiTuEjbvEGSvTkV1cGNpMlLCkzM3cUUvzlKp0lYZslcvQUXKgjcSUFaMkSXZUmZxwTZGcVd2ESMZciRXwlZVUGVzzzLGE0Y1wjR3IjT2PUdzDmX1LDVkMSNu4jKtI0XxrjPCshUtY1ZSwldgcyYwTEaDw1czDGUoUySUU2LxbiTTcGU4vlKXoVVM8jPOEkK4M1RLwjQB01U5ACTHUWTiclbiUEQvrjMnYzc1Q2LZQzcK4TLxzTaKYWLEs1XBojZ2DTQzjVcO81S2DiXzEGa5YGYjoUSAMmLqLVZTM0MmMEaVYzXmUVc5gzSicWS3HDaPsRV0TiMSYWVEEkRzPCTsASNXk2aq4TbwgkR4bzTWIGNkwDTuMlQ4MURW4VaPESQxLkS0cVP1HjVnQidTklXicUZhU2L1XCdDUTQSImcyg0RtXycUUSZ4bmVEcDSvE0RtgkRqgmKtnmRxDiVqfESGQyZ3LSd0k2bVUEYCYUZDwVRrk2YzjlT2YlXwDEd1P2aQgDM2Y2Rz8VZMQVUEAGV5M0RUc2R4MDUXg2PgQVQqjWQUczUVAWbtbjSrAic0TlXkQzPnslSHEWMvLlcxf2SHEENGcGMt41Z0jiQi0jT4.0TqnES0HiZwPTSvLTMBkCNlAkQ0fyR33lT27jarIVRyHmZSQTRFIyUUo2LgYVYQQ2ZuEyRUoFSpY2UyUWd1bmYMcVUP0DUyXzZqj0J3jDYz.GdRYyRJAicXojUSYEN0MWa1HDUuo0Xvf2XwL1RMYFRVEjYQESdhkVTvcGMC4TVgg0LYQFRJI0ctkkKQolbtfzX3nWSLkmXIImPqsBL1ACbwQFYwb1Y0njXVg0ZVQiaKcjbv41Y2ciQnE2aDgmMGEzL1PVcSE1XtIVQOkkPHcVcYY2aIQ1ah01UvfWR4YFTqMEa1jkPMs1JtTiPtf0Yz3hYgIyLmUDQ1ojR3LiVUk0YjsjVm8VPIcVazomS0omQxnmZyLWSsUWNio2cyjCSLkUbrQiQlk1PCEVQ5clRBQER5gUZzbGSGk0ZOEDVZomb2LTLIMCbuQiRqwzaHISZqDiXtMGN5kFQlcFTnACRYwTSyY2U2kkRzcUZv.WaWkkbLUkQJIiU1kiXAoGbDUiXmQEYycGMmgCQyk1M2UUT2YST0gFdgIkKJMSVvQCQ0jFUNUiU54jRZkmX0QlSIIScgEzPUI1R0bzZybTT3MmS3gTTt3jQ17DYLkWbGQWRCsDRRcESwTWZ4.CR5AkUY81aH0FdFASYqLzZxnTM4QlbqHScvMVcRgSTrUVM4o0UIA2SYIkRqDWZk4lVDQidLUTNIQ1PDACQQAUSv.UMsU2aTMyZKokbrwzb2LEdSQGLQcmS3klPHg0RsQDTUMyMo81Zw.kV0oUYLUkKrESbhEDa5QjawnTTFg0Pt.EQyIGLOgCdMcGLE8DbtoUXGQSMmwzPOETYxgmVyfyahMjbs8TYrUCVxgCThEmUtUkM1bWbWQVP4IiTNkmd4QGLVojdJcmbXMVVmg0P2IFY3jWVhgTPWIWLyfCMVgldNYmTjg2UVo2UlshRPYSRSYzUgM0YxL1RMokSg0jPWYlMlQWP2QEMyfFbhsDY1L0X17DYQgTZqXVcrgGUJs1LGUCMXISbEYFYnIWQwokTv0VPzHEV5QjZgIzLUQkZCUEMkYSQLQlYrkFNhYkXg4jXkQFR5cGVYgyTGYiUlQ1MqDWUtEDTyDWRSQEcu4BQLUkPSIFawoERDojVyjjdDASdwEGZ4YUayYlR2I1ZJQTL4ISMtDFLqIFdZACdqnGRqL1RvrhVw4hSmoVY141QIYWX2IkSwfjZGUEUnITMCUSURcTcP8TcogFNLUzbyMSQ5ECRRImV0.SQOoUdHMSZDkEQxTlcUg0XWE0Q2.GLzLVY1bEYDoTV4PEN5oFTTEDN3AUPCIWYQQzMzklPSQGd0.0UNgiUOEkauESbAEFQLoVTXIUbNAGQtXWMOgzcJMmbhwjbvcGQrslSyUTPLg2YH01bAwVa0jVMkYCYDgWLEQ1c2vzbIIjRFsVcoUFSKMjXJQzZFY1PjUzZCMlVzQSVp0FZn4DQTU1XHshdw.yQqE0bpcTdpM0LCYESzb2ZWEVTrgzLCU2JoYzSIYDME4zPAoVVSUVXgcCaqUFShIiTtwVVSoFai8VSGQTcnkFMN4jLKYjU2MGYxPmKGc0byTVQ1wjLZ41TwQUNM8VSrsFc58DZpsRc1sTVvTWPlIFUEYGTy3jZO0DSzU2TsMTROgjS4n2bpMVbXYGavoFSrQDLxk1LBQEUpIVMqzDdnkVPHcjd2omVXUlPQYSYFE2Z1YUdlQlZRwVT38VQgIDVjUDTWgmdnk2UFUSSg01RKEWYhwzR581cFslc08VRA0jYhMVYxjSbuYSNNYCU1E0ctHiVtkkTjM1QY4xRhQkSZMCcCsVTqTFTxTkU0UCbXUjdFsxQhkCLxLlLmI1YuYyJVQGMN0jPvTCV4.iRAcGMrcjTSYicHkjKusjXv7VaBUyRv4VZgITNlYiZOkCR5AWYDIENwsFc1rjKqQSMFwjPtjGSDYkTyjkL2UkRGgTTRkia2UEMCEERFAUQxQEYXsVZQIUXxDGVHIiK1cUMk01aSkCb1DTMysVRqI0RigSTPQlYtokUyUUZkcVT2flaIQ0alMTPj0zJGIFYW8DZvDzbiIzZXkWNNsTSvQTXqwDb3k1b3MCUZYmQtUSUJsBZyYiaZkWc1D0S0AENM4hPycUY0LTXO0zP4L2JVc0Q081PCQjUtrzSlUCRrYSNU81b18FSBYSVVgzcz3BMUgzQ0bCY0bjU1PlVogyZrE0aLYSL3rhTV8lYyTESpQULBYWZFokKyYmXu4TQ2zTa20lRUMiZzMTNzEmQS8DQKUUbYwTPx4lKTQycBcEaHgyZtfiTsM2RVE2P3biawHWbCY0b2ITXyfkQ4LENW0lKkQ2M4c1XJYGZgkGTYUTZWsBYhgzYq0VXtnEapk0MMIFLt4jMpgjb0EWLMIUZv.mRqP1SxPTcikycuomUPsDcu4lKzUFQKEyTgczPlQyP3oESAw1PHkFYEEicAEiMEcVR0jWYsEiZzckKq7jQG0jQTEWRPshcFUjUmEmSFkFN5gmdMM1LZYlTsQ2TQU2PE4jPIEkRJAyTlkDQFozJZcDNzvza4XWTHEESCc1PTEWNTACaTMWSmIlSnYlYGckXEUDMG4FQpkDcOQ1ZPACaOYSQPUUYUcmTn0VP0UiMXIFZn4DMoUzX1U1YzTSYuI0LSYWNTgCT1MESXcWQFwDc54BStXWZREUTKUkYtAWRTshahwDLjsDbSoVQyMjXqY0YSkjTCYma1QmPQA0bzrlUYYUXiIVSDcWc2PmbS0jLtnkMqf0Zpw1L0XjM0YScLo0aWIzZzkidUgVZVEGZmM1P4bmPgsldRQmQk0lLJgTcxjiLxElQRMGcmc0M2TWa3bTUh01XnshXyHFS3QGQHozQTMDZtgjLrIid4QUQVYTcrUWTtQkKQImYUcGZmEGRP0jasYjbSkGNQ8FaD4lXLAmQRkCbpkkKXQkL2cTdmo2b0MCNC4DN0MjdJEDVM0TXHUjPgo1SKgFUVMjYEkUZqQiQQMmS3njUwX1Z3bkSyPWQ4.2ahkSb1ImPXAGMR8lbE4DYOg0XTM1LtUSVOQ0U2UVdUcEUiU1LPgDN3cGYBcCc1.GSkAELxDiMWIDMxYlLyQ0LFYlZyIVStnUPWETUK81TtUyPwQETtgTb48zXPklbQYkdE8zTtgkPPUybWkmPkcCQyDEbjcmbyQlSqkWPzYWLokkKrwjVZYFc3UUd0AiXT8lX0ISazIScjkjK1cCRxzzTmUSYHImLUACbtLka2AWXxECYU4TUs4zaAcUajI0URQmXDQDQxg2UugFTzH0XY4xM1gTXXIUX5gUVC8VRIglTrgUYSIUbrkTdn4Dd1DjQyzVYZgjKSQySAAGVvUUP1UjdMYEa5Q0X241aD4zQjE1Uu4DTAkFRJ41M3EjTvomb2cyU3LycPUCdNsDZMgGYwfiVBASMFgya2DWY3f0LqrRVHEDM3rRQVkEdsQCdLQ0TUsTMqfjKtnkZzgTR2UWYCUGRHYTc471LDsFUUIVVQMEaYEURYMVdw.0LWElPwHEVAkiMOgVaqUVLv4TZAo2RvzjdyoUc2zTLqYicQkCcWkmZUcSa0ASNEAWMq3zQioWcyPlMLYScmY2J3LjRzYjMv81XS0FYTI2LAIVZxbiX4PzYvQWb4QVZVMCYWUWVCEDZBwDb1UVa3gyRvnzJPIkTpUkYAUyUUAGVRslMhMzYoA0UxQTcrIjTxX0bVgCY0DFaWshdLkSYNc1LTsBYGglcUgWPrQGRVgkRTEUPVYiSzkGc5QlRgkUc1nVNjUVTMUTSokmax0lMYUjaVEmZgYEZRklRPMVXJUmVxMGR0jCSkUTctkEQ2fDawLlKuQma1QlKUIlKnESNxAyYNEFMQgWLNcSbmsFSwbkVGETQiUWLWAWVI0zYzcVY2XFRTE0YzMzX4XEU4fmUJMGMB8jXEkTLWYmcyfWRO4DYlYENqUSVikkaTUFU2sBd4EzUX4RdSY0PhAGbqUyUzbWbjoTRFoGThciXocTLwDFY1IkXk4VRtMyXF4RLpcUVtQEa4fiS0jzYEUmakM0byfDL3PSPRshY34jSIkEZq4FTOYkMiMkMkc2axD1ZxcEbwQ0RWkDLOQ2L3IVbHgjSOACYPcUdWsxY4rBbJ4TYFMkYNEEQOYTQtMkVxs1cFEUdqMFSrIkP3XjZDAiasgCMzrDckM2RzTlZTMlYXE0YVIENo4VV33RbngiZQYjdOglVL81bZsFVkQiKNUmZwIDNYYWLsIVVSQWYIcDRBYUV3fEcRcSX3jVX0fEQpkCcgoETwH2amgWQOgVPREzPpcVNHgzQsc2QNc0U4fkQAIETWAEbuQDcXsVSHA0a3UVTGQWPzLUYwPTRhw1UWQENFAmQ4Uzbwv1Mjc0XiQjMygjQVEGU0zTPug0P00zaTkWLuQTbJ4xR4EUQyo2TkU0TAkVXW8FST4xPP0DMiEkT0MUUQI0aZcCNv4jLCQybEo2YQUVQpg0TyPWax3DU0Xldj4TUtflbPQiakwlQVEEbNMzYEcVd2jCbz.GbxgGcJMDTxHjQtImdjElbqc2cpIya1fGLH81JDshZrQmXOAiV43xL4IyZsczMjMWcrkldqclT07VLSklSrcDV3nUNGUkKpklM08lRxclYLkjaEwDb2IGQggDdvUUVg4TXTIDLzImRNU0XZIWZPwFVocia5ESQMwjQ4TSZUAWSq71P2Y1JJU1PhY0LUgkR37FZmgzRrYUQvLGRvQUcUk2ZAYjQxLWbUoVbXk2bxMWayX2UxIjSSsjXAMmcXgCQ1fWUiUWcF8jcTkDTIUFY3YkaQ0TXOczJRgkTwEmYzcFLyfzXsQVaDEiMCIlUvElcJMjaTIFMSkjQZgCUY4hcVg0Y0UCTmglQAk0Q0.iRmECTqbUVo0TNkAWZyjyTC8DNVsjMtE2ZkM1XxYEL3jGZgA2czAmSRYjPE0zLoo0U4vVQBkyQ0YicFIDNxMUNMg0YPUVPCo2PUwFalMkL4YUUYQ2cUczbtPlMv3DMosTXxHGTwDGYBgFdCoEMvAWZYM1MKQCSwo1LqAyXtETb03VVRIFb5YEbxbSRFUUc5gkRUkSMAcUcqDSZqE1QvwlUPokdqkFUiQSM3QjV2TyMJkCR3o0aQQ1Ukg1LD4RPznzXDwFbKkmLvUFdWwjZpYiLwc0UDcyXCIkQTYlXVAkcCsDRpQSXLojQwcCMZcDVzfWYqPGNoU1TKUjQMk1SSkkTmg0XxQ1XqQUVoIjTBUmQwn0MLkFLQY1TX8TcyIVP1XzJSMlMuE1b0k1XTMCROkCS2Y2c5M0ZRcUV4LyRl0FcYkFNV4DZGcjVwnDYzTiVBgVcYsRX4DUXpcVYEA2YB4VUjUzM5Q1YxbyRw.2ZIk0arQSNk0FVwfDRwU1Z17DNzjETTsTYzLSQPUFb1kDdSM1aogCZykGdlE2ZwXSdsEWXio2S2DzUvAiMQIlUJUCLuwDcwgzLzjkMZU2ZTgUTjQyQWgWbhYGQQQmQXACajYTSCMGbrgCcVUDaMgERpUyQYYUXq3BatHUTLgSLkIVdvLmPmIEYxwjKuwlbtvFZ4Emcq.mcZcVLvoDR3b0UScEV2LyJGMTaxnEQoU2SisTNnEmaKYjT0nEMhMjMxYjVnIDQA4RcXM1UhkERwfDZAY2X1kzQ0PCVnoFNwv1PwDUdyQiSvDmYOYlaCQGLqQUVNsFZyIGVUMmaAg1XlAGQh8FQqsTa1LkVqYiU3AUNtkEL0sFTvI2bOY2bVoEbQEjZAA0XIgTPzYWaPgldz.2Y0j0LIgyLDozRAsTNwPjMCwjXEc2azAmbw7laznEYy3hbGQGQocjKrMWTjITMv4BM3PESPcTToI0LjUTTzMlP0YFZzgSaP81Jyc1XtjWPRckYQIkKXwTXw3jUwvVTxn2MmsFY1LURzDmLvsTX4MzM03jKKcmL4nVdEUia5MUZXEDTqHyYoMVNGEWNRECYBomdSEDdrM1RjgSTNg2YrQERuMFULoFUtXULvkDNlACLxLDNAgVLqETQmITXVE1T1D2QJs1JHIVPqbmQScFd1H2RPIkZHcicwXUQigyctcmaLIUYzACYXQyRRY2Yx8laUQEUU4BQIUkVVQVcBIUcpI0PWkTbDkjVtMDRVMkVMcVLrQSSMk2J1.iKqHiTTESV4YUT3DCTCQSPPYSU0fDTCACThclY1MCN4fWLRMTNTwTYxDiQFomTvjWbRQ1ZW4xLScFMNUEdJIkarQ0TwckctzDSCQ0MOYFZ1flTLsTNtgSQKM1TzUSTtICdwrjLqUUSjIGZPgzYQQDNqY2bTYyJDgkcP8DTg4RNxAiTZQDYlETb0D0TNwjTEYVL5cyYqPCZvjGcnIyTxc2TtUjPqzVMXIEbpITc1MkXUA2LIcSbAMiUZEkStojL4I0Z1UDUGkDcREWdUcjQEszTqbWX23VTqn0SWoEdVMUSLozc3XmQwslRJQSaNcFRxXGNjc1clsVU3nTXqIGdqvlUREmaG4Fcqo0R2UFR3vzbxIyLYgUdD01LNkVdkQlSmEmcmMVNOUiY1nlcv3jSkgTUzIVLJA2YKIjLvX0ZKIENXM1TWA0SigjQEQkQJk2bKwTQRozJC0DMyTTR3kDSBMGbyTVLPQmS0cicKkTRZ4BNCQTR3YmVUQFaXMUcwIzbmw1TLslYigidjETd1DWVCg2c2b0TZojYVEiY4rTXF4jaQAyMzrhPn8lboMUYJcCSJE0cWoFMPMSRz4BLxQ0ZQ8Tc0MSTrQCTswDUQMlUho2PGkjaxESb4cWbwgSPx0jTmczLFMTa2MTYLUGNIYzavXUP2IjVwnVQD4FdtgFbVc1J08DMHojZmgUQuY2aUYSX4zzZL0TLvcDLTwTNx81bqUGMuoGavnzczk0PTYGUBIWNgYGMqQWSkQUdxXEYqYlTOASVmwDVYYWXBg1UlQ2X3EUcL41ZBUlMukWNvb1LjI0XDMjdMYSNNkCd2EST3AyPWo1T0YyZvYCSKElcF4DQ1cmSCQUMgoWMWEyM4oUV1P2PlcUbvbmaGgGU4ECUhsVPDYzJFEjb1fUN0kFUukWLpQDM4fmRmMzZXASLiAEZ3IkcZUVT1j1QUoGU0PkSgMjStc2RrozYKQUX4PiLikSdqITcRk0X54jRjUUQsY2XycSN4QTY3szY0kkXnslV3k0J2LWU5M0StH1MtsDQTUVLFUUVOUkM0bjQqHEZrMTdDAmcvPCVtfETnEUSLg2b1j0UYolXQcFdE0DNGMVbZEVMTgSTkETdBgFduo1M1DCSWYVdhwzLYo1RIY2PKMmStgDQvvlVKQEROEFMV8jPqIkV2rDMgwlSIIzYgwVNGIjL0g0QII1P2MWYNQDU4fzM5oza2zlQVYlLoEjVJciK4YUcVYjUiIjZicmcy81TxH1PgoFTLk1RZgWNBU2ZAQFL3ITYVsxSyP2PUoERK8FbxMiPnQGRscUdvkiQlIDMGUGYwc1aFEVPwDSX0DlZCEWSzkGcxjFZV41S48lT3MVXgcmQzbkVrYDR5QzLAUTRSQkUmgTbTM1YpMlSNsBM4LWQwX0ZmITP4oFd1MmMtE0US8zctEDS4IySqXWNT0DLDkDYogEcWUyPYEiMKEERwbDdLo2bw4zP5UlSOImVQUkRzoWZzYmQCojM1shZwPFYHAyUIUCTAcmTpAEdlIETyEUSIAyLUwVbvDENh4zL2AUaZI1ZVU1LS8FazPVX2nUYKsxUD4lYZcES2rhQWIicAU0MGoDTQkTQTQmXLYFR441MgYFTmEiQzPWM0DlXHw1Y2UidT4RU2PUXso0PjwzUDESSqDDN18FLTs1Myk1SzDTPsE0S1bmd0QiMyPWSCIycmIlRsgidFM2czXDa13BMVIGU2YERyQGZukjd0.0LqLCTX0TMgciXvs1XnQkKpICQp0lazQWVZomQGYTT3sjYlMDYNU0Uzb2cl41Xickd5cVcq3zZvIiK4TjQtYCLBMWNIACZ1EVdwQkc2A0SrokPYwjTpYyQHkTRxjSNQ0jQOIkPjIEUggWSJQVY2rjcw8zZZo2UvEkczkldBQlVtMyawvFL3XULvXGNTIzLlAGUtjSLvDWaI0DVQcGS2wlavETVw4xPs8zJCMmb5c2PzDlZX81Z4PzXj8VMyYzLCE0StLDNhITdvoFQN4lc0A0YwQGSvfEVnkjTpoEdMYmd3AUT18TNTcmUoglYtXlSvLCRq4zRAcyc1LESGUSd1TDYv81S3c0TxnlUxPWXBozJzfTNK0zJYIzPh4lUGY1clglRKwVPlYld1T1bt8DQXkWVgI1MnITcOcDSjkiQhkGLIIlVwHkUSwDVHImbq3zJ2QicFUFLiUELHgzTuEWQvj2Lx3hT4bmaq7DNSgEN0P1QCYzROcCRzjVQpMyUvYjSy8Dd1XmQmQ1UyzzRVo2MP4zMtjFaOEzMsgSM1EmZgUEbOMlbLImbjshdpYmX1kSTpoWdZUzQ2UjK4k0RnMjaRkCQMo0PlYUQt4TTxUERYIiY2YUNFsjKyj0UtQia0Xicj4FLrAGdxTyQ0kkMjcDNtvzaIciSRU0RJoGcLsBQskiZikWM2c0Q2glUuY2PnMUa3ITLWcGVZQVX0U2Py0DbTk0RI4TMLAGUF0DUj8TT3DjSZEzT1YiUTkkUE8zYW4xU4gFaYo1TzDUNh0zbSgyc2clLYkFQ2TiUwEmQtEmMxbiY1.EMHsVb4ACcKAULh8zT2YmSr4jKtoFb3wTPPM1ZhUyZSgSSBYWVlMlbQoVM5MiUKAyUJQjbxkVTyzFbQ0VVMQmZgk2PXQzL2gGS3jiXmAGZukEVzczYGsTNGEyYYsFawsFUiIETHAGR3QyZkgycFE0SvolU2EmXhkTYxX2ZZwjR1cDNCMiYSkUTDMTVsAUVrQWLoUjS2E0Xx.mRpYGZBgVR4zTQUMUQzX1UoYlLyU0MFACVmsFQuQWcjc2UhASYNoTSPkyaxfjT1.2XwcDR2zVXWUiPOsDYPEWaGw1Zh8lURQ1LSQSVzs1RjcCLQwTQwX2ZGM0UxcCTOI0U0I1LVEESqjVVEg2XVkGbLEmaYsxYMIzQNcTUj4jSmMkavomZXUSUEoFbmEWY5olPzoVTpgGQtTEZEQDcLcicyrVPVEiMSYmQMMFTlIULskTTqLlM1MEVP4zJG4hUvISSqTGYkISdlICZAUFa0QlbIQyY231UvDVZ2jCTgwVdlUmRTgTSMEGdP8TcIkycVMzR2sRQDUkMuslbBIGcvH0MYgyZu4VXjQTbhM0SKM2TqbkdzPSUoUCczE0MAECaUkFSoIVRVcFZZMFVqc0RLgzZRI1RKUVcn8DQ5IzcRU1Qu4RbYMybtYjZXQGRv0FamsTaTo2ULUjb4oUPJEDSxLSVZo1M1w1c3EWYH4xXyP0PWICL08VaHEWZSEmaSkFQsUldqfCVz4hVxQTNuE2bsoDY3TTU1YDSwUDLvQzazLWbiEWLsASd27jcmsDarEFNkEjLwQ1YuUEUkgjaOMTM0LGR441cL8DNyMDdWshQX4zPQUTUhUDLgkFVYQEdrwzQG0lXl8jPm4hdwDTMJYWSk0VLUoGYvX0SCojTyXEMKslTKgCdE0VR1LVXyXSRXwjQiEyZ2TENRUkUVQzQ0rzJQcjQv.WcPsjLrcmZQQFd1TmShUlXKYWShIya5w1JjkicLkWP0.CY14BNr0Dco0lQEMDTkQEQqA0aqbCVggVXrkCczfmaYsRViECZXECQzjDZOMUXnMjTwPmKp4DQPgTc3zVZBQ2cX4lSAQyTRQySyUzcYEyMrM2Jm0TRZkmUsgEc1o1PtsRUscEbOMiYTMEahUCNvPWRrkFLqEiTMUGNoMUNpwFV4cSPSQGbhA0LCYyZzMmaycCRFQWVqjyTvPiMmo2X2QjVsAGahIUNmcjRCA0LEciLzfzcCUGQvYEZwL2avYjQz8jRFYDa2T1QHEjMykiVGEFQhgEVkcGUsASQRQUTtPTPo4hZ0cWVqU1atfUXxEES1PTPLU0aQcDRJcWSpY2R1gUZociKpY0RMc2cmYDSIo0ahICbzYDLsQ2MAYiXm4RQgcDQ3wDUMUmXJ41Zuo2SKkTcZUkPyTldYgyRjcGRNgEb1EWSJQzXIImbCEzTvXzbTkiKuoFSz.EVk8lZVc2LuEmVxkFdUQzbSUTZrMkLOQmQyLzLlEDcq0zaCgWQiIzR3flMssDQiMmdiMDVrsxXvUFb3HSNO8FSjkFYrAUc1H0UvokS1AmdpYEa0b0QqzVNVUGTog1ZDolUuIiLwHUYpozQxQUX1XSbZ8zTv0lPpsVa0TmbhoUXZwTdzPkavoDYWcCNoUUT1HTUqfzLkkCVzTlakMUZ0gGRtcmLEQFNsQ0MBUlM3MDctj1SZYDS3D1TRkFaWESRvQiTmQjPj41LyQCTGMSQo4TYBQyXSgSVx8FZvXDNWIlYz.mKBkmZLEDaUg2Ukc0PN4RP0nVNPU0L5IiVxjUQygCY0MTQ0M2R00Fc3kmXBQUNP81LigVVFkSZPoVdqgkPMYFdzolPocEaOMySP8FQvE1aEwjPmUCNh0VS2kjKro1MZEGaSMURwg2XtblLvzlPoU1UQQCbkImL3U0aq.UcGYiMJgjYtPSbxUjUVEzPjckagIyM1ESN0gCLW8FbyM1S0QyMgcSTWgiaO0FbBIjdW81UBUlb2LWY0gFamY2PwHzYtrTN0DkXzASVoMiSHU2aicTbhYyMkMCVu4RQD8FV3f2axXjX3.CSE4lSZUkQQszSOUzLtHEZzXVRtTzZHAiSXgjLickS2gmR08latIVUro2JkU1YZAUQ0gWLl4Bd3okZwHUZpclKxPmVVc0LQYzUQkiL47VdLgEd3YmVRslVzcjci4RcvIzY2w1J2gkR4UFVCUlXUETTyciLhgTXxn0RSg0YsYlV24VNHkiRQwDcogGRtT2Jl0jPqoVQvrFMz4hM2cDUlgjZw3TdBMGRVshVxQmamUVVxPSbmISY5UlZTAES3bzMXEmK3Y0PCcFbp4RbhklSDglYGMUU4okbzXWUvMiVYEya1gCa27DNoImUIAWQVgGSq3DY4zlLhQmUkASNqA0JhIWL4zTNt0jZQAkKxjzPqjCUp4xaWkzM3PUbiASb0AEV4cSSnwFbn4zZJclVA8VR2gFU2gVdhclLZ4zTl8TUmQELZcGVjETbywDU2c0MvolPDYUbPQCb48TVHkmVnE0QHUFLQkmKtI2bGYkdzU1atzVYOEENQkmRK4DUtI0JQ4VQKgTTVojLSoVZ4jCSm0TcrQFbLQjMEYFY3PSMFcTcNMURqQSTGgyclMiPQcVStvlLhYWav0zbyEEbUAWRpcWVGgSbRo0YsQGQ2EDS3oDazjCLKIFSo0DL58lRKcCc4DlSnoUXtkDSqT1ZwQVL5QkXLUUTxgEc1c1TwjFN04lc0njYwnjSxb0SskUVXkFbAQET0AURNoUd5EzPQY1QusVX0klXqHCMyLFcBQUZKkCTtPkcvsjYO8VQGoEaoEiZngiQTYFb2XSd0Yyc3TkSQ0jdqoUXlUiaxkzJlMTMGEUaUMDTnEiZPYyZtLULrQVYZg0PIEmdrglRlIEdCkDcFY1PtTULNckLhE0ah8jYpYUVtHSRI4TRpQSRWcyXM8DSxbUT1PiaRwzJlgEYCslb2gUYvM2Q5U1RV4VUqXFUvrlLnUkSQYyJvLiMTcFUiYGN13hZzICaqgiaN8DcAYzRXI2R1HTd13DUJYCVVc1QDYjMPIDa2HGQB01TgEzZokjTxnmdTEFcKsTPQwzJrwjd44DLwokbhkjboASTqcmXzTTRTcCYlcEc1AkaoQzagYSV1YzMrg2Xy.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.GTYMldL4VNFsVd37DLWQiKUMWSxDSd5kycCkCcLUCUCYiduYmLWgCQpw1SmEiSz71JzUWSggTQToVZRAUMvLTUGQjRIUFbpc2XuMmMPwlTNQldgkDSiElXzUDVNUDSVMGQygFb2PiXzzFNxQ2JVI0M0nlRHkyaN4FTjEScCglYHYkKKc0ZMASMHgVQigiXpEiVPgCct4FdgYTUtUkX3kDUBcyUtnkK4bESJ8zXUUFZwL1cUAGSM4VSDQSVBYUVnEiQvQDV0YWdAMzSTQUYuUDLF81PV41Xl0FaLUiYkgGTIciPE0FRZMmct8TbyICUG4hUEYyUJEFbqjjagYWahEWQzDiVW8FMt0TYLImStkmTPYyR4.STFkldKcGREkjU4fjQ2MUdlk0ZzblXKQVYJgkQhUVRFIWMSETT2g0MRUDZkE2U1gmQB8VU3A0QooVNvjVPqjWPrk0c4TzMxL1U1QTa2LiZHo0bz3zUqQkMxzFLVklbxkUUEImaXgEdQE0U2nVUhkibiIEcQYSdlgCQEEyQPAEa2wVaHoERRIyYqYVY2M0aYU2JRYycXI2b0wlcvrVUq0DdvwzPsMTVmkFUZgVMxjGLTcjaAMENpgjV2YySVgGVvMmMEgFTTkGdYECVYkmQoMGL40VcFQkY401cqEmQMQUc3bFMsgSdiQmRTIiQJsVZxHmP4k0cRoUQq.id3YjUt.ic2cicMMjcuYDUDMUa1vTVMgTRkAyPOgVdS4xSYUCRiMlRGMjahETQ0QkaMkEcwT0ROM2ciA0SQk2YqI0TkwFa3XDNwA2SF4VcAA2SzAmUoEWVzfmUhQSLyfGV2H0TokzaAIDQgQ0XAklcyj2aTcULwwDdjszTl4FUvgFaGoWbRk2ajcGTL4hSyckMXciRSkVPvH1bL8zQ2IzX5cWd2EGVPQSMKECRwTWLrUSQikiM0Mybmk0XvUjKqXFML4RTjsjZFM2atIiKmoFQGwFURECajQENsUWLwcjVSETVHEVLLA0LyQCZw4xQQYCa5k2QrIlb5MmV4cFVGMEbvcWbOoEMs01LrIiYxjCaoAWPIcUbZ0DMZEGNgAkYDcWNwsxMBgGNUcSZ5MWQ4jkYh4FYQ41SvITZ3sFSpkDcrcFUokiXFIFN3PGbWEDNDIVN33hL4jFSpUCQ4kCRxgTdg8DdFwVY1XSLKgyPhE2UlgyaqP0Y2LSUNoTYDcVYCo1cKAic5A2UoIVQqjlboMmUU0ldLgyTYgWbLQ0X3wVczMUcBo2atACZvDSLQE0MsQGcGoFdrsRMYEyahYmdqvzUXYkMv4hUw3FY4nUX4PDbLgUQqkWQg4DN3zFdy8VdGEkP1jGN2A0YkEELXMlR3gjPVokPyfSSrEUctkSNTQzZscyZnokPZ4DSPk1Xx3zR2UlM3ElKEwDaKQUahgkVGkEbPAmM1jzUScCZ4P1btnVUrcGbIUkSgIlSHoDdJ0TSAMDQAY2byPyPRQlP0gVQlslbr0zPtEEVocTS4jkM4IySLMzcSwjRXEERtsTRXcUL0YiYjQ2Qq0DUtIDQOIDaxESMlkSPqEkaJYlYZsRZogyMIcjVwwVaWMjZJA2aEgDSAsDRnIzTVQjQYUzUtU0JwjFdRcDbBUSZLklUMQ1QRs1TOcyXpEkbxnWS0LEMzkUQ1QmXywlLGYSdzT1M4cUMwIjLmc0X5QGctDzUuAkLzkVVyUyX0L2UmojMtcyPOgkdWgjXzjWdio0LmM1Zgglb1gGa4DTRtPidToVRj0FRXIkbsUma3DyZBcyQkgGQ2QFQlgUSG8TUzPyMrAEZzwTbYYjd1TySKgCQq7lXIMiQxPzaZgTM1ElS5YDdGUyM4TVd4DFV4.mbxHTaqjyaCoUMMwVUtXlcmkVMxoVSPEWZrk0YOM1aZU1TFE0bMISbEcyTwk0PxUjPAUiP2cGROE2bwP2coo2TQI1YHg0PpYDRMIlaBMUMxY0QV4xP5gDQLgTbWgCRqQlbxMkSxvFVqLkaRUkblUCYzPSYUUEdYsDZU4zQY8TXxHjT1LVcTwzPwMGc2.CYwrRZEQiS3jVSlAUPqoTYCAETDEFUmEFcVEDZ2kFUigmb2XCN2EETGMlXz.CMk0jcxHEMzDVXSYTaX4FY1gFVMUlV0bkVtICR3fWRqECMqrzMSkWcY8ldJ0VXSclPxDWXq3RN18zTykVNKwjXComZiUGZVIULuUia5kjUXIUUZMyUxISQNUUZ0IFUHozQyYjVxQ0cwokKmAkPSEDNZ0VbXkFQG8zSXIWPXsVRBokRCo2XYkUV2cWM3L2JGQTQRgUM3fDcu41JQ0jSWgzSCYCLTQ2ZoEUYAk0RkIzYkciQkMyTBISLJsjLiM0QYc1bq41PwYVXgUyZQMTLC8jXvI1LhgGUkAUaoM1RTMTbJQTcCASS4biaqY0XyEjS5gUPyXSV3UTXKEVPM8FYQESUucWLFgSPBgycyYDd0cUNvvDQ1UmaGkzXyjycZQTLOETVFcCYjAEVZY1TME1XJw1b4ozTUUzYAQlQUEFY1IlU4kGRgUlZocySx0jTyL2LCcESp8zb2oUUqMSLnYyaSgkPsUSXBYSb0IkUZ8VSR4hdRk2TvImM3bFdHgzJJg2Y0zDLAIGdtQlVqXlVwwlTGgiakQkYTAkZwgERTcFdSY0Z4c2StfWUOUDNGcWYGMUNsojXuMGNHszLkoERGwlQjA2U5QCclsxPVkVaXUUcX4jSVIWb04DRLUmRYI1YVEUd3MVN2IWcu01aSklKFgTY1LSMK01SgoEdg0lZtvlRsglUmkldqMmQEQDYxkCYQESMtwldxglQ14FZ2rFMQEzT5szPsMkcgACU1M1UUUTNOYlTEgmPH4BVqvja4MkaCESRYoTS1ImU1g2PkQ0YSIVZ1nkY0PkMVAmaUQSSzDGbPUDRE0DQZwlLI4VPmECTHYWcAYDQkY0Y28FTRMmYCQSLOIWUVQjVMYkbmMSZ04zMno2QKM0Z2cSdiEzXsQiXkombTA0REQmURYmdIMVRnEibgkSUrUkQUojMOkDLKgFTPESRk4xTiEGRIITXiI2ZsIEd1ITUMISPjEDZqT1ZvL0RT0FbGEzL3vDRh4DU0XiQH4BQzwVL4zFLvLSTq4xM1slXxb2YwbTP5ECQUUVRiciYBIkbQclRqslVJMmamYib5oFQlsFLFgyQi4TN3gVRyc1aRg1X5AWTNsxTpcGU4bmPJolcCkmYzX2cvETPv4jLCI1blshR4sVQlcCbwLjPxQWRQkmLVcVVWcjaPkGSkcSS4UScSUmS5wlbXojPiMVLEQjPzPUa2YUXqMlYnoTaR8zJVcGYPEFM2UCRgcDcwrTNBMTMskUUCAkdGM2UwzlcroGZisVakQDNLUlUBY1aJYDUgUUayH0PhoWb1PEMtHySUAERUslLwomQyDVZq7FLBIWXzI2U3MmPAACTlIkb4LjSEgiaMszJ5YVT5MybvQ1SuIlUnYCc2ACYlY1cEQyTYw1c24jRQcEYtrTNrgyTgk0MUMkTYEGRkE0UHUjLGQkSXkEVsgkSxDVbZMTdX0FbEgyR2jGSRMTZoETU4.GZIUVQuESaxXFSUEmVYMFb2MVbhg1LwzFU4HCRMIWdzIFStPSd2jFYPYTYCU0XQQUVKYSVTc2QxTiPlImUTcSavjWatrVVjgSbAsFVIEmLqESdxzVdD01LiYmdgwDbFwDZtbGUOUzPDgmatHkXNQVT2PTQjEjLxYELpsjP4HFcAEGdPElPp4DdxAmLRgzUGoVassTXnY2bVYUUq7jV1MUXl0jb2PSZI8VY4UDZWwTXyMGNtH2aFYENBcUZFQ1YhclUVYEN2XSYRUjT2k0T2AyQmcENywVcxnmRGk0RtwzXTc1SWomX3k2RwfSXwP1RzU0TAMjbXIGdvDjRMkmTTQjTrU0SqLyQzvlcBMWbXYUbwLVXIcFMjIFLnAkTHY0MI8TPukEMnQiXLEVTqsRZtEjQ14Da2QmPqfzT5UkLn8jKyDEMVUCZkcmZzckTmU2aJE0X2HCSycVc2X1TqkVTwTEQoI0T1kUchwTb1USP2r1MjUkT3MVRggicoQTRyLjdicSU2n0YzQmSy8lUhYFbxUkM0kFV54VcSgka1bTQCoEbXUSdqj1TmU2MzPlQ0MzZxQkPNgSayPSQVkyS1gkYiomK0Q0RSM1Y3IycRUiRxEiQQUzPtAST1n2RsIiSqLSZDgCSWkzXEsBUX8jatg1TAkyL0cCd4DmcIIjSwXTXTICLyHldh4FcKIjK3k2Q1MVbqflbso0avH1cvvlMyXCN2QlMQUVY1clVHYDTiUDQtIlTvgycJk2YLQFQO4VaLIEa4U1RvLFM5oDM2f2axgWRxA2PvLSdmM1RgszTWAUQ4sVbtUEYFM1byXDN3kWRzQSYKMCVJgVYhwzTBU1JTcGciU0cZUCdGczUIE2RFgDSzDWbH0TdGEWZyLyRokyRS41P1ImQCUmTqIjSwXFawwjbgIlKnUGTKglbmkzPiklV1PmXlYkUxbzSnEDVVcTU1PGawckRzXFNTcSYsEDVBkjZOI1QqbSaLMlcBEmTB8VYCc0MmkSXXs1XYYGT2IGLrk1P1gUcpkWRCYlUp8DdMoFcRoGSsYmZTIVV0X1POs1QuM2YZsVd1YSROUSXZMmUVMTP0UUStoUasgCdCMGazkUSnQzQoYlaYQCMXc0UkshKw8TLsAUViEmcDACUvL2bDElPyY1UFkScj8zZ4s1JCU2LHMyPUQjY13TaokGRK0zQVMzPIwzbpQFZZEWM4.CQGMScvfjTkkSXqMjPYwVVZkTSKEjRFMlamUFYrgEczzDZAoVROYUM5MGMGMDTVAkU3HVP0ICR3USUqAkLMcUaAcUaJcDVgASTgcDM3MCdpMiUlEjLyIWQRkSX2TTXPkUagkCRKQkXFEELtkzYX81R2.WM1E0PoYmK4TESAsjZHUiKtXFLkgSQ5kFNjkzXEETM2MjKX4TcqfTdAY1RyfVYtYUdH8TQsoEMUYkTJ4xXig2azM0M2cWPqHjcishamUkcXYSYLo0X5UVRWY0RV0lTxrxUYEWYXgWaocCai8DUBcEMG0jLOU0QWY1S0rzTX0TR0c1TssFZQUTZWECLY4TSrAmKmgGVHkSVicVMyY2JhsjRk4FRzU1bZgycXs1QmIjVZYkSP4xXsIyS0g1SugzQAYjX0YEdsg1SDQ2MwTzQzjGZ4ciKYU0PwcGSRkUb2XEbQUFSIwVMZgVPxjFUzPCV1MSTE0FUpUUXPEFYIYCVK8zcWQla1kSQWUGLqrhaw.SY2QicwozMko1SIklUjwFTUIlRQciVqQTMjgybBMzTtYTMpgCdWESZggCczE0U2YDLjcULuwzTlU0XEYWNpUVNiMCc1USSxclV1D0cHAUMQUic3cmPtc0LnsxREUjbXsVY3PTSmgEQ5ETQv0jPxcUNyXyYEQ2cmMSNLEGbVUWaPcULncGN2MSX3AUTIUkXOEyX5gFNzI0XIsDTqg2MSkjRyrTRn4lYGUUTJQ0XJgSMsMUYlokSHgjLvkiLtDFMzrVa2clUNk1Zqv1Xz3TYsAURuIUVxXlZqYWa3jWSLAkUrEkdtP0Q1nVMJoERvPCQt.WMvPGb1LUdgold1.kXTElMicVbuUFVtIWbzjUSwbiPw.kX1ECSRkDUrElUsETSl0lVFICMHAUVw.2JW0FTxUySw4DbBEUN1UFbVAiLCE0XjUkTHEDRzMkTHI2XLshUHAmZlE2MBc0YnQlM581X4DkLzI1JGMEQHAUUYokZXwzLUUUViwjZSI1YykFagMTLPUCRSEEdIYWU4fEMRYCUrQyMqHUM0AUTvfiLFgFQhkyb3kCLBM2RUslQzUyJ0QVVmUWZtbiavHmZ3v1JqoWcwYjSpglUzsDa0IWPv3DNmMVSzPiZY4jPKgSd0szQ34xYvMiajg1P3jkSxASN1HESzACTv7TcIEEYTcmP2ACY23TYxvjSG0DY1gGc4L0bFMSYucWcwfWMSYmS2gTUjgzQ3M1QwUSbsEiKhoUcZo1UnkTX43lYBYFV3IDMGMETZMTSEsjQZQyLQg2Tt.WR0nkcjQDUxgTYqomMZsRXXojaX4hPxjyUqYmSE0lZXACaEsBaqg2TjQlUkgTZvgERlkFbYcVbxgyb30VdhIGdrczZ4olcCgmRxEWaSw1bxYWX3HWYmQVQKwTXpwVL0P0J4MWZ1zVRlYTXEElZCYDSzIUNLwDbXc0YTg2csomTHYFRCkVRjYlM1b2LV4Fa0gUYgEVVwXSVvHmZpgFV4gDLAQmcMQ1SSsjMvwDdzE0UscUQwAmLtQzctHUMDoUZrQUYkQyU5EFU3EiX2v1b1gkbOQTPVg1UH4zMwjWSOgGQysTLwbiRIwzRvwTPHUCVZMETQIVbmITT4MzTtPCU4HTaXAUQi4Fd3IkMw3xZ2DTTE0DTUYGNwzVQtLFYVkmXXoUb4LSQvfSarcFaZM0cLMkdyDGRFwFRTUSPqzTNMokZyjmPTcWSEMTYVcSL3kUdDEjSmISQA0TV4EFZjsRYpkUd4EzUB4FRw3BQ1QzYSUFMY4xX3nWTgo0TYcyJooTYwgVQDAWTtojPGgWV4PzZDAybEISbtHycqjEQAACQrcyLFMDLOc2R4YiL5oFd5MTdvMGc1jSXzUWT3ImS2DlZpYTbmgkPoQ0UTU0U5kSaxjzTYE0X4oGVoYETI0DZyMEU0UldjEmSHkVNqYjQ34lLDkyQYI0YokSSW81Jvj2U4X0L0EGduQUZ1ElcrUEa001LqYSLVgSMoMkKTQCazDVNkYFVuEyPtUFRt.iLwLicw4BTZMlL0XjXVglPjkUTNw1aTQFRqPUQEEjVTshTXwzRiYCMRQDbZA2chQmR3UVMnsDcRciS2sDVVQSN3jCL4vjPwDSdEgTY1QzXhsjRmI2SxLkdVEjTYgmZ5kGaJUFMyEVPHIybxISZtfWSI0TVEIkUJk1J2A0SDcCYJ4zSSojYtnGNPE1bNkkaxEULW4ja2UjXPoTLCgicIMjYoMWQBoUbXEzaBYVTnE2ZkozXvPSUP4xTEMGN10lKhUDaxM1YF4lU5c0ZRcjViQSX0g1TQY1PmUySBECLtbza1gzaHYjUFMmRRYDV0jzRqbDQQUSR14xayLmcHQicrkmSSsTaQ4zQIoEYz8DNLI0Xk0VMIU1XmkDLAgzak0DaCE2Lt.WR2gEd5IGaTU0b1TTaF0lRYklKDkCN34VdXo1a3cDRCcWUKgVVxTDNtg1RTs1ahUUSmAWdWcScwkmd4UFaVUTUT0jXqoVbHQTRDMEQqszQzU2LZwjb3PlM4kDYL01MtHzb0wDLwTVLSklR1f1U1v1ctD2aTUkYsI2LjglUGQGMgwlK0MiUtLlVgIGVmoWa1rRchoTVHESMRgWYEEVVkUzZTslXkI1MLQmTmE0Q3jDTG4DT0rBSycVUuIjMlgTSF4jL0MzJFEjViwVS3z1QSclU4EUNMEmbGYWM1XVc3UTMpE0Zk8zJZUmS4kUdVk1R5EldrszUsEyPvjWRRUlP2X0TukWaVEjVvMkaLcWS2k0S2TEREI2RJkzJQwVbFMUM0clKLslSyozJVcjaTo0J4TUcOk1UyLUZXsBQksBZzDDQ1j1RUoVMD81ZWYldRQkdvMEcYEiQiwDUWcFLq7jTT4DcCQDTPMjU14TNrkDcpAWbqAmPjIFQj0zZMYmZiI0ctkSXxjWbOAGQMUVdYYVXCQSYwcmblwVN4YjL4D1YnEyY3YSYLc1cvTGV0giTGQCVjkyc071YFU1Zl01PUITM0LVLJQiYuAyM0c2UqHGMSEjURIjXIEWTtTDSxjCZqTVXwMWdYwVN4biczPibHU1bC8jPigjK4slL4szTksRLW4BVGgULQoVSwPWPoQGcpYWLygiMWgFNSoja4MTVJ0VMjEmYCQUQGshMtzFQkQiRjkVUr0FMOESZzrDdzASYIYyaUAkcpcWV2IkYGcWXzszQmQCL1gGQx0jczfGR4gkSyAiLYUicLYWXyHEQpQWPKYiQwDmQ5QkcSQlLoUCNlgETtQyM0TyQNkFcy0Da17zMvciZ5QFTLcVROQkbMYlZYQycwQmMm4xY4EySyYFMqsBRVI2cyAycPEFbIgyPOEEciIVdwHEQlQ0Ywgka4wDYm4BU4bicSYEZSkkKHYSdFc0buwDT4TiQv.0Mq41PXUlXVMEaLokbvTWdqDzPq4TUw4hchoETwb0ZikiZlMVMRE0PMUVS3ICbBcmdQcjLWolMqcUUGICToYlbFM2UYEjc4sTY1kzYjQFROoGY1LkPhk1JHYiXmcGascTdtMUX4g1PRElSgcjXjYWLKkzRiUUS0LDQzoWaIIWMqLjRPMyQLYiKzXDdis1YIQVVqXEMwc0X0HkSqXlTUQCZ2bVTMglTJA2bU0zbLIzY0c2SEclVYg2LqfSXXo2UrMVQuQ2bv3xURk2MFgWVY4Rb0DjZTcGQEAGZEACU1n0PrszJAkSNHY2XZQFUs4BbKc2XxojSxbiM3HVXRQSUZMVXqcEdHMWPGsVMoY0cu0TcE8FZgEkPX0jbxPUbHk2QCEyMRgUaTszaE4BTuwTT4XUM4jGctomUOQ1R3rBQRQFaPYiY3YyUEMyaGMDUPISY1XDRvLkLroFRR4DS5ciQwTTcsIDSrkDaSMlTM4VRsMFVqD0UD4jUjAGS1M1RJgzcjIVbtk2YIYyXiM2QJwzZ18jY0cET2fGSiYybEYVaucTZ4cySkkyJZsVXKAGVCQWMq.WMXQFZxAyQ3DSZTcUMsojZCM1YFc2a3AyLvEjc1bTS5k1P3EULnUSXSgGSXQERwnEZ1YCaKcCNqj0Y3X2TQ0lTF8TRhYSY4UiYQUGZyPjT54VZ3DUcqvlKFoERqTTUMwzUMMiKYgGUxrTMHEUY0HkZY8DVtXDbLEzbXclP5UzUwsFYK0zXTUENMMTUlIkdl0DMtciVkwVVw7FSG0TSwjTSM4ldvEERMITUybmUOclRqb1ZEMidBsxaXcGRi8jLz4Fb5ETXtjSb2DEMkI0ZtY2TX0TXFESUvTTNlcTU5IyRvrBQz.mdHUDSPkUXBkyTp0jSpMkUxk0MN81PtsTXnMDNpUjUVI1T0oGRm41ZygjQwclYCkja5MzUwoEYFMDSmolPU0TcvEUM0fVTCECcickVRMWYTACLlE2LSISbVIGQpkESyLWaZEUZH0zM0PSLvXVXKAGV2LVPQc1YW4BTKIUYU4VVpUzYEIWMJQWS1r1SYkGVvXjcPw1UlMyJocVPPokYx3RQlw1PsoFa1gTNnMVSkgGRlkka0zDQqLVL27lSv8FYxAGSYIiTnEibMUEZv.2UMYlc2XlUtMWNhoTSuEWQHgjUigCT2nmUDkFZQgCQYEVYIEiLJo0ZYAGdG4VQBo2J3.WSz4TV1cmPlwDcPU2JEgELyDzXYkictkjbKYSQMA0S3oUUzcmTr8jPnEiaFkFNtoEYrQzJ1fzJRYVaxUkcz0Dd3gFa1XUYLYiRsgmMxfzRoQlRVg2YSQFciISUkY2QFQmcQYzcYIjZ5klUk4VT4PGLzj2Ml4FLD4zXznWSCsFSngSaqLGYlk0L3rVdUMTVgM1UxYkP3ECTqPSYmwlL0bySgk1TVcDSXoTUrImV4rzJ2cSbqEyaKITX2oVaw8jMmYiPVojXrkiPzrRd4EidPYEdzHzb4rxMCAiSMQmahMyPtzzQtPTcuIVbqnkLsoDYvoUbKYmU4QWNzjCL4YETz3BRqIVYtYWPrQyaZcVZt3hYl4RTS4BYTkSQq.mT1nUV3sVLtvDTBEEdBQlUnE1amsxPYwFd1nmXTojTn4lTyTUNLI1bv3VR1TWZEcyP3okSM81X1AWPCUiZvP1Ri0FZAQEMxLGLlkDa2.UM5ACVVMFNiIibJAWQvISbIEGdMIGZl81J5clZ3flLMQSclYjRtMmdRAkUEITZJIEcyPiYQMkQKMGR2.2MykyauYWTq3zTXg2btPWXv.yaWcESq7Fdm41JnoFQG8ldxPkLwcya1fWbH4xXvL0UEMibSIGYKYyPxE1QzLWQWYSaMojdOQCSqQ0ME4jM2k1YkwVPzkSMZ8jQWoWNtkVPFIlXCwzUpISUpwFTm81J2vzPyUiSiYmcqIiVIMSPpQiU3HyJMIiLzfTbyglUFckQlYiKPMlMYcDMv4VbFkDYhsDdDcSPoElc5gjLrU0UI4lQnoFdikCNqkFTjUEYrciKiYUTKIkXQMEb0shSPQjQjcCUmgDZrYWY2cUPzvlMqbTdQ8lLoIVRRkWVhYiTUcSVuc0ZkUVdZYDQKM0UHIjUgoUa1AidmAmKkc0PF81P1.WTH8VYTIDYzLTUHUmPD8zLwbTYUo0aiwFavfCNqkULDkGdSMDcvITbvrDTTkkRzEzRwTlY3.STZImMoMldI8zbxgSS3jDbL4TZwzTQtfmLl4BZrAiavQkK4HEbt8lb5kSRno0S18FVDQVZRciL1rhSDYzczTWZM0VVBgiRxgWdhElSxLSSqQ1T5MGQwPVZ1AELxMTd3gidOcmb4PlV3gyJg0Fan4VQoI2c2IlM4USNGMVTFUlKYAUXkg0YWslKhIUSt4zSOIkbHglSxLGMiglcoQUSG0TXDYlY2vlb44jQMACcIYFNuQUTh8DQKQTTMASSBkGdwImckk0P2oWZwkFSJoGboIVRJMmQZgDTvbkYNsTRzk1UZMEaZEkRuczamgSM1kla2LDZhcjTJkjVvQmVuUFQDw1UTcmY2EFVjsFdC4zXnU1U3oGS5EWP1zjKYszZ4D1RLMTP13lMDkGL0HUPYQCNL8zLYklcLQlbvIELVshRHo2arMWVtHkbtgkZK4RRr4jRZYFYqfka2EjRJETa5sVQ0s1QNAWX3AWP5gmPkgyUycicFQSLtAkKxEESvsRQ0w1PyDmV4cmRuwlStQlZOcUXBIjdjISR3jlKHY2Qk4ja4.UXscFa5kmU24xcWk0S3fmQCY0UUkkMUYTXj41PSElVTIkKsMScqnkStrRR1LFdLsTbBEGVpQCbs4RYU4zQZY0LJoTcwLTSzkGTGgzcrIFTRYUPmkEUzEmSQMyQp4BUKckaIg1bHMzbqrFQzbjbVQyU0QFUuIVdXECYLYDNtD0Z3HzYxfUM0HlQHQlYuUDTHklM5cSPjc1RvHDVtIUMyYkcwESY2P2Z1H0XT4RbzYyLK0jXkYSSzITdzoUd08VZOEFY13DaPsjVNYCYskkRHE2R4kmSKQSPHojbAQjbRM1X3L0MHUiYrkGawcSSMYDYLciboYDd4f1TtPWZK81TJcmbwHlXCIyMoIGTZkyYXslc3bDR3biQtzTMjMUP2H2QhYiLMACLA4VSH41UFETXXISbMomakECSqckVOkjRqEDQk4Ddqn2U0TyL5cUZnYEQUYjRtHVQsYjbuM0YX0zS3Y0QvAGcEcSYtzDY0QUaq8DSHAmaB4jLiImV2QEYkQUaEACSjkER1jSSyMETxcSaUAiZ04RajIFNvP0RFYjPPYSSx4xQRwFNoYyLEk2Mv3xRsEmZEoVcxn2cSEUPgcibtImURkENLoEYzbWbWQlQNola4glPZYVRJc2X2PTd33BSkomPzcza3DzL24zYjYyTtr1LRo2QGY2Z1YTP3oUQlo0RiIlMMQjbroGdVQCToQVMyLzRxTkSVolMEo1PAsRSGQVbqfzaoAmRHkTX1ISbQ4VdNcSNvXVZngiKmczQ3fULQ4RSToUY1ITMZIUSgM1QkMGMDckKTIkRM8zb0bCU2MTcwjDR1zFaQQTdYEEb38DLSomTNkCMJoVNXs1aoolSAwFUMIlY0bzLA8DTkwDZIQjdTsxXCokYuUETzPVSvcFTVMTTWcFYDc2PvczYmgSP3ckaXkUXCQkMGMmMtMDVnEiXxDycv.kYy3hLsMUPvEjbOM2PkI0ZDcVX0rFctDzJ4ozXJ4lVqjTZn0TTtAkX4slSVckRAIGSLshagciT3oEdEsBLlkGcgw1YToEZtUCaqgSc1QUdW4DRvLiR1YVM10DVvv1YpUjU3nFavHza4.URUEGTyXDQVMldzjkLRokQgsxb4f1X4ACVrg1UwPjaqcVNvn1bIcDbF8lXlcVXzrFcPIlPBISRGk1MRo2PzY1YpQUP5kycwM2J0UCUggWZqbjQjgjRpYTULQWUFkFdCc2L1ESayn0MDQTXNUzcMgCMScSZw8DdtPyQ0c1YU4jLGkDT0LDLXYFN0cWMUshPMgjMUIlKNQWVWUCaXcyJtUiMXI2TYkTPWITVSMlVLIEV04zREI0XvQGTCEmSGICNSU0JsMkVzQzb0AiVUECYvklQ5gSVvYVRqnjR3Hya4wVQoshPxDCTTcSUXYUbtcjVsQTbso2aNYFM2LWdEQkdDoWQmg2LqzjcS4DZmwDSNEEcHAWRpAEdVASS4Xkbv3jKJQFbsYkX1rTS3glSR8TUPASYBYGYOMFb4zlbPQlVnMlXl0VZlMWMGEVag41ayQDcXE2RIMjRMgyMqn2X2DzQ0PmdoIUUnYjQxk2btw1QqoWRJACVLgVT0gjRiU1L2fSbxLiTTMjUQIySSgmRvMzJIcTUhAWd4EkZqETa2nGUjk2YpAmKGAmRqgiYpkDcsEySOshU5gDRpwjb5MDbwQUcNoUXocENFIjdjszQDEEaoE2RAYSV2fCU2X2ZTASSTQVbqDSRpcERqLyLLQCMRcTX3oUcsYkaUQ0TtHTPpUzLzHUQxXmLLQiM4v1J1D2cvM2a3LGT5UDdUMyJuUlLugCajMyRZwFZLo0a3gEdtMkUOUycWckLJYSZzTFaXolbok0JLMVQTgUM3PTPQoDbKYEZzYFV3XmcFA0X1.CL4DySQYSTWUGZLgkXvj1QwE1PBc1UTw1LioER0cyJWQ1YtfjVOIzJ00zJqzVUTcDQtHmLCkCRTkTSMACSF8jLwwTTTACcJs1RioWMCQVYqQzUtXiaHIDdtHDM3U1ZyQjVwjETisld3sjdXQSYI0jX5wlPNMkLogFYXQ0P03TboESTwHWdy4DSwHySrg0ZDgFUJIkYt4jK03hZKglYmkiX2b2MCEkLwIjMW0jcp0zYLkVMRIyTI4lTqTkMikkTgMWLukzcxU2Q0MFL3LzQIU1YUYlaHgEMEUlUrokLYcFb3XCQykTXIkkSLwVbqglTNE1ZxUSRBEzckIScDozLEI0S1YVU1TDZiI0SXczcyjkQEc2LZsVLvPSR2Y1SqsRMQEjXLsFcAI1cEUDY1nWYo4jLBwDawgWU4I0M0czMqjSLVUkLvszQlolT1giXUgWSM4TLpMkK4IDUY01TOoDZxU0QvgVX3jUawnTZ3IGMCwzUIE1QgAiYxLVc4n0JgoTV3QTMZMmKqLGMikWMBUTargDMNYDLA41PNETYxMUVvIjQAYlaSYTQRUFaKsxQGQFNpE2QzwlSXgGbN0DbvTCcoEmYBkzU1LDbiUTRqrhcMkEbvomRgkCQUISMzPjVAYUSqsVQ0vTS5QFYVckdPEVa5gWX17FNggSRqomYEcVbw7TZto1R0.yJWcjcEgVM2XiPyUjKZoTNvYCMmYVSlg1XVsxXUUTZL8jYHYiMHYCSBgGbuIWaMwDcUU0YosTNukGVIQCZ3.yU3gWU0fia3oUZ0AmPEEmctEVLoYlcmEGQE0jVxUVQZYSVA81LgkyPqvlZDEGUxgSd0XGawbkd1kzUVkENEIEVuIDZlEDQ0vlS2blX5sVcE4FbDIiQy8DMCo2ZsQ1Q3f2PnQjKJ8TbDcEN1TESwjTTGslM4k2LkkkVBkSPRQmZ4IzQtUVPVYkZYY1aDwVM4cGcIolV5gjMq.WbEEWL0oGYvEUSlkWUhUyXyElLqPzMMYkP3DmbLMDUv4zZ2ICV1gDMpQCcT0DaUQjbQsVbugWT2jVNwrzM20FLEcEcIYETrYURvvzUpElQ5IVbTkkckI1cNoUbl4FQwIScp8lSEA0PNgTbOAUP2M2QPMzXkYGZrkSN1XmRR0lcyXVZtQFdB4Vavfid2LkQwT1QZcyaxUyYB8jTxXlVJAGYwgTNAI1REwlPvIiYQIUdLgVc3jCUwPldloUMr8jczwDVyAGa24TcwP2agYya2XkcG8Dav8lY1HkRPkUMr4xUKcDMpISZNgmVYsxJIUCQm8DZFcVYWUkSJgmKosRdNcWLoolKx0TPmYTXIMTSjQ1Q2cScqg2PQYyYJQEbtP2bUwzTvkCbNMScRI1ZoQmQRshXlkjalUUZqgySxM2UD4TN0YUYqUCbsQUU3AybF8jbHMkPmwlTE8ja1IyPgEzXikjVYUmQzTGLtTjVDIGRwXFangGTLkWVWYUbRshT37FcqD2XTEkPiUCLLYCa43BaLgDaDUFLukTSkU0PCQDT24VYpsjTsQTYR8TNZo0a5YWZHIlQh4VSDQmUrIGYtbFdsUyZlEzMtMiTPMzZqsVdyPEQscWVOoVbyEDM2shRjkET3c1REEzJBoGUgAEc4kUPQg0M2EFM2LEMpE0LEgkZmE0P30lQrMmS3fWdqHEa3QjXNsBNngjZMQzStkWXZwTcP4lQFUiUFkzbyfyXWYjaqfiRn0DQnISakQ0bN4TPjAGMqPjVUUjRromavnFSz7VNBg2LxE1XTYFMqEkPqAmbscFSmMyRgszbxP1XKUiZkwVYqcyZnEDcy3DZMUGcNcFUj8lQtUWMuY2LLoUPIAkMYQVapElc3olcYUDR0LkY4UyRYUmamYmLvcEZJcUYOQjKBojRA0lU4cSPOElaXUTRRQTV1nkXz.CSM8TNxn0Yw0zRSQyYRoUYRETSCwjZBMTdCgCdTkEcyjGSQgEcnQSNxTjUyMGdoYiSyLVdvTkXvbVV0nUPZcTUxIzSgMjQgIiSnkCMyjDayckVH8TcuAGQJY0UyYlcQIlRsgEU2UlS3MyLG8jRtblQX8lazfialQjLD8TQns1X5kDLxk0PLgDZYkCQLMGbzYTVZQEa2UmTz.SZTgSS1Umar8lMkIjatQzSiUmcn4RVqLFQnQmU1fmUv4xcjU2YAgjPNIzcvoDRGgjUxrBLmcjYy4TYtTmYvgTQtXSY4QVblwzZ0oEbXECLtnTcJgDUy.2JBU2J3YFNhkWd3EjKEcyTv7TdNY1SAAiSqcGavk1LZUSbBITbvI2Sxf2SCQWPwjDdzTzMWkzUFg0St31Tq4VZoQScPoGQAMjd0IlZtcjZHoDcJ4BYDUlQAoEYpMlP1nWNwv1JyIlKVs1J2LWYykkVvDGcDkELjMiKBgUdqzDZFASMUImaj4TbnETMpk1SkgSZXUmR1M1X0MkMpUWNtjlKrUjLhsVXnIFYpIDUDA0Z081X4UWR1YjbgU2UxbSZRQicsckb3X1UyoWNHshZ2AyPCMGLKcCRiYDd4f1LjcGRrMCQlUVYvYCdjAUR3gjPSIFRZ0FQrUjYwAWMpMGLxnjLCgyU1UCalQjZwYjMgMldmshMEM1cuozTVkUUJMWav3jb43TPz8TakM1c10VaqA2YGUmMs4BN1USRlMmbDQENQwTPV0jUDckRAACL4rBLAoUaxMTYqXTMNUjcyTiRH41THEibiI2LkUyJz4DdXwVbhUmTwMVLRkUS3fiKu0VZmgGbwfGTsoGUL8zTosRLqsxa0EGdQgmRiUSMhk1YtUGVRETYqXCQ4v1QAsRdHEGRQoVa0ciPVgzQBo2SAo1bTYlZPIlQt.UdNQmMr4jMiQmKGomKLA0cQwFZ1QkZ5wDS1UzcE4zYCUkQVA2MLckavHkZKAyZUcGUAAUUokzSv7TPF8TUuQTPuMDL1r1b3HGLNcVd50jdwcVMG4RZpcCToUFYCoVLJITZtslaWk2arwDcBgVUl4DSqT2UHsDcAISMBYkPmsjaX01aukVdjEiKZIlaxHCawsxP1wFdwcGdv4zPGglbiwzc5UGZDEGdWMiRi8VNuszaAQUPLQmSRo2TBgVSBszXuMkSHU1cB4xQTc2L2IUaUYkdPYDdLcGSRYmLzrzT4XGQOgGaSQTXMIzM5cUbR0VZzwzRpYCajQEc2E1cuIzXyYSPFczPt8DMRgTNwoFUtEWYn41ZBEidMIjYiUyQ3rRN1TzTWQESMYSMQgmXRwDMMMkStckcJ4VVxoWZKk0PPYSZTsjUSUmRyASMwACSXITSHgzLMclcTESVBMGSuU1SnsjZxDFQio1avciSyDkXkMUTq71a1g1P43BbnAkaBgUN2IjSBUVSu4hK5sDZxY0JHA0TjQlKyslRVElatM0Mys1SwYyQgshcP4xJ3ImR1ICU13lTg4VTscUZLMzQsQ0RzE2UQckZYkETF0ja23BVxPVVnolYTsFcio1cocjU2jEMGoELOkVcvYkXxEmVrgFQIEkU3sFNsQjRpoUQPAWd4AGYUUUcs4BLrUzcGkUQuUFNBIyUJcEaFIWdwHCSJQCYWM1XosTTwTjMh8DaiQyRosDVNMlSZUzSF0DUkkmLAIiL40VQ0LDZU4VQj8jd3PDdAIldyEmKy4lSVUicMcybvTWPDAiaybGMUQlaDUTPwPSNL8zZSckShA0Xng1JQsDTJUSSoo1JZcmPSkjaBY0Qs01JHoGYIQFYt.mZIYTLuESPlwDSZgGb3wjX3oUbJYTRynTUHU2bugEd5oUcZ01PSozctf0M2YVQvP1bWEja04jX0c0YDEEVwfyYzbUPjIWNAkDZrUTZAYWXiUlLGomXXg2SNw1ZwcFd3wFVwjlZsEWQyjiXQQlSWYSY0LGVrgCMGU0Z23FUvIUVwYGSOcmPDE0aB4zU3TyQrQSS1kiMhQjKU81XvYWYQMmcjojYyLGaFISTxAUcHYiPsE1XGojQ4cyLzjEVLw1cYkSRuIlLxcFM0UyPhYlTsQVYX0FdRIDZRElbU4FbyYUYAQmUMEULxc2bqMVSpgVSxLTY1f1XwP0cqsVdCkCNv8VUjUkMkoEY5I2bKoEd4EiZnE0XL4DLJMidmkSVVQEdI8VNnsBT5YCRMYzJSQCTRsjbtXVMncGdzPSavkEYYgzY1oFLsIzLT8jb2sVQW4zYmQCY2AWMF8VZzDTc37FZQU2bvLDSh4RUuUyShgFZRkWbkYkZ0M1XA01bxPGTMYkYwflThMSQqHCaZYGM1AiR34BMpMCLwX0XGMkX2EmZAQSXTMGY0UDSDI0ZXASZ4QjKxMjLTElKGIVXwMjM3c1UqoFTqH2JzjzY43lcNozXxk2Rw4VLlQVXRwFbgEFT4Lkd3D2awDGbFwTV4QWU0XULnAiPvjSb1vlVEAmSLYFaWYzcZU1Yx.0T1oTbA8DQsoWQXkWL4slSkcycVkUSCMVNtUVRyLzcvAEbUUEcwQiPyTCNuMFYKkCdGcjZUA0cwQTakUDRIISQuQTbjwldTgmcEcmMKUyJtsxXqXkL5EUaoQkUhgVYNUiLSg0bC4za2LTRT8VdgAkcEwTQpgGbNEEYxUlURgEaqQ2bqnFM1fFQXY1c4PEUkg0UA0Tc0n1JwDzPzoFUnkWM3XCcEU0TkkCRQgERmIVYtjkRmg2XikkYJ4TSHcmPvQyc5oFQ3IjMSEVSIIEYwTzTzgUYnMlbXslXXAUdvAmSHozMzbSQlEUQYIWbtMyJAMVT2jSdGoEdykGc17TNvD0J2oFRKYVPUUWPiAmTNIzLPUmMSQiR4UTZ3.EQTgiUCEEcrgkTxkDaWElVKI0YyrjbxLkV1IDcIclYsACLswVR3T1RMkUXnsTaLomUyTkZskSavYzQT4RNFsxUPQiKgoWaU4jc5w1a1gGTTUzTpYScT0jUJQTPyczX0DTXI0jc4oUXKgiQSUUNvgSbvLEcB0lZ0fiawD0Q2YiK0MzbmYmTRckYTQCSxPCVPYiPw.ERHI0ZqQGQngiSDcVSmMzJDEUdp0zQrEmQWoVQZgGUwgWZxIkZNo0bY0lUqXyaxQFcoUkQ08zYCclRjcSatMScWQ1MGY1YlIUdl4xJQQUUyTmMikUV08FNAkUZAYGayEzQ5Q1XoI2ZnMVbLUiKIQDb2nlRT4TMM4DdSgibRcUPGg1cpgmc0XEaIgDMBACU08DZp4hbvEFbYAGcIQUbxoWPKomUxjyZw0DUxcSPrEyZtMVbTIUUZUmU3ACUlAUPCUkMnsDUC8lZJcTSic2UjkEQwUCcTEEcKUjV2PVNgY1a1bjPXMCMx8VX4nkUnEyTSYmQIcVa2T2YuoEQZcDMzQDT2gjYRc0TyXyczfSLVoGTDkFMw7DNZAEZ4.CZvbULNoUb1QESvMSNJwjKZEybW01UtXjMAgWRFgVMRQ2X1cUYYslK1cyMncSdz8jR5c2ajYVZG8FMwf1R3TVPHE0coImc3wjRqoWZ3kyUrgWZxjjdzzjXNwDVq4RQhQmcHICdPYlXyAkciEScRMUMEslKQc0UlkGYUMiLJIyYtXEbT4VYybDQmcGSEgkSwMkZSISQwgWXpElVokiRU0VS2DzJmYGUKMUPDg0bsE2UHsBT1n2aY0jbZshLIYGZEgWQpg1QuU1RvI2MScyXtjiZ1DTMTcTdhEia2zFYD0DaU41azn2awMjSuYmT2UjboYERPolQ2.Gb00VRxrDVSgla44BN0ImYTQSMvX1MFUDVgEzXrgWNqfyUwUFdTcGLY4DM4AyTsYUZTc1PTUGNVQmbocyUToFd4sDa5YlM2Q2Z2kFUv.Wd3cGLybkPKcmdAwDbzjCYwMiR1MSMRgELJEEcQYEb5IiLxnTQmElPCcCStbyZgAmPu0jSX4DTN0Ddxb1aoc2QHECMVA2PoI0Uy8lUTMzLScyMPMGcxLyL0E2PHkiSwXGaK4DdwHTb14BcqQmLvfWbtMyJi4japgWTYc1UCAyRRASTvXzZKokcVQGaGkUZZMFMjQUSnkDLuYUbIc2YC4BbpslR1Q2UGomYAolSGQWazPjUFYWV3MyJm8FL1MkSqnVXwPSPugjZ0YGdlolPzfiSSIEMngCYh8DLikjPScSMvAEc1jla5kSawM0Rjk0SPU1PxbjUosVR28laCEmMQgSar4xSvAUNgQVXVQCb3YjbJ4TPyf0Z2LzUSYicvs1MRYEd0MVT37Fd1QTPosDd2YUbRkEUJkVdmYlUmoVZ2UFR03DNUIGSvMUZHYkYNkCMrMiajMjR5IlRPkkSzYzJycULgIEcpgSZQ8jRIshMBIzc1n0XznTTDMEUFMjPtUyXHQiQs81PLI2RqAGTFgGcRYkcMkDcyomKqTib3XUQXwzPykUNSUjVGkGLzQjSRgVSZ4xRLYWNjMkaxwzJxnVRWUFMIUSZ2ICYTkSM4T0SsMDUuMzbFcDTBYGLzXVXOwzLq3BQSQTXIIjcxjGMlg1Qj8lK1cmdzA2aNIGbpYWbPIFMG8jQOESbzU0auQics0TcZUDThoka4kEL0bmQWs1X17VcY4lcKg2b3gFTLEFarIFSDkCRvEkUDUFSXMlZqbkRroWV1XSSREkdJgjL5cDSCM1bUUkR1QWMtQiZ3DTYwPEQ3YjK4QjTvr1ZXQGRIkGNqQWQwfjR5E0cxjmXrMyPQoFUKcDLLE0QsIjXW8TNvIzRzT0Us8DcLwFYXAyPjsDdSMUbBcGYXEGaN4TPrIFbm4jQi01b381RqQzUsECYZEUbzbDVR4DQHYWXtX2MKk1LRcTU33jVsEVYhkVTxHjV1k0aOIFboUEZtAkSWEFRRkTZzolYqUzZMAyM3E0XSAkUM01UkQVZxIWT3UTPTsVPPkkLDs1SwnFYQw1YYojaOoUR3QmQlASUZUyTPACdFo2LS0FZuomb4blQ43DaO4FSrQUbUY0Z1TEa0ITVNQDUHciU5QUQSISPu0FclUjP3gUd171cDgVNCUFRVIFS5Y1bWgmaxETcVcWY03VU0s1Lo0lVTUya3cjaUoTUJU1UjEjdOIkL34zMkM1aEwFU4XmdVYDM0YUcogFMGgSU1n0aVQzQYQ2MCQSQHgWVwTzU5k2axLmQzTSXlM0XGMUcn0lUBImVtLFMvPmYjIUZ0YEcEECaTgEU4IDdhkyPD01bnMDaAglPhI2RyMEa0bUbIwVNJoDT5cjVqMVcjQyL0wDSGYyY4IVUiESbockZyXkRHoWbogTdwYyPtHWYQUGajgmK03RRDY2L2E1cnklLigVYDQFRCEDZCIkQAITaIMERW0zXgcWPVEEVIQiZVg0bmwFalkmaMcGQwoEUMsVYvLCYKMkKCkGdygTT5I1QvD1c5klT1cSQkQiV3bkPz.WPzblasIiVH0FcrICTx.SLyP2QyIWR2HWbsUiVMQmdhMUXt0TPzkVX4YiTjYGUBg0PxIWMo81aj41XJU0bvzjTGolLRIzc1HEUxIFSqkzUrwjcZQGY2zDSKgDT2HDSn4jPPkTdzHmTs4ld1Q0R0rFS0jWNXMjU3.iMMYTPVkWdDwTaHgyPTYlLso2R3f1QycmR0kUUWEjZFIjLAoGUysFcEczMNQmSFcFMyMUMZcTQHAEQYIVdDUlaJsDZyzFUjkGQwDyQqPjbSMlMjcjalICQpM2JCY1U5Y2QNQUPAQSPOMEYvjjP0sTZtDDZz3Tcyb0bt.UXw3VVwXGcRQyPlwzJznkYwcWYlQ0cQQTMMAiYso0RuYibQkELCUUaB4TPWUDNwL2MhUTRS0VX4b1TC4hKGgDL4IFUZQCYockUVc1aYoUYMcDViMCQ131Q1MjXLYzRw.mRUciKqbSQhsRVjo2ZZAiclIVQLQ1bDMjL1XlbvMDTYwVSSU1LwUTNZ4BRhkUQ3HjYkk0PUsBUmUTL3jCNBgmLr4RPtQWbFEGTyoTUOkkQ1HlcLAWb4fkYwcCTvIWL1c0SM4VPlUGVz3RXTgEaLAiQrAETmw1SY0VUuYmRz8zMPUyaNEiTNEWcnAWMGsxPOE0Y4vjcxcmUnk0UVMlKT8lXJYiYnEDRz8TUznldhokPhYkLQkmM1sjcRQTTzX2cigVdPgycDszYnIGYGACcUoWS1Ukcl8zPyElS30FbNkySvTFMiQjUtUDQNQ0RncDYxrFNkg0ZMEGcrUiVJcDSJY0XzUFdqXjQhMicLICQK4TbTojLrUCcZ41JxIzUyPWLwA0XAkVQEMWLo4TbAYjdz7jLtQiRq.CR3fEY3g2SosVTDYCMI8jVyAURRUmPGU1MzkCTXQVZ2METtUTcPsFQlUSU5cFVMoUXnYiYIgCY2bkYzAWThYyUGsVMM8TQuI2b1PFZ4jEMCkFT27TSyzVPicVcow1JMEyULYFajQFcv3BaWI1XDYiPuk0TwwlblolM43jcQ4BSWYzJSMGRL4jL0wjM1fDZqozajg0PWUiX0kkUlMmXUA0b2cSYEECcSITTpkUbN4lXxgEYmckQvMyU5MCaTcSSwcGcDY1X4XSUMwjL1w1aKc0MYUkXB0FZ3QWdA4jXhIjMAkzRWgCY10jQ2Y1RGYlcJsTPholLGYyM3IGbuQUQ0g2J2PCVjoGNjcCYEAGMzAiXEgFVkImSzrVVqXTLwf2b0rTag4xS14Da0fTXqMFSpEzPCI1cxXTPMASLokzc1wTXycyTV0VMpI2L3vlZQkjY0nTQh4RXUYlPAkiKtfWP4TFYnwVXBkDL4MDdP8TdYcDUIMEdAoWPy.2ZvjFahwlVzYkURUWV5E0RuIVTuclc4gUMvICSCkSYGICat71SIkEVLgSU4HiP0AUXxwTUykEVKM0b4IzToMkc1XVVtQWMkIDR2nVcHUiM2PybzXVdg0TTmEmPi4xLHITdvoERiM1LyjjU1n1MwTzS1omcWwDQDc2ZPwVZg0DQTQCYhIjSHA0Qt0TcQESLwwFL0bCMLI0QGcCVFwVcX8TbUgWcz0Va3bSQZoEcUUiL1glaVcyS2U2R0nlXqA0cWACRp0Va2oDSKIWdn8FQywlLzHWQA8FM0EFbIQSLKoFZE4RTzcSZscVLNsFbwgCSZUibyXEZxozXEwzLCImSjczbh4VazokUE41Q0fkKFMkX24VQ1U1cLETP5YmLmk0RXMTQWokbrgyMNETUNEjQmEUcBMTUKUGVhcUX1fyXEUSYxnEctT2PpIEMNEiTDYVRjMiZkglUjk1ZzUyM1f2JXcUNIYFb0PlaBkVdXETVi0DNUIzaooVcM0jd0zzZ4zDTxYlLqAyYn8FV1TiRogDQZ0jMSQSXIMVdHIlVskSNxsTPyD2Swk0cpcCZYI2blYSUiw1MAc0JUUUQP8DUw0zayE1YZsxYTcmMr4TNK4TaBoDRzrBVTgVZAciTW4zYVs1U1fSV1fVQ4giSyzTXvAER2LDTpUSL1TjL1Dlc2.0Mm8lKPMVYRcGSwcTT4DlTR0FS0A0bmUTRYgSN4QEbXg0S1XEQ2EWLqYVMynGQ5UEYhIlRRIjYwsDYXIWaynVaSk1cE4zT0rjV3UVXzDTL3YCQrElbAQESDkzJng2QHMCbEYmb3kycYACczUlVxHSMnwzZBQjdGUkUzXVbLU2M2gyRrM2Z2HkL4PSN5E1Y0zDMucDY3czYwIiP0bya1k2apA0RzPyLwwTXx4xJyHmbZEVNPQiK4DTbw.2ZgYTV34RSkQDaD8zQ5cSQMQybBg2RmwjMJkzYpo0aqbiXusTXtImLsUjQTYycmYWcyn2YqUTQiMTXREyY4PVVZEidW4zTykDT5c1LUAGNqXjQGgjRhc2MwgVNjkiKx4zcqoTVDojcEkjbWQUPiIVZrIkbkYEMt41bCMlZxLUU0LGSNczP4T2ctbVQI4FM4sRQjUjdAoTM1TjdKImT1kVTzMjcnYUPyPTSmQ2alcDUybWXKg2UkQGY0UERwkCcZkDTVQlaiMjR1XjQpASdIw1bJkDcKkiRuwVaqwDLQoUXyDSMw8jQBYWPlQ0J3cVPMEiXwIzTXIlYqsFYYI0YmcUSTQWM2kTc5IFUlwDQuMCUpUzRhgDbHczSZEENjUTdvjzTAEzToUGU5I2btslUHUmRQcFUO0TUR8lXMUjQWYkd3XSVwDWT5QzYp4DQhkjZso1cFwVNOcTN4oDLlciL1fWdNwFYMkmYmkjPAkmb2IjY4oUTRsVaHUTYgU0Jw3FSRwDaxczcmUzZqnWYYQjY4gESJgzcpMzJvXTZzbVd1TmU5MCVy7TU0wFRW0FajU2M1omRwkGaA4haMQ1JIEzQP4VUwbERPIDRX01YWA0TwDTYtYyauUmd0gFa0TFNyU0b0LSPvrDZlU1avgSSr0zU0MyLNIidqDDTzPFLLoDR20VaKgSV3fFcn4FVZ4jVSUSYtDGSEQlTrElLzYDaMMmXiQmTTsjR1kTb0U2cssVNDsFNIQUREgTRqX2bPUiSrQSZMoWd3U0J1n0X5kCMlgzP3X1Mt8FUGM0U3rBUncTUEQyYFw1TC4lZKMyMxPlSsgWPpclYg81LAETYvv1Yt3lLtEDVCoTPJQVXhcVdJEkRz0Td4jkSscVLUgWcu4TL2oGdqQ1MYkDbRsDL5EWb4EzLW4jLXI1XUkCUCQyRKYyTtDFcQcjX2zVb0slcwUUdtsBTkcCYDgiU03BN1EUdLQyR3XSTScFT1YFaRgTQGAWZVoUTKoEV44lLWokYyUzSKkCNZkzSIUDTZ41RCEUSsETdmISLNo2YtQidvfjZjQ0Zp0DaWMFSAEENlklZCoFMhQFZPE0Jk0DQzYFZhEVUnYjZJcSQFMiZHIjRPEVPyfkdzgWS3QTbUUzQzDCZK4VXNsBdZkDR1YTR3cjMqDVT2.SRXYiPmsBcgkkLrMSYsA0RDYWUt0DUWMEVswFQHIVNGImbtYScYkUdHAiSvIjZxkjYMkVT1XCMzkUZWgVczI2bEIEMXkTQoYiaKElRsIkMzHGYoAkTtTzQEwDaBsxJzPFUrEjTKUmV0wDbxcWMjYWXtXkU2nUdp8zPhYlTZc2SxIVcrQ0RtHTQz3hZ20Db1kVNtkyXCgzUtMFULkSMRAyYRUiUZE1Q2vFQxfWQpk2PCMVbL0zXI0TTt3hMHgEMyTSclEkLpMkUyDmPtH0Ywj2M1n2aLgDZ5omXFUGR10DLpYVSpEjPvACTYQWN0UjZ0MjaFgUSncia0cCRkUiTvQmQxrVbKQic4UFQXYidMojXskVUxMlPD0TL1HDTREFN2Q1b4kCQxc0buwlUxUmSO4xT3k2bsUjUwAUUAsBVkITT2QjTkwlSlgjbtEkUiYFT5AmVkEWRFgiKhEFLMkkSAcVdTUib4cmbCcFSgkTdnQ0UQU2TQkkcSkjQ1HlUNcSNTYUXtXFZ2rhVBIEN1YCZZMEdPIjMlsBavcmdHsRcynkMSwjPh0DbYcyTxDzMvTjMvk0Mp0lVIMyQM8jak0VYIA2YC0jbOY1JDQyPPIiSJMUStDyZtQDT1ElcWEUPtnWQVIjPQM0XoITQD4TbvQyZ0HlUnczY4k1QtMkYXUzJo4FQKQUdS4xXqYWYmEkMGcETLwjcrI0cI0VM3flXhUFQQkmUzDkV4nFM2Y0aqcyLzPlMwMTRpsBVG0jVxI1MtTURqL0PLYmTtXGTAclXLgUMEEkaxfyRLoDbJUkVx81TGsxMkoWTvn1JzoDTZMEZ3QSZU8VNQ4VZhk1QWQCLEM2LSw1UtQiS3jVPksxJo4RQtbGTQoUVL8TPMYlakkSQtPFRy3VciElPvvFNsc0MToFVDcEaY0DLvgiU5oza2UiZqfzb2gWUKYSTw.USDcEYyPkZBUmRvjCNqTmTLs1QKgiMvrzMWg1TSI0Q14TbSIjSNwDTuM1Znw1JCIVNNMDYwnURM4jZMAScMAmRyo0XCM1ZyE1ZAomS2jibggTL3TiYtQWU5QTa4E2LjsTPvbWdEgVY4TGSvD0XTQFblEEM5MENnszY4DTcDY1XLklPrEiKywVXIQTUzEURtwFcKYUQ0T0S3PVYPEGbRAyUgYFZQUjPPkGQ3E1Yy3zYIwVQgEDc1glTxQUQ4rza3gkVO8FYx0lVz.ESqnGL1z1aqUkXYI2R5EESSkzMUQ2PtHybMc1XskSNu4RaR8zL4EiYIoGalQmdgUyPJYyLLYzZlo0YTcFd4TDNmsFcPkFZUkTQxQzUXUSXzXyMikkZ0ozatfCdTsxM0D2QOM0SjwjS0AGVZsRM2ESQwvTQSwFSGI1aMAmauk0SLkjXHgUSyjCQ1YSRynUUqglRhU2ZOoERgkGZjUWRywFRJI1QEICUyICancEZEsDNOUVZokUZVoEZTUDcIMETqbkXgUlRtnEaNY1PsQld0EEVrEyTvEzczU1UC4lLuIGNxDTUPclRLQiYPIVaPg2PFUSNtMzJnklcRoVaLAkZuAWYZkyb4AyLKoTSKQEVyLFLwA0bNE1cxITcxnFVxQkPRISdmAUat7jUvvjdEg1UqQWVTgycME2byMGQXQFVYkUNyEGLGQicHUFV2UmU13hT2jSaXEiLGQ0ZwnlT0HTN2jVU1n0RDojT2D0QvHSSw3TZMU1QW4VLDIkV0X1TzIicGcySC8zQWUVVqo2LyYELm0FYyTUYxbGLpMWSzTibksRcrkCdPQ1QwrTYjsRY2zVcPk0MlsjMvo2MZY2RJojKNUTaz4VVJYES5slQ2Y2XCQiTZQiPsQERhgWXz3TXRslbvwlbyYCYKQWdzf1ZucVX3cVPGUCSKMzY1AyUmYiQzPkLDEkZHMWRXAmPZYVbXozQyfSbDoTSJ01UMglMQEzPPMWRlEGawrBahIVNVkVRtY2J23TTsgzanclPHQ0cJQTaxH2XvvjPkglLiUzQMQzUhUEVqH0YRQTLhsRaGkSPosFb1flPG8VYYcCcxgTXYkEdkgVTLQDS2U0PEkVMUEWdjQGYvozYpYWZ0XTUJAWcjQTLMkzUMc2bN0lTzU0Pvc0RqcDTwfiV4UEQtHCSTMyaAIWR0j0atslXv7lKxPkUzX0JBwlPvo2YpMFRqvDZNMyXvrFLxoTR2A0ZSMSQTkWMIwjSsgyQnIUVV4xUPEEMz7DM2.kQyjmKwHGdFIVMHgjPOIFRDwjT5oldEETZmgDbXolMwgGTzoVcHQEbXUDRCoFMJkkMtgCdIImSiUjT1UmVEcjTosTLYAWUBUldYwlVUIDLig2QZISRzMUZxTEMBQyaoECdrQ2UwT0YKUyQ2HVVholP1IzaqYTPr81cuolTogzSBYlMFU1MXs1RtkTRwb1QjIlYxPVYqMERwIiUEwFLjo0UyTkaKMDLWIlKWshPzM1b0QFcKwjTSkjZZkjTOsRZyPWPEESV3bGboEmQsgjKvLCZmcjVNY0bUcSPxYGaiISVQIGLSo1UNgEUXYEVoYGVNECVos1ZKUEV4L2YMYWP4EDdmUkS5wTbvLSMwUETgIDN1LmSIcEUHETaxI2JMEWQ0YCSzQSSjo2P1Q2Ux3RchU0Rw4hRHsDUyLFRDU2PAolQgclQ4XUMUgCQqnUUM0VNZ0TL4ElVVw1XwEVXpUjQxH2LPIjbToDYuUTSZImdkIlcQIiQNI2PQwDQigUYM4jKukSRAoTSj0jMucyM4QVZEsVMlA0UoEGdmgkYpYlcqbjUJI2SO4DLMMSZPI0QNgzRPIyLicTYNsVQCMSSwoDdWQ2QEsjTwIWNRI0QAgla5UCQ4sBSTQCN5EVRwLCZ5g1RVUGLYkzcSkyJrsBYsUzJFcmKxUjVqbGTwUFT3rTdF0VMAImXkoEMuIjPzI2SHokLSQGVwDVc1jzLs4FTpQ1cTcUUgoVSpITV5I0LUY1P5wzLKEmM3nkZpUyX3gSRF8zaGgjKlQjQIMUaSUibnMySAMFa1EEMt3lKBMWM40VMxnkYroFTpMUbUEScEUFTjM2S3IEcwESdEsTNLIUNJshP5UUN0cTb1o0UWcSRjMFQwkjcXAiawjjMpYGYYEEUtXCUy7jQwoUZso1J0DkUkQmSDYUaHcTS2TFUzMSdDYUXKQ1byPDa3zVXhUUQxozTPUTaKgjR0LGcRokcR8jZnYzbpIiUjEDU2gjLw7zcIo1azQ1ZzwlcGEVaKcCVvDFc2fEdOQ0M2IEN3E1QtHSRxQzbpwDUNQzJsgFZ40jKkUDbL8zQs4FMy8jc37zJRkTVscTY4X0Qyj2Qxv1MtQDTKgUU4XEc1rVc3AWR24xcSsBcBgmUQQkKsUFRIEVZxfCZpQSXyPCSqLmdQc2MHgzJJ4DZqkTYmoGa10VRPM1XBIVQ3c2S4EzUwXmLvHiKSUzcngCVNIEb2QELqIlMY4DY3jmMzEyLSgGT1HzStIScWYUPX4TPnYTQpomPmEUcmUWTkUmTOoTdqXEZmAyazDWclUVZJIDUWEzPIMTRi4TPHAmSi0ValsTNxPmZUUGNLE2R3olaZIDYywzMMsVdAoDawzTQREWMYwTURISZrMiUpwVb3nFZOcCY1o1bCYDL2PmSkklbD8TcoITM4PWQgQFc4XkdNc2TBY1M23DZHg2QxTyPwnTXuMUNJgiZJMzUOAmLRUSPlUWQUkFZ5gUcuczM44Da4UUbrI1JFYkPJgzaDwDLuYjVP8VXxcFV0X0SWozbrE1TqkmYrMjahslXZAWPyMVd0XETpMFQ40DaQImY5QlMTcDN5QGQNcTU2EWYmokTlc2YyDFapYFaIYkKNYCR0HmUKYUZJcULxM1JI0FQ4kUduYzc5oFMJIURnwFYoshYEc2cII0Tyc1XDACM2kEQvbDVS8FL0gCY0cmaF4jQHAmYWcCayfmbSEUVt.2MoETR3UCblcTMLI2XKA0TvI2SRo0Sq3jQEAmck0lMnEGYYgzMyXERhYkbUgFUNMyXVgUQuEFdWUSSRYTS0gmZooTYNglLC8jXsc2c0AiU1XCRI8TaUQzR4XTVjk1PyjlPQQFR1fTcXIGUGciZ0rBS3MkKzLETqzVcjoUVIYUX2ESUvHia5YmYqjEdBElQukUclAkLnwFMuwTVEU1L2UDNsUmURIERJEWUtT0LlUDQksBRPsBcncDdZIzQiUUZ2PENVMTQxEWcpIkUZ4DTLckMBwDNpAWLAkjZAcGLFYiY4jyTUsxZM0VUmkWVvACMIsza0klYZUFdswTRSciTAkCdwrlXBMlZoMFQ1EkblgzcwP2PVA0XxwzYRUkLEciLnIjQo4jUzHUQ3IWVK81SKIjUwD2buAUUsI2MlsTYLYGNU4BS2kDd20VXXIUYOcmS2sBQpcSXZgTSpwjQ0nlK2.ES1jTcL4VLK4Bd5cyRjASY1T0TuUCVAMiUM4Fao8TXkUUUPsRR3IDUKwFS1MzclUSSKIjQGEUcAMlbFkzYv.WXVkUbRQUb33BU3P0cooVNqfUXzXzaWIyQUo0RwUUT3I1UtDmTw4FauYkckUUaNYSbXkWatkiQ3g1MVcWZ47DV0YzY4LVRzbETjojKKQiM4.2aYckM2DmLzL0aqoTMWQ0a2gFNHIWdMsFRZkyX4LychsFNzPSavMmZrcjZ5MUPCg0JGgySTcVR4fUYB8TNhsFNWYUbEIWXQQkLIYFQrw1YvD0JEcSP0EGVzIVQQgSc2fkLVIGVYYWM18jVtQSSvvjUt.SU2r1bokTPpkjTOU0PvLzRiUiY1IjTIQVXCo1cUoTdF0lPUAUVwUlRQMiU1EmXNAyTywlTYcVNToFY5ozMqbzSxQmSLQGMXg1RJMibkUlLOsjMMwzUxUzZUUiazLSaJwVXlozXBIFRjolLFIEUzbFQXoUVpUCTAglLqAyQgwzb2EmSMIzYYcyZzszMSo0XNgjd2g0U1Tkc3PVNEcWSKs1crgiQxgyYqgWYBASRQshYOgUbJoVZkMWY3TCdR0zSKE0S5UDQR8zLEIFVx3hTxb1JBsBarQFMFMyPwjEUZESRgUEL08zLvIyZt4Fapg2Mg0zZtMWMP0lUZAiL2kyMNgyQm4zYSolLIYlajEGLSM1Xk4jV1MicuUGZw3BMGUUMEIjVSsRShYFdDMWcCg0UC8lQQEDaBwjcDoTPGoUUIMjYYIGUCclQoAkUKMFdCM2UgQSLRQ2b2r1Ugc2QLUmSO0Ta1TWdWMCQ00TdogjVWwTcTgWSK01M4b2Qpg1ZpoGatEmS0TVVIYGSMgCLMMicSIEdDcVN3PEbIoUNnAUQn0zJPgiUsITVqYzczbyJ0M0cjQiXIcVRZ4hVsEFTPIWRSk2TnkyRnYkLHIkVhkSMvcCRvE2T4QDNC8jbyoVQucmZAklRUY1QqUTM1cSZvHFaNMUZO4BaIciMsEmc5A0cnAWS0HFUyPGNxflaGsFTl4BV1cidqYCc5QkMjgzX3g1YyHlLwU1RDokLUkUVyDyUjYmLwrRTV8FTXgCLKITa3HGLDcma3nULuEGNikDZyvDYEcUSKEkM4XWSGc0PGYlP5AmVxDkMvYlcHokMRcVVvoGNzHmPvDUPEgTNhciPBolPW8lMJoDL4LkURUCbMwVUwbUQ3cSLPwFL5kVPEg2bYwlXrUVRQIDQmIGTZoGa4TzRXkzMxXENkU2ZUMEdvgyJz.EQFImTY8FcysjSWUVdyfiUgwzcYQlSVcSZkYDLrcFdhYybQkzQoQTZsIEZ2gzTxcDMiETTA4hdwfjUvwVcwr1L4sBMUUTXwYyT4EjUFsRZ0.mRwnlQ041ROMVTq7DbwE0RQEWSRAWTqrTXWQDdLozcMMlViMmVlY0bU0FVKQSYXojYQkDVLMVMu4BUnoWS3slL2QWLyQmXI4zM1LkdDsBUUESahAWbxwVQPkGTv7VRjMSYhkTPjASYAQiQ4jVP2k0T3ACchAkRzbVPlUlUU4DSqo2USoEd0HzcHIGTGgzTJACZGgWX2bzZRUTLyPiMzQmXxfyJzIGVhkCUGMmLpcUbsYmdxElMoE0TPIEd4UkV0LDaz8lQy8TNyzFdQ4hZzPDchwDQmk2a44Bb0szPj81JkQGRzTEMrM1MBEDLh8VUZsVZVgiXuozUgMSP3YkZpMVZWokSAQFL4AGbyLWXkU0TCMlUYUTVzYSZqMUT5kiLzDlRlQjKIE0aRcyRxjGQjACLwTUdAslYvkEd2ITZoECS4gVShQDUCwlROwVYZUzUwYFbSY2YmkjVRkWR2HETLM0Y1MWLpQjVxEiaMQ1a40VdSIlUUQjKHg2YrkWV3w1ZT0lS1LFQPU1cHQkZEYjY3jSLWY2PwTGd4HDM441SqnzZyXSRlcyUHQzQ0YzRgYyQuU2PDAiS4USaYEUSpkCYxHldoQETuYSQ2DETsMFawYUbIgWb3MDY2DUbEYySSIFZXMTa07jQDYDRAcVUYM2cwXTNqLFT4QVaJY0JQMzQNEURmMUUsEFdLomdLoDMwjDNikTawIESAY2JnUCYykTRu81JzgzbAY2QyUiQZcCTMgmKtvTNvjmTEwTXSYEUtomPLMGS4.EVigkQGEUNFMGM5c0MvDCaDYSYB8jUDUDLGYVbWgjXXs1LuMzctTGMrgSMvckVPYiQEcEaKQVNl8TQ1QiYgY1XIIjaso0SIcjM3fiUyP0PDE0bwM0YxgUYOEUQh4VMAglUkcTLwIVUZk0PNgCcIY0LtgUbqf1Qw8VQQcCaLUTQK4lYw.2Z3oVZrMSXjM2JSUjSjkyatzVPYg1TUsDczM0a47jT3gFQ3E0RX4TStcTcREmdgQjaBYFQtMFTMgSdxn0XtISSq.UY4YCbFgWVnYEV2QSd2UGNTQ0LIITaxUjZj8jVJwDV1IkYRgkU5MEUI8jT3nkR1vVcgAicpA0ZWMiSVICR5Q1YUkFbgYFVRIVaygySFoWavXTdwMDSKs1J2E2aNoULAEWL1LiKwA2cJoGMtT0RQMCSKcEa3omcqMyRNUWTtMzXwEkPsEjaR8FY3PWZ5IiXvQTX0PDNVIVLqQFdIcmUggiYxDlXHQCdwgzLnEFaVEjdzLERZIDSmEmQvISUqkVUjYEc1MGbwcSdgQlXxoUMDgScwgGdMsDN1zVSyb2P1EScyfGbnESTPYkX1TiPDoUXzg1RCE1MwUSLpMWaY4BNoM1PvESX0UiRscUUHkzbNQ1T1rhZyvDN4ESNUc1JMcWXC0TX2HSXmkFcBYEYvYWSCEkYsEWNyTkUroGLwslQYgkRmYWUho0JnQjVu8FUzTGVrwVaJkFSxPTd5IlLFE2YTIENgYTSQICNAYWPXMySx0jU2nTdYMDRmomaSICS5IWNCMkY1LDVA41anM1YwnUQhUTa3DzYhIWLpsFUC8jP1f0UMIidzQEd0LWZ4QmK4kDZvH0btYmVlAmQ34zUHE2asgyS2M0LvHUbHclRTECREA2PMsjSgUTZmYWUvbTbvzjMGUULYYGNZEWdZETZzfEUYEiRgcjPP4BNP4VXqwDa1METq4jZiUCbWU1Q1nkZrUCVUk2Y4QkTkUWNQU2R0UiSNUTMxciZBM2Y0L2Tx4hS2fyXqvlYAgyYuwlcgASaIMjYG8DMzoWM30TbxQVZ4zlTwAmcsMlVGg0XhMUXqEDQkYVQLM2SSIDQJYmTKkWM2HCSLk2PlIWY3rTXjkFVwAWZ2o2YZ8FSsUDayDDU2jmKjQ0P2XmMVUTb1U2bHwlLTImVs0FL1PSQwQGUyH0c1QyQ2MSV3U0XEAWS0IyS4T0THYEcsgFQiUlU4YjZFY1bUIETiQ2TG0TavfUSKYEcqXUMjIVRhgTdMQldxQkd1jCVswjLFQVdKg0XHokaFE1UtTySTETTmY0c3wjPqE1cQMkTgoVPKsVTo4xLyU2aFI0SwblUQg1ZOU0YW8DS0ImLZIjbxLySEUmM0gkSy8DYUcFVkcyZt.iSwcTaqAScUomdYMSSz3Fc0nkKCMGRM0DTHYzQZE0TBcVcGgmKpUzcwkyRWQkVSY1bBEkdTUCSYgFVyY1LqzjVogUPKEzLGEWY03DbtQEMAYzXAk1c03jPPkUdNICQEY2LWkmcg8lTLYUZWQGL14TMO0TPq4xJ1D0SHYiX2kyaxfGdUIDL2gkZGECLk8lXO4DVuokdnkVanQUT2zDMq.kTUsjUn4zZQ4VPqbiLxU1bNQ0Ry7FLsYUX2bSN1EzS5c2SyUkSKQjaUE2cpUEUznTcqclVHcVc0Lzb2LDavrzSiMUU0EmMBMjcAgkSPIWZ0QWLMokc3UVQzPjducWau01SqnUXq4TMxglbQIzRqLDYXA0M1sTLZEkX2HmZ0IlcRQlXnYCULgUNqICVt4Bd3n1QzgiXEIicpoFbgYkdTAWQJ8FTrMkYR0VXQcCNVszTmgGNugzZS4FSSslSXY1MMcDZHs1UwYEYj8VZ0ElYnIyPREGRmEGUPc1Ywk2aGUSQxgyRwTlS1MiX3IGMAIEb241MzEGdsETYXczL13zXjUENqImTqs1JkcENAI2a1vTQA0lXyMGRpI0MKQEVAg0TjMGZ4UidqvjS2UmP1UzXtkUawPESiAyZDoVNzkWLzzVaSY0S2sxX5klQisTXgEFVv4TapMSayXmQAkkQmcTZNcCNTcTXnwzXqcGU0XTRtoFaskVNxUmS0EiTlomMuMmbn41X2X2YwL2Y2M2PzE2awHGUToDNyEGcVImbYM0TVcGZhUkM1Q1bwUUdVckKwvjcWwTXJomcP4RUHYFQwT0QYcUX2PkYEY1RhIWPrMiUng2cAclbMcCLnQmRtMyZpcDS3fSVtnzc5EFZMUTZ5UyZyQSLkMzX4n1UxolPEMzPPgWTLUyZqrDZJoWR54lKHcSL3MkYh4hMVUyYXsxZMQkTikkLtHyJMQiZUgDRHkiKnsRQiYyb1UCLBQEatHVMrYGVBQUNCU1aqv1MSckVFU0PmIzMF4DVOUkREYTSOcUaRASVmMWShgUaM4xJVQiRSAUNCgSNvoWdA0lRpMTTTsVTJEVLSYiP2blMS4hdSMmaigkM1EUNp41a3.iPOYELgg1Rj8DY2QVZocWVvwFR2MCNJ4RS5sVYqgmdEojbJgCYpsVRlc1Q4cDctjkMiIGbDUDYjUlXPEGMNAkVwIDSGwDMAsFSvHDVrcTYkMWT4U2M2XFYXYEUB8zJjI2LCMVZwv1XsU1XJIWQAUlT5YGL2rBQRYjVjEkPxPiavElUAMkYIMjXvb1RRgCVEcyaCcmQZIzJUMjMtTTdt3lKvMTXJUjSik1azgWXuoWY1XkPkAiXxjVNvEmayb2MMMEcQAiVzrxcxshTRoTRHU1ZXUlTlgkVzMGZ0QSRikDVyYmSq7Fck4BY1QCbmY1b2kDaJY1RXo1bYMEdqkCbwA0XYIlckACYOg0PzwjdDgWU1TUc4Ilc00zLXU0ZOUVdB41YxMGQkQzU2sRQq0VaVgEaqMTQ1oEc04VSzE2bzEiUqD2aCokTzDiP3w1Mv8lXvbTLq8jS1okS44Vdhk0RZIFd0XUSCgTQrMVNuI2YPUUMsYWVDEiQHUGdY0FUhYVP1rBLjwFSZIESFMiLh81Z1jlcywzUCkjcJElU3PiK1U0PO0Va0QjTTMUZmo0J1UTVzE0QI4VZCEUQOU2MlIVUUITd1kVNmYEZUczQZMCN2v1LEMWUKMiUMoWbjgVSoMVRB8zPNojUHgWLJEjbAQkQMgmMNITTyICNqnkYtPCRncDRVckR20lR5oUaWMkYmMmb3cEdXMkQCcyXQUVLHYlXiYUdyDiMJcUQiUmLUUkV1jiZPQyX3cCNskEZyHicmYzYsMiKrEkPmo1POwTb33FTxESRQkzJxjFNuckQzDlXscjS3MCLnACR5olZwzlXxUmRHQzbzfERSsVbXUERDIEZRwVd0bUSokGRTM0T2PTLD4DLsMjP4vTd0XyY3jjaXcCQg0TPjcjT3XiLLgiagcGZREVc2PWSY4FRr4jb0vFT2cyXhUkLPcGVQMCVPEEbtXic2PmV2nmd0jmPvbFZwH0U4QCMqbVPxAkY1w1TmImUusVb0HCTooDVRcVdHcFSqAmXAwTMj8zZlkTYNkidtEULTIGUtAmVGkTT5olYmkkYvTycT8DMwYDN4rBTFwTVrkjTt7FMjE2MKo2XEgFR2rRXoQTTnQmcW8zZxzTS2IlLv4zb4zjdIwzLzg0Ri8FdOkTLVU2YTozQ4cDRUIUSK8FShQVclkEUmYmPHEyck4xQikGN13DaugzcEI0XznlZ1PVLp4BVHEDYkM1Stc0UOwjMUMjK3YVcjYVSCg1JUkDZLMWVxYSdU4RXnYFYl0jdPMTPBc2PVI1TJQiV4LEQCI0PjsBN2EmX4rBSCQzJ0sRcYIkbIc1UWESciYTUmkCdTIzPIgDUAgUSSYVZVYjYiIzRg0VVQUWQMgzL4YWM4gibW8Tb2rzUCYEblojbUUlTzDCQVcyT0X2bpYUcuUSSS0FcQg2M4.mdjEiUHQWUwMySigFL4fkdgc0bSUCS1g2Rn8lS33xbYgmSJ4Vb14zPsIlVyX2cBITRuEFTHYkLHQjKJc2RzH2axrTXloUVOMiYLwjT5kTYVkzbyIFVksDTjESUggGTqTFTrQFTgE0MCkmQysRUDkEYSg1LK4VQ28FYSImbyLiUtnEMpsjUiE1LrQVYgkGdIECct4hR5ckTSQCMSQEQ0A0ax0DMxM2U3E1QnsRdyLCVrAiYtDTXQM2YssjaqT2MqEUZho0cDIjMVc1LI0DLxLSQ4gWNZIlXNMmPK0FT0LSTSQmKDMWaWImXyfkbwnUUqTUR4QTalMTYGcDLlYTb4YUbqoUZDgCZ0LCbFgzQZAkdWgyLGQTPCIGM2LTUBUFdzfTU3IENw8VL3MycMEkTHYiTxT1bMQmdwITYicFMtYzbnkidQUmcKclbMYzRx4RVt4zctTVUN0lapQkQBcTMUgzLB8DaPUlXyPGYlolQwkiPYgER1YzMo4TQ0rTc5IkQ30TSsshLqITQuI1Zz0jM3PkarkyM3k2PwHCUQQUbqrhT2YUQqwzZI41JtsTXAcWQTASXtbGUpsxJmU1SmcyPIA0TEAiQSEWMDQWMrYyYOElTx3hQ4njT1c2LwIkTgEGQUoTMynDUmMWVi8jatcFLt7DdoYiYtz1JqfjYKEEVjc1a3MjPwDyJVESYLUWUFoFby3RVicybko1ZznkQTYWaXEGUgokLGUjUX8DUtAyPYI0MF0jQFckX2TCYZI1TtTTNMcFTQkVYCITdTgFLYYDVuQEa1gkStckZO01LsQSMp0FQRQjYpIWQ4TTV2AyaG81XlgFdREUP4XCb4YyZIY1QvcGQzQid2szLyolMyY2S4gmKyTSQPcCL4UCNgoEbx8jVUo1MWEUd2omXN4jMXMVQPElSQAiPKISQtYiTqrBcHEkKFEDd1bzL04BdOEmRwH2TxjzP4LjRA4FUUMWNLYmULEkXRIjPZYDZ44DVBQSXmokTyL2bkImYUklLIc2TGkkViMSaFQjV3LCYnY1b0fWazjid2TjXv4RasEjcSMTZnMWPmc1RvXybyfWcwsFVHcla1M2btTDMkwVNT4zMAUzJlsRQjQUTOUEUJcWV0kzJycEatjUMwX1QPcSTYw1XNoTc4D2MNYDcB4RZwI0aOcCVCAkcqzFd08lKvfUPlgFLhAUY04DVQMVb1nFYMg0TvQmSLshckQFZ3fDSvLULSQmU4nlPIwld08Vc4rjb47FTX8lZ3MjK54VdLM2XiYGRhokY3QmSPw1bxHELO4hSAsVY0.2brYSRHYGbxDTVmwlTxMSQt8ldKIjZvXkUnE0bt4xTLQzUi4FQxHyPEEFT1AUYT8zMWkzPyMVbuMlSsUmSBshTx0DLIcSYOkWMWkjSqASXg4Ba37TQJ0TRgwlTEACcBokXOcWd2wzXtLTNSMiQJ4jXx8VRigSd0MmPyPkPyQWQGIiK2jWXwzDayz1Q1USb3XGRicGVlsRdy3DQY4FRWg0aIsjdJ01TUoTRyQGdLgFZPIEdvbWQNQ2Y4ASdtUlZAkDb2glazbTa3XTS4.CMUk1UKk2J0kzM1HFLjcVQE4RR5MCbqEVMKYla18jQk0zY0I0JL0lX2Iya1cjPnQyMmolTogzJ3PDTxkid10TcCQjS48TR4kjZyTyYM0jXvfmctfjd0PFd4b1THkSUxQlbNkFNFQWaWs1J2MCUYYjKkUjR3QTXtvTQOYGVL4FNTQyQGIzLsYEYRICaMIWV1oDV2jEaPsRYqfFRBUCc3.yU0TWa3gCUHI1QHU1LDE0XZYGLrolcsElbRUjZnUmTvv1UoIFZuolXkEjXwL2P0k1So8TcsUCcD01c2kTZxbWNusRd5YTLVkUX3E2cHwVcwQiUTYjXRI2RvblUMIiTOM2SiU1YPMVZsACTybScIEUVIYzLzcEbmM0bwrzZM8TSJk1XNMmXvMmZ2cmPpcDRII1XiclMKYzchUWdvbWPDoDavEVYxc0TZcDcUcVZ4EmU3HVLNkkVlUybucEawH2bE8TN5YlczvDSmolQ5AkdoojUHU0SOcyZXokRxAUVGkSXkIVcmgFd2DSVQwzLEUzYxwjR07DLE4BcrozXJY2azkkS3ICSxgjXW0zRG0VMjE0b2oDMpASL33VdBcESxEjc5omMLczXxf2JjYDYrkERsAEVkQ0cT8zcu8jbA4zLnIUUx3BYzc2JWEWav8VMAIkQQUSPVkyMnkSdxE1aSQmKvPEUVkiTn4BSJgzPgc1QIkFYvfmXgs1cHsjU2TiSkU1YAM0L3UiQEgUPqYyb1XEVjc1Tsk1RFAmTZ4TVsEkbtbGSMQWa1nWNSQWdJIGdDMGZ1UiVmgCVT0DbTw1ZJAkKGglcmcWYFYzc54DSEgmK07TbqUUaiwzSGoETMESLVUyJvfya3njQnUDTqLCZ1UELFI2PnAkYqIGY5E1TPUUXDoGavYUYtTEbOQWZYgTUtjmPLIiVDc2JDYjLl4TSRETNMUVYscUPFYlTII2SJYlREYUZ4wjbGcjKCkWaukUUmASZXIjLlUzXP0TMRcTdT8VRAMEU0n2Q4fESyP0JNYWSqnVVMAUZWszPFE1JyH2UT0TQxYCc3U0Y0n0ThMVMM4TNgQ2TlkmbqTSUhIVV0P1bMQkSDY0MU0lcYsRPyHFY3IGazoUTCk0ay3xPxLWP4AmalU0LYwlYYIycjM2PZMEbOgUS5UTQFE0SMQjRqkDTyTESsIFdJAiXR4jVZAmahkibxgiMwYUXJ0DbEEESuQVMDEVQKQDdJUmTUgmLwsBYxPjMCMySQk2Umk2S0LVTyn0MKYVRxHEYskyMUMUXu0VYlwFVicWVIwjbjMjRRsDUZ0DQzbFaWI2Tow1T4jWVtsVRvPTZPcWVGAWMzkkdYYmUyDUaC4xJPA0Up0lP3T2L4EGR44DR1.CdRshYrwzUhUSQzrzJNMWaFIlbKcDcKgFdXgFRDgTXGsDZngTRX8TcWU0QhsTZXgUVtHmaVU1c5EWMJQFMikyJBMDTxL0JogzQ1z1c4wjdA4lL1rhMtP0MYA0UUIGLLU0JH0FZ2gFaqciVrEWMnsBMLgmaWcldWM2LV8zUlEFLkUTT1bUXIkiT3TWXrgVMx.UZ4E2Pt7jQMAkUlQSSUgyM1.UXBsDL07VR3IybtDiKqzzTMIGSqPUTvnWXxolZxTGaPQlK5IkQ0sVQvXFQSoGNOYlVsEWRwUSbHUUYvsDY0QjSWQSQY81Jr4TPLEyTynULUYjMIUENyg0JsgVavXmPYMmSAUCNYUmaToUaUcmLvHVZqbGVFIDb2wTZqcmSRk0POkEYtHzatgzZwXVLqkkLBMTQ2YjL0clZFIWTnUjTZkmbtX1alMkTqozUG8lXg4TLsUFQKMWdPgiVyDGNyElR13DZHclT10jMhUSVsUWRYEDZx7TMtkiKVcCRSkkXyX1MloEM4gCNOciKlQjMlImKp8zRMY1cUsFbEEyPqzlQhcmS0QzTmoVdq71cR8TSHIlLEAiV0DlPrAUNWMmMlciSJQjULMmTqUTUXAmcngWdQoDLqbCc1EFShE1PBMGRRkTcMkERjkURBgWRB41ct3VdL4RVZQ1Lhc2L1MyY1oTU44DYQk1QngiK1E1S5QFUS4lTwAWMqnDVyzjawrBczshXuwTQvbDaXQjXD4VbxrRNHgSP5UCRQcmMt3BVLgFTvrDbrMlbqEGYXUVVhgWamIGU0rhZtQVV2D2Z1nUPLczMx4BczY2bkkmdx71J2byZBU0JYgGcTAmQjsjSHIUau4xMscGdroWaHolU0EWPpUFYxPmbkMTb3ETNv3jSmwFZtQlKHQTYhIiaGUzTqIGaJgDMtTlYAQjSVw1QuMGUxckQM4TStQFVuQCZQIlUoY2aAglSCYGUtnVUYUURgUiKPIFVUkmaj4xYC0VP3fVZhACbUk0Zzc0S0klbCk2PWgTYtUDdu4jaJUWQhEiLPITXAsBSFkUaRkjUpYFSzo0cGAST3wTMwsVLvgkT1zjTtrRakckchQWYGE2RVYyPwIGUscCa4EFQQISLC8DRlElLgs1MUgSXIgVYxH1TUQ2UzQlQ3nGYtgzcZAEcUYTLmMUTI4lctc1XFYlM4rVLgQmKMkDTVg0Y1ASN3YSQWUlUh8VYZoFazD1TvgWTZ8VXjI0L3jGcFkTb0oFc0k0aEQzcUASNE8lQnQDNNsFQ3cGZ2sFQp8TLUIFbLM0MV0DVrk2ZGQWQkgybzUmZsQDTtIDNuAmQOkDZjYTVmE0MQ8lXhYEVvoWdCIjUzISZ3ozbFgSL3DERhElSxbFTuMlcEszZRQ1RlA0QSckdrMjcHcFYMEFVDUkTxoGLUYFTVQWSjQzYY0FcjMiZT0lR4nGRXEGLynFRBEjQNcEbooGaTkTXgolRqrzZwUiK2fSX2jzRlIzaOYTP0fTZvcWTvwjdwzjYD8lXsUCU0jUPwjiT1IiTxU2XZUyM4DiYkgyTokTbHolLWAWLG4lVNckKlMVPH4FMoMzPHoDQ3ECbTI2UJgWd371MNI1Zk41SxQGTys1JvPkaWAkPDYiRHcFTzYiQMITchEUQzgEcncDZPsVQ0gFcmMyLxLlYHYSVYQVa4AkZAkCQPcWSxIFVvoUdugzR301brI2Jhc2UhAWNSkDL5wjPgI1cpQkdRgDLlcjRsslL3oWV2UjPhMmTtc1SGUSRuciQzX2Png2UyH1c231T1o0PPQiZHM1aUYmahomd5ISc2jTRPUVQ5YDVtgiRSQ2b47FSQkiXFcTUTsVVsUjRmICLZYEarkWQqYkMBs1UzP0MMI0SVU0JqblRLYGYF4TYpEjRwglVIMibtgELx7DLtUmPZMSSwrBTEoTTDU2a4kDQBY0c3fSYXczPDMTQvICZPcGQ2czJKMWaggTd2IlSYIkMzcyYTIlKAYDTho0ZFkSU0XGZyUmUH8Vaz7TMxg1M3cGS4DkdsYUcuAyXLEVYgIUXzQySvYiKCkmS3MGLI0zX1EFNOkESpo1Y4IUbXQkaxfELKo0QBEVNLcVPkEWQIQjb0.kKwEUXNITXZkCYSESRSAiYZIGQNYDRZYCMxAyUnshXC0zZzECMSMGLNQENuglbJMVL2DWT0TWQMkCTMsVYuQGTjkWXmY1LLcUPJoWRPQELxb2YvcEcwfTcwb0TyUDd3n1XU41JO4RNvPlaJE2RhM2RvIFSUcELG0lSxgTRSMDVT41XpEFZpo2bkY2TMgiVKYiVBUFd0jSV2rFZDUjU4QkPwPzS4EmYHEDUtMFNSEmYEEmRPQjaQoWbrszTLUEbDU2cEgVX0b2alETRWYlKXMiZx.GLKc2LwoUSXwVb1sTQ4ojZkoGYBg0PSgmdSUiawQDMQ4xQr8jc2IUQvrVaJkmUpcGcQQmRDUiZvzzURwjRQkkaWIDZxElQXQiUogWZ4.0JncETssBcRIVUVsFUAE0TNElP2bGRDMVZRE0azrjZMszYwckXTkyUAg1bEQ2T1EiLQMFLEUlXiQjLVkzazzVSRYSS0sFQJQTQwT2ciIVUtYTTQMUaJ0jYBMkdZMSbpokZLc1YrQDToMlUxnFbrEVXVoWQA0VS5I0bwUjQ3QkTWA0SksjTscUPvDzXoU1bsIzSwsTUukmbZIDVMIiS0wzYkcyYEcSXqfiTCsxPCwlcsMVQtkWbqjGRMAUZsMSa3QFMtXFR0rVb4gjVwfzZpUCZY4RNzMkKNsVdrYjauk2Uw7VTN8lR0bldFMzc0kyPXsVL0UGb2U1XNckZlgWL4rRRKAkZF4lc0v1MTMyXZIjLHkUXEoUQZk2PMkkK3wlSzQ2Rzn1bsklbHc0QmMWUNQjc0TyTLomUQcGS2jzQlglLuMGRZYUauwjYushaUMST1DidqMjRjYzaXQCSj8zXRYWdtrBcHgyPiA2b3LzXq8lSkQ2LHQWViIkUGQ1L1D2SvcTTzgmLDIDVh0TUtcjSzDSPPUmRm01RpUWTQcVM2kDQEACaGozMXAmVNQEUUYzMqY2RKYkLwQCLH81bz7zMCUyRDISTxDzLXUEaVEESqEWcrcFVz0TLlgVXqT1ToYDLtsVRUY1SvoFM1H1MCgUMGMUQSImRsIyP0k1MukDZMkUVTU0J0kFNqnzXEIlPDYEa4gjLuITUqnDMVE0aEYGTOQWdhIDYVkWUvAUPCoTaF0lPHQFSgsRamEkYycmZ0ElRTwTN4wzLjUyJHMjcngmPZQ0S3YFT0.SR5wVYKkUQWEWQmIiS1X1RWkGZCgCQyPiXqbjTNASQtQCU0EURKMkdtTicqIWX2.kMtQjUUMCUsMyP0QzXMIGTJUyRvMyTHYVbkIkM3wjSBcmT4TkKLMjZuAELY0Dd4nENqUDQuc1YnMTYXshKhEzUMY1MBcjPsUlLu0jPmE1ZFU2cOcSaY8FLE81RwEyTVUSPMkCSzTFVwkyJqT2TTQ2YOUjXCgibGslM3clQTojVMImUSMkTuUmQtgVX3MlYOYjU2f2RAIzX1AEVwXmPnQSTQczSlk1TsMFN4PUVyzFN3sBYJY1YmcFb4jCNqQzJ3f1JAMTZNUVdTsBVwTkY04FVtj0LOozRoEUMwr1T04FLNkyRH4ldCYGZ3wDVi4zRMsxQZEjKicETpQEdEIyMBolThk0JrgVdH0VLXU1XPkWUwbVNSI0QzY1X1I0Pn8lXxYVR2Uzbsgyap4za1QUNjIkcn8zPlkjYug0SwrFMtElX2DFSn0jKWQjVScULs0TYWwVU0DmRtD2bOkjZxcVZw4BSuYjdykyaKg2aigkXMUVYMMlXOIEL0kVdkkES4nDMF4xQuIlQiIDQzP1Z2fVVQUjP2kjd4wVSi0DN1vDMyT2XrslaJElZyjTTrkDRIcTTAclL28VcN0FUVMTbOcGbO8VdtE2RpQzLx4Vdy7TMKsVV10DLKc1UkgCcmY0Z5AEYRgSTzvFUIEjPyjVX2oFdPkTLvYVU1UUTzTGSWQ0cuQWRqkSPLQiPyf2X1XDLFkjUZYSYBQULxMzYuo2cSkiKkEicVITdWMVZ1DiQwbGN30DLBUmQvPVPw.0a0IzPyf1MZYyLHglStIUaSQjZvICdHgTRFkGd07jPQQkZVQGM3sxXE8lUCYyS1jCRCYSNnE1LykCVHQmayYmUtA0QvEyXYgGTGU1bFIDQSYyJxg1LMUUYvblTrcSb2AmTvHjZPwFLO8FQ3QFVXYFUFIEbqb0ZxYUcV0Fc4o1RnIGLogkR1XkavUCRsokY1PUUvQVVo4TVn0Tb0HWYuUlPQwjTFojTtfTX24DSqHELEo1ZjkmPJcTblciVQkWPqclUlkkXl4TLZU0bscidOsxLqLzbgcUPoYmRgUyRuEWchgldx3xSHYSMvIlK4kiXAYyXEwzQwc2RDAUNMYVbxY0RjQkRBIlQz.kYFYkSgYTQ3wVRIkFd1UVbzMFNPQTX1jUdlYUbDgjS1EWa2gGSW0VRxcSNpojPUcjSoMDNPACLncVNQszL4vVRvcEcqj1XiMCM3YVLGUmdqgFT2YVPzcjUwMFZsETUZEkaU4TNQolPq4lTGI2RoIDb2jTNS4RZX4zU5gmKj81PIMlShwFLVASSWA2aIETb2A0MMMjbqfGTxvVMUsDb2TDSzLDdKMkbUolPGcyX0kmagkzMwwjdtjiZhc1aGMzLsYTM4MCU4kDVqIiczTSYMIVU2HiagMTNVcyaLgzZq3VYBcTb381PwrDLDEkKDsTSXQEQ001btPybMkiVqDCRxQWUW0TdUokMKAEYvLSZ0HmU0cCQxf0RwIFUuElUIU0Z3HjY4U0PzTUNVcSTv41LqY1RxHkMKszPUQVRBoDVyLTZSAmP0j0SYgGbyTVZBkzQ4wjcgckdOoVRL8TNp0jQk4hdI4xLzTjREgDMqbkZNkmRrEyc3nTQxXEbD8VNlISLqnkcJIVTTsFdRQVTqDUYGMlQLg2Jo0DUP8FamYSazAWcznDR1n1bOMmXSk2aKgmRs0lbrUmXgUEV5IlSRczazgzaHYib3A2atHmRpoDbxsFb2UFQYsxbWMmaSQja3rVbM0TPZ0FVjkUPzkER07jK1UFcJM2SVsRXtXUUwjWR1E0SHIkTlkCSQIlUPYkbkcFLtvlcz8FaUcDSY4DMVQ1MOQTaQkFNHAkY5U1JUETbssjZ27lRPAmLtPlVvcSLH4VMjQEdxQ1XXUUclsDYKEkbucUP1w1LsQlcjQCZ38TcCEjSz3VLZYVVDgGMhE0Xx4jMg0zL3sVQBQGaHACTZ8TQEcGTVclKXcFSAsBThQkdhsVYqAkd44VbPgzZRwzQ13lLnwzJmEEV0b0T1LyLNcGctEVUEEEbqITXyL0XxfGdqbjaPoELuAWbqHTR3PkRzLkKAMkMKo2XTYjTzEDYokEMqshY1kGa3jkatQDRKcGSOw1QXA2SqojYYMWX0oVa4MTbII0MEYmdwXzPGISRxcGMtn2QBA0YNoEUqPzasckaPMkY3PzPL4TYtIETz4VVwglSF4TYwjlK0T0T2zFZtTUblMzchkTX0jDaKkkKPASQQEyZjMlYmMlXUElS0ASXzX2R4HFLsYzMVMjPxgST4vTXtgDT3bkbMkCZ0TlQ2kVN0MUTiI2RBYlLqESaPsRcxbzRDQVUJgFSM8jVMUUX0PGZ3kVLGYlLos1L0oWSIEUaUkiMCoEY2LlcGQiSNAmLPs1P1oDd4fzbE0FQYszcwnzJQcWcsMiSlwjS0bGZ2ozMNgiVoMWYNkmMMEFTZUkTZAUVnkzRDQ2c3HFYBklYKgCUuwFakMiQRIyQwXVX5IDVyUVLsojXZU1bXgCMqnEaFszSPMkYg4xPzMTbYQjKIA0bnMEMqEmcz81bT4TcyMEayUldwEyUNEWU2AmcAwFQ1QzcPEVZVglUAEVbrs1bXYGchUlQxfSXWUWYvg0PHYCU5MWZXEFbSQEZZcjQYsxb4HCRRkkQWQkVowVSLw1SM8TXhcTUNQTUznEUwjGdnMTMlAkalMlQwolY34lLVYjTVACUUcFN4jDR1QiMH4FStc2PZQUMU81YZEjM0XjangCTiETdzsRYyE1RAUmUJETMgYSMmg1bDQlVCEFT0gGbv.UNggGTukVX3wTT4I0LLQjQXAUVSYzLv7lYQgjYYsDcpMSc2H2c0ElTO8lZxUVUrc1blgEa54DdWICZ2.kRnIGbFwDaIQjSxHiM1QlUmEyTXYEdgE0JyfGMh4DTOwzRsshSwHjaJAWbAMVQv7lQEokYNkUQpEFaPACYAcGSu4DVxjkXxXiMmgFYnkWXvj2RB8lMn4BUBIGVvL0UIQlQjcEczcSYwbEM2.yYtLFSYYyPoImMXYmUR0zXRo2bj4RQpIzRBgzXX4jR4.2QAwlXtfiRwDlSo4laVkjb0kSPkwFNrkWTi4FNw7FZBACL1EWQC81blg1Tr0FS3HkQ1wDS5IiL4rlQ1YiRTUEcFcFdCIjTFQUR1AyR5kFMhITcGISS4UmMBMybEElP2TiQxPSbggiLTwVcVk1cvHGdtPWRIkmVREmKzLiKFE0TvrjXugCLGMVRBIyQwk1aiwDYwQyTrIGUEQkKxkVNMEUTrgSYF4FU1o1J1bCNl4RMrYESiYWLxQWRmISMrYUPLEldxfmZ3LzXR41QQYFbnEmc3ciRSM1P0HmQiojSHICUIQkKAYjQB8zLv.kcocDd34BaZMWSGgEdUgTSFQlb0kFRMMFNmkGYJUVMMASUnQzS3ckZXw1XzHGZ0X2bBcWdIkzXZUGa2QSLxjESXMSNicyX0UicXkCZkEiayHERFUyTFsFStMFQ3bDcQEjKNcmbAIkSHgGRTYSSyo1SqbGNBwTaw.kTjgVQt8FSkYFNyDGbsAES10DSuQWd1sxM4g1LrsDTCgTTFEGaAQyT2kEdLIiYAUmZg81Tw71ZVkiS24TLEIVSOoWQHc2YikDaZ4xJznjQiEDMvUSbPkiLnIma2olPoMyQIUUL03xcwoENS8VRg81Z4wTTM8TQ0szXCojUogkT4slVkMzT2I0SnYDL041UBMkaNciYyg2RTE0JxzzblMzJhUDRxbELEcGRq4xa5MWahMiKm4VTsMEVJAiStb1RHEmdWQiSYQFZ0LkTlkENh4xTBk0LpUCcUEENOo2Sv8Fd5kkKhgiZmEjY1.EYpwTLQ4TPtcmQq.0TV4hMjI1bhoFbh8TQGwFYM4FShQCNzHSPM8VVSQlRvL2Y2rzQWIVPlclSSYTY2DGQssDSv0FNwomQNECQvciKZ8FVtIGLhciKOomZAAiVDQzZyHmMiECMBE0UwLja2vjXtE2LzTUV4X0XtjUYMoja2TkQpkETOgTT4rBSYU0ZyTkS0gTRqXDRFsFUHYWSNsBT0cSZ4UiStPSNTIUaTI1SKQSVXUiUVQ0bDkzcPYjLOMmQTIVUkMVaqQVRXgkZ3ckYBkFYtD2cYMySwsFaCMFdQMEQvkjZkYCbmEkbTQFcqczcAoGTD8DTPwFd0AUa2PiXvDlMKczUtnUSngmYgEmdnAidzHGMyXSY3gUTycmS2LCQFUmT0w1TUMSRDYDUtbWR3gDdw8zcEkSaswDURsjZqMVNtAGb5IFMUYySq.mZHsxczbDcVkzaNs1QR0FZtI0TYcFZZQiU2PETuQUPwX0cBYjUUQzSwXlV0AkQ03RN4P0XDcCZ4UjYZcTRoslc0jUVZkmakMlUGA2TwMCMybkbQ4zUFkCYmEGLHUybOACQpQjK5cSUZIWcvYyJrcGNtH2XSk1Tu0VU1jEdrgiTFoWZDUjQQMVMhoVNOQVT2QUZRozQnElPxIGM4XERDESMxnUPEUWbZwFQEIDR0PGTVg2RikzcvvFViQjRgs1RhAUVrU2QGcWd3jTLoMyPAsDZRgiX4sxcnszZjUEay4jRwrlb0YyaIsFcrM0X4jDREU0PDsRRUkmKSI1aH4TUHEkLtY1YXoEbscUXOAmUogFRhg1cWgGL2.0R48lbyICargiQAcWNWAUSNElVv8Vd3ISYmsjSNQlQA4xPYUDYg4xYr4RSpI1SugVR2AkUTUzLOclVAMWUCIzTpsTQUImRH8VR3jCQxX1L1nkZjISQnIjPV8lSDgFQRUSTlIjLtnGYyr1QvsDbDcDbBUiPzrzbMYGNz.GMOEGZwbzXIEGNHMzLLgkMIg1MygGcZwDUzX2U34VcOg1TBMSPwb2cFAUMAwjMyMla0EWS54VTvbUMYcUXok1LLQmVNIVSHgmUK4xbxwDMW4zPwImK1TWPuQ0UIk0Q1wzbnkjbTcDR4cDczUWVTQDLvHUMwLlSycET5sRcMQ2URgjaCkkX1TGTqYDR3EDaxjWLXg2bGAiRxfFQGAUNWM1TwQyU2jjbg4FdLk2LnsFbzgEVVQVVyPCSMQUMmkyL2kiMpcVUgAmLyMTdqHlPhQWbZojMC0DRtXGVmoWYOA0PsEyX3XichQERg4BSUIVTO4DZ0AicJcTTGMVXB0jVHkCMMMERxwzMZEmdxn2QGIEStjDRwA0M3MFVqMVaAElS4LkRPMWQR0jZMc0aWQkRqjWMTICL0kSLRMUcR0zQ4sxUz0VUzPFbsEjL2jyaHIWMIMyYyrlM4HTNPoldKc0QqQEYlUDMMomQrU1LVQjTBUmLGkzY2HWPuM1RRIjMmoFdv3xUr4DQ5QTQQ8FMFkVdy3jYuIlVkwVUTMDavPmPKIlT4H2XlomY2HkMmcGNwgmMZEzaLEyYxD1bxojd4IVSzQDaEgWUvbESBYTStHlZx3FTw0lcxXyMqE2SqQFYpIzJvLjZ14BQHcGc5cDaxvzJPMEU4kCQlEEMxbVcwU1JJAES0MjcrACNzD1bKEVQCc2XhgDLSslYPA0UOMUNlYET2TDNlQVTSczcqozPxMWR3YSQpsBNB0TYMcVciElPgITamQ0TVklKU8TcXEEaWMVaQYGMxjjXi4BRzgCTggWbloESz8VVG81TyLUUhMEUnUyU4AyM5ojT3UiX3vzRNojaEImc1MDcnolZQkiQ2YzY3UVT5wVbvM2Xx0lPYoDMLQ2XDkjQxUGRP8VPjcDZkcEMlIzYTYjSIkiaBI0aMMFczEFaZsDSUMVURgmTGgWYqQUcLgST28VdoIyY0QVdwMDZgICVZUmKBIlTzQCctzjYJEWS3IWQVU1Zq.ENJE0cuQTdpUDbXAyLtfDLwLGVr8DN3oDbiECaB4hPQcVTBMSXZQmPMQ0URg2c1szSyYSQ2LDdtrRZMQkbtnEd2UEbqQTTlYVYEoELtMCVt3DdwrlLYYyRscjTKkmbNoULCI1JHMmK3MyJtkWcgcCR1MyL0MCawsDMvnDdlgULScmKxAGbFw1aW8DVvUkMnElKtTCdmwTYskCYYIjcyTDUtvjYrszXgYDNkMCLt4zTvPTMGo2YYMkKJ0jSO0DaFkUMkQTdK8lK1nTSScyJ5IFYZsBYDczZI01azk2X3TCd2MSZiY2ao4hLMgFbt.EQPEmLlsBV4HkXQklSrECSoQjcNcjX1XDSEMiR4EGZAQmLvICYysTP1AGTnc0TiozcIYVNWAUN0L1bxrRYOEkUNEzUXg1cZEjRI4jSOslKroFVGgSLUUUY33lSJsBR101UlMyJ2Q2LqgiPt71ZHsjayvjaYAkdxASc2LFQlQybTQjKUcEVLYmRAEjcDshQJ4hM4DmYnMWcKc1SVc0RwsVVPkyUvY1RtE0aXMEQzEWZvv1LvHGUzPGbM4xS3YlaBMWaDAWXJgjTvDTc2gkUKgGTBYWN3UVNu01XJshbNEiarACZSYCVKcWLKQEZGIjMm4xRPEDTxs1JssTaEIEMAEEQMEWL0njS1kEQPYiLZ4xUxLDZqnGYAEWdz4TMoQEN2HWRzoDdLIGdzkmPjMmRnY2LSMmMKsFLs8lXPIFQr0VLQQVTWkzZiIkMqMkRjojQr4lPnozPZgTaIUUTMIGLEMVPkI2RwYCd0DkKrIkTpI2UtvlSvAGbLESU0kzavHFTRokQ1T2aNYUVVQWN1wDVGo2cysBYvwldogmbr4BUBUCZtjTY4rjXPgUQvnVS2IzQ0XUNEYWVI4xbLkVLhkjctDiXzbGURszbqQDLMoza0ISR0b0aCUjVGoVLYQSQvTGZzjkdYEFSpQSYGIETTIzMogkP3TVY3USVH4Tb2XjP4bVcC41MNMlZyclcgQmbJojKAsxTu8jVpYjcqQUcrcjK4zTZFQlKvsjSjg0aJclLYEFcTk1PWQmLqTEStkmQvE2bn0zT1fTZX0FQrUCbWYERRwVMW4DbtICaUkCZFcTMOI1QOA0MxMWUDc0MJoTUMo0PKkESMUjLRQmRzslY1kWXIQEUr4RUwTVd3wzMNM1ZwUiRi81RRYTN3DVd2oDN5wzb1MCU4XWU4.SYIAiTtLmPqYWSxTkR4czQwHCcV4RdKIUN2PCY07lZRo0QYQSYPgUaVkScXETVSEFc17TdXkiYTIWXuAiPlUURD0jXC81ZtXDVyESLZYTLNkGNG8jcZYkTTkjSRwDYZMUXEgkSxUVN3Mlc0HUXxUWYIU0T3slbvb1XTwTaj0TV2rjcDcyMOcEa0n1Jg4DMWAyQn4DTZMiZKoEcnQCZ1gjXKMCMkoTbIEmSqITNBMGbx3zTGAyP0HkTzrVaZkVYOoVXM4jQqMlMx.ySj01Lyb1PCkGdXAWaZU1YD4RSLcWdwPmZlEiRsIlViMULsI0Q0rjSnY0PPgGVz3hUWsDVJYiTHUVUNUCbZIzZ3XWXwkkUNkTXtDmPzMDb3oWPJMVaFkET3rlKxcUcJolTT81ZZoFN0YzPjMzZrA0PWEFcqEVUHg1PngWL4DiT4cSdQ8VXhMGLzH2SyPGMz3hTFQFLB4zMZkyU3IDMgk1T1jyQYcTRRoTQlgDdtfiZlglQwMzYJUTPNAEViMESznzR1vVRAwjQTI2MCc1QOkkMxz1POcUUuA2UDUDRkc1PVIiczAiUyPyYoQTTvbiRkUWYlEzZqMUckgyPgsRV27Vc4DCUVUiZkEGUqMDLCkUZCM0bik0JgsRLQkCRrokX0PSa3oTQYYmQEAkaVYUaxD0Q3Q1aYAET3HGZggiS04Dax4lUoYVakkWXoQGU3jiLwjFRlYGazkCauQlctwTQLYiVt8jK0sVRpwTUzEGZxLzR1IVViYGRtLSMhUFb0PFLSYTRFgSZZE0PT4RdNIkL4QWV2sla37zQhYURpkycPoERmMETXgDYgUGag8zZ2T0QPQUVi0zMLUiZqrhcQk0T5wzYNQUVOQCc5ojV03zLOEVatcDZBk1TsgEbukFTCkyZXMFZLUVUx3VZtsjMpo2TTcGUvYGaHo1Y3gFV2c1JgwlTKE1ZzPFbkQTZ4XTaosBYKImXq.0SKgCUwDUNJkCTmYWMv4TR1E0UmgGSxICR4nWVvHUXvACYyYCR301UGMGU0HCbQMlZtAibr0zTwQDNgMUatH1aXMjPnQmTwIzSPUFczUVU4s1J2fUasYkc2E2ZqoVVkAmV2jkVGQmX58lTY4lTMAyXTUzQvYUNv4TUSUiKkIVV0YSPPkmP0flKkQmUOkCMrMEdJg2YSoEcJcTapIFVDIyM3IGZy4DZxLDYZYiYxwzUy0lZGQUbQo2Xs8ld2LlTMsFLTo1J2rBZ2XVdN8VbyMTUZQ1cOoFLMEVPvrTXZglQZQjUVwTYWcyXvMVRjEDaNUmcqDWcTQTL2b0QUoFdy8jXWcFMWgEL3EVYB8DT0EWNxojYpYVdIgjbOAEMQcCTHQTaZQiaiMUYAAEULsjcoUkayPjPUUGQy4zRToDZkQFa3LVX1DTb2giVJwTcvo0Yr8zLRQVR5QFbWE1c2bkdEsBVykUP4gyYAgkXLcEMDYVXJ4FQYcjUucmKg0VL3fycVMkYXkEbO8zai8TPRk0YBQTVgciZgkjVPk0PPAmLWMGc4nTRzD1bJ81aRAyLBEkK4zzcZoFQ1ozXuEEMwkTb3PFVUEWagcicYUkbGo0U4szXFsFQIMmZPUEaAIVTyMUS3cWQ4.ybskFQIUDMpoTNyP2cYASbYIjKJg1MKIUcFk2RPAkaRIEQyPCZnMWPXEGZqMDMMECaZ4FczTVRlIDYjMFRAMWT3Xja1jDM2PkT1slTyjyR2.ULLIzayHzZybEVwDSYsYiQl4TTxclQxgEb071SDgjTv4Tb2PVXwD0LvzFdTEkVxPWbOwlPRcVSLwTbRIGQWk0SUkEVscyTJETLEMzZWUjUzISYOIiQ1cCdmICQBokPw71JNwzMFEFS1fzXxnGVA4lV0bzQroVUooVXkIkStETR3LERzP2YQwFMwUVaOoGYNQEZtIkPQgyXm4BbSIid3QTLLkzMrAWU4bTMqLkbnQTPtMWZ0X0TPgVSyH1PLEFL4jDRDUjSm4FZhIUcXICY0ESXMUWdZMCaAsTX00FZ0b1M4TEUjoEVZgkU3E0YSkWdwYlSI0jMiM1JDgjUgESREUCUtT1XvAScybyUzPlVXsxXmEib4QzUyQFVOgmbA01Y3ckVEAyRtc2Q3DiV48jMsUlMzcTPNUWdtE0TnESavszXhMUV5gyZrEUazLzJxE2Q0IWXnslXk8DayIiY2QSYSglMvjWXkESS3YUdBMTbMUFZQQlbhkTcCMzQwLGbhA2S4fDUTYVaTgzSR41XzXVSy4hLwzzQxUlRKkSPzMlVzPGav.ENz8FQ5cFaVISUFoUd0rlSxYzXWczLYkVPYIlTygEZIA0RvjSQ4ASXV4DZ1czROglKQcUQSYlajUDQ0DyJkAEYxYzTTciTw0zRrIkawkUTYMmQ2MGSUUmaQcCQJklZPkWN1XWVzg2PAkkL4MiaBIzUyDiVnMGSrMjKrITLX4VSLojVg81azwzZisxcJQGMOYyZ0IFZCIESv7zYWMDQqDSMGQFNgo0bFMFQHcmd5MVPssBVtcFT1DFbHgVZwvzPIQlM0TESmslZowFT2TVY5QSSiAyJGwVVDQzMzjDatkGQVImZmgGdvIkcjYCLpwlQgwFQZc0QMI1PBomYwo1ROMGZM4DZRMzZvTFSu4TUmEFStszcq.SayIVSrwjVpMGaSYFbHcFZZcWbzQ0ZgY0Q2fibhQyPjIjaBAkT0nETtkUTwEyTNokVzLyb4gzUjsxUWUVVUQCNzTyUjQjb2TzbkEUUW4TdxMiM3nTVvT2aJEmVIUWYAUDYxAkX2gVLpgTYtoVXKU2LmUiZtPDUzIzYj4DVKAWXYczRrkkQoIjQ3UjQz.mTOA0Qkg0bFMEYgITYyc0PyUFaQ01MqLCVBIkVjo0SRImPSYkStfTNpYkZZgmVxX1aoYWXA81SzIVR1LFZO4xMgUWPxfTUKQyMLojXzbkUuUTQnMmQLMFbhgzSyAicYgWdO4jYWYiMDAUVPQFYEIkaOwDbhglPYEjQQ0zQH4xPyLCRvQWLBIETwT2PuITZB8zX0cCN2cmT2IVZLoGZ4fWMxMEMAIzbOEiVMIVZ2Tzcwg0PHUzcOUCLPoWQGIGNwflTjslMr8DRmMWc441YYElbAUza4TmPVQidy7TbK4haBEmQEwlLzPUb5cGRngUSk0jXUE0REYjQHwDSHUldUYSS1I0ZYoGdNEVU4.SNwUjQBgTUjw1QvPWc0XVT2jSd4jWYBQES4jkXDsRYpYzcu4lLncjSvfTQ1cGShAkPsIEULsRSxjCNlM1UxASN33zS5YGNkYDL4AGQybkRNMUV3gFSoU1XDkDLF0FR2g0QDIGZpg0Rw4VM1v1czzzYYcSLDkVQwcycrwVTvTWM2bSXsAWbPEmcg0ja03zX18TNp4VMxzlZmgFUwz1YVUFagkTTvjCNynGb1o2Lv7lUWcmXzMWZvIEVXA0Mx.iVXwDLqUTSJcFQrEjaCkESvHGVwP2SWkSVSI2PggFURI2TSYUYjAWNRYScvLDdlgGbRozRSoELvbEZRw1QlcUUKsjVWoTQkgGczzVR18DYvnWLYYmXhIiYyPzS0HCRtwjVRgFM1QEbzHzRrgUP1flYAkjZvIFbtgjXSMVN4oTRGIkSZYlTig2JBU0QYI1T1LDNCozUq.Sd1wTTvgCR1LkUCEWamsVQzMGSAI0YEIFUzokZAszZgM2SUcyLTgSPZMFQrMUcZEGSgozR4USbyEUaoAUczEyYx7jXVYyLqjybPIkbQkzRxbTSwYlUgQmcmYEY47FVJwjLOwFZzLVSWkmcXYCZAITdW4jLSYSaGEmaqsRbvLiUwzjQVsTNpkCZF4lLynFNCMWNpc1bzQTS3LGZA0DaLojYuYEVHQmcgMkQXkTTDIiYzjiRx8VQzsDZ3DUPGozL4HEbvbUN4oDS1zlPzg0TJUUYUsjP5QDawD1cq7TNQ0Db3giVR8TSVIyUGIFZ3rBNtHGRQgEMTIySkY0MKcSR2vjMjoWatTVNM4jQWkzZ2MTVtQmVsk2PucVQlMVQ0HTLnUTMI0zMU4hQJgVdPoGSAsjKwUDMrkVcyHjMU81M2IDV3MEQBQUaig1X3fkczQWVlkSNLIVc5UjKUISQ5IlVzfiPRkzMys1Q4UUa2EjaGAWMqgCN2vDcFI1LlkicxMVUlomQmYTdwckMtcVdy4hdyLCLVsFdtsxYMwFS1E2RZkDS2TyUuoVX5E2XUA0Z1cjYtkFToMGZjIjMFoDLvAWckIEa1nEcXQkM4IEV1sRZYk1Y3P1LWEVMBUkZEEkaSUWbIgFSUg1LzMzcBozRUgTZAUiPBEjSjYlTrYFbrwzQCEjXWQkLwU0SZYUaFYSQwU0bME0aKMySGETZP0TS4.EYVACMFgEY5gGMyUUN3QCdxMjYTUVTlIkdRkSN2kkd1gmTQUVXlwVZYc0TmEyazDScUE1ctnWUEAkajcTSBE1JCo2MNIVRtLycI8TdWQ1cJUSc171QVUWT0PGV3HGQxbVQFMDVuwVR2YEcM4DSHI2ZwEjXCcGMBMjalASZRo2MT0TYowFZqPVPw3RUyc2a5ICL0nlVYkCVqTVQ1fUdMciRm0DTTAWZKIiPzXCcJkiZ2c2JQY1b30TQ23xXqcTLUo2SZEVTFwFRNMSUWITYYsFbok0bIE0by.kUBkGYwDSbMAmKBkDNiYEagUyJBkzc1klViMSdzQ1QpUzSoMyRSUSNhElb4bkSnMDVqj2QEIVMBM2ShczPxPkarcka1PTP0DUNg4Ta17zTD8zU2biLWQCLwQSd4UEQUkmaIQ2UsYWd2zVRLIUUQoVSvYCLq4DLBQCTxcFb4LEako2chUSdBczTBsDUmEiSEgjaVYzc5kzU2gDNggUPJYDd3QTalolYgMETVcyUT8DM4rDbxgidqXTakcTUgUWMCgiXLIUXQAUaP8jRtzlSwA0TmYCdi8TN03VMz4DV0LlYZAicvMmdx7FQhASLZwTRBIySt.iPxQGN2oWZ1gCc18DRBsRRtEzQyg1apo1ZwcCb3XUchgSYP4xaGIyTjsFaRsFTsUUZvDVN4nlMEMCMww1LxXUchE2PmYTU2YTVKY2XiMkR2UUXTMUZzXWNtLVP2IjXuYyaKomZFM2YrYmPVEkYksRNGwDLHITcVQTMqnmUVYWaj0FYmkWVUcyPJ0DT4kib1.WPJYFLxjVa3T2QzjlMDczMzDVdkolYO8zUI8zaE0Vcj4VPQgmMkQUczIDcTo1UvLWcqE0cEYkcM0VVP0FTVYEdmczLLIkdRc0UYckaqACQSYmLnc0Pyj1R0HUUgI0POYVQgU0TFYDaw3TQgc0UFQ2aCMlKPU0ZZY0QSQlQjMkSZcyRmA2TRQ0ZmQ0X1jDRHg0ay0VNCEEavHVPwTlZR0DTUUVLggSbrc2Tt3FMNcVRIYyLuckVwoFU3PUMjoVcrsjdIQTRt31Z1PlbigWcB0jYkcFcuc1ZrU1QEE1TUkTbTMVUH41buACVpMyLicFSJIUVyL0TUglYhIibtv1RCsVY4LjYqwFajY1aZklVFYGYggDRgQEQyUiZvDUazUTSwIGbhsldxXjVLoEQ2XyctcWUQcGMZkkRSIUbxkiRNUVM54BdkUicnI1b4b1LtEVPSUWdt4hLskyLUQCNX8VYGYGQ4zVPLUWd1bGbzbDVKwlXnUjdtXVNh8jaCo2MTQETL0TShkyYZoUU4fTMyHVZgIFaAoFYoUCLx8FcNgyXrg1SC8zcwMiKMAUYGkTMSIWQL8FQ4EyRTkDbDQiQgUUb43BSh8zPzfiSSETQikVTBkmZz81a4TyL4PGRxY2SzA2bsokK3LWNtgVPQ8lKB4xMzL1MsQFTSMiZSIFYOczSYciTgoEZBUyQ5MDQJgyXtnkXMwjLukza4LWPTcyMPgSSu4FTXgTahgmb3fzMDQTd2TFb1kESNYEV1v1cq31auMTNkQWZQkmRKgiTRkTa3XTXLcmYG4BdSEGaCgmPJoVV1TjMyf2b1gCUGkES1biYKUlMpEUVPEVXQojQgkWdkU2R3X1TSgUSIEzZ0wVSybTcKAmcnkyTMszXhkSTtYVXsAkKzslcTIjLxIzZmIyRqgjTuMGcjc0a4flX1kGTzYkRyfEUpA2QvT0PmQTPsgzYTckSqfCZTgCMqMFMtYCYFgyLWkzJHAiL3MkTMsTcBomZwXyQnAkXAIzX4rjMKsxZGAyTSQDUkcVML4zYQIWZl0TNwnGdwoDZSgSLvEUVM8FV1PCSrA0Zv.Ebx8TanEERvPFaQEEbiomcJoUZwUUaiYFMRUSb2QSbqM0YwTlMTwVPog2U3XjTiQVZp0jTmwVcvYSLBcUaJ4hTAQDcJIDLIM1MwolQtQSUIcSXDYzLTICdjkCbWUmTgU1axn0XNASVuA0ZOITYz3RNKoWcOYjTxnUdzIUNiUCUgciSDIiZ5YmKUslTvsjXVI0UX4TVKoEaVQmMg8VSJ0VT5UGQmAEQxEWVFYULDgUbDcCL5UmdvYWV5sjZRkEZ4U0U3biYkAULzPTStk1c04BNvcVbig2Y2w1SCMEMEMyUQoEMDMSZIMCRSQUTR8DRkkWaPo1SvXlUtAUUBoGLw.WbCslZU8VSYw1X3bWaybUTDg2QWc2bGkzTCkGSKAkdXcUaHUEdTcTQZMCQKk2TXshQpQ1YtwzLvjkZ54RPWMWXlw1b1LiTJMzUzPkYjUyQI8DQ44TSwgFRvYlUDQTPvnkVUYjMuUzZEYWar0lcVIyUN41SSg2PmgiSAMSdmclX0A0LykURzwTVvYzLhYjcEUUR4EiLXk1ZgUTS0UWRLEiVi4jbBsjRPomUqbSL0PzagIFc1bkPw.0U3IlPTYiYY4xZYIVUT8Vds4VX3vTdtrRYOomdzL1UsslVQIVV1TUY5IEShUGdzQCSvEzTiwjPhoValUEUPcjXNYiaIIjXMYEL0ACUjEkRSIybo4xLGkUaiU0PF0TQRg1QlEiKRYCZ0nEUtQlUu8zbDQEbpQSX2YUdxMCMzUkL1cDUlgmZNoWc4HzSoUCUZQjRSslTH8DMkIGTYojXPUzSPMiRHw1bMozbRgzaqbCQ501XzbmR3QVT4bSc4DGa2HjZ1MUSWUjd1.SZOslSiMSLJAEaBETLIYVc1sjVIIFR2jSM2HmSZsxJ04xL0jmMl4RVpU0TvblYKkDLksRatomVF4TVtjidH4jSzLyUKYEVNc2T4biXUYDQ5YjZCQDQwciMt8zMhIjVi4VdRIVZPEGSgAEUFEiYxQkdZsjYxXCUqLzR2oTNgwFdN4jLzQiX48VNVgWazLzUqf0S1DSa10zSP0FMvLGUi41QLQzcvHjLyDjQUYlbqjkV3A2JQo0bFwTPKozcsUFdCEkdzbma5gDShIjbPszaT4xYig0ZuYTUXMyJDoDUpoTVvciPTQTbqoFb141XqwzPiISNJsFRvYlYlwFUsQ2ZPEkVAEUazMTRukmbqXSVHsjTEoTURQTL2IGZFgVU2EjZxXVNyHEcrU2aGMCTroUYnoUb2HDc1LFSQ4jMzXzXpoVapEEUTg1Q3.iSvoUVm4BdHYGcu8zTzHETFYSU5kkKZYESvflX4jFS4cjQxfjbhcyTTUCLgcTdnQjU0LzMvYSZwYmL2EWL08jbBcyXqfGUZM0UGcib3MULzQ2TqICaME0MRY1UFglROQmdIsFNHMGMzHWStgjYz8lM2PjTpsVd5UyRQ4xRXkTQ0Djb3L2S4wzYZIUL0A0LmQmTmEGbMEiX3kVaxAEMYwlXpM1cn0VNwITLHgFRRoUatkWcqnVL0w1cgczZukEQZMlbqPGbgMmLDkzSAAWT4AkKkUTZFYUNTkyXQgGRGkzQPo1QsEUaxc2R0X2LnUCcZwlP4fCNvISLMICRqQVYhokKSoUU2YCNvAEY1czUiciUYQmL0HkLEUjLGIEdoM0JOYFZyXlalIGcs4TVNozXE0zbUQVLzkmLx0VbzLybAkVYwQTd3EScxYjbMYyLvU0M1w1SoQlKBgSdqE1ZIc1PCEzLvP2bFMDYXUicg0DLGMUYmYyZiUycrkyLmYDZsomYiAUUKoUNVQTbtYSM0QFbrUCbmshYzcjdOU0S13lVZcVNMkmXKkVY0UidjITTZoVMhY0cwAmLIoELqIGMqMDLW8VaEQ0bznlakU0XFEUXlQidEMzXVQlbPcicznzTBkSUJICVSMTQ1cCUxYzLgo2MKMVUAkDbhsVZDcSNOIUTTgUaPcVM1YSaM8jXPMWX3kFQIcCMg0TMKQEUDYCTv3DV4PmQjQDLC41TucDdIsjXDkDUTM0YOACYuUmMoUmK1rVM3oTNJ0DQSsVVYUFVwsRd0UyLPgiR4PmYos1axUkSF41MXcWPBcmLt3BRRICTyAmKwDSVtMmTDckYYYWLWY0P3.mZVc0P04jYxkEVEgmcOECbRASSMESLBwjVrYyawDUL2slYyU2aOEWUDMlPwwDMFIUQxsDQqEGcq8Ta4oTbSk2bZoDLswDSTkVZZMiVnAybLcTUu8jd3DjRAkETYwVU2EFSHM2RzvFZmAUarQDMDEycxUSMLgWbBkjMIk2MJcSSmQDcAUUYyEVYGgVQIYzczTCLT0TalkTaIA2cKkUZOMTPzMWa1PDQvQkTDYyXlIWP4HSc4H1SGMGLpAibyICYMYFLhMmZV4VLLkCczjiZxglQkwzYWMkUQwDNOkkL1zlYDUUSZg1MDQ1M0E1XqUVaBokX2LDYgYDL4AGZtIGcLcySQMGdzPkSGklRxLkXoIUL2Y2SQMCQUIVdzbUQx4BaLwVQR8lcSoVSYQWRYkyPZcSSHsxPpMVQpIEU3jlLqbVZp0lTGQUXqX1JCc2Q4IEZ3bkP2D2SYEjaxDSaZMkMQcTdDcCakcGLSoFNjg2M2Xmat8TNzc2MjUCMjQ1RtcWYwEUMo4RQUshKWUCRZg2RwshV2H1cxszMHcTN1g2J5gTTYoVLHo2Q1QySpcWSkoWYvcFN2oUdzfDZhc2UTACdpglZtc2asIiUiUlLWIUakQkU3TmdFYDNzQTXCMEYjcSMp0jSMwTUZsDV0EkdXYlVtY2RvEDYzH1ZvjiKEsVdO8zc4DjaAUDVZcSTvvlaH4hMT81Qmc0SS4zUnwTaHMSTvjyRmglUrw1MvnDYybzJJ4BNFUzcm0zRrkiVI81RkU1SMIlbVgFLTwDRGQzJsIGbEUEUYgDdUc2YKAiXjUSTMcySVACci4TaRUkUGUSayckSyzDMp4DZxfyUvI2UqUjUkQmU0QVNXAyPDMCby3VPNQiXvjEMGkyTkEkbAkVcIYkQqHlTrQzbvgkU2gkKxPWPJkybxDibYclLN0VbjgidAE0MxcyaV0zQMYDUC0lQ1YEdicES2TzJgkCS5QjZso1QrUFduYVT2fUXwEkTlAUV1YFYKsxcYQCN0g2XlAUX4cjMNAyRnI1JvYTcNIyMSgEU1UiTqbyJp0jMi8zXxg0S58zTnkSNkEWdUUDUOAUYuIza3EUM2nDc3HzQwbFUNMDRncCYwD2Soc0JTsFMvY0SQM0Zyo1Yxg1JEMyPFYTQSIDcvPUUScmRBI1RSMzUiMVU0ICN2TyZEszcicjZjs1PC0zUzU1M2DWRq3VY1jUM2zVYmgSMwDiZX4xJiMSRZoFNRAWNF0lT2USQu4jMhs1Yp8DZFIDS4cjTAkkKYoTbwfCNKkDYtoWRjIUYKUiSw8TXv01XAEVYucENo4xZ2kFQAIySAoTXZMFVRASU2ESS5cyZtXFSs8zUx0FRzP2LVgDMxHlTqb1JGIzUxwDaP8TUkETSzLWZIkWamsjdRcEYgwjZkQTLzUGTp4FQ2n2XtTzR1cFcqfEYigyTzsFMPE2TZclPw81a3glU37jRro2TiUSbXImTFEyPQoEZZAiaMA0JBgjV0jEQgAWNtrDRFMVcZY1cAcEUVg1a5g1UTkyPqblQ4ciZ1bzR3nFdYQEd5MWcv3TN4XSaKcDZxPUbMYENh4TdhEyYk8VcngSUZkDUso2YBckVDkDLqISUqbmTXsBMycyRnc1PVshMAoVUUEGbJIyXyXzYqwTVXIzYCUkQZM1JLElP4AkMYgjVO41YmcGL0EkMnAkR5I0ZEYGQzHUMycCS5sVPqbSciEmbVgGVqc1PBojVjQ0XNozav4RMSIkRFUlXJAUM34laDojVII1UEoTYPQTVvc2Mpc2cRMkUuwjU4sRd0kFNAkzYDUVQYokXD0TYFUTR0X0QXoTSzbyT2gjaSE2Y4kyZl4hU2bDaZYmdUMUYMkkUPgELyHGb5EmMv0jKSshKmM1LNgkYwfCRs4jb1kWYYgkU1cla5EjXXcDU2.GN17FNzDyJ0TmXAYSZPEDaQgyLIwzXyDUVWQCROMTL1cGNuMUSyvTRnc1TWEScSIFdIkVLxjUTpMibtvVbWMCZ1LzQFciQDgSVvcGMlkzPqY0XqT0Shs1UvMVRtfkMz0zb0b1MKs1R17Td1QULjczayITc37zc47jM4fVcvT0cg8TV0MFVxoTUqfmZgk2QQsTMrUlViEVUB0TL38lZrg0X3UlVm4lS0QCMnQUc4PSbGo1alkic0IzPkETQlQFbT81U3HWMtnVYAIGZ0AkRtAGVTYSYFklYFgVY2HSQVoGYSg1MA0jVBIiTg0VXTgkKC4DbYM0b34ValkWMVoTbFAyakYEZwvVap4RNTQFNM0TZEImVyjlL4Ekb2E1PtUCQz01SBkDbJESRYgjUM8TPG4TUz.WVWQmMybTVXYScTU0Z4HFT2MmSMsFT1USZ1QVdqfURQIkPyLGQ2QDNOcmSmQUMlYUaxbEQrMiS5kzbWgWUNc2JvMFdBgyTWcGUho2XOciaLQVbnwFdzI2byDmVwAWUybmaToFZBE2PxXDRyPWaTgVRkUiZHIybjAGNw8TdqHSXIkESSc1Zi8TY4A2XVg1SCkWLy.EdEQ1Z04zX34BRX4Bb5MlZzPFTNgja4PiTKwDQHI1PFsRXJMCVgMkRoEFLngjK3QVQyQyRpEDMJIlMlMkMBYiPlsVbtgkM43jbZEjbZYjbV81QqM0TvfTdBITU1kzSFM2JL4xSpcGUAQyPwnVRGAESw71ZgU1YqEDMxLjYEk1c5UVVQQlbmkUcPkmRGIEMrIDcmYDLS8lUvslbxLVSUQ1axz1ZBgTdlw1ZkEiLQUTR4UCY50jQnYlY0okX1HjdkQDZvsBMTQWZWc2X5glSKYiUyn1PyUWPhQDVPIEZ1gDSRokR4jUYRkiPAITaIA0LCszY3XWR3LTNmMUSrcGLokCRYIFTNEyS2H1Mr4VMjoDLCUCSpM0TxcycKISdyPCUqkWU4TCaLg2UXcyZ0XjdokkatYzMOsBNVklX2AyLXACMUkEZXAUUNUUT0Xmdy.WPyo0LLMFciETLLcFMhQyMyL0PtACVhUzUqMmYBYETQc1UTgDcK0lPmsFcvomKxfGQrQlYjQya3vlKYslK0LUdwDURWQjZwYVYzPiZholPXgVdZQ2RWI0LjA0cmQlPhEDZvk2Y3I2SXEybybla5oTZwnmSGQSakUUMmUTNtcVYxjWcEMiLqgzcNY2aqHiYNwTSt3FaMwDbUISc3jkcCEVLwLEM1PyT5ciUTYybTojKT4RZNUEZWwTNxfzLxkFcxbkLz4DdVIWNxomKIclMoEiQ1cUS0TDLy3zTQgiSvb2UqYFROsjVBgWNngWbx81MjUmMVgzZJcGbmAWcvbmboAyYHYGdgQCa2gmXWIzPjEEYDA0UwUVbjcSUqwzc3LiZyQyUHgDYHEiczomY3YyTUAGStDSSRcycxLVZVoWN4EFNEcUaxLVVlgidKYSbmAkTLQVLyjDSzglQ3HCLI81ZjczaTolPqPkbOwDcYI2ZGYCRxHFVyo1M0XVXDAyPNUzbwbTNJIkYIQCdHUCLQ0FNU0DSXETatclMEg0XrQEQlIicVUFcwY1TvsTQtDkTsA2aUECQzrFbqPmPLolP2f1YnYlTSYSMSMUa4LWN1TycmgjcqITVVgmS2LWRB81POcUUZM1T03jcU0DMqXzTLYFdLUGRAEESOsFalE0bpYlaBYkcJMyJ4kWNWsjdIkmQR4hTwQmYPsRPXkGb0HSYyH0cRIGV33hXLg1L2.UbHYkPxnGTVoGQIgULTk0RvAEMKMzMhICTtzFQtP0SwgSNRoGL2wFVJI1aEgTPUYidwbVPtczcyUiZ3UUaIcSLxAEZKoGLpozSuM2QE41aoITNoUWTTgFbsIWUEEmcnMSTMUTaG4hbEIycybSNh0lYIgSLGUmSBojQVQCZDcCcVg2UIUkMLsVa0oGQusDYCoVUXIlMjEiSoY2QvHzcLEWNSkVbXcEaBMlaDomRIUCQvjkaqUiZ0j0S23xQ3YWMznmQ2YGVw.UTtkDUBYGNFYkVlUyJ2jFdoYkYSgjSiEib5IjK2shTtoUb4jjUyM1YXIUdMUkPx3TcGkWQ5Y1JycmbDsTShg1bCQEUPgyUGUSZ03jL5A0ZQkEaQAUXMImXTMTYLg0PqMTZYgGUIcUVqAEULUTax.WPmgmdgQSNv0jMNASYs8jKvPld2bidtT1MlYlbzU2TqUESXAmLM81YSYycCsTPD0FVRkWR1glTAkUdwPDRrkjbz3DTpcGTYolbKM0LNgGV1shZqElPncScwTid3YWbMwzZggkbQgiMtHGLNwjSwEjMDglRKUGb2HEY4gjKyszYR8FbzEjMyMTb2QUNBAmVxUCTMw1Sw8zLDojTxEGM3fVQMk0angzUvLlYOUFa5c0JKokQookXxX0cPMlchUDRw7lYhgWVvblKWYFY4z1cDk1chgUYLUmT131cCoVUqrVSQ8FYrs1XwbTXDYySx3zLPkzcEAmVSg2JCMETxr1YygCUtUWM3XSarIja3cTQSAGVUoTXtLlb4UyLQkkdH0jdxjyJG4zYMkmVy0FUFsTarg0YSE1QTUSdC81TTYESSQzZJgVY4MFS0XUMBUGbhUDbSkWLGMCVicTdhgmdxglVMoTLRM0SpcTbK4zTnUmRgkyR3fWYXMVZPolP4IUXlUTQk4FdZIWP2DTNjQkaqECRyEDUBAScS0FTQUVbYQ1aMUUbrYUPvwjbwIVV0M1cnIVLjAEdWUGMvIWcL0jSM4FSMYEUyEGNkgzRScFUFEUSn0DMVsjK2U0UYMFcDcUYvUCQOczST0DNHwTMnklbLsTUH8DMJYibAEzXLgCTgAkbRECQDsRZwwlajQmSqQGa1UDcXolYVYmZ2LVXtnVQyHSSwoVZynlaIY0MxQUYSUCcYIERiImcFEzM3EVd1XjbgYyQ1gEMZk0T27FZkU1ZtLiaL4RbAQ2SxESaCc0U3gzcyfWb4XFMEcFNloWTRkDSDgDdWomTqMkaZQkUTI2JTc1Mqf0QzoVQWkTbUk1PtrzS1LyYPk0avTTUXIiTxwTUXgEL2PWZnYUYwkUQgQFZnU1PrMVSzUGNjkVLUg0P3PWXkkFc0slRzbSZrEySyzDSBkyXmk1cOIzYggGYnY0cvzlKjUSaVITQEMkPJAmSZUGQCkyYTQCLJsjL5QDcDEjXmEDUtI0UDEFQOkjLPMGbNQiPgMkPuYiSWQCLRojQ2IGYTM1TTQDbDcGbVUETIYTL1MTXy7FTiYGYngDYLgldQ0jPycDLLU2QVc2QCA0RAkiSicTaUIiY3XmQwzzbRg0cZkEcio1LYIDUh4xYCYzawMCNO4TNUUFLEwjX4HzXhkEQMQiQnUiSxzjTSsjd4UmV1vzQZACYwnjSmo2ZwoUSDMWbLYEdSMlasUyTZQUXKQlXX0lZ3QDdhEGL0jicI0lZAcFT4sjRWA0TE0VMv8Fa3EiTsIzJlAiTWMTY2M2UIMGRwMyRHc2Z1D0MogESUsBL2LkQPMFc2kmPLg1SvjWV4AEVwg0a0MST3XDNxHGcrE1QyHCMMYVY0kCNHMWawrDdZIyQ0ACaQIkUEgkY58FbJQ2Lm4DYYEDLqolS4.SXSMyPVE2R4XEbWcSS0jGbwnEbzLiRYsBLQkjRt4xRjc1cjIiV1kCTjITNKMkXKszMtTkMvLFTSo0LqwzbzfjdjsjXOMSPsUiUXcTM0MlPwzzMFIjS3rhXroDQzcGR4L1JlkSPqIkSSgmMGsjSGcEaGQyQqUTa2bGdqYDLWEiRHU1Mro0ZsYVdvPGYxTWb5ElL4kmdtHCNJkWVIYUTTo0L0UEZnY1LLoDQWoDRxcDTWQSTZ4VdxoUbzgVLUMSa2kyQxoWdNMFMM8jTggmdEo0M3wTa2PmPFc2SqXkQ1zzYNEiZMUiV3MGZkIFcVEDbME2Zw.EYhgFS3AUNQYDZY8DduA2ZPojLWoTXqXiYSMEMAozPuoDah8lYjgEZS41ZQgVViY2M0TCaKc2S2PiVyjTNxvlbwkkUqTUMmcmcSkzUFcVRlYyaqv1ZAEja5EUUlITYi41Y24DTGYzQLYkLT8lZr41ctESVZcSPmcTYOAiS4LzbE4BMwjkSYMDZXYULLQkVpQmVqvFSFIjZ17jdHcyc3HWQ1MCU30TT0cCMkMyYTkCTgQmZIglP5IkM4bDd1YjaRszZ4cyMYASXDIUaoUyZxMWNkgGMz.ySMMVPoMkME4TTQYGLsoTVgciV2IDLDEUMPszbI4zSZMkaM0lbwbWP1f1YhMkYlElboMWN4sFTLgFNRQ2bGUFSEIFVHI2M1XzXuQiULETVA8jR58FcxkTMnIiUXwzUPUGdtMFcMEULooGZQ8lRNACRTMlYEcmT44VPBwTSmckZUEGYjgjXRkDdS4jRwDlXmgSc5kFMsAkMkcySiMCdWQmblsRQig2RTgkcvMWTTcSLHgULWQjdEYlQLklSKM0JUciSzMyR3bidzvFLwPFV2QjYJ8VNZkWPMYDbBEUa0oGL0UyM0bmZFoFVZ8lMTEiRp0lMZYkS5QjKtHEZQsVZS01avDUQ1.2ZIokKYQCR4bVclUGQqTjSzAGLz0jXwg0Zuo2SxgESpokVLYVQKsVS1YFbF4lZn81TtPGULAkX1AULCMSUzn1bEACYqLyYCMSVk8VawcSVIUjP1jzPzrzSQIiZBgSL2DiUxf1JZI2Jk4TLkgmMq4hbXc0RMQ0YxHUbIYlS4wVT1olZAoGQV8jSYQmZiYCcMYCVZwzX2fVcSoVMBgSQV0FSPMWMMUzQjwlYRkCZ2jzLs4FZQ0VPYY0U1UzXmg1XxbTcCEFQtDkcicicQUiUxPlLDklXQMlPu4FVmsDZ3L1Pyj2JyfDVA4RX5k0Rxc1Z2.0ThkTYPEkdRUzalMkUAYkT1Ila4E1a1gjYWwFLGY1LMUUU2cjRRYmaGoGdpMFY0D1MOAmXSolVOolTzQyZOglUzszSAkjaRMVUqITQjM0Q581PwjTQ4g1Z1Djb34jTuEUa0bCLoETZToTSlokYtokMXU1RhUGVGgyTpEGQrsDL3gFTOomMNAUaSYFUucmVYY2PAYkPkYFUoYUTscyZMUyLPk0JRgGTZkUYpUVQ1QjZxkzL4jUdyoEclIGZ0rzSxsjXBMjL4LldyPmZwYkSqkFbzXyPAkyRiQUbgYlTUUWP2HDcpkUYzX1ZlECcnYWQggSdwsjcQQUYt4zZGIjZH8jYLgjRAkUazzDRnMVR3YSb5cyZ3QjatDVLLgmS0YSM2HDaZc2PYciYWgzRFkTPzM2Y2DGaucETRYlUuUmS3MlMNczSlESRVsBYoMWaS4RSi4TPYQzck4TM1HjXY4FRpAmZqMkakkSS2.WNqrzYJ4TSt4TXCMSa3jUS2MDUt0Fa2nUREcVaLsTLzk1YN0jbzn0J0IkZsU2UiUjbWUzSrslMRckTt7jSIoDbqnES1E1aic0PwUlQqUmV2DCS0z1bvXmcNQiPRo1UugiLRM0cyfFTGMGNEYmXLc0MRcWXqDUZkojTLcFd001ZiMmSGkyTREzTS4lMScUbqgCLLIDdjkmL3USN3bDcUw1PIYUNyAGN1kzZq4zM2UicIkSSpQiSt3DMkE0UCQDZCk1UyHia4HFR3YkQlIVarkmUX8VPLsRYUYkdsY1T3QjT2njLCwlUv7VbtMmQikGd0TjQJUEZqwjXxMULxkSLxIVRP4RXig2PZ0VblIiK3kCbrYzQ4HiQS0Vc4MTcrASUuQDczgyTQclU3UmMugUR2YyTyTzTzj0JYoWUBACNvXiZOkUXhACTMszLQ8lLtQENCc2PBUlVqklaq3VVU41a2gUcrAGYNkzLlEWVNg1JvcDS1bVNmQTaxHFQQ4lM4QGVlEWaEEjYwAEY3jCYxcWNUkyThgUdIUyUFY0QVEFdhAkV1fSRlIyaPUyZnAWNhIFQ3MTdJkCZqkiS03DNVoVYgwlYCMiQvzVTpY0L4.0JzTyZvPUVKYlb2DmS1XiUNUWNnk2RiojMDEUZvnzM1LkK4IUP1.ia0IWLtUkR5IVUsYGcyw1bUsFZoEyQrkldKUVRV4jQMwVdLEUdJclapICSjkldGM1U4rRR4DjK3fmKBQkLLYSURkzQCMiZzgTTz4lZpAEZPkSP2IDcxjCd2blYhoVVwXUQjMjV5cjVk81PAoWVB4la47DLYMVcV8DN4fFTFQlKQ8DTQY2bqsRVtjESoIicHQ0MyP2SKozQ2XjX5gCUQsVaRUDSvcjd1.UXToVSwPjVtETbrkUMgw1UXciZwDCSq4hXCczThIEThQEN1MFd5cVRQszTzTCSEYFasUTM2D1Qi4laAclVmMCRsw1c0PzUQgUNtb0LRglLw4RbGsRU001bt.iMCEyPtIyQBYjPyA2PFwDT4cEbvXiSTUEcEIUcZoTcGoGUw4VMy.iXv7FQzXzRzjWbqPWbvTzJu4VdvkiX1PiS3gmbuojSrEiVTEESN4zPuYVZ0szShUTbycmUwojYNkTchk2SrkkXkwFYZEUVgMWQukSbyslRCgicxICYwYVUAo2MWYWaRESNFYSRi4hZ2QGMzUUbCIDYqPETgM1MxfiLpw1JlclMznWMvgVYIISbwfWN4.CdIAySEIzRLsldpokcC0TbqrVNnYVPTQCbIcjPyM1X1ACLnYCLvYTZqQCNvQTd4QUbzHjKXAEMpUVMJEDcy41aqUlS4nlZVU0QYQEZvgzP5gyZMwTcsoDUIMDTg0VXnAWbVMSMuQmaq3FN2kSZQEDVCImKzUyY1n0boEDamkyZxAmVzjUPRcTdQI0LrUUcyjUTC4xXIMVcxolZzYlZzgGboUiMQszM4TSaqISL0QmLtwzLMoGLIMjYy4VNVYWRhMGQnslds0DNtUWa2MTdNk2PvomMY4DN0bkXN8jQz.0T1QUX1nGdHITLw3hY2XSVogFYnYFNtbCcEg0c1vlVjI1R4UmRtXkVlwVMV4zTWMUPzvVLHcEdtPVRE0TN3bWR5kzRSoDLWo2L2UDcRM1QwvFNzP1UWgEZrgFbybSV4QkZ2zVRrMGVJcDRscmM04TYZIVYCgkXUMkS1LSVi8DVWcmPws1c2kFQSkVa0.WRA8TXxQGYjM0asYjQrAmbvH0JHI2ZiIDYOUyTFY2P5EWQVwVM4EyMxYzYPEjcw0DdpI1cxQGa1PGU28zSzokSksFS4PUN3k1YjMTVAImTTAmRhEjV3PWRLUDNvXDNBMmT3I2JUUTcMEDNDshaWshSLgFTQ4TSzjidkE1b2j1TQkVTzvDZUk0UyYGSpshTmQDaNQWXKkycpMVLPYySugFc0fzLiEmMm4FQlk1bsQFMOgVUtomXxPmYKc0UyUiQQEkdMgVQmMiStfCdoszZwoGQL4xUhUGNtQCLvrRbAMTPQsTcMQETzgWSSgGTmQWajwVbTASdWg0PrkzcJAkMUI1SIA2bYoVZ54lQTgEdxgVah8DZwsRMmIDRFQFZUcmT4ASXBICa0AWTG41cXMTcyQlTgEyTJoWa2EUZIkFU3olXoU1YHkGRjACTBshLLAidC0zTZ0zcAEySjIUL3D0QHUDVwMVdlASaJU0aWYyPyUWTnY1J4UCNhMjKloGdDAyYHozXgsxSjECYXk0T2zFRZwFLyTlVmoESiAmcSYWSAQzLpkibxUFSVUWcvolRyQzRIsRXxkESFAGS4LUX4TELxTmbCEUQokFZWgUatIlcYQGYyMGLywTShcjPtTlMQYmdoUUN2vDYwHmbwkGdQQjT1nlM3LGYTUVQ5UlXyMFYowjUE4VctjTXLQiQNUkROUWb2DiMlgCVx.2PZ8zX03VZQwDVZYlQQEmQTsFRqUlazLUZyQEUqXDR141QxQiRsISTTIGRicVdqIEZCQ1btbGRJEkXw3xRjYmZOI1YqI2YLkTQlcSVLM1SoYkUiwlXWACZtXzUYITStI1QwLjTDEWNwYGQwA0JRISai4DRnMkbPkyZ1DEbWYjKIQjMzTFQOgELzY0PAEUZukFYzA0R40lV4vjaFgWN0njXz4BNKAGR1DCVzUENJ4xR4PGRYsRUTITPjcTLLIWdJY0PtDCbWckauIWPQYmV3HkS1XjSLsBdMcTNwPkLXEiMA0FQxgyaxgzLRc1XkUGRxclQ2kCVOEGUv.CZ5c0MQMWaS4FTMMmbRUiMUozXTczZ2MCMOISLkkSTTgCVZgFYqkiVvT0UUgEZhYWYZkUY2MjbR4RaC81JPYTV2w1Z5IEQHUUTAYCQzXlVDkTcXUzTzXiVwTkS3YSZXs1XBM2cmUDQgYGQ44TdnszQ1gES5MWVPU2axMTNVICRTAUPtEESrcTbvH2JHEGMqoUcxEzbQsTd2TjTzcSSqfVVJczXDc0UJkDYUozcxM2LtTkL1kVL1nkbqgVYuUkLRQWbBgmMhkSMEwVXp8zbJMySY4zapEGQhEEV3wTYFAkQp4BTWMVcokzZmA2azDDMz4VUyQkc4Ujdq4BNGQjXw.ETIgUNIcER4zDYwo2RZQzT1PUZgMUV1wjVAoWZMAkKMslS5cGMwUyYRYSd3DjbRQmRWwTPTkWQPU0bHIVX0ciSukGUEwDYoUWTyPDLoAWLNgGb3PidJkkcRITP3YFZ3QWTIkyMmETQDMyMoQycCE2aDIDZ0jSX3cEY4AWdhwDbiYEQYMCUiQVRlokMXImX1gVSi8VN1QzZxLjPnAGMrkEVnQTRUsTa4X0JzkTYjI0T4UCZCMkUgQ2cCYWR2wFRq4lZXYmdqICdQACYJIURJk2MQcDLsYjVkslPnUEduojTo41X1DGNVAUThEVLFEDS2YSdBAEV18VVgcjRtgCLPMVavszSRwTQZ0jUEYEaMAiUqLVYRkCcTojUtUFSjw1TNEFMtUERSQCdsQ2M1bFQ3TEVuQ0c3DlVJYmRzYCNQg1M0QzU37lPU4FYJkkMn4zU0nWTRo0JPYFUnwDMMIVMnYSX4QiVW4RXTEjTUcFUvwjMMk1JIUES1XTR0rxRNc1MFQCQ5kmQz.GaPYWNNozUHIWS4IFY3zTdowFN1gzZFIWMwcFROIiSHQ1Yok0bsICZ0EVVn0VMMEiQVUSURQ0QvPjLDU2cNI1QGAiSoUEQkMUU0szQsclU58jaxDFR2TmdnElYpwzascUQxnzYooGUwXEc2YTVuYlL0EmLoIjVqLCbIEWRx0javc2PxzVSYMmcEQkSv4TctTjUtQGRkU0bFEEdvXlQVMGUFQDL0rVYvg0U3HmYxACarUkMpEzLw.SSMglPW8lTPEDQtgSNUkiag8FdWYUTCQlbjQVR00jTp4lMzHjTZ0lKDk0cGIGcAg0TF4zPtPzTRUTMvUSNzjUaisTMvblZrA0PH4zS1jWNw3xSWASatD2MyHycjI1cF4jPFwjLYITYjQyRHwTLTsjSDgDZA8Db4bFQgMSXx31PDsjMqUUVNokYWwVSjIURusxblYGSY4DdFwjK5MSXQgEUFUlS0L0bzA2TNsBaPM0bCY0ZtH2broDNCQVLA4RLvTybQozQugmMRgkTIsjSLQyT2YFMqEyRDs1XAMDLvP0QPgUQ1k1T2UWL3bSYVc1Q4XVLiUjMVoFQgwTbpo2b2ETXBUGTBcDYtY1bAE1aDImd2U1XxEiMlYURpQULl4DQOoVZ2gkTC4xP1DkQvnjUwkkMWcFLyQFYGI2LxIybuo1PPQVaqMUVXE1U0LEZqokdj8zLqgmKBEVLLQkQvLVU0rDLww1QWUFL1nzMGsVMIoVSpgDZ5MENpcmKl0DTwU1Zxc1UY8jcTYURgAUT0T1bWIlZV4FNC4BRn4xXXMFZ4M1ajIVdAk0RCYCMqITRswjSGITLB0TYRkjdiU1R4XCYMg0b2bzLgEmLnIScYYlX4EkLWYiZwj0aqfWQyjzJgUFdiEmLr8zXgE1M58TVqjWLQA2LqjTUy7zTm4hbromZN4xQWYCcvMzLTUmTtrVPNoDRXQFc3UGRRUlYXUjTt4xLBMTdrYUdI4lKTQ2Ms4RYkkVcm0zJCMFcm4FQAElPkQ2ZHkzSVkma4rhcA81MKcTdJYVSVoUPF8TXAgDQw0FN1PUaMshP1zTPEsldPkjZEMkVuckbTYDMVEkMYUybYgiXxojYNQDZvEDdBQVa4DzPDYSQwoEZoMUNgYzb4rlRyjUVKkVUYEmXHM0UWQSTEQTRvvjSxklaB8FRgcmPgsxTE4BU2IDRpEGak8FaLkUTXQmMwT1cKMjMSMWTK41JiwTSxL0Tqg2cW0TcjAyYkQDN2bGaVMEQwflbQ8DbvsDN3U2YwIFZ3jyZ2cUP2nUMmcjXkM0a3UVYTgGYgUjayLUbXMEcV0VVZwjbEsDZ0wVLYYUMvMVQ0sRNXI1P3HDNTgiM1gFViAmYv8lSX0FTQM1XvDUMMY1c1XmbMMUUKAmQ0YVLgs1XqbETvfkPzbzM14TbVIWVwvzaRwjM3f1ZtHiXmkzPIUiRGgVUvoWXKIzYgokKwvFV5IGaQEUdwLTPmESVsMyUnY0PnsxbOozZHkjKW8jUkcmXRkEclEiT3QiZMcGSNIzbis1J1kSYnkyXy0jbt8DViIVVrQySQEDdTYVaPEkYrglZ2XTNkQDd2sRRSQCRmo0XjczRHQiZZQkavbSP3wDZKETV3UCQPw1PtHVZ1YGb1vVYDIERsgzaHo1cw4jUm0jMqvjXwcGc0XUbyASTt4VRDkFLsc0JxEzLZUGNNUDMtgTT1IERHEVbP41csQUbiYFLiozTkYlawLVSoYiXqoWcAgzLuo1bqojSQU0bhMDZLkjXFcjdwgjPJclQtYyRFg1QGgmYtEGM4IzQ0IzYvAGN3AULhMWd1giMwHWVxoFQwXUMtcjL0QWan0jdqQTRwkjMxbSVD4lTZclMMUUMq.2LyfCQRgDLhciQT8FdtjVcioVYvU0R1nVUqT1R1HVY2EmLGEiZE8TLpkkLrMVYukWLU0FbBQSMsYiQGgWYEMCMIo2PMkGZLQiP2YFS0XUSlwzZ2HULDUmKWQ1Uig2bvAmL4ICbDMmd0MWcxMkM0HldZcmYVISQpM2UGszbvoEL2fWY5IyRIwlSM4TZLkWZMo1ZtEUbBIVcKUTVrg0RO8lZEQmb28zPzHlLH8zMWc2MiYyUtklLqolQWEVdJ8TXkcFLqY2cEglPoEEa4Umb0kWNtQmayM0UxEjcVICN401arYlX18jXYkkQFMUYUETPFIES0MiRFESYvPzcFoGMLQ0cqLUL3k0Y3PyM3bCSuQ0QEk1SkoFSxQTSqLjd0X1ZyYTRl0DVTEVXAcmXZQkZvECZtQmZ2jibLI0TYI2QKQlYHQiLw0VcqXDML01JQYWNFoDaqrDVZYGdXoGL43la2bWPy7zXNE2SFISRpcCZSQyMrAUaHsDT0QGbRg1XucicFA0R2LGSGQ1PWo2Ul8Fa4ckSKYzcJgkQUYCTzbTZ04lZWUUboImKBkCLUgGMAYjT2IzRJE1a1TGZmIjcsgFLvQSZIETUMglP0PlM4zlSQMmLm4hStHzaiYTS2AGNXImTHEjQCkTTqoFLm4VY3PGcBkSc3b0MtfUbikyMmkEbpcWNsEmaHoGTqbmY4YibmAyU3EiUzg2SB41c3YjQ1LmP4bUQsUSMj0TcWkSZXokSIEFSA0lS2ckR1EmYKQySq7zZQ8VTOw1QJYWSpYUV1.iaRQGY4XWXUUmd1fSP0gURDEEds4DYSM0Z2TCNzgVNzw1Sv3RR5ITcHgkZWAkc0wTNBISTWcCUwcjc04xU3YTVzkjaRI0JysTa2cFYEsRYTEiMVgCcOcFNZYSdzTFQxgSVCIUQvrRPLEmPQgUdjQTTKETL4YkMvwjY5wFSx.mK00VZ33xUqoEQvYCLWAiSGMlTFIFVDkUPEwzPgYDSp4TdzLzU2gCZVgWXTgiLWomTvXlcpkiXzMmSmMDZC4lV1DVY2cWXDEiLuoFcXkSaycWUKk1XPckTOcFVEEzRlQ2aq7FMYgWaPI1YOUVcmYTcyEzbD4BLgkSTL0zLsojM23RSUgGLqMzT4nFVwQ2XxUmXvkjVvbyMjU0SYYlYzrzcSQla4YSN4PmMQM1Zn4jZxjkKqkjYokCc1MFbG4BZ33xJjEDUv7Tdos1Q4LDcB4FRkIkL3nUY4b0L2jmP14TRZIGQpYTMsQGRxQmL4ESNjsDUwXkSBA2Xy.WSWQ1arojPjMlaAMWPJcES3YEbPICTiEkU03hYyb0SLs1YSc2cVAGNTQCcOQ2JWgVMAs1b1T0JxUia2ElKt0lSzEWRQo2chIEbPQDY2cWRTAWQDYjSUAmaIkVVpACNvPUTmM0aZQFS1fGatHUQGAiVV0TUPM0QrYmKAoFSybFR33xR1DSQUMFQRMkd3oWNwQVTWIVLHolUtDUVzc2MlMyb4PkXgwzULoFZKQ0YNMSPq4zS1vTXXYiPpklPVsFcUQmMwAkdMElK4cUXK4xPTg1Ry.mSogUXJYDZG8VQWolKvckQFc0XsYCUSYDUIMFZTEDM33xbwjlTrYEQvc1bOISahIGaoMDVqjzXP0VLOUzTkcUSkcTXnMWNUEURNAGUiQUQsQWSwnFSGMkRtrjRUMlSWk2TyDjLtISNVgVcWE0LoQlb14lUpkmSqfTXlIlVEMEQ3LlajYDYZAESmAGatYCbVoFUUUWLRElZVUGV3glS4szaLEkcy31P5gFNpkjbvrFbDYCVSYCSpEycAA0YSgWbRE0a3kyQAQVRGMWXugmQioUNvfScSoDMT4zbR8lTPokVCQVbq81L0TWSw4lYO8VQyTEb3sDbRsVNoEkKA8lVxAkUmc2LNEWaIMEQC0VbJ4xLwrRRKQUbqDmc3sBZlckcgMySJUlMDsxSMoTRvXiaiYyY2T0YhozTvQkdIc0c0zzT1TDVi8jUGsVMzfjT0HzPHMVQMQDQukFQxYDQ2rRMUMiMysFMNIVcpQVN0shPRUEaSsDavkDS2b2TIEVaEIia3.GVtbiYQUUUBgVSI0Fbx7DNFk1avjFczfSVG4BdLw1Z4ciaxMWY5QFbgwjVPsBNUUDQIUETKgGdYsVU2DUSnwlb4AUaUsRYJ4BdE4jdo4hMWgTcMUyTtoFa2EFYmMDboIyUrEiRmcWVDkjSII2Ly4BMGoUdpozMsgFTmwDSvPlaMI1P5cUVHc2PtPDSHM2X2MGQ2c0XBoWcDgVZloTSTEGLUYDRvHSXikmYyPFNUgkQOgEUAolLtomZvAkSVI0POYVLWszbMY2bQcUPN0Tc17la0sxMYoGcYsjbPcFZTkGSpcTStzTN0EiQJ4DUH4BdwY1cjQmQVkTSMQUbWUSUqnWdyvDTGEDMNEUTiQWTOkkVUMGNzDWUNMFTDICVNcmPWMWcvPiQAkjLiwldzIWRAYkVKYjRIACVhsxR4QmYxnFMqw1XrkGVjE2L4XiTzkkLtn0YuASVwPUcwYmb0TCbSgSMzQlKyzFU1bEV0cSQugWSOkUL4AGbXEGa5cjawTiRLASbIElYzEmUAckd3MCMTQCSqQTbywDNwomMRQUduESa4zlbwblPFQVa0gEYvMkZVgiP44lUxY0JOQFRvzFYtjzJTIldA4hRKYlbv0DTvf0cFsBQAQFaMITawgiUkU0b2.WT0IFQ4rDQZoEYrYiYpgUQsMCMY4xR001SW4xQmozbzkVYmQTM5AEcOIVPT0lYg8zaEUDRsQ0agQyXLY0JzP1L17lXHITVq4DNtbjZ2QEZyUkLhckQYQiQk8zUD0FMmk1X4PTNBQSPzAEY0YScpA0URETREYkbugGR1MEUEA0cjYyUnQDYu0VQLc2LT4TbnQyMkAGbNoFU1LCT2ImQqEmdScTYSUzUqTDMnYzaOQ2UxnFdoEGck4TRwQCNQomM4Qzc3P2PGcWLGoESUQmL3LTQ1bFdk81SMk0LYEGa2XTNBcTMoUzQyUlTwbVLXA0UzIiUL4FRDoWNnYWaX8zLq4zbM8DUyXiLPsxL4LDUU4FRCoDTXYSPxLjX3HlawgUdVoTN0rxUUIWXuwTYrQmYVYlc5U2Q0DkagsxLBs1SMokUxnkMhQ0S2YmYl8jXyjEYzjlSk4xQWEyMAQkMAsRatgDNxQ0SnYkPscFTO4Rby41JIIjPJk2JyTiXvbTY24lM2DENQU1X0n2Pic2PikSMRgVLNMmLN8FLhkVR2cVTEcSP1fFSNIEMSgjYE0jYIISR4DEdrQCTUkkM0c0TyD0LrMzTr4zYOECRvMDS04DU4nGL03VS4QUTPEiXPgVNK4lT5EUQzL1YWMSc4UDbWMiMw31T4PVXoczcw3BTA4jXxcEdDwTZr4FcGoVZUgmUIQVdRYlSgMTQPkDU54xURI0UOIGa0XGYEIDN4UDTv.UTyDzaiwjS4czJqzDak0TaHI1bAAWTBICYTMERxcTcZACYzcCd4MGaFEWaNo2PMcCZgEkKFIDU2shSU81XmYlMWcWNyEmLOU1aswzYHUVNXUCcrokQpMldHYGMHs1aiIyJIgCRqrTMLcCN2QEQyD1YqgUUDg1P4ckVMckYH0TTrAWLH4jbvP1TFI0S1HWNvk0RrMSUNIyXNIUP00Da5kFaVgjLvLWPWshTVc1MEEiZuQGV0EURq3TdFcFbRokUxIFSksDVLwjPkICLQIyawb1RtnUXDUGLE4hdWYkXgc0YnsRaGcmbqPCM2bCYwoVMC4BVUIFcUkmX4QiSyYVNtX1Ysc1XGYka4oER3MUN4rRNtbVP4kDcugmbhUzM0fkaqEELSwVbZgyR2sjZsgGcwQzXPQiYPMERwjDVucCQ2TUM3IURnIDLCclMwLkVKIlPqASL0DUSRMCYXoWavYSPHoVdnUCYTEmbMkjcTQTYtIDYJkzXlslbhc1cv3zYyDjXswTa1YEaJM2XkcGZXsBdHcVVEYWUxrRbGczXzciPyQCTVI1a58FLF0jUsICYtcVbtgmPQsVVxAmPwDibZQ0JvjSS3EySZgFcPo2RCIFcPY2LkMEa2PiTyE0PyEiPogiYgYWVnEWYIoUU4PEdwoTUhQEUD4hQJQTLkcCbzkyTt4layQid2XyQUUzXroGcvrDYLUDTjwjKVY0PEgTPlUlLlQiPLQDZi8DbuM0XxfTM2blYjojPIkyRwkCNvnlRRc0Ry0TMt8lZ3YEcWkiZN4DUygmM5MzbiMzUtEDYF4zcOsxawzTR4QyJiAkdlYEaKIlLyQybmIkUioFMzgSZ34FdpAGLZIzPocSMtUjTlcGYVUlLEoESqfiX3MjK2M0QyYVbBUjLLsFSFYVVnMkaskUTWwTSQgTSZMSPK4RQmMCMxfmMnUlLIISYJMDVxc0RhA0a3EDRlEVbuM0cskWdjc1XSYlKtbVYPUmS3AiV3sDTMUCL471Z2bScZAmXBMVU3EWSC8lXxbycrgELsETXpkmQ0TEUogmMKMTVtDEdBAUMMUyMy7FLyQWROoVM0PWbAoUQ0DldzcSX5ola0ITPxIiT2oTXWszJLoVROkCSMM1ZwjzZksTXncGLMwFV5gFMVImKzshQMcyXxrBURczZ0TDahElL2o0XYk2UzE1ZsUCV4fTVR4VVXIESw.CczrVdqHFTv41PiYDdMUSMo4hV2AiagQVc5UCLEgEY5sVSgEFajUTQuc0S2PmMZEGQwjjPtfiRyMyMYEWYqXjKrM2LSMVUjYUdXM2XzrRX2bGUgUlcQEzQGEmQyTlbOQTS3nlYynUNxbjTwgmdzEEaPsRRnMTN1TCLqbSUUMVQEcDZQQlXw0VNqY0bWYFSIQDNuMidoQjXig2Uw7DLvLWQqX1Zs4TSW8TPjUVLHECQxfERxnkdrEyR4sRLuMSQUYCYrYSM3vVYoI1YyQ1bVQkYNwlSiISVRUUR0vjUMU2Zw3RXQ8DSoUTRvDVLvLjMIkVdvYDUp8jRFc2apIVNkMFYWk2RuYCdC4hMzPkL4rzUxE0TvQDQ3TzJXU1TybVUJEDUzLCSEolbjQkU3gUT3oTR3MSZIYyblojdUk2aoY1ZPUCaqUkKRYmbXIjRvshbpgyXFgEY4n2LQsBVScWYtoDQRESQXgybEU1MxgSVsMTZSkCNtjkYQg1bvPTN2gmQREzSDgkcxDEZmsTYCsDNs4Tag4DU4TmL3HEbqP2T3fULHQiK3.EV4ACLvomM2USVXUUd5YzcBU1JDglPwrhM2fGZ2QVVIo1J47FV54lVwIyMwkVSXoDZXoTQ0kiXvIURTM1XqgVbIokMN8VdgUFTSgkKzcDQQkCM5ISTysDbNwVPLolMMY2Yp4xJ3X0JPciTpYUY4sVYrQGcOECNSYEaC0FMynjdj4RNtLCbqIlREIkbIkUQMgGTu4FZvTDcikiUXcUUQwjZycEdwcUc0LSYSAmUFA0axXmVAQkKzY0R5wTVHQCY1jEbwEzaZUzczkkULYiR33xJIEjYqs1SFElcF8jSEIEQTUmZAQGQpETchcSNwjGatcjcPE2PVQDcwPTUDY0YLUEcxA0TyshQwLWSVkzT1HDQYk2XF0jXDsjYwf1MRIid0ICYNgGNkokLzXUUKAkSKAmQXMlYUciVJUEZ2fWcocFaBEVaDkDMJszR1fmQtIVYOYETDshUtbUZYYGUTYzYiozcLEyXhMzUYYTQLUmdAMjKTIkbZU1ZxHzRK8FLl8FN4YVV2H0Q3HWQK81QT8lavnjcOEWbpIkSyrDcYQVNGASXNQkTEs1RXIyTvrxXgY1X1UVQ3fCZIMiX4rVQCYER2jkLJkETMwVLzLiVHwTPmkVLLszRAE1ZyDyXgIiZRgySycmUqEiLoUUTvYSQWkFZJ0jMmYTcmUCZYMzQvI0RSkmQtj2JUciPBgVTmcFa0j0aIEWdlYUNmEjXZcjK4gmYVQWcuAUPqTDV4H0cvY0JBckKSoGZEUDdOQSTYk2P3QjLRUiSQgWMMQSPTcVUR8TUZMyPXciQ5QER50zR0j1b3zlSnESVTUDbhUVUjE0PtfzUwXDYKgCLxQVcqYDbXESPuQEMznlVtfiSO01JSwlbUAmdukDRtEzLWUCcwHzSlclU3kkRCQ2XNszJKQ2QI4jZy3TLkU2R1X0PnAUUloEawD1bAQTMwYWNt.ka0EFcRUEbBoWXlElLMslTFgSc0cTVS0jUlUmTxbUQlwza17VaIQSQpIUMBIDM4oWVWEDVHcWXt3xM2ESaTwFNoAWSPISVs4Vc0QSS4jUYS0zY1PEc2TyL1bmbnwDM3Q0S1rTQvDTQgUSZ4cjXKQzR4jGSxkUX1sBRoAGakklTSYmRwcVPRYSPycFLFI1b5ASQvEDUhQmcFYCQyXGUzz1PE8TPIMDdGYEQuUiL4PkblkUZH8jYSI2RS4BZPkjM3TFaOQiRNIVcT4xRZkyQQoUdzgTUiQFSB8VQo4TXS8FLykVYDwFL281YWQ2RSE2LsAUby.iLvPmY2fWNEIjcpAyYyIGLDIiaXQFNIYGTiYVSpwlLwEzTucSX2gVNIoTM2n0RioWTIkyZBQiMXc0TowzLHEUT1TUThQSUGgiYZUUQBQja4.UZ27lVFEyYEEiXzYjV3HmP3DFTZ4jcDglRAwjcIsRZkMVbBQVPqIVLTUDSJQDQtL0auEyL3bGU3rlbkckTLYEb0.WNi4BZkgUXssFdxnjZOQjPzkSQukSNnQUX2PTRVEmP4zDT1bUNWcCaWIjchYCZIYkPvDyPsE1cGcEZCMUXvokQ1cFajcVNCQTdNkSPRwDYO8TaMcSR1ckQyM0XEkFRj4hTU8jRhk1LAg0aQIUZ1XWPlM2Z3gEU3HCNzIVZZE1Q5MTbHE1cMUWaJEWZvrhXXkldTYCZxElaoUDNt8zU4gUTJM2a3EkdOIlRvfTaZEFZpYUPYMER4MzZEUTUi8lT1shLHEEZskCdz0TUR0VPmgjQqrTLIECMjc2ayQWLEwDYDQka5YzJEUWcqwTVz8VVKQlRuQTVwLTcjo1PYUiPWoFT4EiRVQDSqUkRFI2J0UTVRYTZSEGTVYVYXcVUsMTMlQFZWglbwTjM2klQKQkawXULMMUbWglaCUWSNUERyIkSsc0XsElby3FY4jkSyPCRiEGS1UlSGkiVlAyZrgWZyj1aIgzProGd1czM3LzZTgjbvTyaRwTcWIVSUojc50lUWIiZyc1PwMGVy.0PNYVL4LzR1DEY1XUQLoTR1AGRqAkV4HmK4QGMMIjQ4kUaFcVYT4xSPgzR0IWQ5EGLqEDZxHUMzLjdMcDQoICcZAUa14RM2LmL0IkYKkicyjSVIEVL2UUVqoDc48FNAsFT33RX4E1LHoDSCAyJHM1PBcSMxolKkEVUm01LtTmLOUCN5glTvojZHQCQ3LWRQYSP4UGdRMGQVcVUicSPxMUXNIUQyUmYwIVXMszT1byQpUSM3PmQr8jQrICViYWSD8FN4QCcHIyazjjUvIzbBEkbzEiQYQ2PiYWRD8lRCYCM3fDbzMSMkYUMZQTRxIFNGczXUUUctnmMuAmTvDEQgsjcMwlRJU1cZ0jMAoFVxbiTznTLyQVLlg0M0fmXTcjQqMjUukTdicFZwP0LhIlZ0QERUUiXgcFVUclRtLGMIwzcqrxX50FVlkzSFs1cKQmd0M0bkEDVAYTcVckXyQjM2k1T4IjLDE2c3fDTzYjTQkjQ3.WNoE0ZGEybgQUTo4BZyTDYDgGVqrxPtb1R27zcPIGLBQ1bRQVSEolL1gjPAIVPFIGQ2IFdEkFTlA0UkoEc3klLUwFRXoVcYUCRhQEYYUEUzcVbOkiX2.UbxjELZkiLRwldyPlMhISd4DmT0f1aNAGMnMTcVgCchYTXsoUVqHFNzjlU3PjX30jQFEkVtYFUT0DT3DlQLgkVNgTdUYjcjUiPXETZggjUz7TbJITRAYEMwHSb4DTLQEGQkEWZp0lVyHVZqUWX10VPxjmYFYybHgDTWc0MTkzSRkyTGAmXvLTUKIWL3HWXnwTMxHGQAoUd0QSbUIzSpUWXNU2cVQ1cs8zMCc1arcWVK4xU2YFbgYDdvIkTiAWNi0VLBcGa3MzPvfULKYyaqbTbpAyJIUTT3fSUSoWTS4xRoIzJNIVZCwFd1sFL0kmVTgURVg2SQAUNUcySvXjKxkkXuojKBU0LwTVSwfDRm4RLqHTMGY0RkMiVOU1J441XXAmYHshKJsxZKsFVJglZXM1cy4xascUQKokblcSbXYVXDIWVwHTQXc2PCEFZGgyar4DcJYyZqHGMB4FcPA0RoozP04lbvk0ZCg2QSkVRv8DLJEiQwDCTm4zP4jyJ4IzRRAEa2U1SWIkSvfiSVQEVIsDLkgESZYSSgo1cLUFQtbWQz4TNjwDYngWSIsjQC4FcqQkMiACV3sBZ3TkPhMSaXojUJk0TRMkVtHVaE0VQFIlc1olLiAkaBEDTUMmU30DVYQlYSgFSMwDaSEDcXMldvPCVscDQro0TAcUboczYmo0JwUCc0QFZx3xZCYzayslPgkid2blLUElbPo2amgjLgAWNiwTdrwVY1oVLCU2YNsRSV4FMkQUUKIiazYkbxfzRkMWNtbidvMEMGEmMzslc3UiPN0TXhUjYwQVSnI2atzlcoQCMRgzM4fEMq4Tc0UjUscWMSoGMjkDdIciZAQSaLkyT2gETCk1czg1bAQ2LU41QIQTdzXkYJs1RkcDQq0VYMwTPAMjK0XyQt7zUyQSNDoUL2bVP0oGausBSiIlapokTAcTPw0jRgYjUoY0Mq7lc2klVqjmP24DVAwVcogyXU8VMpcGcz4VVUUlXkU2YtT2a1w1XWgFL0zFSgcETTIEcCklX5QyaLcTS1oDd03RQHQSb2fURGUDT1L0Ys4TShkUL1L1MIMzRGUWdT81QqXEQJIlZSkEQzEFaiQjKtH1YvT0P4nzb2fTTsA2RCYSVGcCQh0zXA8TNPAid4DFdRkTQoIiXyQ1cn0Fd3fSSKckPSYSXKw1TwU0Jj0VPvsxY2HyRC8DMroEdpsBcBwDdmo1UqIlSWUUL1UzcWojPD8TTpMjXQYlSnkSMIYyXEIiK5Y1Th4FRhQ0c0L0SH81Uy4BNLAkPtwzQjYyX4MVbrgkYpkkVZEVLPQCSPQidQElU3T0YF0zQwY1UF0jPFEkLjUmc2XTMlAGcvQGLmolKYQVd2nTTKElSZISUtjGdEQ1USgEZnYURkgUdMIlKw01ZHQ2bU8zL4M0YJITM4gmdXQTXHkCbR4jTJ8zQ4HWdx3RY2cGNQkTcSclXHAmbxQkbugUQAYCczDVUWUTPlMmZo4zMVU1XSciaznGSVYVX0zzPkoWLOgjKYY2LOIyS4YFZjEUdvjzUrAmSz0Va3kFdXwDa1njLkYTQkoVPoIzLv3TXJwzJosBZmEVd3TTRLYiRMEDZ1EkbIwDaDU0cDQjcGY0QpQiUm4lRIkENlEWNRQEVNYGN2HjMnMVV4fjQYEDdq0DYWIibTgWcKkCUK8TS50jQD4hM0YlK24lMMI2cy7lUGMCYq0VR4j0aDkSL2MCaVY2RnA2aW0VcMszSk8lQ2QkTq.SNnQmdBoFQTkSQUc2TpMTMrwlMlciUyjzcrEkL3fiR2X1M0nlcNEVbOgUVxEEZ3UjX2PjKVAGLhUzYUoGdzkjLKg2aBU0JmgTQrEVRkEWTyLyT5YkUMshLVEkPV8Faq0TRBwjZxDFUyHWSPgETgkCM1fWLIA0MDYEQhg1TqbSU2Ilbtrjc4bFZEEzTzvTYTgVZvvFRY4xZmsBdY0zXOcGU0zVbUUyMHAkaoYkdlg1TPISQNEUP1UFYtflPyDiXqf1J0cWZ0MSUzTmRXEUTjQlRGgyJqwlZqISbAUSZBYVZpszcQ8TbBokKMkza4bFLuYVYysDRro1ZyMjMkEVU18TV4f0URc2UXE2bCMkPXsTVzrFNxbUQxYSavAkaz41LmQkXRMjMyg0S2PDRIMEd2HERNkTLTMGM3cSZ3UCM0fmRzPmKsMkXE4BQ4ASYZQSTSo1JWYTMV8jTnMlKZQELzXSRUAiMhglRtIlLBsxMJUSYFoGb07FVwbSLu0FM2XSSGACbhYFa0wjRkEzQxkDQAoDZ1sRYKUiSXUlMy7jYBUUPkomYmclcIcUUYU0Q3TGbK4RSg8jKYYkSqLzXQMjXK41MmcCSmEVdNg0U3EkQxcDT1gWYAMSXUcDUSEmSX4TU3jWQzTkTP4hUoE2JxX0MxDSdkACSO8DVvY1cBIlVDIFc5U1RtklYv31J5UVRlAiYvnkZrokKxHmZqElXKIlc2gSVV0zJybFMokiMxgELh0jds0DbUoTQ2c2YKsFNm8VaN8FM4n1QokWcUgzPBgSNrYSayYGYBgkdhQDaynEclIlZSMDUtkDNLwTUvDkbAU1ZuYzQ0TDQWYiUCY2SNQmdCkSc4IUYNEGTtD2chASaSETbsEzS3I2YAcTQQUlYqLyZVAyMtjVLkQCY4.kVhUibtAkP4MUQBsVPxHyPv.iZz7DNsMlYRg2Ln4FcJ4DZRMES0f1XvEyTJUGbLMDaLkFckQVXnQjXCMTaxjCYlAiR3UkXB8TT2HWd2cFUA8DaR4xcNYjLW8TZ1.UcIQjLYwFNAc1RCgSdrACRVgDdG4xYigWNBc0PvDWMYshQl8TQJ4VQnw1UMQSZsoDLVIWStHjV4HVYlICTXkiP2MWcvM1ZvckXLQkboETMxXFahU1JkcFTIEWcMASPZokKNU1R4Q1JDwVd0cDZTMzJrkVXZcVUssxPxYDciIlYhomRXcSTVQlYOgySAUFdxgzMRQjXBQTQyX2cXMEUC0jQ0HzLrciXpMULqckX5IWRVQVSqLVZHgETMc0MvDSUOcWUJIzLPwTcIUVNz7lSscTTsUEUEEjbvY2a5QSPUMmSjQESusldZgWcFkEMI0VQFMGMREFVPsDTYgUTnoDQzLzM1DDaF0TSxPlQpckStPVLqbmMPICQ03zJHUlUroVXwHCSSUiVu81P14TRxkSQ5sTVtPlTXgVcUYlcGM0YS0lLT8FVEI2SxfTNRMVYvLzQIY2MF0VdpYiapkmQWcETnckKzDkXrEyU5wFMzjVcpEDc0ASMKwTV0DSRSAmTiomYgcySOcGatbSUsoVTU01YDo1TOoVazcSPicFRIQzPgAkPtsTa2cSQJYDMXEDZYYCYlcVc4Dzau8zYwTiRA4RQuM2X1oWP3fWR0UEYgYjczPjP2nFNPIGZXoVXjcDN1HFRRwlYyXycYo2J2XCU0HVUUI1b5EmT2ImRMs1QVYUSLojZoYiVx7jRYoTXXk0aZcSYkIWXgIVU44xJMkDRwLER0TzJJ4DQjEEMFM2TKQ2MrcldD0DcKMFQtfSQxDFSLUEa3gmZVkmYxDTUwrxbUAkR5ciK4fmRKQVPJcici8jSY8FZqkmPTIDUKcGSoMUS14TcNIDRgQldVIzawb2TWEFRuk0amo2T58VXIMybFM1RmcVSXAWZRoDbB8zc0U2MxLlawcjTzsVNjk1PTMWVYAkUZA2JmIGc0bUPGYDayAmKNwFTQEVTmgmavTUb1rjZVUWQE4jVE41PzczbnYicLgjREUmaqbmaTIzLyUVZ1UjLLEkR1HVcqDETnEiYhgiY0o0XxDWSvnlVPszUuQVLhIVcksRTmkVcIMGdBgEVHkWTSUFSiMlQugEdSIEdpclSzsjdCIFMTclLzc1Tx7VZB41bk41LgMVZpUmSqHUThcVYAQEQrgWLvnlP3s1J30TdLIjbsgmMOsVVNcFMqrRZIIiLmIlcxXjUiMiTwnzMjUVP0I0Y03Rd0omQYgCNSsDTj0jSyEiZIolapMyUV4FYoozT3kSLPM2RNc2cVI2Ls81av7jRKMCMBI2MG0VbXQSXtslXgYSSA8VUzX0QXcyJMcGdXAkK1LibhQzMtXkUnY2MCsFTk0zJuQzUqfFVTYDM4TEcxPychI1brUVT0U1UWgzXNIDRMsRdm4TdxPkbkEkUgkFThkzP4kWdlIGZUo0J0QUbuIVPyI2ZpoUS0AyZXo2ahICRFEySJo0Pt0TL4wzMFcjc2QEYDYDNZkkLGAWLKIEU3z1bEMCMRk0at7VVW4FZqslcY8jLU0TTB0jcAcSLV0TNFMCMDsVb0X0QzTmb4LURtQVTu0zX4gld0s1QNQycl8zXYYzTwHVb2.USU4jbV4hQ0bjctTVPzg2Sy3zbq3lRLYyXxkjY3DVXUY0LMQFVOYiTRETTGgCUGQFRso1P1fUSvjVNW8DM0DVcBsFZUoER4klUwbWclEGUoQlPgYmX1jlZYElPkYGcRIUMx0DUwMDZC4TQJwjP4EzXMcVQ2nlVWUUQJgya2zjYqnGSRIkSzIFQXUiKZASYvUFMgYTLzk1RyLWcxgmPx.2QwwlRUISNHolUNACavDFcpcFbXM2QEsRLYgGUx7zbyPWUgcjRqLFM0Mybzbkdk0lRJAEYqrzYKUmcCEyQK4zLnQDNKkiRAU2MkYjX2fGLDoDRz7VdqUFNS4jaxM0TNwjcBQWP0I1PSI2TokGNSUmL0X2T3DlcB8Tc0TWZxPicsE0UtzjRPEickMCUhkVRR8VZRw1ayn1QrsVMRQWUqozPxnVYGUEZxIDQYETLEglPyXkdqUUU0DmS28zLxXCdLkmVtAWXlUESqHDVlgjY3f2aRkicYkVSngCQM8lYvE1QEolLwnFTlk0Q5kFMFgTRXYENBU2TvzVdwgTNq7jQVMEUYYkYkQ2XgckSzUmLHcybikWZPc0JgQmYtAidJc2MnIiMFMiXpcmRocFaUIWP2QSQjkUTSASb0ImQ3UyXCIzQVAiZgg2aGQ0QEg0MGQFahQWXy7VPG0lUybiXpAWSGojcUcUY0g0Y4ASczTSYqEVdXcFQ0g2aXQlPhszRZQkKxMGUhYSd1bSZGshcmQmMqT0J3XUU1PWNKsBZtTTXqPUVtgFVhEDMTMWMrg2RsgkP5cVYCkzbXIkcAslbA0zZWMWTnIVbXMmdgQmbTkjRyDEctvzSzgWSMY0QigiSv31PWEGNXsTPkg0bhUyYHElPLIld4AEcYkTbtPTNxk2ZlAUVWE1JAUFa2UVVGUTZRYidpYWV0njT2kkQUshZw7VYSECSyjiYFYkMPMjSZkUSQISMi8FdPglKOIWaJUyTuoUYvEFducicyrhSxHCRJYTQTQVR1Q2POUzLzfUVWQUMn0zbyXTZBcDURIWXrYmYukGS3jzUTUiZtPTYokTRYklVlgGdpISTzjUMW4hRR4hZig0RZwTQmcUYSYWa2ACaHISSzkjdh4BcgUVNwEjbD0jU1DEZ0rjd5UEQwAWcSkTMYgGLDc1LUkVREQDQyfyP0LjZ3z1TRIVNwQ2Pwn2XFwTcjQSS2wzRYM2XzfmRSYTVVcFSV4VcucWRqQlYRUGb1Q1ZKQCaUolQ4M1UJQTPVgFNwg0RDgCdHc1a0.kUy.UctgiVvfCMyYSUSo0X3gERmwjK44jQ1zlVjQlVGsTVJUGTr0zTT0Dc1QEYtUSLnQyb2oUSDQ0PsUmRQYma0fUP3EFVmYUSiIyMyUkQ3nFcrEyYxTVT0wVNFslaZETYnYyRXIiSsgSNhcmd5MTX44RXKQWZqXkbiUSSlIyYFIkXis1YCkSXUsTVRQDV2HyZpIjRIcjSjEGbSgzbqYEV2YCM1D0TXcUSGQWaBoDNocESYc0Rtkjb2DzZwbENT8TPqvzSQEjQU4jKsMiPRslUvL2YrUzQyLCLWgTSKkVcBACVlclZLg1chMUXnsVSpczLTMUP3MiKCYFYxgDMAU0aX81XxrFczEFcA4lTrYzarUUcioVSxAWcu4BUMYUaKEkbNcFNoYkQnYELz8VXX4xS2TkPhoFMLQDZBcWdFgzRIsRbwfiTVQEL3ECLx71TqL1J24hXqDVUT81SnQldJkFZY0laykDQFQCakMkRvTUNoQUcxAURO8DSHcjPwwTYnkldKwTbyLULqcjZYU2MVEUSKACL1E1STIWQ1YUYngSRYYlcSAEdqr1QooWPLU0Z5MjKvkkTuQ0aYkCZzQlUHg2Z0MjLxcEa5omMLMDc0AEdQEiUvDDatLyUUYDZ5kUTmokLyfEamUVdV4xb2zjV0vVR14VaYQjah4jT3k2UScyLIwzUqzVNtIja4wjQU4jMFIia2rTS4QkVmkWcnUCRRM0TGc1YSQlZ4PDatDVL1YSYyUkLHQSdHoTVkwzJuMTaKE0ZMkDd3TFdUIzLwwDVxUDdM0FRtXCZRMFStLlY1cmZmkUc1vFRggkSZUWcUsVMEYyTBsxYpY1YTEmKJsxSIAmcUYFUyL2YtgGdCMGZzkWTvPyUzjzM2IyRsUzYLklZxHzPpwzb0TUSNszTOI1a0DiTs0zXDshcsolMBYFTrwFbZQGa5kVdiMkTLkzR3cGTyPiPzgWZT8zay.yTyj2SBQiUZoFQFk1J2PlS5IEdyUUPMMEMrUWUI4FblkiMPkGRx0zZkcTbyIya3QCUtEVThYULiMSdColPB4VcMUFQ1fkUtPVPHkyQiw1a3LERvMkcyb0MFIjMhEjLykVNUIkXwUTdCQ0aDEGV2DGUiw1Z4f2LXwVU47DbyTlYKISdRMFSnQlQycFdIMWRkEzQXM1LjcCU1ISN0nkcu0jMKcCLtIkRIwlY4kzMisjdFcDYrYzaCkULmgFcnEmTToERV4lbZwjYtEVUvTzL1I0Jvg2J5UFL1TSdVwlS3g2PKgjMB0zJqMCavEWN0TTb0wDQynTcFMCT3bFZoE1LwfEagcmKk4zTscFZMA0Q0g0Sh8TdUoDdzEDRWUidRsjLgIWcyT2SHwjRtkEaYsxLPEkauIyL4HCYAkzP0wlVvo1Qqgya1MWaFkmQ1kzTyI2bnASLS41Pww1JLQSd5ImYKQTaTsDSzQTZAE1aY8jVNQTQBYCckMFNDsFczAWMvD2aYYmYPsDSwMWZOUVRxkEUCIFQvsBVkszbz7lZ1cCMv8VbwQmPSMTMBUSatbVRxMWcishXKMWRXY0aSkyQQsVNFsjPOQGMvclQ0YDRoc2YFQyZ2XmaPgFN0D0UPs1Ttb1S0o1ZxTGULwlKsQyRxLTRGkFaTkSZvfDNtcCcPEFZ1sjR0wlQ3ITYmMlbA4hRwM0R0Lza44DdkEjVjASb0nmLU8TQOglaL0TaTkUb04lLkMWM1sxP2n0YyI0ZXQmbU4lZt0FVVgjR1oWNsozcwXETkUWMrECUvElS3XCTs81SXoVREk0XQ0lYKolVAg0PPYVV4c0LmI2RnckbtYlPW41Ux4VaQE0RQMzJXEmKCEiVSMlaPM1T2fDNnUiL1U2PoglPvnkMJETVQYkSIciPY01XA8VZHwVPqQCZ4XUavLUXIUCUxQ0RnMmYBgSNKEEVl8VTYcTSxr1PEcWaMI1JzQjQwDTV1njZ2kSUkoTNSA0ZxT0M0E0a4jmURUUMookQtkkc0jkb4AGbQ4VM3vDQpYSbHkEcXIFLgYiVCgkXtsxUzsFZ4DjKtbDUHQSM5kFTRc2TSUSLmkFVwfSZO41ct4BdV8TRikVdtolVj0zLq3TZUMDUFAWa4PDZtjkVvslaRgFTRcFcI8zPwEjSHECROImcQMyLIQyXXokSHg2QtvlSY8VauciMJcGbsQTLiUyTLUzMjoUPlc0Y4wTZ4YWLnUjYNIUcYMDV4.2aR0FT58TdzjjMSIUTt.0T1Hja3ImVxIFMkglZtAUcoQDLDEGS5U0bQshRSslLwwVZOE0TOsBQtkzbwPTNMkDRNgzcwECVqkyQBAWT0fyc3gCVz.yShgDZEkST4UzRlMkayrjLJYDMlgkRKs1PGcyXgE2Yjc1cUozclolSXEGUkEWaJkSNvDGZjwDctYmbxjSQqMTcVISNtMTTvbER5Y0PvcybRcFbnESRSMyPQEDZmkmToo1XncyYnU2Y1rRYCIyMUwVTrIDYGwjcNslMLojZlg1RvnFRJkiQ3sVMO4jMggSRPgiK5MGdnYDR0QzXx8jdyPzPCIkKJsRbz3lc3cGZko1TvLVVvEma3jlKznjLt.ycvYWPtjWcWQ0My.UY4nmTtj2RuEiYZkWLrk2ah4hdqvTQVolVqA2XK8FQkQSXCM2QhUkKxTzLvAENu41LOkGVLUEQwYjL3XzP4UUR1X1aLMiYysVP4UUQlACdNwlXOAybzH2TxsTMV0jTtL2ZvPVUrQiMpglKwETbXMFRzXUZVk2LSgDSqAySzEDaTU0TT4BcyflLM4RVFcmVtLiV2MScDMVZwIWcRQVdRYVQyAkcUUyRVslVtEDaWUScCIlTNcCN2czYXoGSpkzTvbkPwIWZuoGS5UDQXk1RCcUU2XVMJACa2jGaVQjLPQERtDmV3omPZU0Lx0lLT4xMxTSb2fjLGYka2AGRmw1bwoTNgUlb4TCVDQTLnMCQygjTBomRiYjSn0TcR8Fbn4FNys1U3I0PYQFaGgFa3oTdVojQjQWYuQFSgUUXYcmcxIlLDoUZRY1b1X1PlUFYw3TTw7jc3LSatITdkwVTkcjTAIEUnEVLRIzYrEFbQYDRyjTXvzjMhgUVhMEdDgmUJA2RVESQCkjc5wlKzLlRPISSzwlbGcWaqL1LlYlSkomaywjQnwjbw3lUAcVdyDCNxIWMpQWbRcmYSkzYRYWT23TLyM1YCYmPzjTYvfGZ2QyLFg1RTw1MvIlQgE1RHEUSIsDZUQURyI1JwbUPWkGbwcjLxLzLmAEa5YjdJoDM0MzUMgEby3BMRwjQDUDYMYGaCsVU4QjLIkiXMUER2bCSwrjQyfCZtg2amklTMcTc3okc0fkK0s1Y2nTQqX0cVgmXyLEURIUXwgzPmszXjwjTmYFSm4RVMAUQgAWUhcSXwTjRt8DZ2UzSw4RVFICUFYTSrokXUE0ZJEUd2ITYSEmYDA0PTomQGslUssDMtc1ZPwDd3LVSY4xbtfGYtXCZgEycXgGRLk0J4sDLLgTXpgTXGMSb141ZSYmUxLiUTY0cVIDbt3zXhszQtsBQ1ISPZISSAcGdiEGTWgDM3TEUnAkawj0MWcEduIjV0IEZzIDQxoGcyYCLrYzaDkDM2f0cJImSLMmMrc0R4EjP2PlTzb2JgYFdtnVRFk0QrUWZO4jdqEmMHEmXGMkR2sVNqEyTRg2TYY0LBIFNiACYhQjXlEzMDEjaEgmSwHSSpgkckYGYNszLVoFcKk0ckU1MGYGd3UkapcDMLc0MCEWNzMULUcGQJUyUOMjTzEkR2PGQKEEUSc1UrkGMZIVU04hUznjYi4xbQk1JYM2Uns1awf1ZzMmZPcVcycTLkoGNJEkPVwjMAIVX0AkQNQCRmAmPmkkUzrhdqXFSKECNngVdqIySyTWYxoTNuYCLPICc1o2R1nUVCM1Qj0DUyoDNy3laqYkTz3VaHcSYEIEUyL0QqYEMCkiSt8VcxT0XvrTSqIVUkMmKlEET10FRLAmcJwjQ27TSTEVZHMjR1kmcCY2bYoDaYsDSDIlZUc1PYIURwT1PsUzQwgiRxwTRt7zcvYVQYoWMycTNqI2LHMlZuY2bLEDL2giLF0zZU4DcJMicwYGQPA0L0XTSAMmTkgiPukjaL8jcJsRS37zMpgGdwAiRzH2Zmk1ZykTdlEmay0FMMU2btDULA0lTwYDTJgiclECcW4BZqgkV5ImQPUlSjcGSFgVNqbTdwn1PxLGc1IDcAUlUhYEQFYiL5YzUwbTSw81MMgWa4Y1YTckV1sxZ1QUMJg1RUkkU1jUcCcGbNQENKkzYgYDRuMVUSIzY3D1JYUiPgkENUwVdzT0YCMTZpg1a5AmQuEGUngzUJQWdrwTN5oVYRA0Zks1P4.SPKMVTOgDTwE2P3TmQSkla2QSXtg0JCQ1TFMTb4YlLtjyZLYmTwDzQhQ1RHEkLZEmY3ICQngCMHoWUZcGQYcWSZckMEwjUwHjX0YmZY4haMs1Lq3DYAIDLlsRVXolLogSUQoULqzlczYzJKMGRzvzX0cTZ1X1XKEWX4zTS1sVa4nVXHs1bkgTQsQFTtXSdyPESEkiRQomcSQUTksTQpMUMwsBR1g2TC4RQwX2LhojRwMlKAsFL5AmMlY1Z20Fd5c2MrAUaRkzMTcDUKEFMsQ2bFIjLqb2MqAWQBkEa1ImcXA0aK0zXXYFctDVZ28lLEQUZxLWLO41JOUDVLgSZvEzRPg1bKMySnokdHEkaOACTEkWTHkUSHAkKsgTbGQVa1k0J0HkSYIzM0PiXM0TNLAWS1c1RK4xLmczL43Vb18FbZgjZNAGVKgVc4MmK0f1bkojToQmPNUDMMMiQyvTRkQCauQ2JZIzQs4Vb3IzQlU0MIkTM0D1Zy.Uc2rVMDA2clgmMqDkT3DyPyYFN1cTcqX0JjQlKNEjcvgyT37jVsc1Z3XmbykSNuE2XKUmX5E2XxQ2XzXVbZQTUusxJ0UzJ1bEVxXkMLY2JTMjVugGMYgEV0X2JyrTchoTUh41R5MDcicmanIFSugDLncjMjgmc1A2JOszbgoEd4.SL2YmVBU0bqfSV3XGTlMTVuI0QUQVQxoDLEYVLX0DQUcGaqQSN2.kMwIVZZIUaQ0zXYQzRI8FYAMkKvUCVPMCY4bjXMgGNT81c0PCU3byZockapITbhACMzLGcqYVZgs1SQMzbwMjSiEWXFMmTQUULBQUb2cTPu4TSPozQz3xZ2vjZ4o2P30FQOQiPQclPIolTtvFQ2jVbvP1PwQWLnU0UX4xR2QkXgkSPFYjSoIWdnEEZocUMmQ1btYyYtHEMpkyMXkiUKQSbKEiPyQzM3X1Rp4RUNsxJK4VRyX1bv3lb4bTbHszamImPwDWU0TyYAQlSUslbsMFdFQ1c2UVQxITctkmQ1LmMx3TQJUiQwDjP1glV3Y1U5MGRtb2Y1MzbYEUYhUyMZoGa0cEbN8DUZIFayDmPF8VMrUmZicGZmE0QRslYUgWR2vjQtEFQ4gGdtnzcSM2PFkTbuMlLvQVQ3kTTqflUogFbJYzZWgFSvPSbMoGcj8VQmgiLHUyUKQ0Mw3hM4YEQwTjRwj2cTkiT2fDLhMFdvPSbi4TdNk1czEzSCIycwT0MpASZXQGY3oFQwckZzHyXXMGa0YzaY0TX1fiPHYSSYY1clUkM3kUbq4DLEYUV2AWXQMmZAUFYEgFN0IEMS4jX4HFMlEFc0QESjY2RyLkPSEmRTolUWwzPznkKjQCaxXzbybTPuITTvX1QUslMyUyMWolTngzXGY2bjokSwTEcNomQxwlPyH2LmMzazLEalMVZ4XjP0fCUJU2R07FcVciaA4TMK0FMpI0cqcmMjY0PWESarkzThg1LzbTd2HSLDkiYoElLrEidy4FaZgVXhoVZxbyMRYjZ2IVUkoVQxzDTosjR20jXGIEa2cSVCIjULIDdKQmQwTTatYmbngWUCA0QwoFTGoTLPEDR5giKPUEQ0XlMJcmYEMlLYsRXFkSU1Q2bznVXEEzcHo2Q4vlZqMULyHFNwrVU0bEZhQCLCUGdPMyUNI0ZBcWb20jZqkDRUI2JN0DR2PSLpYFaTQid5MFUqICLFM0a5MTN0MCdUMzJk0TVjUDZ18VUAgCLscjY4kWLEgUdVEGQUMTc23DV4LiXzLiYTgTQWAkUsgTcx0DV1HmcZkTR4ICY1rjMWElbs4TSh4zU1YkSsoTMwjzPHcjLsEibsE2MYEFb1D2atn0TRIlTgE2UuIUZFUWSWsxUnMWaSMWMPwTaRcyRWckRtkmcCQjU1jmX5AmdwcSPkEjVKQ0RjUTZxf0aRMWb1DlZAgiZvkzZqkDMznlUWszL1DVQ1XmQ1czYVsVZYgmbwH1ROQEY4bDMDklPVIkaGMFdo4lQvUyYVYmSq3TLiIyU0IjbVYkUY8VQ4HCRZAESXc2RFYmbEMlLVQ1bZUSSWg1J2n2UDAkX2EWUYwVbpkSaQUGR3XTVJcicLUjSkIVRPolcjQGZZU0QDUTRJEWaZIlSxnEThAGbv7zP1ojSy.mbnglXSwTZoQCcnI2ZJQTcgwDTFElQFU1T3MSV2LUZIMWcjgGTogGahcyMwA2UZo0QnklVw0DbPoWLlcVUO0DR3cWYO4BLSQ1X1X1SkkzaEg0Lp0zL0YzXlgSRGI1XlkiQoETd0Q1YSMTNhc1c0bUbqkUU1jSL3YUYPAEaJYUUiYzRA8FcBIEYFwVczQTc1ACNmMkZMQVLKkUS1UTNy8jX0U2LpEiUuc2TL8TRogVN3LlQiUCNzUTVnoTb3HFY0IiVvkkVuE2LzcjZ5oWNkIVYMIzQzAiVVc2MZsFc5kEdWQGNicEaZAkLtXjPokFb0sFVCYmalw1arcSVtoGcuECQpg2ZlEFQCkkdxEiKsIybUkmPQAkUUk2YzQmZEMTP5kVUmMCbLMUQZQ1MqIidFc0Xs0jVFUDQsE0cEQCcWYSPQkiUukEdRomaCckRXQSRBQmVCUzbzYVdt3jKEEEbGkzMy01QIQjTtwVQFAyMjA2LL0laq.0TJMWN4.2MP01cxbUZOYibGYiK0MDSgIlSqoURtfkVYE1REkELZUFUkEWbtjkTEMzPqzFVAI0b0DDRoUWSNkGYlkCZO4TUVIjcHYlaqDCMWUGQTElLBM1UqESY5YSXgkGbCUkV00lctfWTJUzPgYFYLoVP1MFQPszYDIyTJ4TT0rBaIomduQSd0bmLmg1TuM0ZhAiZZQyQRgjYtIlVpkkRscSQEQVNrkiXogGYrgGVVU0YIcUUyUiaNgWQn0DbWI0bxgEdmojSmQ0RjoTUlYDLEcjdDA0XNoTTlAmV2TSYHQjTs4FcZMCQGUlZg4lLCMGZOkiXzkVb0T1LKM1XrU1bY0DbGgjXXoGSyTFSukFYOoWY4gUZQYmKyo1Qv81QZ8TdpoDQhk0ZzDlbUM2LPIkd37zZMYkUuokPBUlTOI1L2YURHc0cgISVAgSShokZFczUXMEVwjyYYQFU1wlQP0lSnImUHQmZhIld2MVMxcULU4zJMUCRz8DUkgDb0nESgkiQWsRMMMESDI2clElctIlcoUyJHMGYMMFMYITPKEWLq71bXckVXUWbk8lS2gULL4xLukSXRIkVyrRcKQkKzTmaTEyM27TLMA0MAklL2kmPpY1aMAyJ2kCcVcTcgQGd5sVZFg2RrU0R4fyUUslbjIiPiUiXvA0T3nWa2sxb1YiYQgDLyTjMBk0UUgFSY4jcmE0RyYmd2ASdVMWdmEFcYUlKvU0cqHiXzbFaQwFUwPzQq.kRy.iRSElY5AyMwU0avESTF4VXOIWSsIiYyo1aqPTSGYFNznGds4lTXYGShojbkEUQR0TVyzlP1nGduslLKUUZ2MDLG4RS1EyPIYSXxzlb4gzTWMUMTUyPXEiYIwjQuk0UkYyUz.WNTUTVA4xTOoFQ0YUZBI1QYkzQ1.0ZwokVxLGVvEUNtHyJNI2U2fmTZQ0Lm4xcsMkSEQzcMsBVMokR3TmTiU2YFoFLw41MM0FNtjyPwgWb3cSQ1EVYCESNioVX04jVOYERJslbDMCbCYTauETZEY2S4DSN2HSL38TR5M2bQMCTUkCNiYkKvMldGgGNvjDaMEUUzfkSZEEa3TGbWIiP0TmZGYzatgmU0gyUxshU3Y2PNcGZSMTbzcmQggyZzPVdEwVL2QEdQo2Sv0TNo4jTg4DQWUEcMs1PzE1Rj8jXnUmKRQjPI4FUtTDQBEGVxcUVs4TdQsDSNUGbU0DN1EVZCA2MhcDULszTv7TPZUFMwkWUn8TdHETNqTmKzX0LjEUN3QSXHMDcvkmT0rxLSoVbNUSMqfTZvETdzbWLIUiaEgmQKQEQEcmajUVbUIkL24jcgUSa23RQkMUMZsBcrc2SIshMkA0LNcFNrk0PvYTcGUFSME0bw0jXqnjcrEVcvYVMnYzU0TVSUgTVxDTdqU0TUYzbMYWUT8jRK0TS1b0SvcVYjgWT0E0LTgSdrsVQkwFRKk0bqDTSrM1TpcjVk0FcHEENtvzcHIidCY0QvHGQ2I2S5sRUv.EUH4FL47zZzTmYTs1Xz4BUZYSUWUULhMDapwzP3DVRqEGdvkCTVU0LMEjVxoDL0bGT4j1YDkWc0MUZh81MRQzRRUDN2cTLxzVbqHlS3wFapUGNtMSS0DSMxImL5wFd1HldEwzJoA0b5Eicxokb3vDZV8VRkQEbL8jVqIVXvMmQmQCd4nlQQwlaDECcgU0TJICNEYTduYERgAkP0YFMwAEbwckRLACSmI1ZVolbMYzQ0DWZxbETHUWL4HkR2XWT44laxITTIISQqvTSPQDVwjSToEyX1gmXAUSaFkWcCQmb4gkLB4DcRo2cEMWaiYiYjUVVOUiR2k1T2PTbBQkMz.mL5sxJK4lVDYiLDkzMAwzMCQ2TD8lUIQCQxTUXSYzSVo2T2YkRJQDQYk1chEGZtQicu0DRDE0UhcUMukVUwYFV4Q1JLYWMBEzT0UUYgImQZUVLDA2Qxc2TvgzZZcUSxgzX2f1atE2cmkWbR0TPusBcgASRgUmQ58jZ2UEdR01ayL1XosDSUE2QhYVY4cVT5oTRFgTQR4VV24VcvHGU3.2QY01LwQWXsgGSuAmPxbFQFcUNygmMtnzYEQUZyHlapgmbkU2Ukk1XCo0S4LGN1MELtslY2XVcx0jXKYkZXMSXKcTUAM2aAIkZzHEN0giUksxbioWZ30zaT0jdpk2J5EVN3vDUngEYTAkaiMDbMUVLPQUYxYWdyUjXiIDZqv1T0IVZDcSaREWY2ASQ2PScLMFUNQ0MrIVNUk2UkczPpUTc5g1Ss4jYZEiPTUzJjcTP4AiQjQmSkUmaGMDRWY2ZmMycSoGdtnETrMTbSEWUEU1cvXCRjECbpg0QGQUQLQzRAYWZxnkUQUSRKIkarcVSAY0MysRTiojQWACaFUjRDUkTLoUZTM0bucUMxzzROY0PFQEZ44FUUI2Myj0aTolPwk0T2LjR231UhE0LQQGQvQDNv8TbUgUX0s1QogjPkgSM4MFSIMzPQUibEk0T2HUTY0DM20VNh0zMxTSV2HER1UyYsUyMxrlXAUyXko2J2TGLiImVwYUZBEVaU8TZ1QWMrYFRT0DRvjVXRAicKslX4cFSFIlaWQ1J0EEQGg0QqPCd1cEQW8lbC4jS1AkMi01amIETtcGMVACaUoWT2c0Y0QkZ2IkRWkjXEYiKiUWMW8FUlg0PM4jTJElSzrRU07lc4f2UtTla4HCb2bFdQojKOglMhYScmgkLwPDLBQzMvHCNZQzXlkVUGYSSwjFcqPDMv0zXLIiLuU0LIoVaPIkKRgzTSUWYT4jUy0jPZsDRyEiVDMVTGECYx3zYzjVU48jQPAGYXIyRyIEancyc04DLmQiSQEGaFYUbyolL2DlRxLUZUA0bIQCctLULWcFYJoDRHkWUkImbNIiMFU1ZwYSNLYGQOkWZiACY0f0ajojMoQ1T3IDTTImZ4byZvjCcwc1aB8FdzoVSPgSPyoGbrgFLFI0cwPTaGsjVVIGaRoEYxoWPMIFb4MUUGsTPHwzcWUjVz7TcloDT0sjbSQiXRITa14xUOU1MUQzcqcFUiImYzfTSYMmU1nzSvTSQYkDbgsjQwfUY2vVRwIkTO4FUwvFc4gDblMkQEgUXjkUL3M1QSMzRIcyaAQlRgsRQkYDNEMUS2X0LocSYQYSSzvTR5szbY41RqQFMwDGVzQ1TpkWTmUyJ1AGRZEmV1fyXmUmYNwzLtzTXzYEalcGMLo2ZFEWYnM1Rz4jTtIGZWEFSREzPP81JwDTUzjmbsQiVLkUcyc0aIoEMAQiQC8VS3cSQPslZDoWPrwlRxvFNZ8zJBEjKmUFSQI2PMkjSrYTQjwVa5EEd0.mV4H2P20DNjkUa5AUPXITYMciSTE1PsQzYEMjM3fGUvDzUt8TcrsTPXEkbSwDZ2MDL2fETOQSd1AUV3sTP08TLsQFa1PVVqPjREg1Sy4VRTY0Jy7zP1DDTyrlaJcVY3jzTpUGdyn2QgU1TEciMQkScqPSR2z1aFgFcsM2T5wjZnYzZE8zSQEWXkwFSLYmQuITYw7VZW4RUsMSQX8jaHYVPYQVTxLzPkkEQLcCczXTRJozPYkGZ3vDVNUyZU81cMoEYLMlRyIFREYmYy7FTSc2ZSkjTyDVa0rlKhQSSYUjRx4BYvbmZvLVRKgGdhUkPJEUL17zLPUjUrQ0QzAkbqY0R4YzSUcUM1LTSJ0jTzbTP50jKMEFYHwlXKIWMY4VQ10DLyEGbAY0My3hPm4xTvgWcPEkMYwDZNwTMMgzROg0aF4VTtYWVtQDdTQUUgIFaHAkbscTcmsVNno0PT8TShE0SxHCdrQ2RtbSbx4jS4rTNj8jTSQzXywjKuM2YgsRbwLjc2bkPgUSLI0lU5YmPoYESwLiMEIWVCEzawLTRpUzU3jFRRciMlgDLmgFTCUFcxQVLTICTRYyJwUSXQ8TNybTa4nUMMk2USIFUTgTYmUVV4IldIMET1bkM1PiZwn1cKgDTyAUdxwVZnM2cqIDS001azUGbCkDbvnWR3TSSXEjZPI1XJcTSxrRSYUmdKsRdKQiVSQ2cGYUVzPTNCEEUWMkSJYSRGcmbvLTYnoUapMWPNgiT4oWa3YGZEo2MDklLEsBQCYjK03RLjsjaIESXYgCdiE0ZjMkR2LTPowDZmw1QSMDU47VZyXER0DDNq8DcRcSSPQWRkEVYOcVLN8VSRUyLUI2LDYFL3IDQzfGSlcFSPgUVNwFZYQFaxfFN5EkTlM1JiAGMOMmMRsxPpozUIMzYwoFURQ0ZzQWYDASMD4FMoEScJIGcxDCRk0TMmgVctrhSqUkQKM1SqszPIIWdPE0M3nWaJAWSx.kV0TURqQTVrQWdSgTZVIVUYgSaRwVZRozUHUickMVdoIjQ3MTbY41XFcVPw4DLmkkQTQSaNcUXWYlKyk1P0jyQLkEakESMSkibwU1RV8FVx7VSqg2PQIkQQQCVyDkYxI1Qo0lSMESMN4jMvU1bsEVMuwjUqjUVNgkbvLDSWkVcDA0PLklUKkVdpQlL17lT4IictrTVJklblcUVVslL2ciZhUVUCcUM3kjXokTTwDDdFcUVzYCaJsVQ2vDbFg1PqYTPAckVDUySy8lUwjTUqEjYpkGdYQTZuE0YicWbTkzaogUZGcVY4f2Y401LuICUucCbtjCTAkkb33xL3MFS3.mVVgCZnkEQ0EWXGglYt4FQScUct8DUrkETNkCbxbUUqHjP1HjPtk1SuciQ3LUZvkWLkUEVZkWLDYyTD4zR0bFcRslSAolM4EmbzDlLBg1c0jyXybSZvE2bzPWMtoVSCEzZBYFUzTlbB4zbtomRWkib3T1PF8FMYsxR2z1Lw8DZIQzRYUzYz81Tv4lb2shSyHmLKMEZJImcyEDTp4TV0QjUCEkdYYmXOMjdTkCcxoVMiIGdDslRJgzSP41UZYzJtTDcBsTc5EVL1ASQp4VVmckaGEERqkGNtXUV3f1aQYmQ2LkbiUURxLDaqQiaAoULPojPBEUZOYyU1bUTqbyQ3jlKIA0QyPmav.2aMcWN1z1TBo1Xwg1cVYjLhYUdnMjXK4VP3UFUwD2UA0FS3LVatTEaMM1ShAkZX4TcrIkcxI0MwHDVjgmc1QlbCYCVwETRwHkatM2UsYzMEMmQHMkZvkiTLslLwIiRq8jX3gUZUESQ4QETngVZQoFSNUSbvo1LCEWXWM2QX4BTBszQW4zZtwlVtbUT3g0XRUmR3QUaqUWYwITa20lVygVNSMkPNgSQuAmajoULvnjMWcSVSoWYIYmaLkETsIjUK4hbzHkbpYCYvgkZnkiSHkWZnkSQkUyXlQmbuQlPYgVLo4lVNMibYQkTzY0Lxg2YicVdmYGaP4RRW4xUrkCUrMFM1AEcYglLvbkRvDkZy0DY3jCcTMEcKUDawPVS5IFdwTVa4fCLpcSTAc2TKgUZ2X1UxrRSrM0JSYGTiUSX2rzUhwzc1jWcAITPmsxT4QFQiITb3c1JREVYBwlL2UULxETUWYScDUEZikGLMQWN3nUR4jWV5UyZPQWVQcDVFYGdEczM0LyMPY0XsYiLJMmdlACUxU2QhYDRnQyYPUzZWMjT08TNh4lQvUEVUEkX0AEZMo1X5IiT4UTdwfzXAUDMvTlaDQGcTMTQ5gFVvjjcU4RblQ0csUkczUGdz0jSP4xZNwjPPQFMEw1PhUmPrQWb5shbMQyaJkmKuESTqXDTLUTXUIUZR4BVGMVXNkEYMUmc0clLNkzbHQyYqY1RgYkcZQGMnkiZ0YTUys1L3wDb0TFQw8FQ5kiMyIkSogUQ1rjU2XTQrcmUCAEVtUDT3fERig2aycycn4TVngkRNUFaE0lU0ECTtEzSlcFTNAmXSUVaZkWMEQ2YFwja1DUbyfDNSIyYYwTRAYmPIgFTgUGYIUCdrcDT3nzchU1QUAWRQolRBUSMlgFTgYCM5IjM0MzYRg0UPAGLgkiT1MGd58TL5szYCICLqwjVzbkbuIzRBUjROUWTMokL07TR38zLtHGSNoDYMo1QTgkUWoUa2bCRGE2L3gjajMTX1ckbSE0TtU2MxD1XAgkYxMDd03FZyI1YxPFMDIENIwjZyckMNcUcoMlVCUCT4P2SoAGZCgSc1cUbS8zQ38VTzEUUzTyaGw1QPkCbPUSUQESahoDVCQmVyDVQJokSkEWYEcTQwckSCQ1RvzzS4YDRy4DVr4DNGAmUWgSRlwlb2cSbMMiT1sBSHs1XjEFSwc2USUCYJgUMXEFVzPFLwMWQ10lXGMGLp4FZYUENYUTYzkCRtczMTokM4wzLtb0PAYzUtUmVzD2a1IldqfGTFIWY2bkdwAiTms1SwHUUqTzTLAyR3UiY4MUaVwjXqgmdMEDUQIlSZUUXyTjcy8FNwIVar8FZzcFMDEUNW0DTqDCa3Lia5cma24BbRYUcxr1ROoGaTYiS43FNGglL0XlLPIGNzzVVwITUxojKsEUNyEWcE4BT3oTVyMUPGcWajIlUVAmbYIWaAMSVWoEV2zlXJISZyT2LycjUygFQhMSdxrRYq3RXA4RNOojXXg0Ptk1aYMkXLczP4LjVE4ha47lUx3TLkgSRY0lR03jbOYiPsI1SqojdxPSNMMCYjsjTYgFaPUSSg4zYWsVMvvDNAcyYIY1MqjGdsMVcSgkLRMjXP81QssRTyLSUzXVSXEVRFUSMVc2MtgjS3UTbLcCRSA0cq4VMGAiPNYkVHMlUzTTPXISZOQ0TEkDYtPibPEjKTg0a5MWLzczLzgWNL41XFg0UtcSXHU0bqTFYDEFc18ldmYlMO0FSrICQPkmc3T2ZJ0lXpgyTskmTqDiLBsVYqLSURclUtDGR2gSVw.mLhMmdqk0JuYyYyf0XQY1aNgmdLAWdPIidoM2YZMFM13VcKMSLtXUcAQlRyDTXMcVNzESS1jWZr01Z2wDLxfkKEYkbDglLHkyY1w1Q1PEbZYSVNEVXwoWRnkEZksxaowlbWoza0YUcvYmd34hSWsTP4IjcncWZJUlL4PidJgSND4lQIUEUi0zTFQCVRgmUqnGaB81X341XLsVNDozPUozM0sRdxjyJ3TyU0sld4QWZt7DUCMGZyfzSloTVZ01Y2fjYtMFbusjVUAWbCc0S2j1L4fGYCcSZOozc43hZNsxXhkzL4gTNMAWSjMUd5UybLcjYxcVawYUbZcWUGUkXlYlSGgDMusRMJcGcsoUatIUVNEWPiQmThMzXwLicqkzQIMWb33Rdq4zUpMDYCshLy3xYicSL2MlP4TGUyYGaxjVRG8jK3gWL2EDVs8TTuUzbSoGbCoUU1LDYlcGLIYVVyYyJUUEZuwjM3LlK3.UM4IjazrBLzDjbnMkTmYjQAEkYIcWXXMDbmkzbn0jP3XiQDQGSPIULskGdwj0TJ8Vd2IER44lUzTmTLM0UUkzc4LGTZgmQ3fCcrkFYFwTYl8lZi01LjMiV2wlcxgTRvnkKDAGTq0lcxfybAMkYuEjbogmckcVQBMCMpYCMrkkcz8VakQmPVYjVq01ROMFTAQFNxrDdvAkK4gCNybDTtDGTSQCdxMVZVcySxYTcoMDZRo2QJwFTGAERjoEalMyJqw1X0wVThECbwE1Jx7zSqQyJrEiZYImbWMTUGYlMSMFcwY1XEgidKQWcIYCdG4hKMMCVPcCQUUiXybEa2bWQsg2QFkzazPEYggmb5sBSvHzSF8lSmcFZPYDQ1olVEY2J0rFUW4FawD0Q2Ikdz.SLokUN5USQEsVPOojSBA0Ti4jSyYyQvTGQTkUQ4rVbC8jRzsDa1nTXSwzJtXGRSECUgkTQNg2cxAEcuUWPyLUXl0Dd2kjZ1jkUUUjXDU0LBQSPFYjTYM0PuEEVlkWcAI2arETVYYyZkYTRGg0bW0VdVYyQQUkM0cEb3cEUXoUMwD2cT8Td4QDL0QETX4TXDITZ0IkZr0lLtcENhETSBUSZxX2ZK8zS0HkZnQmTBcCYRUmLYkWMv3RaNElVyLyZ0HVPsQELgkSZuMyZDkFLBMkaZAmQHAkMnkVZFMidq.kL3LTQBMWQ5ACbRcGTCshM5QiRyQSTk8TaQQ2J5klPjslY17lPisBRtcURgU1cRElX3XCY3MzR2b0UwjSdEoFVN8FchQjVTMGciUlTo4xa0Xid1gyTiUWYYgVS2jkaXUVUtzjMXQjVMQkYZkFSzbjaK4RQLgSLmYicyT0PQgWT54hb1LWPNUSSCUWXtIWP3DjZtMjcWQlQtjjQSkmU3YiKvHWUKYSY54FLMkCaIMGYmUiYtf2QBYyQJQCapYSV3Q2MnQ1SOQ1QScmMLg0Tyk1cAg0aqjkYhYTP2jDVgQlRTICYLEGQEcSRYkVVIYyRMcDS5UFQVMGSDsTPtX2JzUTdybUNBsFS0nEL0XmPJAmZhg2Y2PDbUQSMZ4BV2cmTuUjVBc1RYcUaVclYzMlL4vjcREDavnGSxUlVok1XXEVUFY1M4bWX4UEc2EzLAgkZicCMybmKVgGRnoWTnolcLYmX1wTcT8DS2PzJlkSLQ81Z5EkKzolV2fkSIcSaJsTPyLGdvomUtj2bh4zbqg2Jvg1RrcEYj8DaxQSd0jSVLcjRzEWZvUSXtrlQ24VcWYGYtbGS0AWNOAmUIA0Y27DcxjlVrEUZPo1JDcka0kiS4Q0Z58lPzrxLTMCbt3DZUwjKToWbwDSN2IDagoWax7FcqbTdGMmdZQzZ03FYFAkd5UFYYgVPZQDbK81YD4ldJYET2HkVtXiYyAUPtA2UvjiSvXiRC8TM2YjM0zjUlQWTXYEVxjVa1PkUDQUNZUkMQEFaWgEMwv1Puc1Pzg2UzkmTVMkbLoGR1g1Y2kGdNcSYLwjZxDictczaQ8TazY2RmIyMZo1SDQzbhoDVMkVa3UGa3DSQzMVYxHGRhoTYI8jZiMmQyTkLyfSdq81Mq7FQ33hR3vjSvDFTGIFY3jjXQIEVnoDRTYmUlkiU3DEc0oGaxYGLEgiYhQ0TxXmTQUENzf1Y3QyY18jTCAySUEyZ4MjaPQ2XUM2Mi8DNtLmQ3cUSGYFV3nkS3LiM4w1STImVmETNtfSUQUGVzoEMkY0UlYmcusTToMTdLUmLmMDLnI2bEEySzzlMHs1S2MkPHUUMP4hXjgCcs0jYH4xRWkUbvkzbHcjZtgWakoVXuE0LB4jP2IFauoTbkgkRkQFVwEVYkI1byHmXtnmMr4xT0j0SJwla4bFQNcFdxPFNHQ0UvkSNjMmYrsDawUDQvIiMAIGRFASLRAyZnM1POMid0YlQ3XEb2IyPIAWQxsVXv.2cyI2J0PySzQUdigVNHQVbEMGUykEdBQmPJo2Mtfld1gGUnwTR4UlZC4Fa0LzazYkKx.ybtQkYpAEREY1MDI1U2LCQicVUCcWdrwlPxPSdyDCcxkELkkmc4sFQHgVVyoFZI4FbzsTbC4BSvIEaVclaNIzQnAULSclSvb1Rq.Sc0g2YwjSS0XkZCUiMzwFY40DQOk1QDojSY8DaxMVcvjUR5gGRuQDNPYldmMDdwsjaxXTcOEWT0D2X0ITa0LDUVESbK8VPKUCdwTkSXUlTwDjXwIzJDclR4LiXQcTatjTT3o0Zu0FLkMVPsIUcw4xbvXzZpQUVxkTZzMSXnkGT4fCd1XzbxYGLW0lLZ4TTgYTNLYVbLU2c1.SYT0lQwbSTs8lQ0TEZTAEaMsxcxT1SPMlXwc2L1TTZQkSVBsFY0fjRZoELZMjd0E2L4rRNnYiLqXmMrMTMlMiVuslKDsxPqQVNxj2Yh4zS00Fa4r1awXDVAkWQ4jCZSMlQ03xQFw1Y03xQvE0aXYyQrgySA4zc2UWPuMma1E1aX4jaQ4BbzXzZnkkXKQyU0nUblASYrImbloTLLcyQR8TND4jZ5YSc3XWcWQkUvPzTB4RUW0FZMIVMmMEZzA2JvsjcY4xPqI2ZrAGVOkyJ3LDVX8DZm8FLGcGRsUVVvsFQoEFRJ0lQlQSdpgUUtXSVhUSN1jGTK8lT0glRlg1SHQkV40Dd3cyUPkDV3USQuYmUMISR5ojat4jZhAkdPUlKVAWTzkDT5AkajA2YtIDdvzTTOUTRQ0DLkEGLSYTY3TDSxkFM3YyYRcia2jEUZ0jSiECbV4BYUYGaxklMDIycEIjKz7zbX4lU4ACQPI0PjAmQCszbZgmaGIjURgFSyzjYp81YuUTNoImY0rlbDQDV0HiY18jT5QzYhokX23VTx0Dc2vjZg4VPngCUEQiLrACS5s1MoQER4sjLwLSZ3D0aJojLzUEbHMmaKAmSPozRDETN3XUZlMUVKYkYxgjcyrVdrwTN2XiLkQibLIGYZg1blIkUv.UYzQWbPMTNOk0YuUTZnYUMlkCUQQWaCcSXk4zTNEiMw4VQh0DSkYCZ2YzPSgCctMFVykSTvHTPL4DZ5ETX4YURIUyMVgFMEcFTiImdJQyQoEkRroFQzDCRPoTXCUlVSolT04xQqYTNFgmax3lZY8Vc2DWP34TbS4lS3UzRNA0ThcTYykVc3b2b0f1Y43BdVckQXsRUxrVYtQDYyfEMzsTaHIjXw4TYI0lbm0zXVYzaGcmdZcVdQ8zUjsxUkQDL4fmQyb1bA8VaoUVaFA0U1kDNEAmLHMidGYEU4MSXXE2XS8jdwbGQg4jcHYSVZgFSj8zYJYSbrg2LpQDZqLESNQSTisDS3Xzb4HmMFozZ3oEcmACMXkSPpYCS5UTXsYkRxXDVTkmbQEUcvM0aTgVQkk0XNwDa3TyY4Umdi8lTSshKH4Fa5k1YLgEdIQzLxYjRwHGLyXUXtj2STsVdlQ1RQM1UEcmbPEUXVk1QlMyQXsRZF4FaxE1X0HFcFklRtrRXTQDaLQWNgUibhIlMGk0Rqn1PiozQkITXZkVSgIyRMUUbmozR1nTN3vlXhAiaP4xcXIVRvPVZK4hYFkTXsMyQ2MzR0sVaKISdxsFTNESVpUjR3XzRAkUb3vVLzclVxQkcC0lYj81cynVRiQCR3rFRsESZSY0aNITNSIybRYDS2k1XZQDTHw1QvgjcVkEbLUjc5QFbm0jVpMUbtEmSyolQuoDbHkFd5YTYnUyM5QzUtIWTikyJhYmLugUcvrhVwYTPDY2Xq4TRIETSjgjSvLjdRISVwMlRsQVbJQSX2P1JIgEZyUlLVAGRMQVdgkmaRQFRhcDLQMjRVYWQKEyJW4hT3LVdJkyQEczbHQyMqbibtLFcIIlQyLDSxrja0D0byMWcZQmctUlL3QmYzMlSZAGSPoTYpYmLXICbAQmKXcSb4X2SpcyPBgkLTEVcHYjU4fSPPYGVlMyawIEYPgCaAo2MAkkbxfmVCUzSi8VR2HGVHoWRkYVPXI1YUYCZswlRuAmKiQlbKISaJAkVBkUZWcUPwnmZvvzMwDTV5cFU1oUXxXSXJIUQz0jXtYUcJkSbmAUcWo0QFIEYVAUMJwVVW0Vdr0DRwP1TFI0J1PkMZgVdHkib0XVRlYyMg01cYACLYYDUuMDZE4jYq.US3oEbGYVa3b2cvc1JNo2PpgiQ3QkYqnDS2XmSwT0YwjTPqHEdgcDQvczPN0jKwXSSTMGZ0PUL1IWbt0TZPQiMxYkPGYTXVwlSnkCYjo0YvjEa3HFTPsFcxc1ahcGa1DCM4bGNYk1RkkiS3DGVMgjcv8jV27FQ5gyMvMkbNcmM0bFbFEVaOM2ZXEEcrwjTUU1SmYSdPIkYyIWckoGMggySOUWRxwjc0LjKjwFSSoUUD0lQlUlR3kmYAMCM1w1QlkELXk0RxY0YIYzJAoVSAQTdO41QTQEbtvVTVsDSqrTT24jMuQGZPslbwfyJ2LmZO0lKTQSdOs1XFsVXB8zSlkUd5QjZ3HEdqgENT0FMHoFZKoDdy7DQVQSVxIUcRgUbO4RbGoFaMAGLiIFbyYTV2ACYgAUPHkjUYA0PZcUZ0AWdFgSaOQzQlgmZRUiZZUjVWUkTYcyZ4biTEo0LxLDLD4BS4PWQMokRyHmShE0b2HjdgczXL4FR4UicAYybygSZVgCR2Y1ZQoTZyPVcW4lPLojYCkjT3gicXE2T40TYZ41YyTDcRk2arcDT3gmMlwFdxYjauYDQ2sVaTUGNwQycA8FaZMENXkEaKwVMVI1YygjYxfSXyQmS1vTNzHUQDQELLMzU1DmVvw1Q2PGcsk2bz.iQzAiMOUUNtDGQEEUNtnWX3AGdEIyUlozM0UiXhMyJsA0ZrE1MGYmV5czQy0jTPAERmsVclMDU4nTQLgFRkMkZGEjcTkkToUCZvcyYhUmUtkTMVQFdvXkTGYVMMoFMmMWMsM0QKcUS1DicJIEYuckSFwTP0ETLE8VYRcSRggFLNQ0PIMCbEQmQzECTvASMwQGYBUzQNoUXH4zXYshdKMFUE4lPYEmUBACYZMEZH0zU3X1SVsFdSI0a4zVcWAkYJEmSOIybwUyZlQFNrYiSEAGRWw1JwjURPk0JhIiLAw1UCwTM4kGZNwlLxjzPLEENBkTdAMjTgQCLtHWVOslUsUlVtgWbzIzRvX2ciMyXNYzSSQzMwEWRvHWbQI2Lq4hKjkCLznTVyoDdlsldxIFTMYVMZM2bg0zJk8lSuwTYqciVD0zRQo2agEFTQYycRIWPqPiQyvFbt0DQDAkMBYUL5AibKoFdVESYMMFRSsRbvPFNz.kMwfTNoM1MLIUVY8zUhAWa3rVPjYDREMTS3jmY3giRKY0UAAWUHoEVD4BM1DlMwTmcMYVS40Dd2gTNIsTXUM2SHYWUJU2YDoUP38VPGo1X3w1X1oTPWgDRAUFNwoWQzESNpEjQDcyPqo1cMESUvIDVWwldJUCN4AkY2cDSKcGYKQzZzfGQQkFb3AiLwISTzL0LuE2aOMmS1oFZpoFaRkFcp4VdrsDVPcSbi8FT0jDbsITZu01YGMWa3ojK5gzQLMUPwT1Lvb0T3bTRvM2JnQmdxT1Uyk0UBkWUC0FVxLiMYgzXjMmYPoUN1njXKkEbZglbjoUc2cUQFUjYF0TMmM1YsYTUEUTX3c2cAE2aAYVYxbSVKQVS4bldl8jQZ41XwjmKtgUdIcyUEc2S13lT1A2MOQGU40lR0YlbMgmYlgGMkcDLg8zLv81MBMVRSIFStnDdMIlLMAmMiM2aOUUUNsRTQAiPlgmdHMUV0UCQnQURTkyQ03jcBAWdoECNEwzMtA0b5AkKWEkP4MVS4fFSHoUXt4xZt4BYZcTZYcVVtDjLogSQQQjLykFMIkWaOEzQ3HDVxnVLXEDYqEEVMold3HVcMIDMZYUVjgSaDcla2g1Tt4DLU8lUqbTSN41ZVQlb5gGRFc2XIY0cwIFUvj2PnYUauYFTkoUanU0YzYzcJ0lPxI1MTolMmQ1XjgybkojaoUFNFkFYtPUapMSXH4zUsgGUqbWYCA0QKQDSxDFQEcyZ5MTaJMkSZIVPDg1PCIzSok2Q3XzZxo1TMsjTwkjYlIFYgQ2JQQFbiU2Z2biQCE1SPkkc5cWdUQ0cZUFSlYCa3IjMzbVUxb1JygjPsgkXGMTXVwDUBszZZg2X1cCb3XTMiIjPJ0TVFU2RDESczTDSKIUNMIGVTMyZLojXKo2YtjiQTASYTMyTREFQzjVSHgyJIQmRksFapUWTjciS2sza2zTdHshP4g0csAUdIQWMnASQtfTbWc2cCkUQisxJAoWLAMjPrAUMxLWdA8VPKIUPDkzPwXSdXo1RqjSSjkWSNIjTxTEZUwTMTEEcJICLx4jR44VcPoFSy3TToIFRq4FdvTWatLjVtM1SqfUSOUjTWMjV2IGc3TTdyHFdz4lKNgyTkcjUmE0Lp0FZQcWd0LycEIUL0H2XWAmSAQjUxTGM4bjKmMURz0FRw41a0LTcpkSbwwjLBQjYv0lMNc2JPkDSxf0R2PSQxImYhUmcIQlawYTQ2PFbOIUSVgjXBEFcQMFbHUSV1XzPTgSc4UyYv0DNyM0J5MlSoQDMV0TNB4FNW8lY5EmSzrTMhETb2HkX50TTL0zcIQCboU1cGQWL1EjLpI0JOgDMiUiXAUDZYYTM0UGLYAkLynkLzXDVRY1QY0TVIsBLlIGQ5gTclYib3.GS4Qld1oFLro1SUclQvAEaBEiYlIiVW8jQ1LCcpICUNY0YYEjZqnmSBQUULglQHUyZBkSbEcEQwYWPpMjQNEDVq8Vd2DVPJQiQgwzPJgzQMkjdEI2SqczPWsxYqH1MKkyXtkCNMUlRyQVa2cjZQIWQTYTdwsRNickaHQiQ0HWM1oGNFsTb03TcLU1TwMEQwb0c13za2TCTY4xMxTiZ5I1UoMiM3QjSwPFSiEjUBkVSC8VZsU1M3ECbjsFRKklbJMCQHszTAQkZlkFavYjUz0laJUESkM0Ml4lRGgjaDMzSVUWM5gUVPY2LIcSbzjzcQEmKynWdlEmMloFNRc2aR0DbwPmdUgGSNgDRuACaMQEalo1YgoFV3PSQBY2JGETVOQzMQcUbEYkVBIESUEGcFQSdNQUZWEkLxY0aOcyUzsVTZYjXLMSavcWL0nUUvzDVlMVME4hLDshZMU2a3D1TDQCdqozMikyaKYTa2QCQQgDSt3jatwlQCMWYyUEY4DyT4kTVyPjYyj2U1PWUvAmTCEmQBUzcqcicuQ0atbGSVgDTV4TUkQEZtcDZ0I0LCshZ0YjbXIFd3YkV231PKkWXvE0bvgmTLwjVkAkUqr1Ys8lZqEVPzPGa3DkRQoET3zDYvH0Xm8VRkYyb34zQAgmKIQyUlACYwfTTAMCYtQjX2IGYVYUTWgkZwfCYyLTaYIDdGk2JvEyXOEiMCgiVik0aCUlMvbGQp4xapQCZt3lK4Hlb1YFU2XjZKkzRxrjVNkTUxbDSMQkL2HEcqfib3b2MvTyLTQiVyfzPvnFYuUTcOoUM3b0bYolcDcia1v1a1v1QoklVho2LtwjYhUVawMidUElTz4hRrwjaQ4RRt.Cd3MWSRE1S4MDUAoUV0PFNrAkM0HmV4IVNBg1JigTRtIzYgMVYnoWLgA0QxvDdjcyJ5EySjIyQ0z1aqUyYTMjZqvDZvQCV5cUdqY0aK41PVESaqYWRIIDckAyU5UiSTIjMDEyPgMTQRYDRnIWLIcCMTcUaEMmYtrxS3I1JvAiZnkSaFEzUzEWST0zPLI2QOgDMDIETxcGSXM1QEoVQRMTVJAyMDEGb4ozXhoTRFoDLxQkPAsRUMYlKsACViczUzHETQUjXUsRVh8TLTsBcQgVZwMyXjYTZSkVPQkScWQGSSYURAYzTJUmMVIjaEECd3nlKjMzLqbFVOwTNKEiblw1bYYEVPYTZYIzbrE2XAc2aOMERMgjStLlQBIEU3HlVZUiSqDjTJ4FVkEkblkSbzAUVwzFc0bCYEEEMLgzawICMxM1bqnGbygmaH4jT3fzb2gTSqMCL1cyYjgGVrglcCgybzj2QEcWZ2ECd1b2Mx8lcqwFYKkzP4cWRQEDchASYPQEcYsjU4MSVD0zZSslTCUyLFUmRS8lc3XjSIkjUIYEZSUEdAokPMAiS5Y0cYwlQkoFQ0I2ctYUM2YWLAEmVhQybtLiPqcSVZMVMqDWNWYDVZQTZTAUNPk0TpYjUp01MLIVSgkVUAUkc1UzbH4xQx8lZ1kmSFcka4kVMmQVbwjCSOYjbMEjaOcTcXQWc0zzRxHiMLsjQIUWXzb1bjICaJ4TU4.EZOYDN581TlUjQMkldskldFgUdxQ1aEM0RjUDdmkSRIMTShIEY5Emd1XyYyUWUFcDM5ozULITNpsTXHoDarQFT3LTbzblPtT0MCcWaqUmKNQDZAQjXsUUb3T1aqslKXwFajY2Y4HTSBQ1S0zFVH0zXvXkMC41TrUEVskCQzPEdPQDLrUyJBUGVvclRKMzbg81TKkEUrQTb2XzU2rRUOslLJ4xRtDGRQMDb5Q0bVsxQzYFYMUDbvHiM2M2XMMUVBUGU0rhV2kFTZolLEokQWQmQYgyaxkTTwYkYVQUd2rjaHA0MA4RQqUkUy0jX2MyUxUmYWEFMUoWT4L1JuUCUUMCUzHGdYUFUNEWcjQCMwk1MkYyJnMkdtE1bYUmXsgEUwMSYr41bYACLhI0YkMyMx7TdxoFU3rRd2wjbqMUQhUFdZkiS2nEV5ESVP0jcDYWNRMSdP4lVGYDThcEUqPFUWcGQFo2T2LkUhEWLFgmQroTStIkbS81PxXEMzXFQqcjMoo0UqDVMjYUMrEGV2sTLNI1XMgGMqQWdlkCSXEGMyPFYuUVXXIVVPkDYxjULFsBUIg2UpQmPS0zMvfjQsESdVwDcvElayAGaGkkSOsRZTQlMwozXl4VTPUkXkEVavrTUjQEazkTbSMld4j0L1Ula3I0XoIEbTEUQAA0cYAUT5EkKCASSVEFbokkV2fSaPgjMYEVaoMFZAYka3nmUTICR2kySVImLpMVYT8lViMGbqrTM0jFNGkiaLcjbkc0YIgWPGESNhEUc30jSYk1ZCUkbKQGchombxHldRcWLPYUVhgzc20DSZQkXJgDMDgGYYEVQsE0TmEDNYYlUKwlRjsxSOwDbzPVQygTRQczQjk1PxXiRFMVRPk1TwDjKKYjbH8DaxkWVDc2XRcEUpACMsgySzPjKyXDZTY1RCUWTxzFcCYidtrzaxf1M1EyU5M1LrciUAw1TogjblwFdMYSUXUlSUQSLXszRxrjRNIFYAYTUwPGZvD0QNQ1TH8zazTmUogVbvozLREmU4bFMvLUU4.kT28VLrUSTpMTXIQ1cMgUMnwjaUAyXNElYPgDQzXFUhsjTw.CMz.Ucs4xaGYiMtkGNxHiUS4RLsUzMZY1MNUzPwcSL3claMQVcIwlQWEVXVITUToGdBgTXSQySisFQB8TaxcWPv.SZsITMKA2L2g0RwblLBs1JjEEbQszXSISbigSYhE1LvMUZ4XUMOQUZQAmZWIEQkgmS20FVX8jbKMERUsxbOAWNqjTVLUybLQldqASM5wlZrshV27lbmkWXvfjMp4lboIDRFkmdMomUxY0MZc0P3.WctP1YtM0YV8zaLAUPpMjdvfiRK81ZnYiRSUSRu8lapg0PmsBLIQDcuAid201YiIUZOElZGglYAY1Qw01S1IzRrMSRXUTYtkVSX8zTXslZFsTSxXERqQFUg4hPGgjTzHFaCM0LB0TYuU1XhMjYxITNzYSdiICZiYib2MFVR0lXGg2TgESMtDSMvwFLFo1R5UScAIidUIUY2cUXjMWLjMjTpEFYHgSUmYlKUslMi0lRnQDQJslcgcSVmclVTAUbZwVbFUlYvnkLGk1ZI4jcxfSSioWX0nFYpgjRYQ0cxIWdCM0U1wFbLomXKkVZ0QEcWMSPVMUVqLzJhEEa5sFLBAyby0VQn8VMrckYI4VQAkkRqgjPKozQgYiKyEUcAY2P2gWci4hMZIkQsk2XAQzSSQ0a1ImMKkScloUYwDGSEM2XsI0cKgjYBAmSPkVa2cyTHEVZTc0LBA0YHcDRNY2c1kFaygWVQEjaw3zZ4YCQ0T0Z1cTXBc2Juc0ZgUFUkQjU1.SSOAGZ1TlbZ4DcVEjKKokSAkSQAklVX4xJiEyJpsxYhgjS0PyMtM2Zzc0L4EUUtDWTlUzaQMmL1fic0wDRmY2UqXGSIIza1rDTMsxa0TUPvrhRCIyTq8Fdp0VQw8jdko0TGQGRIcCVkA0bE0TczPyTXIEQ00lVv.2XmslbzUmSFk0MIMUTv.UNDg2S1o2MWEkXE0lV0ITbvYVXPgGVMMGdq4hYIsRciUGYm4TY5o1cWwjSxfSbpQlYjwjQ0nGU2f0QtMibmUGa1.WUBc2czYTcZgWSToWMzcWbVgSMNczPiYzQUAURNs1QhcjSKYzLDETcxXkKREEMXg0UQYzbnYSdlUDT3HFaMI2P4TlXkkVbycDY5gEQKEFdQc1SLUlSv.UMYMmKZ8VNwj1cjICYxAmTHoWRRolL1EDcwcmcVoDSs8ja2oVV1.kQqomSxozLncFaSIUZHciSGEiXhEkXJMkS2QicLUVUgYUMTcyaNkWdRYidYIFaVkmVXMzbTciLwv1UtEmLPIjXjMmQBYWZToTU3UjZyQVXHYGagclP1wlbJk2bpQFcsozayklVDgCNKYCZW8FYYkTRtXiPMcTatn0U27zQi0lTVACZ3vDco4zYTo0TlYzcy3VNmIWbCEGMoMWdvslb0jEUkk2XqAyUZITXGI0Q4LFcjIUPA8ldCEzTSMUMyjUZAYEZ14TNiQka3PyMl4jMVYTbUUDTHgmckYUdK4BUXgkP1fzM4vVS5UlaLIzXRM2bjkjTZgmbnIUSuAGSB81a0XSQ4v1XMMlZRgCLqLlXvnVc3bkby0DTFkTUnICYTUkSvEUT4LFaEklPwPUVOUkbjUWTE0lTq7zY4TCaFE0MkgiZTg2MCo0PDMFZybmX5IyUnc1JMUVMLsjZ1kjb4wDbRI1JAM2aAcFMAQCdxAyavImXzIWMG4zP5YjXnsRL2nlLMgWTxbiVLEGTVMWUAISSPU0S0Qyav7FSKEmUBETa0ozPwo0YAkWP1sTdgEzJEIjc5gEQyg2JKcSR3LzRwkETtTEVmY1YWAmZKoURok1LYwjbiASL27jLyD2QVEVZyTFS1TmZqfEV3k2LvbjYOEkaTQiLRMzPlkDRvMzL1PkLtsza4PGRXQSRNY0XYslaHsxMqbFZYUDZK8TLpAkbVECaqDSaYgWdvkVY0METgcSRSAScLMiX3kSdVgUcks1X1EkZrwjX3jGVCAWL4QldMoUQugmR0YiVO8VSgszYVokXgEVMEYDcs0DNIMSS1A2UYkWZWUTLpkWYzblXHQFUFgjTEcmbxglSJkGb1ImMMcFMyQmd1gDM14xTwMCcwT2ZMwzQhgjZmcDcvHWapYDdh0jP0EFaNgyLXAmMns1Yqj0T2rDbw71UiYjVIYULC8FL4DibXEELVYzciE1SvjUYYgyU2TmZBQ0MoUjQxkkL1ICLJolavYzcxrjK0.yYO0jZv0DQxz1JDsBdTgDMxb1TXUVZFc2TPo1MskETwfVXXkTaZQyMIcGSGkTdzU1XkM1J10VNj8lLtHCd3gmMY0jMiQGTIYjYwTTQzPVRVQES40ldE4RcFETayQjRY0VRSY1ZsUmS1YlX3LWNjYSNYgmbpolXjI2J1b1MIMmbJEGY4vjSIwFR4U2QngzQWsVN0LFULwzbkYkZjcTXPgFU4XmQ2XmY2.Sb441Tu4FQyQlKLkWQvAicX8zbPYzMI4hXgokcZMUcn4lPzYjd33RN3IWb1UDaq41b1rBa0bEavT1Y1ciZtglauMlMzIzL30FaCkFLSAkaJUUXQYzT2QjZMgyJJEDbAMUdyHUPCgGbYgkcPkiZRMDMWAEQ0jVPwPWYxUGZqfzLJgWb3PiRWU1cFcyJPMEYlszP0TjZU0lPOcFZCMFZyLGcFUWSTECaGYGLEImU0bjakc1LvfTXRM2YRImQZkzX0szUBwDcsESR1EFLJMCbyslZlI0bzUlamslcykjM0XDLqUUYxQTNuYkRVsTa3oUPQEzQLMDLynFZjMkPrEVVwYSSMU0L33RUEkUYM4FQiwDdlQyXGQFZ4s1cUQUaJQlKFoWZznUcoMVVDQ2T4TyM1oFa2LCQ4ImbpwlcYM2Z1gWcJkSP4XmPtgzPDcSP1rDVic0RREEatYjc4rDMk4RdyMmRjs1PXMTYq3TXJYlLUkGdVMVQtgzTBoTVVclazDFZwHFb3s1LtHWbDEzbFQkQ4YlbUkUPVkUU2PWP3PjVoImYZYzbskkYsIzTyUkUN4lKrUWL2EicQc0aAkzPjEjaPYmP3LVd0DTN1X2XuUTQZw1aZoWaOsTa3TkUugWaK4xUOQlRVMSYhITPgo0QF4xct0DazYTcigzSMQ2bwsFSqnlQo4BQm4lYwU0b3kmZCIlM10lUyckQiYVNlUUZMIlUuMUbybCMTg0cs4TUUkVL2rBL33hdyYlTRIkQPImLSMkbEISYy7TLvjlcm81Lz.0TA0TZSQFLqwVUxQVUzUkQVIFancSUEsTTPI2UVMjKkMScuMGY3kEUjMGcVYCVQI2ZqgDYPkjYwfyRo0TYvICYjcmSxv1XAMCTxvTUBUmPhYWNKglUq4hKA4RdvE0c4TVTmEUX1YiSwUUYMElRoYCZCU0Lq.iVqn0S4D0JrQkMosVZYQTSIUEUuUCb2sVLok2JCYiM0zzZ2jUL0X0JUQWZ2oVYWYWd3QFLAMSQYEzSAEzUnAkTWI0U0UVPtE2SZsVRyLjZFs1YLEiaJgTVqnEc2PSUxv1Y1M1SNcyXIUzJs4VY0ckLyAmZrITP2gyJ5wzT1Mkbtojdw31SqT2cvkUTZEGT3UzbCgiKScWXLIGVsYTZkQES54hdtIzXzU0X33xZrECb4HyLtUkMzA0YPMka1gFUJoDNxjkYBIlbSUUaNUTXwv1LAITXwczTJIVRV4BYgUmVDMWdDk0RjoFQtkjY2jkPBY1btQFaWM0MxMkSUY2JZEyaBI1PgolQjQUSuQ1SVUGLWwTL5AyLWYVbgciZtYjUAITatcDZyM2Mvj2XqHWRGQCMsEDZVQUPKMFbw8zRM0TNzUiQwnFY13RTLcSTGM0P0oFNOg2S2.mKwIkZQkFVMIDZkcmUBACQIMjUGImYs4xa1vVTJEiZT8FSmgWXWUFcD0VL3Q0aDMCRZU1QyQEcZUyM20jK1jTd13DanckZAEmdUkyYEE0PwQDYAYjaBUzbPEDbHQVPjYWQPYjVDQUTOY0TrMGMYQUTkoFM34RcycWUxflTSkiL1f1Up0VVuQVYi0lRzflYxjTQUYSLJQGY2Mka5UFNnsDVAgDY58DdnQ0PQYycwMWL2M1UlMGYZMiS1rDRIUDR3DFV5MzQJESN2kka0LFRko2TwI1T2Q0UDMSUg8VPw.EQwnUPwTTN3LEYWEjXZ4Vd1HDSTA0MqYVRjgSQpsRX2M0bqwjZxI0Z4fCVIsTZnQjKxYWLrUSb0IycNQGbW8jVIUWQkM0LLIkdKgzUwjGdoIkU1YCc4oDMzf1Tw3zZjoUdtLEU1clcHsja3UzZkkjRxLVQu8TYzgiX1PyYQMTQjgjbJ0laR4zYNIjcnQVbKUidxbDbqcCNzzjay.ScWAyY1gDVyzTRKMCTFgyQ3EFS13jcLEDLk8zUwEmdRwzbUQ2bxblbhkTNRMFbRUySNESR1bUaRcSTvUWaQMzMEQFNZYFRicjQqTGQJEENzEmTuYDVtU0UqfSRCklbYsVM5AEZlQURgMDNoQTV3bmPKIiLzDkK0IlV0MWPFMTT3LyT3ESSyDjbMgSM3kyb2omT2gjYNYDY2olbyEGMnQDUDYkcNwDQiwVXFU2aMECYEElZSgVaM4BR1DUQqPiX5IFZpozapAyXUU0bDIUNjEmcREWRkwFZSgUTFYmZOU0apI2RUI1TTY0YzPEazzzb2cGbsYVS1UjRwH1LYc0R03DREkVQjwlPDYFTt71MxgFbushLx8FTqbzXHYVNwLVcpIkZZkSSpUCaMAWYzgkaUcycEEmQ1bzZyEFbJ4lZ4LVSxMkXxX0bAMyYkk2U1g0RU0TLtrVSwEFchIDUyLTaxDWV3QVVFMGQt.GdSUUTqbkQIcCSiYiKGI1Q3MCVzfjKuUkSQUFNWwlV2w1X3UjRBAmdSMzL1kDdqYzJyUiZ4vFZlEyZl4VavMCargiPJ0FRtMUSqbkaFMSQkIiL0gUNvQWL1ACYznEc5Y0Pyn2Z2zVMOMmURMSYmsTRzbUXv4BbQIlbq.iXAk0PXk2PxzjTRclU0LkZJsVN3rFSqXidP8jdnIWSoMlUwLWNFM0ZBQzMDk1ZuM0L4UTP5gFSMISLSczXsMTZE4DYBoUYOsTbl0lbDYEUGwjRtYmU0cVdtgVTk4lSQEEQtbGcz.EVsM1MAETNscjK2ACb3TEUuEFNw4lP0TVSs4hRoMGdxf1UywlbooUb3bGV5gmM24TPiUlLxrDMQYlKoMjXqLFUxrFaxo2YVAGQtL1aiYWRqXVQh41SQkEVmU1LLg2TtMjX0HiUN4VMTY0M3kSZYgEQX4BRZcWZyTSSmISczrzcME2JCUFbpMETjMUMOUVThMURw.karI2c0g0RmoUTRYSQPQSbnEmZIIEbx.mQFEFN0YlMoE2SrQyc5IzQzEUPFMVZEMScwcGMyMUUJYyX3wDRQEDLtQUPQkibJkWShEVNLk1Zv4xZxnDZ0rlMgsxTzrjbmgzbWgiX0LjVTI0XLkER0j1UXsldhQDczjTc5Q1LR8laqYCZqT0QLYzTmg1TzUDQvsTRmQGTP8TLNUUYrQUQJM0c3UFaoAGbKMlVzbTLFYDc4XWN5UCVoEEU0MFb1M2bqMTM2MGcJc0PgAGYAgCYv3hXscidAYWQDs1S4vTMZMWcxQWbnETUqICYE0DbREWXMcULvYmcnwjQFkFa4LyaZozXQEkYtDSdOAWSZASN4QjPBsFMyHWVloGVXgWMhkkMrUyUgokdlY1YSgzaFAmQAIkPuY1XXMjX2MiZSEGV1vjdmw1YGQla0XkRIIjXyfGLmYyYyYjQEklRnUEVWU1ZZgEc171bWkzY4ESZKUiXqvldqHUR4fGLkoTREUDdZoUbzfTY28FbTE0LsYGRFoWa1sBT5oEQhgkc2ozbxQkUZQTTusjdW4xMS4hbTc2cr8TNrMWVNkFNScVb5METAk2bzDiMAo2ZQszPi0jYoEkPPshKuUiQLQURDUCbtX1UwIUV34VYUQTd4nVMyLEUHgiQyEjXOMicWYFU2YCd0UiRSE0XJcUb44TVMglTtU1LX4VYwgjVvPCM4EjYFQ1TwsxRzkGQsIyQ0D2RIEDdnA0ZqkiKyDEN4rRRkECS3cFdpACQ2X1RUYCNFgDSF0TTxbVXJQERr4DdIAUdzokcWomLUkDbtQEUYwzbhgVLiklYSsVYz.2c0jSLBQETYUWd2MTVXMWUzAyY1D1T1kVYTkDNMEzULoEMwMCRQgSXiMFUrYmTvnUUnkTaWkSZrcCSZQyLUImcMo1bYUjQTITYyT0X0HmQzYSN2Ikc1AiUqoUYvglZoI2Q2QlXy8TcigFLh41LpsjQ1IWbGEEctAmYDoFbAUlczYkUqjmQxrDLMEVXtrxSwEFNxw1JsUDNTUjXnAiQzo1cyUGVZkjVKkUZtoGMBUCSzbjQxbUY1QSRXQSU2AGajcTaK41UZomU37FT071LSMzSh0lMpY2S2DTXMIkV3rFazEGagoWZUY0Jr4RdWEVLkY0UVUmP4clKZkSdFUFa3P1QNgUYWMGd5M1LxHDYWgCSrMCbW0lLhMyYLASVoUTSwoDUxMCT1jza4g2RlI1TWMTNRMyLJgVL1LiSvDzTt3xY4HSZUgTZlkzP1HmVqgjM3cTbqPGd5UWXr4zbFgVRqnWPKkUZCYlVtIVUzHCaTIDdgsjdUUDNNIEcFI0LPEiZPECVnUDUhQGQykTTXEFTSAmYVElMZombZgTXgMDRhY2QDo0Piwlc0ozLmo2cNMlK5MTcngjR4fWRn4zcj4lRzX1JnISYTg1JGIidAE2aAszZsEUROwzXG4hZ0I1Y04zZXMSNZUTRNICYKgDc3UVLr8lQxfELtMSakMWcgI2cOY2Y4TEY3b0UF8VQtIFQ5EjS4XTc0PVcCQGMqLVThY2RgIVZ4HFR34hLyDFcP4lbQIFRPQlbLUDR0nDTGM1MlkUbxcTXikTdssBUvsFZxYCTDk1UBQkbN8FSqvTNH0zT27FaqISVsk0T4UDQ0vjY371LZkiQIkEL3Mkd4cyPiY2Jk4BaociURgkUZ0lb4gERUMkVxLkazUUQLY0U34FZpsDd18jahQlbMQTVUojQGoTLqP0XS0ld5slVwLURXQSPvDVbj8TVKcUQYIjM0AmdrUUNWQkKS8VUs8zZyDlSvnGcggmMqgEdynELq7VP1AGVlgUQF41cuQlasITb0YEZJIDcJEyUx8VQ0wFaIQGRrgidAcDQEAWZCcFUOc0QEkCT1j1Xiw1PkI0UyHTUTwldXEUT1zFMxkmdgAiMlMmT2YCY1MGU1TVQrQkUIElYzjkL4HWYyEkP2QEcZMFQzDlKgMlZt.SPDQycGQENnwTR4gDa0njbLQGNGoTLSEFZ4IWXmICVxvzSvPzPy3TcCcCd4H2SrcmQP4xQs0zZXUDNrslMkkEcWgjRgIlZWk1Z1fkMYklVuA2SAQTLjgWZ0wVNDAkKXUSSwUkVh8DNnoTPJAUNGgkR4f2bgc1ZzMSV4IkPgUmKDMiaKUzRy.Cbqv1TYQTXyDGZDMkTUsTNjI2aukDbrk2X34Vb2TUVAQ0cn4jPKIFZqPjXmsBLnISZPUyJlk0QXsTN0bmVqPWbsMGMHclTkg2b5Y2T2LVaqPiYAUSUSUCd0n2QIYScGcEdi8FbCYWSMAEMvQkYqgyczbjT1P0XNQTXs8VL1YmQUMVcPIkYlQ1YOIDa0nmQBcCLPYjMxHTLxslLVk1ZugGbQoVclMFTI81c3.SbLclYK0jdlgDUsEyUzPFSp4jcX4ldYMjQggUUsYzbMcCaV4xLtzFVzbVbiEmY4EFNPU0Zqb0TQcTZvgia1jTcKgGNy0zZkQCL5kULSkibyk1SyDFLNkTUwDVaKM2cUsDRrgSR3cTVGQFYQcEZiQyJhkkdCUkR5clQyY0JznTchoWMP4xc4fWQMEWRFESLs4DUvjkX3HTPxsBcwLmQzwVNsQjMIAkV4DzSkkSP3gWcxXUd2n1J03TdFc0RRkiYoclZC8zPMQySmU1Y48lV3o2XqQ2bzLiXYcjPQokbwUjaMc2ZYYiTqoVXWQ0LOQmbRc1UJE0RwYTQt4TanEyMqP1SucSPDE0b1TmLtEGd0DTN1MlPqMyPGAESgoDdjckY3HFchImUMEjL1v1Rww1Yys1bEIyUu4hZLEmXNASPvwVS4M2P0UFL3AEQq8jZtfjVSUTQtjzTWEVMEIGYtfDTxLmPqMiSokkVMQ1Qwj1ZrkEYhYkMXwTZpMlMqHzUHElXjUjUwkjX0blPZUScUcUULIzanMmdjAka14FVRklZ3o0YogGYvXFMQs1QBomYKElSzvTdpQEUl8TbmIScog2StPUYVUEN23VbxLETSYWNxYSRtP2cMQGSr4xZIIkVIImPzT2LMcUc0fjQTcjT4A0a2j0TQUkdBE0ZMgEZikjL2ckZVwFcXQjTqgWNvUTSSICTpElLFITavokTIMlaFITRpcSVjYEVJ0Ddhw1cX8TdqnUc0D1bSEzcVgURgolaqTkbOMlc5MFNykkXBgTVYUSYvvVcpkCa1nmR4fiMWoVR3MFS2P0clI0Y1QzPCsxUI4BdlcTLAM0b2fTSLYjT4rVT0MFaWcFbVgFcNMlMgQTLFUULAclLuIiPh4VZIQlUhgVN0rjbVEDV3MCcDomUv.UQ4YVLIQibucmQtQzUGkUdo4xUYYyUiokTIgzS4sFU3slavEUT1QDbQk1RSUzXOIWcycEalUSXUk2cpcTQynkStD2cGkENlsFclACL3QidMEiQwoFSHsjSvQiLkIVUOMlcgYlaAsVNGElYKokUOUjdRkTPokFV4ElKNgkRuYFc2PybCU1SVASMioTUIcWNM0zXEMyRxfWTpIFZrUzQFQCa0TGZRYSSGshYTAST0U2PAcGRH4laYo2SBAGYhQ0TWckPJYDR1sVMOMmYH0jLX4lQLETQugmLsMlSHoGUuA2ayIGNXE2XAYSUMc2TJkSMH8VTmQDc2YmKQ41JqkGZQQVSxPGN1HlK1fVQDEmLt8jZLoDRzEGTxT2algzQEEmTXUERvMmXngSLyPDSZgSUKo0Z3c0Z1HTbvMWZjQELQgyXV8zM0wDQE4DYLQDbZoEQ2bSYVkFYGMkaiAUbw3zXJglKIwlbz4jYyH2UuYWVAgDaNgDSmAWLtnWXjgUQgU1QEwjXzoUUkI0MBYmSE4jdvLyLCg2YD8FUsUjKykiUyQld4YGRyAmKugWcZ8DdiglPLwzJqMWTqH0ROYkLOMVLToURjolQKMkcPsVLxTiVI4zbVMzarcWL4fmdwcFatL0SUUEaAQDQwbTZJIEatoULSM1bq4lMxUkdokmQvjUc4DzZRAkMQg0ZVkUZOY0Yz0lSDshUqXUTpkEVnEjYyrTSw3FL2.Ub3jiPtHWY3IFSv4VSBIiXzX1UMciaKYzaQkjX2fGaBUkZXozZQEkU3P1c3sFTOwlTIE2ay0ld0oWPnU2LNIGU2cFRmYDaq7VYqn0P1oFRy.SQHcTbiw1bvshdn4VN1TVMYo1ZIkialgFMgEzJ2oGUAIFMwUEUIUSN5A0MIM2Svo0SSEzZUYSLwjVQ0byblc2RQ8TTZ0ldoI0JRQjcz3lL24BawP1cUU0SvbmL2E0LQUDbrEWXxoGRo41SMcFR1kjdxHzLqkzSrwTNDo1Zh41JBomMMYlRBUSYSQETnYlakckbY0jYwjiaBYkVwHTZh8lYIEzbBEmaEQyJ3bzYOkUXwgCUDcSNyQDLiYiQu41b1njatk0M3oWXkEmKwQFZ3n2MCICdhA2XZQDbLkCQYYCcyozYNEzMIwDYWwDREY1RUUycTISa3UkZRomR2fUaNYEVqL0U1HTViQkSzYzPvnmd33DLyX2JmgySqEza1bFMzkzJJA0MmUiVRQmdNcUbigyPLwTPmYlVk0FNkUUctDGbnIjUoUkaqn1M1H2X3DDSG4lY1PDTTcVYYcFQ2HjQNEzPMIiT07DNZczZ3X1RkMVbBEUXt7zUVc2aEsRSggjdwLmKPQCbKcGawUjKOcjRSMiUAUDQPoDdXsDc1IVXTYyQlYlcqYWTicTL3cUPwLFT4TldAESSrMjcLoVUgcEb4cUPhoWTzfEQKsDcQQzcwvDM5o0UQQ2USAEVvAST3f1TBwFTlM2ZXAiSuMSQXYmd2TFROM0UvP0cp0jQvg2RBUUbSk1T4ImcvnEcvb0UoIlcrsBbi4haB0DLyrFaSA0SGszQvPkQpY0QyPTLo4jdNwVX0fCYzTVZygWPY8FbwbTMlIjbnUmL1AESSg2RzUiM1o0TyICV3ojRYAWVTklVOIDMtT1QVAmZEwzMrYTU2Y0MTYWS5YlTnUDY4.UYN0jUlYWa0PCdXsRNoQlSXkCUlMiZvrFQxfyMHoTTT4jZyEiVTMVPVwTN2wzR5E2Sp4xM4TibygCSOACQvrFSD81Z0TjQDkjStfjRtESQ3I0R2TyQQUESEAGa1TWRTM0SpAGUk0DYAUCQvMWTiQmSr4xXzjUTjk1UlI0RBUSbVICVLcEZCoTaPIGQvrFYKASav3TYvUDREcicuY2MkoEN0c1MxL0XlIVbVUjd0MVYwMGdiIkZKAiKLUiKqEjX5k1JWIlTKICUkgycUcDRyo0LIE0Xog1TDI2ZiQjMDMGSvHyQyD2YlcVdXsDSxoVXPgVZqfCMOQFS5QFQrgVP1HiTxLjdQkENyfFS2UjYu8zQ1ISZVYEYMUEcwnzMvIyZ4QzbJ0lSwDUZPMjaxTWS0gmUlMmZKQlLz4RaOMWcncWRF0DaGUiZqsVTVITUGsVN18jVzEVbHwjaqzDQtPGbDQ0LD4hbsozM5cmZgUTTBElXHMCRpgTLxkFMTkmK2DmLQgDUDo0apgkRLQiLAoFUK8FdEgkZG8jRiYDVDMTbJ0lSlAGMOYSV2Yyc0UzP5UWVyHFcuwTP3P0ZK8VLNIyLGgkZpUlYvj0LhoFSvYlK2M1S0EVYAEkTLgULuAmUtUjYmMTZ4flLuUic2UGb2PzUKQCZC4jLgIDL3IjPW4BQtQmUZMyYAgjQTsDUXEkLGUSUxsjbLgmLQYSVhoFTjICbXcCdyTEMQMlKFsTTvTyaWIUU2.kbNgyLEYUXToDa5wFdy8VLwXUa04RUWIGTvkVLt4lTjY1ZGwzX5gya2blVDAGTAAGMXMVbnEjPkEWU1gkT0oEM3TzMgYldHsBRV4lVqMzRY4RPL8zUWQSYGg1coM2QzjVTxETUmMWNFQ0aPsxMzQzPSoGUm4RRZMyQTIlPoU2Y5kSYqTjXwT2MiwlKmkiYzUjVhslT0LiKUoUdPcCZR8lLynjSUA0QzclbMsVPTc1XAM1aXwlXsQVTN4zcisTNvfWRwsFR3QyajQyMkMELzEkSzPlPEMkQyE1YvEzM1.WQEIVUM4DatjULQgWMGkELwUUQlUWYSkTdwAyTx.iPxT1RRQmTmUzSkwldAM2JQcCS1QCMTsVM2LUcvLCMRgEURkiVSEGduQDcqj2SBsDaxozPkgkSZIWXYU1P1YUbxj0QkgGT0PmPtDzR5MmVEMyJAcVSkclUEgVLyo1Z4HWPEgmLB0TTIQjQzUmRhI1X2fTQz0jK1oUbqTlXgc0XKQzcpcyMyYUYrA0ZmQ0ZOEDVAQDdqkjPqbVSukzZFUyZxIzZy3xcM4DcvHjU0UiXnM2MlckVzPSLhIVNO4Dc0zjKKgCVkgFLvEyaXclLlwTQxPVSuoVX4ASZ2U1ZLASLTQSYRMSM1AiSso1SqczTmgmdQYVTjEyQqoEUFAmTnASZOgTV28lMwQ0ZmY1MIoWbqgDYnkSQMUGTmACMoEUYwUVbqAEQBcFMswTPVgGYTYFbvc1YUIEdE4BYsMCR0.WQx8DNTEWMOYVdDoFc3QlZkclUwrhP4XjMvkSbKYWaRcmRRIldkcTUvjERAYSZ3gUSZIjcpUmLQMkT3TSXkUGbtPjdNEybOoFd2IUYHciQK8FVWoGcyXFSykkazoEc4.ENBQEVoMVdAEiMCUjQ3EkKmkVVYQSLzXkUvjmRNA2TjEjYD8DTjozX5UmTGASaPUTPK41TyDELvzDRxzDaZQEQwrBan4zY3HCUC4jarMjRX0DcmU0QYszLvLUSRMlanY0Z2kVS4XFM031Sy3jMvo0QvwDY5QEU13DQm0VbVQ1ZssVQxjCb3jVZJAUMpwFTxIjYvo1ThkVc1jSYjcVR4HGU2fTTvUDMhgjRJAGQv0Dd2rFaOgGUtvlRjIWNXYWXMIUcB4zX0QlXBQDRpQDaZkWaQUlbwjWPycya38zUX0lRhYGcHEScZgzY3Xic2PSMqAkR1cmVtk0JS41M0TDUzjTMnMjatn1UB8zZMMEMRMUQVgjLmIyLlgkLSQVXz0TcVcUPL8zRCYTcnIzZsoDcV0lUJc0TxzDMLAmc3XVTqEkbr0VSlMVbwQzSXMSNAI0LrMlUtMjU1rVaocmP1glYVY0cVIjaY0FbwgzYvr1Jo4DSqfFTAYlKEAyQCMUZwgWMhIVdugDYyjTbvo2SkYSbBo2MlgGcnIkU3TiUoACQAAmU1TWYzM1P1sFVM4BciUWXiEESMIjaTEiVxwFd3TCavEURhcSSrUmaxX0Y5sBSyrRQnE2JiITbzQUclQmYlQkYhYmYEoVVxgFbkUScxH2JMYCcn8DdFYGQSoUTAk2ZtkVZ3XSRyz1bqPCTN4DSOoGZWUERXQGSp8FQ2X2ZwgiZAEjTgMzSTEEQ2okb4XEbHgEdHslT4UjM03lKQIlKtrTQ0z1RlcicYkDYJg0a1kGTOQUa2.2PwjmbNUzZLEjMzEDMvEVMgkEdjAyUXgWdLYEYk0lLxQjP0f0XSMWZzjVMqoTUzPSZzIldZUScq0lZVMWXAYiQVEzb0XzXgQFLusDZqYySvYUcg01L1DGY3YDYOYUN5gycxbzUPclQpszRCUGNO8TYB4DYAIzahgmUn4DZlYURlAEU2Y0Y1PTY1k2YAsFNvDkMXMybYciUDk1ZCUWYJ4xPysjayczTWk1aCISTLYDYwMjbwDkTnw1a3wDMHIURFcGbEUTNRclYIIUTkcTN2zlcJkzJYshR2rlQQg2UG0TVHQzR03Rb1kyR1w1UGczLwX1S5UiMroGa0gjdPgEYrAicrIVPLkmcP4VRogWMsolPKU1MAQEU1HiMVMzco4FYZgEas01Y3EmS5MEZiECb0nWaykGZTk2cj4RdyHzMPsxJjMWUQgkSHw1LHg2UCMiZNECUFETdpcCRJolXyciapoULLMiLLgFRwgmMEEFYtAkMNEGNTQSRyXmZuQUVAoFNggSZA0VPAIiVVgFU3EUVRE1X4.WbrQTUzkkZiojQxjTX4H2TOshKtXyR3jyJY8jXMkGatc1J4k1JNozUUYUVZEEUpw1R0kWQAIFQvY0ZvM1Q0wzJwfTQrACa4DCVX4xMy4FZWojUXUGbWgyZ2QySUEkR0o2aHQWTtPCTQIkZFUkaqjUU2sDcGI2ZjIWUSEyPRYVNGMCRCYiM4kmcxDVYkYyaoACZKU2Lxk2SJ0zUOYmKwD1MCEDajszS4MiL5sDMMEiRg4FLGI0SPgDYAIDYZYmMS0TayUVQzbmKzDUZAImUT01ZQYiUTkSMP4VTjk2SYkmMHYiXsc2b5QULq7VVHESMzLFTjUGRMACTvXVM4HlUsIlKw.EUrwTbDU0YXY2X2MzYJ8FVtn2TAsTdygjaIUDbOMCSvQFMGEVZx4RVvQkQtozYUMlaVAUP2DmUoUTdB0jdyImYBc0Ztg1cxL0XkQVPlszQFACMIIjczX2XgM2Swf2LkkFdNA2QQAkSlQTcpQSXNMiQx.2UzLjUQ0DbyD0TnMyJwTidpIyM4gFcJYWVmEUajQlLUEGbgU0Lzg0aWwzLNgSc1ACcqg1TR4FU3YVbqLkamoFRsIjKrcjcHcUNPwlTvQVXIwVQMY1QUcCYNI0SZUUVHIkQwUSbYklcygCMKcDLQsDLTcjM0YCbwTyanUkXgQ1c47jUwf2QlQWPh8TSwvDdMImRQMVbzrhMtb0Lwg1Mwjmb40TRtkiVxDSNvgCZMEybIckUzkyPVU2buA2UDcGayLyLTASYS8zZRAETxoUN4HSNtDVRgEFQ3Q1S0Ymb0olZzfzZOAURGQVSFQmLgAyXD0VXFojLHQUVv81biUibqYFQN4FVRgzb3v1Mg4TQ341L3IGbPIkUQshYXE1JxQSYVETX0wDR1bSLvEjRHg0PsgEVU41QIoDLnkTa2TFQPY1UqQSMCcUQ3n1LFU2UVMSXhgyL2Y0PugkLJoWYo8FQOMETHgEZIomb4PWXt3xSWI0PxoUcwD1ctcib4XyP08TZqUSYhUlZxkkXw0FV2IyPmQlK5gUMwfmKQIFaXUEQWcUTxnEdHASS2sxRuMSUznmP48jdO81cw0TUSUyXTkjU0fGYyjmZvflckk2J28VMRYFM3kkXtjUTx4jRkElazE2cyQVXtnzS2DWc3PidBEyMHk0MBcVPhQyUnImZ1kkM0IlM2bzZ44TXF8zcLgSb2IzJ5Y2PIgUdkQTPvgyRHIiciYyYSQGNyzVPnIFQggUQTIzRFEGYyXFU3U0atPDT38DL3jSQxHjaLAGRr41ZIgEVJ0jaV01SgUmVME2RDYCa4LzRKIVTjQFUC4FMAkmdUQkQpYkaNg2J2T0ThshKybiQ0sBUtEjbnYDNBkUcwjyPLkiQkQyX1Uya0nWSEAkcPAmM0PkQPElbDM2ZZI2Pzz1XYcVd28zQ0clPzYDMicCdLYkKzfURhMmQpEyUVQUQ0sVXNkyTxIVXtYTaRsDZpozPpQUYm0lMxM2Th0jUKwVc3zjb1IEdH4Tc3YVcLcTSoU2Q3omPE4DUtMVTxwzbXMWc3LEdFEmSyzlLTMGQlIFZ3MDb4HELF0DZ1cWPrIjdqMWLrEENAcTczIWSBkUUDQUdnsjQPMUUJQFdmUTYZIlVColZ4kiK1kGMOc0aq.SRZETaXgmbuElUNc2MgE1b4TSbkACZzbCLLkmXx7FbmQCQi8jSqIEbC0VSFkjMnsFZKUDaAQGdRwDSwzTZjkyR4gSLE4lbtLUZvDlRxUCSwsDN1YTbEA0XJIySKojTIYCTJklLXIiM3UGRAc1bJI2Sw3zPU0jY1L1Ung0MHMzX3UTPNAUTiMVQynzQAQlbs8ldwYjSx8zTWA2QUsjbPsRP3Eic5oTSA4TL5cVRTwFUwTSLqvjZ5k1ayb2b1Y2ZAoDUoQVdvQyZB4hY2I1XtsxXCsBd0jTMhMCY1YULVshSqDSLtnUSK0TaJI0aLMldhM2Jvw1LgYGR4kCL2jmVDUmUyMGZVEUdNAyP3kUNm4xRioWNVoTPRgzMvECVocSXjsjVoIlQ0.kZAoTM2fDYhkVY0IlM1PSS2IWRtYzcGESYmgkLiUTZCMVYgASY2EkPTY0YTYWS1ITYS4DVMYiMUomUiclUwQyYtXiY2njP4n2PMElV5gkVwQDYjM0P0wDLLQUN3DVUQYGcTgmVuYjS5MDUDcCaw41U34hZtUST4fTdFEkYtTTdFgyJKkjcDMGZKkSMRMFVEcCaNU2cqDSY4LDY4fGSyXyS2MVVsAmd1bFcLUDYKgkVIMVVqYmUqk1Q4oWVP4zLngzXyU1agwDbVAmcAkkYXkWMyE2byYmMsQVbxDCaTYScEMTdK0DVNMWMN0DRSIFSBUVTrs1XuwzT3AEYLAkYBcCcsIWTnMld07DMOQlarsBQDUkSQQDS4bTdGYkQ0rTUsoVMKoUS3Y0JhYTLx7jRLo1PwDiPsUULmgWSzbEcrwzRREicAc2Qtg1bFMURmUVajkzM0Y2QMUidXA0JKgkKzXkMn8DQ1wFQoElS1PUXE4hQnITP4cGSLQWRDklYKMjazbiVJ41YY8VUKIUcGIybsQlL5YkRmQiVls1bqETbqnWcv7zbU0lQtEiTUwFSHA2TmkCbVIVVBshPXYSY3bCNgk1bMslY1c0S4.ySo0lQUE0XhsDRK8DNQMjKZ0jL3XFdmQia5sxc48FT27lSBgSMYEyUiYmV3QGLZMlTnQySGAiS2H0YMoFNUMVS0YlVHgyLS8zaQYVPGYzRnIGaykVbWwjTwwTbBslYwQzLUoFbKAGd3cCUlkmXNImdYIyXxslTio1JTszTNYWb5ckT0DEdJ81SyU0RGEmVxYyUoUVMmYETMUzYSkET0YSSCUTU5AUbkUTauUTNCMyZ24xcgEmZmcWdLUUcK0VM0EFNxnGUq3DYlEkMTUWPgITdVMld3wFMzDVPlUyYmUGR1DjbZECcvQjPwczMkIjZH8jUjASR4EyS0DEVQkVdwQmRPwjYtPTbvEUY241a0.Cb0TDLwXjLrcSU1cyaU41Yl8VSoolSgclVCgVc3bjUtszPR81JN0FbIgSZqImLzEmMPY2QioTLUgGVqIkcwgmd2PjQWQUV3QCNxEEaX4ld5kTZ2UCVnkiRT0zb0IldqsRa2UiVzzlU3.kLhkmQt7zRmwjYuUFUXkidmY0cgI1Sr4hatHUR0DkKn0lXyLUS2PzX0USdEckT0Y1JskkRCckMggTLl4zPSAkLzslU3LiQwk1TwQlYoQWPKIyLAUSPo4hPQgDa0vlKiAET30DangSUiIzQvEVUJsBVOwFY4MjMXg2U34FQJoUaHozcHI1UV4FQgokSx3DVzfEUxgSPJglLxjWMtzlayoka3rhL1cicj8lUkUWRwE1LD4VM1gGa1MWYmYkSm0jL4MlSvLUM0zTNy8TM4bWaK81LwDFQtDSdPI2bxE1P00jZVcVU50zY1EjYgI0XmIzQ1nVZJA0YzXzJqEDQCEzMigCdqkSVP0jXyLkZvPFd3TGQGkkdz4DZpUUc1cEdIUTaPIVU2EWYuEScT4jbFkWS2PzZSQEVqQVYYcUYm0zLRsRRZgTRqMjLvn1Sk8DLTozRU4hZ3MCQ1UUX1LUZvIVcpkFbqQyQyLlL5QVZXM2RtUyTo4hd3cycPgVTqDEd2cjYkYWcpYGSOMWNsYSS0LmT0QVYmcyb5QictjmLwL2R4ciL2UETHozRIcjc3.WZ0bUQoM0MQYkPWACNAImdREEZLMSTxgUbxMyM3UkPlETYLIVbio2XVUlSO0jdFYzSVQVYzfVZQgyXNcWUrciMhciPqTVPtXFYpYldoIlSpQla4okSVklbEcWLBYFMNU2QoQjMwYiQMY2JnEySwDFTFMUNwXVN1LlZQIlMzYFSO8lcYUzTEAWVtrxTCMyUqgjTNoTd0zlP4LCVhsRaj0FdYMWTxYFcx8FMEQ0ZGokZ2XVc2wDVGwFS20VVuYSZkMiYpo1cJYFazfEQkIiLoEmYZYSaEcVL4sjdnQjdOQVPqo2Y4kSZvfEUIImb0DUb2gzXHgER2jFdE8DYgMDdpsVMvcUbuYEUFEyYq4TdxLldzIzTSgkdMk1SigjUvHVPIk1QUsTYxTjaEkkZDQGYtHCYSw1T0sxcl8FYJo1LNgDczESZyUCNzETQHEULqE2aJ0FUFQUUiM1YAkFbPESV4QkSykSZNcUbyszJGYlaGkVd2kWUtMWMocEcoMFS2bFYXUWaIkUSxn0MWUUMOojZ4MjXpYkQKsFSucVR2XUYnshSToVXREiRTE2UYIVXRYUMCYmLrETbhgUPqbFMTkGTuITVYUEMU4RamEkRybia4MEc3EldCI2bVshMFgWYrkUa4bjMAUDQkU2R0QiM3EDLvoULJcUNp0lRQEST3EUaI4TZ4fWdowTciEkcu0DZuYSNXUWXuoGRqMDU3Akdko2bo0lLx8FTmQ0LFUSdy7jTRolZKg1MDYVbR01MtrjdVETQhIUUAQzQCASRj4FT2nlYkUETPcSMLETPZcFYAQkV1E1X44hUN4jZHYUaLMDSsU2MEk2TTMka1LWL1AiQUwjd0cia0fjVAgFZjESVWI0cMgEYKAGNM4xZtvzROEEZ1gVVVITYPojPSwlZ0QzRx3Va2gTMFgUa47lPyHlToYlVNYibrgkSyQFL3MEcFYDbJgDRiwTaFQ2LkkVP3PUXG0TZgE2atgWZ4o2LrczXKEkRhMDNoESaBY1LSASbCs1Mt3VLzE2bXwzPDAGNoslLTsFQ1DTYyjGczLiRZ4RZxUEcrAyXXQEcFMjdGIESvYGLxXjZwUEQYIzPq.GMq.GSoQyUx0VcgMmVyMUapkzUqQFUDgjKhAkb23xb1jDRiIyTScWbu8jTJU2ZLIUQVQzUNMkUQomLIk2b3DFTyITUJYERWkiSUkma3ozRqkEcDkyXrQ1XFEFQ3b0UjsDLQQCTikTMkcmbwc2RTYFLgsVLvzjYpQja0jWZzfCZLgyTiAmQR4xU4MyZJEzXGI2LJo2aXwVVCM2cQgSTY4hXyc1PDUTNx3TQD0DRtI2QRAUa50TXL8zZDMFVAI2cOoUZFs1atjGMRwjQ3PzczrzbOAiRj4lPRYWdEIDdUMCRFkkUVwVUnMDdEoVVZESdKcFRgEDQ1QSRLkzagoGV4fUPNEVQso0JyoVR2TzJJkjdDo1ZgM2YTICcOciRgkiUt3hZ2QSXWUGM3nWZ4ISTqgGb0jTQZMCdqESdzIjMl8FTyQmRFsTRHI1PpImQ2bEczAyLnUGLVsDVukUPB0FT3gGcqI0LjoVckwFT3sxP4k2XkElcGUVMyfWYlEiQWclZyQyJtbTQMEmKqf1UD8TZw4lQA8TZyshQFIkKAojdvYyMXUWXwMmXF0TT1zVNuIVMSsxc0fFV0YCMmoVR3b0ZSkjY041btYUcMoWYzo1SEcGbroVbJwjVWUTUyP0JrIVV2EVLWwTaEIDMmAWbvIFY4XWVzvVP1j0Uxn1RssBL0TDb1Y1Ytrja4PlUgQzcwPkbXkEQjkmM4cCbmIGT2TCdyr1RBg1J4T0QhoUbnQkSwgCVgQCR1kkdAklMLYFTq7zSjozTDEFa4kUZRszUNQ1PFUTQ0QTTwkiR3ECbjgURWQUZhYCSGUyaQY1ayTVRUcVPPI0cpgWdzrlTxkEMCEkQRgTLg8TMrkTTAIlUYAGUo4lSsgFNnoDcRsBUskSMkkVbik2JDsFbOASPNIURMoUMgYzXgkjTjclZFMlYkcyZkICVUU0PQM1TCMkTnsBaXcDU0TkXv4DVUAEQIY1MKAyUrcDdCIjRC8FR4fzQDgURuckXzbmQBMmL0UUR0j1UAAiZDY0crITdpI0QlYmRv8zZxXVQiIzZYISa43jKp0jLtrhbUgVaFYTbpsTSwrVQZQmKGIjTFMkRxTCN2ojXJk1JGQjSqQ2cqfFZ0DkT1.ELl8FRkMzMMcjcRYUUhYjVM0lTC4FNWIDL1Y2LBc1SNEzM0cEROQmd2LCVZo0UBUiLVsRTso2PwDVXOMVTxslcG8VcuQ0c0s1LukidCIzarcWdGUCRKcCQhUTT0wDaUYkKQckRhECdzMidjYEQn0DU37TZ0gSXzLSbLkUPtICM3QTPXEzPCAya2XDMIUzJWEjKCIGUTUDdH8DN4cTNogkLGQFYHA0M1XzcVckXj4lQToUdsAiQtUiVLM1ZWMVQtbVY3QlLnsTVnEkVBczUCE0JUsBZlUFTKMSMYU0M47lLUkTRnEmYgYyZM4BbqoFSRUiYFclcwzjMWoGcUEUMlEkMMM2TBwFM2wzTtA2QzYCUzD2ZG8zM1gVcXE1LtoGYloWXtPFUP8zMN4xTvIkU4rDd5EkQAUlLCEWQRYFQyT0cWQTNAUFYUUSSqsxMNcjZGwVYqb0cFYTXPQiVBUicUg2YGUjaZYCdykkZqASMSYkQWszJoMFYHIVS4oWd0kVPWkiZtYmRNE2Rj0VTq.0PgASQrclbQgSMlImYKc1LtT0TqTGaxXFThcGQCMSc54TYIYVbvk2UqvVLKkVRooVXg8FTNMGNMcFRK41TUAEV481MyDUT14DdHwjYvI0QPISTVAWQHECNhUVVkkzPBsRb1MidWEkXqg2UVITcrwlUwflc1QSdHEVTsokcqw1RXcVMzkyJi0FcIQTaqHWRmoUX37VVJgCL3YGcmASTHcmSgYjcYwDcMwFRqTzY1E0ayXUTgQWcZEUTVQDNGo0QPMkMIIFNRgzamoFRjkiPNYjcyAUR2ElMwgzYtciTBUWaosVM4L1YUYzaSclUT8DV2HTXJYDR4M2atbGLw8zX0bVVt.iX1DWX00VLm0zPHszXFoFcMIjYOQSMqDGRoYEaKEGSlYmKwAGV0ckbzojVzTyYMYkXTM2MUYCQrElTy8jROIiUXQUQ1YCazTTMFshS3oFR0jWZ0HkR5gERDUmXQYFVZEEawPVXEcCLIkGSXcVaxMGawL1M1ojd1EVR4UiXxcDUp8zXq8jLiA2bzo0U1HGdsMSNzcWS4DTXUkzYhMkbZIjQCYUNsEWbUkEbIAWTjg2JZU2ZPkzJlQlZEsBRHwFLOMEN4nDcvcyXEgkPZY2MvgiS0wVQZEFSyb1PyEFMtLja1wjZ0EyJxACcFolMvTjKXQ2cXwVcO4VVhk2bBkCQ2YWV2TUM2MyMngEbiQEcvQGcnojRSwDZrIVSMgTalYTdMIDbxgFLsEzJOQUXDcSMZUzXr4DcTgGRWkjMVo2aUkmMIUkVAUDYGcUbSYTSrgUczcTVNYDRpAURp4lLAYyZvnmUV4DL0XTbIEmTAI0S3nVXLMiPxQlZkQVXvEiKkIWZu8zPIUzbSEUUgoTN2oEVsYGTzITRH41JNkUY2fFN4vlLjkmd3LVb0IEVkMWVSYmUvHiVPcTNWY2QIgzcuUEM1okVk8lc0HiS0Y2JqgidwXDLtD2PAsjX4P2UlsTPxEyLtb0RscFQDEkKII0Jh4RQWkFT1P1biYjdvLDS0UDZRoGLG0DNlU1YUIFNPE1YTgETpwTPQgDRJY2YuIicuIFd1jiZi4hRZgUNtDSXlYTP5MTTCYyR4nWStPTXhg1LhcTbgETTMk0RDISVJYTPpUyQiMUT2YGd5gURQcjcoIUR5QmXzPyMCYlRw7zPNwjQMAia5w1ZsIUTsITbk4TZlMGTuMzT0LlVokEc1T2SjUCRUoGRLEzQtbVL2b0XgkmKxzzXukiLxbVa2P0JXUFS5kkXvPWaqUlYPEGVKI2PZMzUAYyUxAmTwI1JqPUNKcSRAI0LDQkLvMGYLIyMnkUYCcVMnoEdE0DTxIVY4vDbJYCTBUWZqXyJtTiK4nWR3HDVwTTUnECV54jQqciS5kWTqQSMwfyZ3HjbIsRbWUFbGYDVHM1RUMGbJ4jP2k2TqECSTYUYxozSUM0bK8TL3zlQgEzYh0VcqgzUWEVRq8zcMEWalYEZwgVQXgTUSwlPzrTUHQzYh0jSTQFRGQCdzzDYjICLPM1JZM2MEI2XQ4BaI0DYroEQ4biaqjia0kzcMYmaso0LVQyRGcTbiwVU0kyLxUiatIUVlUjdxP1QEsTQybCQlEmK0MSL37Daq.2Lw3VdFgTR1kkdxDFLwf1RM4zPAETVvTSdRkVZwrBSkYETOcFcqQENu0TblUGdVEkQvrRTi4hMJESNlciR5I0Y3D0LPUCV0jWXjUEYBEjREIGZvMGT2.STvIVckcDcDkGZRM2SVMjRSokRokSYvnGRtg0QqkjdFkEdRgDasEVP4PSSPM0TgcEUGQ1RlolKpoGTMUjYPEWbooEbXUWUAgiaLcmPrASb0nEZOk2YLcGbEoTPCgid54lRoEFSmE1YSIjYv8DTSY2UPYGMiE2bjwlSNo0YoQ0bFQ2SVE0LTE1XkU2JtA0T1cGdgA0JlIzMSI2LAEyMxomc0gmb0XzQGsldukGYCg0PCM0J5gVaxP1T1YUULcDSxHycvnmY2I2UJAmMlIDZP0lPxYiSSUDVBcVLXUEZRcFb2jjMToDV2DmdzciMxcWLqb0TvYzUg0VTUkzLEQiPWIVVvXFRZ8jUrkSYxwTQWY1ZJIUZjgGdyLWNLwDcB0lUCM1TLg1c3U1L4HEZg4jKpUmSHI2ZjczTFgmVREUdw8jYZsDNtYTVYUELxwTVlckdNoGaRAmdzMzZyHEQSMlU5IVYtYWbYQST1kFYR01bjYkbwgETwYCTxcEQOUlLxn0bhkFa5gjYlMGZ4PkPFQERs81QxwlY2rzUZgDRz4zbVIjKzTTRiUWSXMTbZITSVYCRPsjdsgWV3zDQtIFTlAiQWomPEkEYHQmUvLjPUASaEcFVPoDUBwjctj0PzjkQEMEZmYVdznGcNIzcTUGdwAyTj0la1TFY3HDM0HzYwciTvXWViAkQk0VNNc2Ul4RVyTCTPwTVLAkbPEjSjETMAYDUD4VNksTawsBNloDYBshdXQVNAgSV1LyYvPlLEg1R1jkYxQ2aq.iPqUUTYgFTo4BYnM2RoEVQLo2UNMUQt8FYBUEUHcjSREScIQTZpgTdvslbzAiULElQskUYsYERzYTVSkEMBslM1fzPXESdtH1MDQmaFIDLQcmRyPmd0ElcqnVbxIWUF8VcncDZmU1ZEITdYgyXMcCa0AyUBMWQ1XSQ4D2bgEUZWsTdmUkbDM1TCQybosFSg0Td1PlcOszMqvlXokUbhwlbVgSa1nFSBAUSFkVcOQSYGEiSwPkcDYEUpQDazv1RwXVTB8zQ33VMkI0YoISYxkmTrAmQvIycrECc0gmUDg0P2kUMrIiMqQVUVITX2EkMCckPZEUNXwzb5wVUFEyYY4BRPImbTkyQxbFRGYkT2AmT0fScvQUTE01YBYVQgwlZlsjTOUzc1HTX4TVaPUFMCgTUyEEbOc0QzEmalUlLtAmavrDVnshXjkjYnQ2ST0DRKE1LwLSUy81XmA2axQidq.0TUUkUS4FYCM0QywjStjiTQcGarokKlQzXyjyURoEa4TkYMsTNXgzS3fVLmwFcmEVbF8zSFEGVDgWPKwTVmgjL2bEVx7FQzvDQuYDURYTbzr1bs8DaSYDZYQUMvMFQgsjKuQiTUozSiU2Uh4VQGwTQ1U2cTUySpIzSYgDa4YjVBMTc2DFc5kicGUVZEciPzkDapg1P3HzTvPUNXYUNtfVXNYibngjUE0DcnQTZSUUNEYGakI2MwsDZGMDbvLzSPcWL38FUuUGT0TEa3jVMuM2JAEzXLIFbyTzX3MTZzXCN3PFLg4RVZAUZX81SCgSLEIGQjUGcyIyUJQlT3flbrEmTzPkPYQCdwL1ZwIURN4VcuAmd5ozM3fmP0fyMtUWcP4TLAcSRkIUTOY2PzwDNugzY0gTZvUEQ4DGcv3BalkTc5QET4USNRQiUQgUYtslYtf0TgkiTykTQhcmKD4FRSgzUx7TLLQzLx7FQi4lLIMicPUGTTAERxTFQZMmXXsjb081TxDWcuQSYwPGcQUDL3cVaEgCZY0VLvcmLGciKSomSowjYl4VbIgFMWEGV1MERHMGTzoUQyvDTVUUQOkyPUkmUyfVc2DSVv7jXzHjToUDQGsVb0g2aHMDVxDGcyETUzY1JA4BRPMCZYIiQFIjYq.mbvsjUjcCTBISQMcFTyTjapwlZQciaqIyM0YlaIcTLI4RT1bjYsAiLUgFYDwjR2cWcLMjS03jXt41QMMFV3zTYZgCNxgjcQoUZIUGUY41YQQSZ2kWXNE2SsMGUoUCTzYlTmcVM2D0J1kkUvX0UMw1MTcFNWEybYYCayMkbD0lMDUlM1n2RxoWR3HVUPozMvsVc5IiSuQiKNklMKsFU2TiQxLkKEQmVkQSd1I0PyfyRNAES3H1TKU1U4LCNZkjLwzlbFQzMYUVU33BYz8FaiASPO0jM2jCLuY1YRkSN2EjSl0lY2IjKFISPqPSUyTmc2bDLDAUN0cCaOI0PAMEb5ETbGcVduEEbCUEMU4FNhAyPjYzcuIzLQU2TxDTbZMSNjQFUqH2cUACRz3RSjMUNQUlP0MEQyg0QYkSTuIDNqcCL3XyURc1ZEkyRqgjcCQiaz81Xwz1ToAmRBMUZsoFMmslUxcCNnMjZ2QWbSM0JIoWUL0lcUc0XzomVoM1QGkWQLkTb1DmKN8zJKQjMCgyU0HkawsFU3DEdxbzbtk1XO4lbUojL2YFUwvDQTgCREElPu4RcRQCSBUlSIkTP4XCUVUkRh8laVYmYXElPqgWaLIFc1bmVOYlRgQGcgc2cwLTZyY2RQA2TJESZ04VNNkjMzkCdHo2XhEET4Qma1QkRwsjdiE0bTEGU0bjaXs1aGcicSAiMKQyMUglULgiZiQ2M2zjb4fiXpMENpYlKNklb3T0SU4FVN0jTrMGQynzQJQzR1UTXw.CdMgzQhI2c5ACSTASNz4DUzsRR2PGRok0XBUDdIUjVjo2LxXUTmgya2YTXVMWatXzSTwTNyITNrQSPNYCSzYkXqwzUxDSZtcWNvXGSSUlUSEEb5wzaxY1LC8zYNczU3AyUpQiZsEVY3HlXjo1aoEUZAMzUJ4jZic2UEQWbC4lTRc1JGY0LgY0MrM0LwbSZiciX08VNQgSNyYkbzHGdqHGQJcmKtj1bWs1cIgUNsk0Tn0FVlwDUJ8zPukVLGYWSRMWSEMjPx31QIQVQWYzQZgmSWETaW4lUxciS3DiSAszLXgGchE1SJcibtkiatM1QEETbVESZBEWXgw1TFIEV4njRscEZlYTX38Fc1g2ZNIjXVQiPwEVZYgESvYDRkQiL3E2QXAUMqEEY5UVaOUVU2EjQvQkRjQkVlQCd2YkRFQUaZQ0Qoc0ZiUFRBQTULEzJwjkU2fUTCMGR34lYKMkMlA0ZVsRdtXDSRUiL3QzSNs1TqshY3X1Qt71cTASbPISXtQkXooUPMgVcvAyQ30jdCEycv.UZRk0QWMiYIQiYpMyb0bFUOUzaxv1ZCEiUAM1JBkSZCgEcqfzawrjbiQGaBcEQyTTSo4jKDkTclkjUzjERwjkX50lasUmQWY1aXMFdJ0DZ3o0M0wzXyI0RwEEVPMGRR41axEySVokYAcUQTYjRygiPBIkROQUUjokP0TlYpkCaBgCSZYUVioDUMo0TH8VbNkjckAGbL81U0LiMKwDcwvTd03hMpshbrU1ZwomZR0zMkEWbt3FQvr1YJUTNIgiPKkibpwVbEcGZ2TFbwUGUscWY0.GQCQGZCICYpYGQxbGVoQmQmgyR4UlS1XSXnMybxk0PVEScLcTYygjdzD0TnQkbng2JLMkTznkXV8zcZAERMglTuETNTcTcU0DMxEUU3XFV4v1UUcGZnsxZCECZ4zVZIozL1kzSvAiQR8jZyM2LMEFQGU2QyTGQxAGLPQEZvIjdAQER2DDc1rlQSIyJvzDRqYEd5g1ckwzcTMmXtjkQ1o0RMcGYLEjTk4ld5clZHkTa0MGLzv1UvHSUI8VdVozQHgTZxgSM0vzJzvDQHMjRhclV4IDN1QWPH8lLsUTLvvla131ZisxMYQSTpQUM3giT5cCcYMWTyYmZzrhMDkCaMcVbLQ1LSgGMB4hPlo2PgsFcsMkaCUzY0bjTEECTxbmXCkDd1gzMCEiKqLWcusTNHIGZlYjQOETNQEGdsYFQx4BcoIVQ5Y1LosBSLo0TkUTbWECV4kUXjElXJEEL44DL0kFR4fUXmYVNwrlLmQGbu0TSqoWQKk0LykzXG4VchEFY1DWUloGMokVSkwFLVMDRwA2cEE1TzUlctETRgE1LuYmLkkWapkkR2j0anUzYyMVdrU1YWQWaoIkXyrFZsImXQciKk0zSkU1RmIjSkEVPBMzT3rDMJIVTT0DVOomVNc1LNo0UigSNNkDVPQTQSwlUZEWM2fjawIlKtgWaxjUcSEyUYMDLFEkd1LiZwTTZGoDcLcFcUEjPAgVZj4VbzUlXrIGYrY2Q3DSc3ICQxfkPrgjYskzLhkjU1LWTOkFc3cSVygWMmEVcPEEbUMUbU4BVAECaCAkKyPWYQIUdKkzUQQiStgSa0MzZqnzX0XEap0lPOEmLzclP4fiKtfjd5cFZxHDQyckTxjmR34TZynmSpECRvHCc0AkUHQFSvUlQQUGdFAkP2gmLoElM27VQMYiL4QiV0kiRq8FVqgWMC8DZR8VT2YiYVkiPvo2M04zZzPmQmECToQmXgMCayT2Qpk0MBkSLlwFRFczbzQ2cn4RXCQFLqIGZqQycmITV0XiKqAESAglVTYzaDYmR1ckRQ8lRrslUsw1awsDUyLib2rDUUQVaoM1XE4hTOMlc14jMhA2PB4hROcUcJkibgM2MOszPpcUYk8FU4ECaAUySVgVMtQkVV8VYmQEZ1okc37jKtvDVOgDTrUmczYlcoQWR3Q2atrzZ17lMzw1QWsRZPcDQNo2PwDzSLMkSNQ1LxQyYUg1Qz4TMhciUO4law8FSyDGcxkmazgia0HST4fmQQokVwHFaWoWRYYVZ2zlUtHyMMc2ZBcVUkgkL4PVZs8VdQM2RSUyLkIGdwDGZIMkdiYTYPEzX0nTSyTSbiIVYIMmVsICYVkGZv.CawTCVqj1cYQSNnAGSWkicigzR3szUtrBStPkQwnEN2nUMHIEaz8VUSIVVx4FZWYSLRY1LTQWVEokY2fTbn4RSqUWUu0zUogSMW4RbE4TY0jVRvDkTCwFU2TiV2sxRhEVcAMUcr8lMtY2ZJQTPKojKYclYxg0TCcmMxTUcuoUdOYyaLICa2zVYtozPYomYzbFZJAUYmcyPRkWY0QlSUs1QmgjalkWRTgCcGcTUUoWXLwlMzkiSiECblolStjDV1v1PznzRZc2YwMkMnwVXp4DVUUkUEQiXqMUYKcERnMTQFM1axQ0MGkDNQokMhQFTVUyXsoVV3okcVEDbZ8TNNoTSXYWSiUiRpkWUlk2XsE0L4YTLr4xSYsFT5MiPyHSa1U1YNsRcnIiLW4RL2flUvDDbHAUQ10TbqQyMUAkKOYSNhM0QxMTVpQSMXwTUsE1UtDGaHY2PJYTaRsBVzDUZEkDc0fGawgGM1UCN0w1Si0FRqEUdjkjVKo0bVgzcRMlSyImQMM1cmASNM4VPxL2JIEjbIQmS1slaTw1XnIDcyjzJoI1aEEGctXzXKI0MRcVRYIGTYsldAsRcnsVRL4hZ4bFTxjCQmASNAUlMoQSYtbUb2IiQ3TVNQolST0FYFkmZ3omSuElUQAUavETQKE1PKgjS0fycoAUPy8jazfUYg4RdrkDVpkFZybVbRUDN0IEYggzaLUiKwwDdqDyZ2DkTlMkLjU0SsIGa3Tka2v1JHETdMUzRrQiQkkSRtYFRiI2ZBojVvc2ZwbEZpIjXqzVZFQCLZciT1o0Js8Fc4PlUpM0bRMmcSsxZJkUSvPlU4XTMWY0ZlciToYEZtP0atvTZwk2YGQFTvfzYpUjZVUVQzU0RWIzQ33RUE8VQCkSdKwVcNgSPHI0JPwzT0EDdzIVcKE1MRwlKgQSL1TFT5MDVwDycisldxH0LxfEUiQFRGckQKQkUP0lVscFanM0Zx8lMSAyLSkyJ4DURNQUNtU0XugDQ0bjaxjlSFYFTzgEL2XWYwnVUO4VVvTlVqAGRvAka4Dibtjma2.EYLc2brcTP1kkS4okbQUCRTIiLBQlRpcyaMEUQoEVRxkGTgQCcW8jLswFLMEmS3PmUYshVXcVNqbESVImSIgUNIciMy7TRQw1MKcjUvYkZ4YCVhwzRkglUCY2Zpczc27zPvICUXc2T0AWRzQDNyszb3QTPSEGZ1jyQiUVXX0TZxrVbYMjcxwDLEAkZpYSZyHjSEQzXhAiLWIGd2sTTmgFLSczU1YGSLkmaqHlVMAUMMYWXw0FY1XkUukkPIcyMgshXNc2Uqw1LqLSSWgUTv81aJMTRKYTYzACLnElciMiUtsFUqjWVIMVS3YkKOkUagQWYOgVc2QmLZYkLvEEbKQUbynTVvLDTgYVZ4vFMZY0aGglc3YzZwkCU3X0T5cDSYQFRwYyaJQmYuEWXNIFdYAkYOQ1YRISQSIDTyfzUMUiaXUTaGgicikmSxUGZ4YWTE8TVro1MUklasUERBs1J34zZPcSazHzYxIyUv3hcJE0bWQmSAUEdTgTds0zZ2DWQZQia2bzbSAEawcyX4LiSYwVPPcmLAgzMBACLXszJDYTSw8TYkAyQQYWbLoDZ3AWVYAWTxsBaUYCbXkVMr4Bd0HzSJQSP2H1LEcVdA4VLBgUbKQFbOAUS3rVcpICLYElUjQWdIMiVCE2ZUYlP2fkdiQiPzbyQ3b2Q4biSUUlXmMlVH8TTqvFZGgFLCoVasAEa0YDSkMlTnU0PzQjRNIyYVcjKsoUVvgmL1IFcZAkUNQSNGczRpwlUDUlXTkDLyf0SR0zRV81Ji4jZuMiTMAyJFozYoshQ2fySzDGaio2YAEDZx0lPvcSP2Umd3rTQpM2ZiEUVQYFahQSd4DlPzcUb4blaynkR4XEL1QVYJgjSJQDZOYEZ07DdHYDMGYSbiMyRp4hK1UCc3UlXCsDZpImSuw1LlsRbnwlcskkU54BbK0TYhYVTyQkdKMTXMgCdok2XWMlVgEiRscyLQQWMNISUzkib00jSwjjSPgTPsM1PJQjU0PycB8TaJYkUVAiM0AkSkY0SjkVbKgiRqoFVLUmcxX2YCkSXFoWP37TTUoEU4jUZkUTU4bTUvklbVUVSjkzPAQibqrzL1LWPIs1Zvj2L4XlRwYGS4PDQoQSLIEkMngVZVUVPxETNz0TPZI0PJQjPzLjVAQWay4Va4kEZVEyJ2okPvMVSSIjMSszZ37DbNYmYpAWXAkUVVgSXuoFapcUQHgyYBM0XzkzcRcyRA0ld28VagoVN5MiUXQWXCsVRDUFQ14lK1fELxvzPXYkdz0jVuE0T2PWNZQTc0UVR1QlUiAWcEcVU2YkRqTyXCMSX5klMoUWYgQCcRkVL4ozPyg1PXk0cNEWXWcETMokTIkDUk0zTv3TPAslZrIjZvAmb3EES5YUXpUkdz.0QTgERKUidpMFdwUCT2rTLgQSVrUkYxjDQOEybKMFTKoFSvLzRzPGVMASYysVXGQVNvL1J3f1Zrg2MGYUUFM2U3LVbwbUUtIGNL4hTkEGV1IUMnMkRzgSd0UTLtw1QhcmKgYyRlklaUETVukyJwg1StjVbWEjU3EmcOkjSp4hT0bUYzPWPxIVZ14TLPklbqwFcyHzLSEUaL8lVWkzMi4BLoIyRxI2PqklXs4VYXwlZOEULtzTMJ4zRs0zTkA0aDIkT3QEc0LSbwzFMxM0avQDcssDbLQFRxjVdhkWVMYFbxrTU4PTMAsDLxjzYzU0T1IDSIsRRsMGLo01Ss0VLAQ1SUQzJCcTLw4DNFcGNyLVUAEFduIzaQo2aPQUS28zRPU1MMM1SEMlK34TPKUCVIoWcPcVSjkUdrgFTlQVQjMzbCk2LCMDRUkDdyXWSAEyRsETXPAGaU4ldJkWSzDiXS4TVUEmX5UWdB4jMrIzQPUyRDASbCYDYtoFducEZDMUSvj1bLU0av.yXqshK3PERpEWZ0bDSB8VN38Dan4laYwlYWU0YTslMT0zMT0DNgoWYvoEdYo2LLcERIcDYoMUYvQGTKcUZKMUPTEVQrsRLyYzbq31MVwjbBYiSP8TTyQCZvn2aLckb2rzPwXFRuMFLPIUX2UjVAgUYGk0MLgWU1MjYqwFUz71bqHCUWg2Yyn2c13Rd0UiMqE2amQkb4PiczI0aIsxP0XmQIwVdCQVRPcESWsTXvrxTHkjbFgSLSMUaOUyPqgFY1ICUpUWTgIUSPE2aJMDdwLiSM4TbJETcWojQtjVa5UTLiE0aHI1cikVYFACZtHTPII0bAklKyzjdl4FT2UGZ3TkVKo0MloWbyT0MYQid1UjZiQUYrkmXG4TarczQpYjLMwFQAMkaikzSyQDd0b1bqnlauEWdMYkPTYkYUoEUxnzMDEDM03jcJ0jRQMFZVEiUnMzPVMyL4k1LIcVNKQSd0oFZ0czX2sVNLEDNMgFSXc2YBsFLCYkUr4xStgjX0IWbwcCZsEDRUACc0DlTZY2TI4zYyckRJEjYvDGUsUTLBU2QKIDLLg0TwMmLqk2aqfWV5gSP1XkbhE1RsMVZiA0LDAkZYo0LscSLzkzXmwlVgoldrUCdCckXqLzPucDQLMWZxzlKxPUXrASNHcmXwnjXIYkMTMyX1wTSgA2YBM0YxT1SkojbkE1avMVLycSTybGcRwzJyTkcHgTZVUjL0wFbLICcug1X2oGQz8zLFUFMtrTLVAEV0QjP3UzZ4fWSz0TRjM1a2oDMRclaEEWdvP2TzkTYqbzcBYWPpcma2Lyc0HDa4bSQmg2bmcjZVIDcOMUVHcUbLI1XNgTV0zVbEkGYloVMxsTY1TkK5kzPHYULRgCdCg2ZtXmcBMmSPg1aU8TXtTyJHoVdyQlLxPUNgYWYiQ0MOEESP4VZHAiX2.iShc1QY0FcUcyPH4RLHgmUAcWaxUiM4MESZM2LoMFYRAyZyE2Sp4jcZcUL0kzaPYURoUjUVQ1MlAiU4wlbogjbFclaBUSPAUjXCgUPmkkMuElMyHFYyAWXPcyU2wVbJ4BckETaLgET4UWQ4IWThQGR0kSdyH2ZzT2aIcmKYgkRosxQ0UyXCE2M0PCRN8zZg0TQZE2LZQldsQjRAQ0czIUNJckcsgFcFo0J3UTY2U1YgImZP0DbUcTP0HUYmEmYvjkTv4VblYiM2MFSZYERVMFMDYmKTE2Xwr1Z5YTNtQjaloWYBIlTpETQGwzZTwTYjISLDMiToQCNvIyJC4BLjsTZsUzR1k1MLEkTxDjTqn2cXcmctDDdTIGS3QDbn8DVxTUd2bzPwQVb2YlL5sRa4LzbnEUQzLTQqsDZxrDRpc2JjcELMglUEQ1UwACcPA2UCo2P2I1Xv7lKlgCb1sVX14DdrQiT1AySw8zMvjFdtrDNgwDMKkmQQY1UyI1MBgTV5kGSrE2QjcFLW0FLxIkSHYERIgDZRMWamUCNj0lUAE2JOYGaz.EMwwVURQDUzAkV4UTQ0gCRzIWaHk0TEkkK1L0angyRkIjM4jEdp4xQtAiUgciTkoTZxX2Ztk2LKIWPC8zRxjjQ1o0X4YmbqLzQOECSBcSZy.WbxDjaoMGQEQSQRETLH0jSqciU0D1cFomUjAmTtUGai0TSjwlSvDUd34hPwUzQ3jmP3EGT1USQxEjbBgTcK4xJz0DVzPEURImLAkEdm8DYMACLH0FR1cFVykEaPUiPyoFZ3UiZlsRdxM1T1AkbHEUdFIGYrASNw.mRxojcD4hdV0VdzDmQ1MkTxjDQtf1PtYCdt8TRXQUalkWPNElRJMWcTEEdyclMtTkdwnkbBM1RGkySv8TLJ4xUAk2R0gUQ4TGYhk1RKEjb1L0Lw0FRqn1ZyUjTzkDd4M1bhUUY0r1cnEVREQTNBQ1QhEybtcyQJcGLCkCN3M2ctLCTCg2MKkSQ2zjcKUDUBYUMQQVUhU1QlMmRWQSXGA2QIQGMqE2LW4lbOAkRkEmdEQzT30jKv3RUJwVaLkWURU1Zkoja0rjPXYCN0rTNHgUUk4hcZgSZvEiZJoldtbjbqYUXpE2LmUFZj4TPKIicSwzTsA2a1cGQZwVbmQ0ZFQyUpo2aWMWZLESXqXjS5ACSm4BLQcUVHIkVD0DbyXkancTVUEkd08lapQFb2ckdzEUU3.SZLwTbx01U3rFQJgzT54TQWIza2YyL00DcNImdYo0Ygo0U2PGUtEDc50lc0fDQzwzT2HEckASQ0f2RqLEZOEScsMSMMciUPIWLMEVM3b0aIYCYzbVZVc2JzrDVvMjVSgiTMMCalgzYIkibxwTa0Emd5sxR1jTQqjDV4kzPkISYwoWZx.yUOQUbvklc4PjMX0VRA4VQxQFdxg2U4DTRHI0Pwb2RvkkXGIEZYQmLwg0StYWQSElSocGdOMGLFQ1JyL1c3.0aT8jZBg0R2YjZy3xLUwTPqUVYyzVcCoTaDYkKukTbKsFLvXVPtQCaKw1M2D2YK0Dc3sRNykyUwEFd4M0Y0bFVoIVbW0TTRgDNy.SXW41JB4jcqUDT0TiPtwzZxXicOImK4U2Z4MlYYkVdIgWUhgTUSkTNnICUX0TPvYzRP4FdLoTZ3QGb3jlUoQSQqT2azk0P1slYNg2YA0DLpEiXyHjdJcDRqg2Zt7FMIY0ZHYyMzjlaLM2YnM1QAU2aoIDMpclSU4lMybSbkwVThUlXZUUQRImRQcTPqvzaswjYxY2M2jiLtclVB4VYQcGSOgDVUkWU4rxZU4Rcmgjbr0TPOw1QqrRYw4hR4PWdjM1aIUEavACMSQkKGEjVugENyszSAYUMXYTaxEFMgQWSGgGMC8FUmk0TAAGMSYkXOgUNSoVQB0lMPgWTNUEMTIkYgUlYi0zPXciQrgWZBIUP4.SRwUCL34jcrAkMPYjbOASa3b0SQkzaxcVNZkFTwLzTlkkKG0Fc0cEYRk0TxkGUjMTXUkiT3Q2aNM0bhYWYWIDRh0FSwLDTxg0LiQjQ5gDMD4lTSMCNZsjKlYEMjUiSnkyJ2Y1a2kUcTIUNNgzaLY0bsw1Qy3VNSEyTuoUVWklZ4rzJ3LTcFklSVY0UGclY0PSciIVTUUDVBEyP3MFQuEmRDcWbykkX3YDUOMFRyYWTQUDdpU2Tz3VLgojZwbGYl4zagUSL3EVLtECSOcFaHszMNgDRmgSUVo0bqIzUJkmYUgWXOEWasE1cX0VVNElSpolXTUDVxTjLP0zZAICT0fUdxIET4TyJ03TYEAGYtvVaIUDS4kTT2MiYKsTLoQ1MqwTbDolMPETSPEjXOoTdHsDQvfURC4VMQcSbzTick4DVDc2QKUEcxQzUIY0Q4UELOkDMYY1LWEmQ4fSRwYkU3ISVlsjRCQiX2PUcE8zZm8FL471MZYictDGbygzMVszMWojLZslKhECR1zjKkEiSFI2YocEZSczSMIzS1DkTiUyXHEmd3DjUTEmKs0DRtsBRZ8jQykkZyzzSLYCY4LWQwMmMJQyXzkTMwUGQMwzUxMDZrkWZmQFYAQCZ4Q0aiUESzoTZEgWYqHkctkFLAIDLBQzXpg1YVgkQJQWUzgEchkVVWcjZxomM2YkP33DLKU2PuEiVtkmc2XUZxoFRx01QpIWdTQyXFYWb2oWQuMTQm4FU3PCUtcVLZslZi8DNCgDTJwDYtzFY2jVUzjEQL4xcyblT0oGN5UWR4QzcLgWRlITXEIVS5UiaWMSRNQmP4M2btokc3X2bXEVZ3XlVyUmLEcjbBQyPmc1cxjEaSIlL0XVchM1X2j1PW4jKtDkUzEzX2szMtDjbMckYBMkS3IGcTQWU2gUQ4kkbwfmPzXDVoISUvrTUpoFYHkSNUUjcNEjYUYDSVUlUlISMRAWXh4xcKMmLwQTYqTyaCoEZrIVdKkUZ2.UMEkzP2g1ZiQkb4jUZ3vjaoYyXKUTR2DiUO8TUiMGYGQmYCkGblUWaCkWdicTTEEld3rjdwQjVhM1XJMkdvTVLgMTZ2gmK0n2SnkUQX0TdkElb4EiUlk1aG4FMM4RPn8TPhszUoczYtDVRynGd4okTwDzaTYiUqPEb5giXvzVS2fmZwk1ML4RalcjQyn2QlAmPwHyXl4RRwo0biMUV1YlSTwFS03FSMMjRZUVdTQFMJomTVUEVUMCbwQFRDc2MyLDN5czaIwlU0LFbs4FMQUTcpIkXYMmQt4RRzgFUucTLRcFSxcmaoUTVigWTMACdQUlSOQlUvn0SIMFUBo0JJwFbtXkPjoUQ1gmT1b2Q37jSvEVStgDawr1bvbTQ54VQHkkcVEyLEQma3bFRxQTU34hMiUGQlIUdMgCbR0FQPEkVV4RUhoEVhMkdvHGd1zzcpQCUZQWN3TUaMQTPt4hTAUFbiwVXHglPGwjXzQFZyQjVVgjVtrjKwjFcCYWXGc2Z4UEZ0wVNqP0T4MDMwDUT1bGdkMEQMM0SYIDdTUVbqjFQ3fCaKcFLvX0QgUEShgCLyU0MuAWSugWUvTWRBImRxXkaNgkMPsFdlYlcSsxTTgkdJoTRAMWX2PkbYUycNMWTFoVdyPTdgoUY2vDNMoEcV4FbJA2bt7DYQkGYik0aZcVQZsBZQcmZEEVMjsjcig2L1n0btolMR4RcDsxbOsDQKYjM4o2MsIES28TbAgWVnU0c4.0QZwjQ1YWR4bWXSImcr8Vcw8VcyMzb1UkQ3M2X4wVZI8VaHs1ZhoENtXVdFwzR0ETLYoDdzglaTgjctP0LqvFQY4zPOgjcQQDNBMzSLEiLCI1TRUjQ1PVPuQmcnshYlQUUTo2TtX0PUgDSpsxYDYWRyHSR38javcCcA0lZO4FT3DzXiQiYMgkXBgUbRYzYMAiYvoWQRY1L5cUXsI1QCkFViISSng0bTMmMPYSR5ozMhUTaOgzLnc2Uz0FQGUDT3PDTiYUTIYmQFUla4P1bm0jVzLTLUcGUz0zMlkSX3Xib4EzTvgSYDkjVJMGUHk2M4USS2bmVqojMF8DShYmZw7VV4HSdK41ThUyPQIiUjkEUxnVa1vVUHYyUvc0JjgFLycFZ0USNHcWTPsTamUlLksTVqXVV2jDMwUDTy4jTpc2UQ0jSRMlLv4hRYslShIzRNIldB8jTkoFVNQkaCkFZEUUP44FL4EjZXsjKUQCS4IUPq01UIYEMiAiKncCLXA0X2.GNEc2LkcGS3wVV2rFMigDQJY2M44DdPcjRRMzarAScmYkPowDasgCN5QiQGoFTPgTSWY1bkAkKxg2aPECN3g0XX0lVyUmRBslYykVRNozSqAESi0DYo4jbYIDaJ8TLYEkSAI2Z2s1XnY2RqPyPqf2M1Q1SvElKx4VLsUWRNQ0RtTlKxvVSTgDSOcWcV4DZEolKEcEUu0DYxwlRHk1UJUGbyUUcBQzPtYkUTYibSg0ZSEGT2Q1M1P1QtHDVq81YMUFcosjaPIEQZozJ1fiY5ETPJwDRKolT2A2amkDd2UkXNwzM4kCQlc0R4f1Tq3DUw8lTh4DNX01J4I1RtT0MnQkXRkkTuoFNOslTQQCaTgEQ2IiPmM2YQcSQvrVYG4VRXcEYOEkTxLTPY41TVk0awHyM3L2TZgEa1L0c4YTRigyazI2TpgSUgUyXYUjZRoGNhgmQzcCT33zSS8VcVEzU2U2RXA2T54DR4QVVlojKOwDbVgET3jkXMMkMuE1RDUkRy.SLsEVX3XTPFsFQ5YVTtj0TtLiYP0lZyD2YhQDdhUEZg4jMG4FLWsBajYFVgM1cYA0aNwDZzgjXj0lP1r1RlomUvcldggCRYwlKgE2SIkSPm81QBYyZukSbPgEYmYmKVMiZXgjY0T2Z3YTRYQUaDgVLqPmVqcUZIcWZWwVd0giRIsFMFEFYpoDcz.GMQkTUhIkVpA0SZEEa0YWLXI0Zxc2S0LzZxTSNqD1aHkmYyUlSLoGTzHEaFYWdCEUQkoDbusFZlUWNxQyU4Y1MsgCcs4jQjEkaxcFZOc2YJcjLLI2YOUSSIQGRNkVTqr1UHgTYxEENkMjMZ8jRxU0SggVayzlT0UDZvo1SBckP1vTSzLyP4klazwDVJgiS4fEST8la2sjMwYGUzzlQg4VajQVSTYkPsEicx7TLDYjdWAmdo4FVnoVZtsxMxYCQUM1Zwc2YWQCTUI1MOUSYMoUb5EjTkAkSnIWVXQyZHkiMvPVQXQ1TLY0SJgFYJUTT1YjbpQWPOASdtQzUS0jbkcycngjawfVQRgDUVM2bwTzT0nzbWwTN1cyLmQkUtD1cRAEL3QGLOISU5EDT3ImSNYUYEEya1P1LqMkYT0DT0AmUrQjdRYTYqj0PwUETh0zXnwlUwnWUxHGT5M0Mw3BN2kFUiYzMIICTp0zMtgSLMoDbzQlSyMlLqQkdDoDMUcUL3.0cso0TjoWUSgVThsTVoAEbpwTdiQ0YogyUPY1auI0c14FMtoWS2nVNtrFRMA0XlM1Phk1MLYSUHoFSG0lTyTDN1HiX5klcywlLAoVcjciVEwDSHM2ZWAycOomawXCT2XVQnkEbJYUbZMmPLYTSx8VdZYldpg2cVUDMQg0MiAGbtfyMO0jXH4TZDk1T4w1P3TVXN4TXFcDLrgWRgMkQFITQKgSRkUjbPQSTvUTdF4Bd03FSXUGMSsRVwzTQPwzZmAGYoQETrkUchUSUkEkcok1UQACbjs1ZBQGaHQFNPQjbBEFbqDDQPMyMuMDMKUFUgIVT2.CZwfjYwUUYwPUbM4FS3MUZukGUxIWdSMFRzrTVg8TUVImT1DmM1HFcBQkaPQVTMoEUt7lQEYCZZE2LNcURnoUR2EWRJwVMF0lcqfSd4MVLNkyPuckShEVMkMGNnoEaIgTcSgicvXlY1YjVBYDbkoWMEcUc1c2UZcVNNMELUICNyDVLxDUTKoFYTQUNgkVMiIUdFQFQ5kTXg8FV0MSYjQTYYMmU2EURIECLtT2JMMTVJcFLyszbtXlarQ0Sv01Q1X2PJI2JZw1SZkUQ2HCLNYWbqjDN4gVXDMFSjE2cZ8jXgQGNBgFVT8TTjgycpY0SFgDNSo2ZlIiMUgWbScybtQ1azYld4PmKqEmRXMiaDAkQpImQsoGZ0cGdWcERvYyX4sjcg0zQt3zX5MmS5MmRm0jZmM2UNwlbYEEcpgWNV8jVqwlTHgGdpMyPVUFYqMmVLMEMIUWSNoGLZU0YZAUX1A2LKIyY1sjRkIGS371LjYlbnQyaXwFS4f2UvgELQA0PqDkMXICM54lX0LCR4oER0PjUBslPw31UnUyLyXCVQgFNvj0PxXEVkIyYAsTZVkWXpEEc4QzZSgzT2YUPpY1TkU1PlEVcFQzausTNq8VcVsjKuMEaxQVSpMETlwlYLwDcRM2MzbybOAyUmkVLHgDUEIEc2nESgg1akUWMDEVNzQDNwsxQKMFRNUyYSIybtLGL5EUbxUlatH0UIsjVIkiKFUCYHIFcngjYyH0Q13lVqjFLl4DRUElVKElXOAkUWwzYI0DUFQSbL0FZsAUVnokThAyL1MySNY0XWshRAkTdQshSTgSSyDkRRo0SPcULncld4gVb5YlLxnGd1bVLgM1LUE0JwI0Pgc2QNcDVWUzYxPTZTsBRCYDRv3lPzMzQOAyM4XkVXM2cvXEdDc1c4nVLx.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.CdF0zYEkCMCElLAAWROUFRgEkTIclKHA2JkMDTXwDQVg2aTkyaK0TVtY2S3LjYLUUaIAyStPEcrUTQMcSQwomT48DRTICcSsjYiQjTzDWb4IGREgzPz3jRME2ULMWPzIlS2f2cnElTsMFUNojd1X1T0rTPPgyTAMmPEQFY5A0XwkCNCcVUsoFQmsTd2jCSoE2LqQ0Jh0zcxkTPoMmUEgSQqU1XK0FLqM0SEETLM0FSvgjPKM1SkcDSRE2at.WZ0T1RX8TRjgmQhISPscUPLglayblT3gSUn0zTJEESxbzXqjFUD0TdrYjPi4zUvITQLQGVgQ2ZvnmLlQSdDQCb5YGVMkjUMkFN4giRooEcSQkUu4xRUUFT38jc0YTSkclbxoVSicGUsUzZCUFS28jb3gEQlsFZIoUYNYWNGIiLvLiR2YjMBUGVxrhL4UDNjMDUsokUHIVUJIlLJ4BZxETSJQ1SqUyX0YTdQEWSXQENvkETqfDaOcWRscCcnIEQLMySLslSFU1QH4lRtjDcgkGa1DEMKMVMqzTTGgCLKY1POsldnMGZugTVq8Tbs4FSwEybBAyYFMlTyTWPxXDMvkiUqoDdmYVPmImZSIkcXcDMlAmaEQGMVgyPOUiYhMVYjIGMjgTUEYDU3LFNLUDYqHSQGomZkokQJIlQY0Da1fDQMwDSoM1boclRwHVZS4hUVYiatjDTv7zRVsxJUgmQ2LjMS0DMQESS1giYkMGYoYlLskGN5MVTZoTbX8lZxHjP1LTVVAkMmcWX0cCdtr1QPoUQhwVb4EWPtbCLngVMkAUMQ4hMUEEMQYCNgYkT2jiKMUiU2cTLg81aEo0UpshM2AGbHECMoY1UZk1cukWMxLzSGgWdEEmUFE0aCYFaSA2Z0YzM0HETyQCUVYyL1j2L3IyMwLWSksFZwQSNWETdx.CaUk2MYwld28FNlY0YggWStT2ZoYybEYFUFoVNYUiRNYlVpciQFo1ZXcFTtXUUwfETEMUbEgmSiMSNxLUc3vzLLU1J2QlMGESQMwFRlM0YA01J2ojMugVZpojb1TlZzXEUVwFNXQEQmojc24zZM0DdRsjYogmZSoTNQkDaV41apomYocVTMcidv3jT3YDdtMmV2ITLgMTXMYSQJo1bRoFc4jFLXIjU2jyQVszQt0jPMcVMvXkY2wTP07DZscCcTkzT40TZw4VMMklaJE0UNESULsDMv.2LmY2aPYzcUQTaZoWaKQibMImbjoTQT8lRyklXlAmctEmZyYSPtPkbq01cAA0cJAmdCQCUQcUS2b1Z1MyTvXURgwjM3jyaEkTMpsjXgE2ZjQCTgMkZyAmM5M2YYkkRwgkQIgkXHQVcWMiT3EzY27jasYDZ2gELGUUZHoTPOEUdWYTdx3DZ5YkaWw1UoQWUnEjQPESc0YyXR0VNU4BMSYCNtHENS0FQ5oTdtnkUtIjTu8lPqjDb5EmKEgTXk4BdwP1bUUmaiwDa3rjKsAEQSckbOMkKxQVZvQyRLQiM4LmVkIVRJ4jMFQDcnciKV4xJ181bMQ1UYsRRBMiaQoFdwr1bkYGLykFbyfzXwfGTLEzRYglMG0VSSAEbmoENVMjY2QUQSUWS4IGLAI2QRgTXogmMF4zUJMDZvIWQ4cTblsla3PSZLYlT1nVROcVbzYVaPoFSLgkKYojSYUkXsgWYUUGZn0lT1XjPWUzcCgVXEIzQZQCTlITbyjjMtLFdushX4UCVvQiPi0zL3.UcDwFbEM1SsozYMgScB4lXxDUTU0Vb5IzTXEENWQDYzXEcQcEVKMkVSkkSvwFQO4BRiQTX2XES38zXDQESzXTURQjTVsDYg4RdgIkRyAmKM8TUE41S0cyXtUSP1jmZIcDcWQVd4jDVscUT3HkK3YEQRsxRqUmTy4BY0DWM3Hiaq4hcwgCdV8DNUomP2bEYZwTQw0VRAYiRFIFdWo2LqQyQhAkbQkTczAkXkcDZ3IyJNojYAQySDUDTpASYGMyXqMybxz1Yr4jMYQWZxUEdmUSdlASN3I0UTQkdqIEU0wDQ04xSPUUR1g0MxEEdxs1aGokVKQDLDkCdLUVNhEWNKIUdjc2cZcSYVc0XiAid1DiTqLGT2UTVkY1bvcTbAclMsEzJGQzQw0TYK8lTkcyUF4lS0b0ZvHEaEo1SNQmXTg1YiE2YNcEbDAGbwsTc2fEZlc2S3TVXrAEVDYkSScGMhY1J1rVY2gCVyIWLrElS4XERUgSLuk1JlgFU4ASaiMjYvTkYNcGTXUmVz3xczQCasgjQgsVSXY2bSokSpITawcEYs0DdwglLSIybFk0TnkFZggFbr0jMHgmPuAEMR01UgkTXLUjXrckQ4IzXAoFYTgGbw.CNyDlSrkERLIiKMslRzDzSj4TUUMFcYQlSqMWYP81Lt.yQwM2YjY2MrombTQUQ2HDYUETbjI2QtvjYyDkSxQUMEECYRUyRl4hclESMxEyXhYFcXEFUHkmXP0VUGokPUECcEcma3UlPzjWNOcWTroFc1giP0EyQWQTUzHlbjAWdvflRCQzQUE0M3I0ZhkyP27zXTgUaB4lQHUkL34jP14BV5wTNGcUL3HFdwQUPtQmM4XVcvUVN2bUPnUzchc1T3c0Y14TY3nVd47DZznWZ0TVYJU0XkgWX54DavvlcyTSYxETQAk2XDc2ZEwDN4HjaZg0J0XSbKc1RQIjTUgzLtLmUNsjdJMSX0bFNTk0T3rFYqDCRiIFUvIlZjoFcYgDQhM1UtXiZ3LyQqMSQ04VUz.CRZE0YjI1QjgCblolSMomTHcTQPkjSU4FT4bGRx3DU5YVRFkFcWUEakIUcLkFYhAyLjoEYS8FVYoEQ03RLOQWV0MmTHAiYrUDSCcSP4cFMrYjTnUEYNomUOcUM1AmP5MDc58TXq3jXF4zbLESMNQkbs41YvYScDY2P3QVUAkjb3XEUQE2Y2c0UXwFT10FLW4DaqLkLPA2auIELloEQvbUalI1Pg4Dd17jLybFLXclVnshUzLCZz4FcCElR3XFUOMWLmckYx7jdEYGQNYybGkjYEgCN4H0aBc1L0QmQTAyTjIFZ04lRCYCa0MzTjAiRGUyMzc2J4IEc2nFSQECbwvFQpszaGcVQvshc1kmXqfzQ33lK0wzXv.CSIgzYgoURmQTXl8DNyDFak0jRZg2XtwDc1XFTNUSdyLkV1IDQvcTNyHSMqcFURc2URUWPVgCUTckZ2kiSqH0UiI2UvHDM3YFYh4VVKYCdv4VMsg0SFElbKEidqjyLhMTMDMjQZoVUPg2PVUCLtkTUWUlSPcURuojdwDkQFMVQh4ldDMzc2gVXGYlXosBLjEic4TEN44lSTEVUuMEQmMSQ3oUM5EVapQGbRclMuYyZrMzUwcDVOcFY0kTSSQiaPUiazD1bWEkMTEkYQIlXIsDdkc0bzMUTQUSYD4DMFImULMUdOgkcBklSDc1ZPgzZEwFUyXyYLISdjgzblEmZZMmcgwVTZgUUtPlVPYFNVg0ZyfjXuszUzQyQwQlcFMVZ3HkP4XVcX4DMvfVTngVRpYWd3cmdTU0QrUkdqckKW4hd0TzTlM1LWU1LuUkYyfGQzIGbNQ0RH4DLyI1UsIyP2fWavj1T2MjciYTUpgjXIAicYgyMxcUNSo0Q1jCMw0zPVsxUvkTRHoULq7FTGM0StYULJYFTv.UVpshKAAUXKICLOsRQU0lLDcETiAWP1ckUBgkX071SwPmZ4bDS4zjcz.UXw3zUwYSbzQ0bOQEbwQCNu81SQEGUqDmchYUVugzMuIVd5IFUxYjP3YCThMzRsU1SCEiQqEzSoUTNUQzJLczTyXDUyzFdAgjUIE2R0b1MyMlXr4zQ0METVkSVBokaVU1M4n1SOg2QM4FLRQmarsVS4gyau4zUxHGLIgVTBojbBkjS5olLqDUR581LQcDM4gmS24hbk41Q1ICdEEjUAYlLm4BY3MWX1cVNvj1QDQTdtcmUKQ0TNsxbHUFbsQ0L4n1bzcSXoIFd5UDdBoFRs4xQNkyYxEUZ1fjcZEzbz.WdIUTdjQicrkFazflVhgSZOMURXg2YzcCUy3DTVU1XYIlMloEQWMVN3PyMyEEYGE2ZBMETNUzMtLFR2QCdloFclIVTikFSQkWStYmUIcWUFQUN5E1RBsDSKEFRQsRZYUDayYyQP8lVnkWSq4BdUomQmUFQEEDRRUCctLDNGMDNXgiKqwDNgEGcnIiStvjPlAma17FY4YEVtEFaIkFVxIjZznUbrMUUBEGa1clRHUzXgQldOQUVMU1JMYGc3vFaxQUSvrBVLgWM301QHoGZ2IlYkozS3n1XNg2MhY0UCIDLyzTRPoVYv.idzMWcynjaJgyZAgkPGoVQ3QmTPQ1YTgjKl4Fb4DFYVs1QWI0bBQCMQA0bTUjbX4lQlcFMYQFaOgiMwLiVk41bmQiXuAWR0UjUSYiKUomPE0jTCUUZOUCShsRPmQCMhUDSAcDa0cSRCYSP1wzSXkyS1jEawozZIYSL4k1YTgEYmMUdCA2RxoEYkoEQUQmS5w1TT4FYi0zXjUyT4Tzcz.kKhwjdnMmRFMUQXYDVj8lKmwTQRICawHkPRIWRgASLwHFavUiMTIzZ5QjKXYiLxoUdX4hLRAUcZYWbgEUcnklVSU2c30DQFMSMGQUPiYESFMFaOwTLyklcZwVL1gla0b2YhQicgUzTQo0JNIDM3clYPICbmo2QIYEa3fiL2vDcmQDSgAWRzfSarQiXSMWQi0DYCoFSMQ0PPs1T1rTZYUVT5YlKhMFcJMTTZklT0kGMkU1YvwzL2cWaPUFYBIFR48jLGglRxQyJ23VQxbFTSomX0PCc3jSRmAULGgDSiIWYkg0MrgUPJQWNW8VZvfkZMozXHsRLy0TQvfkU0bFLzTVNRMCcyUVavbEYJA0MLY0MMUDboEGLRcyXwwjYqsjargTdDYVLW8lZ20jPUkFaE0lQqU0TtP2QvEUVNYkKDombxY0TS4lTtszX4MWbVslX0DmTl81Uv8VLOszZk8zPhsBNYMULHciZPc1XOEkUtrzYDMlM3v1ZDYWSG0zSugzP2sDNPQ2XFckP0PkTZIES40Tb0sDT54RPY81MJomb2IFZ2HWbtjlcqDmcggDRHsxMgU2J4LyRoc0RwHWdrgUbZUTPpYDQ0jyPz8DZisjPtHyQYQjKEIzbhUjKYklMVY2anYVYvjmVq.2UwXCTZs1JMokdsgTSBEyS1XiLBcCUJs1UIcjVT0FUyjlY4QVLOsRLjMzTxUWRxQDLssjVDAUa3LEdJgmUy.SY2gjS0HybMcFNHgUVicEMMA0S4PlUxsFTEUjZxHSdkcTS1Xzc5MkcH4TLroDZpQmVA01UNIyXsUGcQIFa2fyQFUFV1Y1c2Dka0ImSLoTREIzUqM0XLEVbmAiaOc1P2XlY3j1TxwDMYUVPXMiStMmPsQmZrkkc5kVdBsldPQyUnYzR1MWQSUVbCsxJAkjbW8zRwAWNgc1M3giL2IkbVcyakczTZUicTYTPmkCM3XENZoFSvrhbiAWP3bTb1IGb0biLUcSPXkiU3QjaqP2XwDELrIEb131TyY2PocjLZcWVyYiKy0zSkESVAYlPEQ0XJgkdBgWTRw1aKEzTv3TNgEyZ3TGb0ACR1UWZTo0cSgWMpshQpcGNNIGZho2XAQUMYgSNw8jZz4hViYFajkWR2cSMNIybvAELoY2ToA0bZg1Y3HFR3XkQx.Wd401ZRcmKkoUcRkjTEIFbJc0MvE1R3zzbnEkbxE1YAQTQDYlULkSXzEVP47VdSsVSVoUXKUCYHoUU54FMk0lLvozbVEkPFM1TosVQCs1byLFNTszXGElPGQzQ3kmRNAUXpA0cRAUXwvjQKY1JwUWVBI0aGAmcvTVbPMmZgQkLoMzUQQVVtnjVAECV0E0a3UlbQUCTWYzYPUzLu0FLNISZVcTaVgULqUERYgUTv.SUDgUVkMmYAglbLIzcYczcqXCLCcGM4QVQDk1J0DSUS4FRRc0MvbUcRgFbFsxUGIzRmQSVCshPpgDMBQDZ1D2SjoDMEUSaGAyTn01JGI1RN4zUtQ0JUkGUREGSzkyQuYFSVEVRX0DQvECaZIlbREFZ0rVd4L2XFIFdzI2P3UkLT01b2HCQzXmX1ImcGkkUgQCVvUCdEEiVzPkKFshM13Ta0TlRkcjSlQ2Qz71Tm8jXIYyR1XWcxjFZVYUT0QVXLUUZ5clTtg0TlI1YyQGQl81R2kFYsQUMugzXr8TS3fjSq3DZhYDZzjzZxfWMWwzJ1oVQ3UmSygyRIMWaMYjMLI2XlAiRMYUZHUzMxIzQWozTDAmZRkyYiElaII2PIkjM3zVV5UFMR41aQkFUQEDQyHCYXQUdGUWTUQjRLMVQ4g2RIQSVqAiZ0IGMBolKlo2bPY0cqIiPq4Bau4RdEQzJKgUZVwDax3DQvU1cDYkP5kja2AWZ4MWbO4jXDM1SUwVZCYUNGgiTuMFcYMWaMIyazrhYXQEc3AkVtQjUqsjPP4RV0jzZKQkKqDVQrgVMGojQooFVEYiT10zMZ4jcNMVTjYiRxDiQxLDbScGb1wTc1fCLCw1R1HScg0DZqPzc1X1QPsTRzM2XSkUcPg1TLEkPkMzRyUENwwFV3rFLYsTVy4zTrESLTkGVxozLHslQmQybJYDSNEFZMYTTLITUj8VRvEyYUkEdZMUTG81MDwDStDFa2sTSpsRcpIkctPmVZcyLtU2cxYzU3A0PI0TLJUWUM81LxTTMlMlVp4zXpgmMSMWLgkSQHEkQ1bEc3nUP5cCTy0TPq0VXBgEQw8DNzzTYZYzP3YSdLYiawgSYugVMz8VQqLCZ4LWTHcSdNgzLyUkXXIGNMckLGQGd1TVcWISLRQjKDoUazv1YnMSNLklKqL2ZiczPDkETFEFdCgSVBIlKUszXUUVUScER2wFQr4zMV4VLpMmSqcCLMIiZQkSRsUma4rjS5AULuYWdUMTLBwzZPU2QSAEb0c2bHETLKM2Y4nmTTYWVDUjX2PSdMMGasUELQcCS3o2aEgESx81RqQVMqDTPtIUMA4hbFUWQNgzMxnlKY8lKBcFZi4BYQszYCwTbCIlTPkDRgcmQ2oUMzcETo0FUIY0LXYVUpMmY0UEUqMzUJQUX1Umb2g1boMURZEibvQVLzDTM5cGSvgmRjcWLCoWd3LSaP0FYPIScOIWc3fjbjoUcNIUdrYUMZU0Rwk1UqEjSz.yUYI0SqU2Xxk1bvjFcGsxUKUjS4nlc4Q1PQU0aXoFQNIVbMIlPPs1R0QTV2YUQmkDc4YSTocSX1cidDYDMD8TN5kDayPESgUjVrQFRF0TZVY0U0rVT0cDLtHFalETauMTV30DQDYlLqfSR5AmbHcDbtMWZCAmPEUWTBozQ1P0byIUYIclU3kVLxPldxL0TWQDRxY1UwcGc1DFVyjjX2PETBcWLncyLqP1JMszUz0TdCISZ4sTY0UCLEcEdoMTYws1PwfWVlkETEQCUqfGMG4DZPgkKlkmQhcmUzbyTvETTYQmMmMjVFUSRxHUcnolMgI1agMETy3zYPoFQEQjLuY1aRQUQQMTRHYiK2PFdFMyMGYTdXgEQBkCaHMUTvQyRFEyRMYiXJIUQEsVdGcFYCMTPHcGZqo0bOE1JX8zYSIzZlk0MzLGVCkzYJAka4MERkUTQsUSUybjXW4zcNo1SYMScCMURzAUPOk2ZZkiSU8zJRk0cuMjdY0VTMcENHESNs4DR1EDahY0U5ITaYMiUKojax.WZtfzMU4BTuklYt7FcDQzSrsRT0cUasQzJ4.WbUs1Y0UCS3vlaooDcFoTTM4FMVgmPRcUbzQURGQkKkIUXqEjQXkUTUIzb0PTLvPzJM0TSBUUUFgjMXUjYxnlRRMUUFIDVGoVPnslblo2MPEibwkENOYlQyPmdkAEREE1LpYFZTo2UG41XLgFaLY2JFs1LzTFZhUzZDoEStHTTqfGVvnWZtLGZrYDLREkdkI1J13xPxjyc1cDRjUzSlMya3gjMRM2LmQUZnkUcpo0P3.CTUEzSPoEL2ESXyIGdlgCLDoFdHEWb0MUZ03DQPIEMvnkdVUTPZI0Jwb0R0LkX5kkKmQyLg4DNFAkZFcEQmgWa54VYUYVThc2L4XldV4VZVMEa34BNMMlZNckKukia37VX4rRdloVN1rRRWkmKjE2JZESM5UCVpQlLN0lPxYWS2rTMyk1bC8lSMQSVqAUXVgkM4LUPvTmbR8lXnESVjETavPSMAo0QrkmPMUTX1z1cqvVMWgzLRYWUqcEYVYlVYITNHEDVTc2XioGagMSMxL0MqkCRWo1X2cFdMQkSXMFQykkSqQVRSkmc1EicocVURAkdkQGNrQlV5MVZUUVLLU2QPc0YXI1JF4hbkU0XiMFbzbSRTg0M2QiQ1jyJuoTXMMzYSsjZAkiQyj1bTc0LswzXE4zYGQkX031aEY2Pto0YT8jTlAWZyYzQ1sFNi01ULUzYrESNTYGVqEULwfkP5QkPHgVLwESbC4jcqgidJUmLgshRyg0aIgFQpgUblgWP1k1YJISUzbDRpcSLq3TSnYFR2EzS0nkLAQiKWQVazcEchM2TW4lYvjSbYQFZ5IUSs4xaKQWVqQlKwLUcQQCdXEUcRYiUxo1ZUM2QXkTb4cFRSoUMNMCQwLiblAWdNg0TrgUQyDyJyHVNFU1RtnWMOAkLGETZxw1XtvVLjQCdDEiQyDyTGMmKtbSZxv1cvP0UNgyPgMlZSkVXx71Y3HFUyQ1S3bCcJ8DZ0HlaSUTQmcUXtDCMngTayHSdNYTap8jQiQWbo41T5c0aP8VQkQ0LDczUAcSTsQiLkcUSFEido8TazzDVEshUW4jbzIzcmkiP1LiSrEGdFg1MpACQlgSU0IDaTQTbtoDc5QEcgEEUFUScDImUyHSQtMiUMYULYEGUlsjSUYyJhIDd0nTd2.CZ3XCdqgiPkElLsg0azESXKAERj8TTHwVZncGb0DkVzomY1DUTvEyX0A2PYQzbLI0XqIScGUkXxkVU1LVXuUlLDUDcNEiPY0lYHQFSDUWXokTc4YSTlQlUEsxXEITS3cCUwoWMlYibvfURzgmLwPkQJQzRyHWSvYEV3IDbloFSRUWYw0zYDIlcPAiSjUSQqLTMDgCYr0FcZETMZgTVWQFQwn1ajsVanQTbXMUMsgkXMICdzklVOYCSxjWVw3FVWkmdygScYcGa3QGVqb2M2bkLlAERskyXHEGRqYUSoUTV2sxJY0VbCUDUj4jZvHUYw.Ucro2bQEzL4v1TJU0P2ciTzrxQ4YESTgTVJAmRTYyJ2z1YskFaXEiTPESa2cCcT8DQEIDVq71Y0zVYMkEb2j2Yig1RGEkTPgWN3c0RrYkKz.2UwLENYIVdpY0SIU0UPg1bkQjY24RbPEiS4HWQAUkVk4hSx3la3QjchU0JUE0Lt4VZZUmPZYldyX1YYIEYq4lPY8FNnIlXOQFLwYCTjYFSqITbwXFTZwDLrslK3v1avfFYtzlSU8DUyUVQjEySnAGLRsBROUzbLQlPhcjMAESSRUEMqMyUwgCR1IDaWU0PP4RPIYjTNc2ZucyPxMUVYYkZ4PkT1g0aSM2ZFYVaXUSQqbkdwXCMqn0UtjmbHMWYYMFcEgjcwXmKmMWLv7lUBolb0kCSYI2QAUSVscCT4EyUmcSagESMggSbUg0RVImLloGZ03jSZUmSyfGUqXWSSc1L04hY4QiasQ0XwbUUv.ScpQ1XvTVPWoDZT4FZggkQOAmX4IWZ33zY0b0c301LkQjVzokcqLUQH41Jtj2L0TiShECLWYGb40jZj4lM4.GVTglXw4lZKglbAwDSmQVbvUEYlYULqD0PCoWZMQUXtYCYmolPZ4jagMDTzcjVIUEdKIWcBUVLoUGRlcmStb1RTYUbhklLSczLWcTVWElLwoVTHEVbr8VQHMFRHMmYWgWN5EUX4jiZXAST1A0atjVR4YUZUYGdxDUVZsTMwTUTVk1alMVTmIEL5Yycmg1YrIiRRgUaXkGLykEMus1Zn4RNvvja3ImMWQyR3Y0QRwzQrcENLU1QAQjZwgzTMoFN1zzSBQCSLYDb4nlbhg2UqAkKDUzbqsBbUYWMGsTYAIiYOElKybWaqDVdD01SlESdVY0awHVc0HTa4AkXCcDZF0jaPYmYFMjc04jaZg1U20DTZQCTTkGQuE0U18lcYgFaEoDThwjYIoVSgUUUiszJXMkZ5sVcN0TQvPCd1oka2EiPlkWavYidOMDUIsTMRUiLXEmKWkFZAI2YGcFazoVMt3xXIcyM1I2YOgFVgsTLyrTMvgDVvMWU5giTvYSXuYiY3sRRpYUVrEFY0EyYFImZl4DQy.yYygjUpMSSUMVdTc2LiQ0P2YmTWMENRw1L2nGNTolUq7zSHklKuUWMAgWT5olRLITQZckRMQGQGglUGgVVCcyTAokPvwlUzP2MzglK2kEUOEUdVgWZyDVbEASZL0DTzHkME0zJ40jbZk1M4M0XlEEUjYWMWclSMMFYmoDbNgjTs4zXTITT4UUMisTSKAmZwHlX1YyQt7VYCc2ZkkEZoECVuY0JrUVPvP1QHIEbUM2chgWPznUPqw1Ms01PkciQnY0S2Mla2AETDQyT2Q0MSM1SBgEQhkVbzTVX3PzbIYUV1T1bmojcPQULIkkQxMCNnQSSNkkUpgEV2PFTg4RTvHibiozSBQ1YyHDZ3kUQh4VR1T1JKMSbUcDQlcFZmsjdPM0MIkjTsYDYD8jXXc0M4bCbjIFQ1DzTnYCTyHlMT4TP18la3.WT0YERtL2XCYzc5IGLRYEMFQzYqUkawnDT5k0UsMWayAiUIwzQUM0MgM0cGQjKyDjVhUEZ1vlSjw1aCUzTwcybqHDL4XkKRc0PIo1avr1QtEWLUQmUpkUTnoDTi4RN0rhU1Xla5wDLXcGRx4VQDEkRSsBSq.0bpACdlIDN04hKjUEURcSaig1Y3f0M1QVNZckaqLTU0.SauU1XIYFaqLjK3kmRFMkPOkjLsMDMlcEbNsRREg2PU0zSwUlXpcDSvTGZWEkcv4RPNMSUqHVNoojZAoGa3MGYTgUVW8zJi8jL3fzQggyPoQ1TiQkKVUWapMUSsYlav4lQlQjZl0jZq4hTvwjahgURAAGY4DVaZM2YqLVQFQTYxYCSTYyaZ8jcPcCTvTDUtDFdzrDSNAiTTk2RPQzLYsjXGYjbG4BVLgTNuI2M0L2JgQmLNszblUVd4IVLG0VTTsFMJgyP24FLEAmYh0lb3k1Z2.yXoEzUvXCNWkCNjETYDMTMvMUa23xLNElTXIGQMY1UwgkcwUCY2XiSNMCZDQWaDYiUOQDdUYkX48VZskUZyUST2kzJDgGQv3ldHMTVikiPUsVRLkCZmEDdzvlbYk0YFgkRwLERgclTuUDTScDVTMycTIFTqz1X0PkKDsjYvwjSRwVQVYSL0nDL20VMCgySscmRzbTZKMzaxnlK4A0Q3o0Qi4hYmgFUocCZGsFNYI2bO8VaW8VaDE0UkIUVAQ1ZBk0JiUiY2gGc3zDL3gETNASLJ4jalcFcqkGR4DUP3fUSqXCM2rRRyMyczUmPHA2LtQCbtQiS4fkQxEVMn8VSPcGNIYiduITYPQmdm4jb5cGav8Ta4HEbYYjP2nkKBkycNUkb3gyY3LSc4MidDEiRzjSSUMDd0DSSjI1QCASUgQDYIIUM1ICSDAGTjkDNUYTaCYjREMTZjIScNk2SNcjQx7FNqcVYho2SAQ0bGEUaAkCcH4BdmMCQ04BczXjdscmUvLWMu4BQCYmaOwzaigjQGkjXEETY4bzQwQGQxLVLYg2ZtQTcVQmc4LkK13xJPoVMyrRNzYTLynmcQoGaq3DN2kiQLEGUTYiU4QmSok1J0.2ZUY1Z0XVPv7lMOkWP4IDaMc1LCwjUzEWbWgyYisjK4LDVwQCLg4TMhQiLtQiVZMFZlgyXSszbKYUSXIkZYUzSvEWXBYUblsjK2HCSWETRGQkTHACMuU0SZUDViYTZ2jUL3bFVzX0UuMWVTcmYo4TYocSdBUFR43RcTUTbxQFZUIEVBMUYqLSMD4zZvfCaQszZz8VdqgVZDY0brQjUp8FcMkEbZISYY0VNDIjKrMFRFASVwclMF4zc5EkKKYGQUozTKIDQBU1MOYTLFASdPgWPXM2S2QVdXMCQJo0buAkLFAUQRcWQUMiMxH2MvTmYVYVZEcFYLojVVgWVv0TUZUTY1gGcJQzQxHEUkE0PuMEd0Q2U4PFLYM0YO4TLjg0YJcmXAEUb2.GQoYlPNElT3PyJp4VdBImYSAGc18jYFsBVtETUwcGa2omRyUGLyvld4f1LtTyQWkyQWECdwwVSRMFV2TmLQM0UKMkKlMlbqM0JMUTXKkEZwPEQSM1T4kzS0UCS4USdzkGLJUyaToTVHIUdHgka3YlToUzcWgCVoc2T1LlQsshVSo0JyYFVKITU4nzRjgDMPkzckklSvUUSxMCdjIWdBYFStH0RYo2aLsVd3vFR3gEN34hMX4lVMEmYL0zTqX1UIMGNs8TMTECdv3lZQAyTiQFYmQlVvgjVPEDN08jX4LEcAIWaZckX10jP2D0QNYld5MzJsQ2X0vzXigDLv4TNtcCMwvjbRQ2RKk0U3TSdQAEV0LWU001bJgzR2o0aJIzUt.2JCUiTngyLOc2Ri0lKi8TSMA0cSoWTHk1RiM1bwTmYOcjLyY2JNszU0LWZgEWYuElZ2vDS5k1J2kVUmgWS2TybUciLHs1JFEVLzMFcsAWMrIWM4ElML8TZloWVB4zQ1PGa1HybJEjLigiMAQjKpEWLwoFQ4AkbgkCMB4FLZY1axIlVE4jXzrxURYFVyImVZIzJgI1Xzb0cZAiazjFRhQFSlcCbikkTksDZ2I0R0bUNQgiRxLVb5cWLp4zJyXCaHA0JRoVZ3wDSg4jdsQ1RwTzJXMSa5EEQxImPkcGV1fFaFECQW4hSAQiTgMSSNE0SVQFbjojPoIkMLI2TS8lThE0cOYGLFoFckEmaYUmQ4zTXro2QrEza2QEYznUQD8zayszQwPTLSEEaoMWa34FcVIjXHIjZtTkQ40zLMIlZE41UOg1QQ8zc0DjX0LGUzUWMBMGUHcUP0jVYR4Dcx3jRlQyc2.CMrUkRwP0RyImXIEFR0MDLyMjUxoVVOMSYZMDTQMiXEYlVkkjQ3k0LVgzbTUSTvLmPOoETyX0TXsDbyHlRnoWNxkGRwbDLtcUYtLjMFMTauo1bPQGT3shRGslb3gGSjsRX17DQMckc5I1LyDkVRQ2YnwTQ1sBTA4BYpsTYPIUcAMjSiQ0XT41PqbDa1MyZlMkXpcWcLckPCsVLTMVXDMTYyTjKwg2aKUGaWkUQ081XtcEYEECZZMWPWk0Lt3za0jCVLICcQUEMjQWUCMlYtPmdAgTQoQELSEkYDEkbvYVRxYGN1oUT3D2Xj8DYUkjchgicysFTP0TVEI2bMkCdYsDMJAEVlMUYIkDNysDSxTWZoMmL1UWcMQVdkkzUV0jdCMmRusTM0M0az3DLMESdyX0X1jFVNkSPWQDQkcEMKY0QvLmSAgGTrUCYwQGNXkDVDwDa3gCU4shKWE1X2b0cyXyTkgTPhYzMnE1cpcSN0.ScCslKHomaQUyTLczRtv1ajMWcW0lR3DVVzXCZYgVNJwFSgcyLnQ2TyLTcv.iPMI0ajslRKwlXYwTQlQkdMASMRYzJwolZMQVdwnTSykkKWYlLhQVbt0DZyQ0cMETTGQ2Z4kCTwnDZhoTZ0PDLgszM3QjTXgiRYI1aMMVVTkWc2U1SKoWX3XDMigDcpMSTYMyMuMCcRomVYQiaPIEUVYlc1H1avozZkUzXhokLCYlR2okKQMWbH8TTmQkX44zJIkjdHQGQ1w1cWUSbqgDc4bSLgMTcp41RCIkRC4Fd0.SPT0jPLAmPzITS1XEVyTGZ2DVR3XGctkjVNYzawojYl4lYXgDRvwjTzHCNkQkYkIDL2IUXwkTVt3haCEkUiAGdRsRdQcyStQ2coUTa1fSbTMWRqP0a5QzbSMERiIzJmIGVy.kMHwVZYUTMtHWVw.EaCcjMUU2PuYGZ5QiQ30VN0kWNOAmTpISZWYUUoUGVtrVXU0FaFgWVOYkaR4xTHc0PuQiQtIFLGUWNw3TRycmSv8FZ1wlV38jXisTM1bFcvkUdsEURuYiao0DYV8jbCkGMDQFZJEiVnEEStMkRQg2YzgmUZEUZHAiKvASTrcCVYgSaxrFamgmY3EFZVMmV2vDTFolVXYmM00TQzfjSHc1YnIDMF4jMEomZN4xLFQUX0DUX4rVcG8lSEoWTYIkbUIVZzMDNNklZNQ2bXI2QzD0U0QCRqUWdBQWdtzjZyHjP3rTUKQ2UT81cq8jTuMWR0.ya4QmajMySokTVHkES3rlZXQGU2fCRW01SUEDS2rFTUgSb0TySrICYvHmQE4FQRgjbqICMX41RKgiRwPVdnkSLvPSRvYjV1TWPVk0cD4BNxn2SjkTZiQCSG8DNwbia1w1JSgWdE8lKXsTb2TzZsk1J4bWRJMzTCMCdvYFNjMlKI0FYh0FSv3TU3bzQ0jWVNYFaxUFNvDEN3jkTvbGVks1c1jFTl4RVOQDTyESRVQzZIYTQuA0SnciVYoEVNsxPVQ2R5QWNFwVVTQFVvgmRkIWNzrTTnkzcyz1ZWcFMOglY2nVdsYlVjgiXEsRcHszY2g2YqszZqfWVScjcDklMU4zThokVZU0TxjDZ4k1RRQlXHYlcyIVZMkkSqMmSskGUQkiKKMiYQYCbOcCRB0lXgUGS2IFQ3IjSwLlVpUDcTkUT3D0LZImPqEVS2sRYNMmXUASQLIicqP0X1r1RSozaTshZrgSRMwDa47FTkczSX0lbMQiVrMUUoomZvTSMQUibAIUdzTGYHgjMGMWL18Vb0EjKLkVXGwVYxYCcC8DQqXWPHI2PDsTPJgCRuMFarIWMRAkQDwTM4.UctcDMxH2Yj4hS0YWVSAkbiY2U3MUXY0zQ3IiSkEGMIM1TjYFRJEGLxEzMrEVZvYSTGYlatr1Ur0TRLAGb4PVV2jTN1zzXG8zPwHTYtkiY0rlR5sVRqcFc2QCaQY2MqXDZPA2ZWkGMmQyLzsldxf2co4Tal0VdtEUcAokLz8zb48FUEQiZzsVMYUVcA4DbmY1SJMTZSk2SW0lVJYFQps1a4HzYjITSzjjMIY1PxnUbVsBNt4xaSE0cI8DN4fyauwzPVMzT4AmchIEUxAUYqrTTskkTvIybD4DdhgVT0zzJqXWbIASXTUWSmklP5A2cBoFM4kEb2ASaiEWTgE2JWQFTwcFd5cyJ3EGNFkUa1.WZ13jRT8lcwcVbFM1PwoDZrgiU4P2bFslVsM0TOkDZqzjZRkTSMMVbzjGRzUmLV8jRzD0MygzJGcDL4XFYs4xX43BTEshZxHVbEUEbGEkRoU2ZBwFNOMlKp0VMzMySDQjMEEiaR4zXDkzYLkzYtwzYEY2QHclb4f1SWcWP4U0UQolRksDSiQzcQojM3TjM3TCawUSY4f0RukEZDASY4j2QEgzMFMmXyLCdXUzP0QUQ2DUTyETY2ISShUlVxjjanI2ZnYCUWICMIMTaBoTaVYTcV81TyXDYD0jZBISYLQGNlElaKAiVjEUaTEiYHwzPF41SIElLUYUXF4zX4EkcgAmQ1UUPjYFVP8jR2EzUZoVaY4lc1MmYHcEYVUGYyb0QjglPYcFSHMjTzoGbGcEaBcyXJcEd2okU3ciL1QyTREzQGwzMDM0LwIiS4IlcT4zSGEUS3jUS2vjKksVXqYUMpsVSlQjYoUWZXQlYGMSNNUGY38TNPcjRsQFdO8FMDo2bjQlc2kyRyUEc4jSa0YELLsDR4rzS2U0J3g1MOI1MvcSNvnDcRAUMRsBMvcWVmkFTKcyZzYTbs0zQrwFTWM0MFQSLgkzRjcmT04hdu8DUVgGUl4xcMQGRlgTbGUicrgyX4wDbKEyZVcVZ2jFcYMVUs0TPKcjVWcDR3fzLiomVG0jdyoWTocmREIUQikFTwcianQ1SRUFZIMzRTkDTGwVUVQER0gTV2glMkkUZlAyZIsxZJciRBwFLEImanszSwQGUG4RMAQGQn0Ta4PFazn0UTUDLMEiV1PWNK4zLTojYq0FbLYUaw0lU4j2ckoFRnkGQ4o2amwzazUCT3DSdKIkMIA2ck8jUvUzYrkUbQYEZSIyUykULkkjYPkzLFoFb5oVav.ycNMUcqA2Pxolcs8TZ5sRbPcTdxfVNLw1L0TyYT8TS4s1RDImMRMiX1DlQwfkYTAyStQzPqXSQTY2LDMjMKYEaxTFLkUyQzkmd1UCY1HzUvg0JBcUc2PWXAwlKDIzTyMUQCczQWMVdHgGN1XjbhsVY1cjQoIGcI8jXqkFThcSa1PDdwbUQ1jkQikiYFYiPUYmcCwVR00VbG8zcjwjRpkFLw7FVSglbnEidwLzRR4BSysjbyTDask0Q3PlaxYCbJE0QmoUd4XELz3hb5QWQSY1Lq3FQhE0Z0PDdAAWLzT1JZMUNKQCTQolL27zXx.SduMDMwshcZETX4wjMvXWZMgWN1shRxY0QCUmR1vVTqTjQ0LCR20zXxQiTO0TS4kmLxHVQmEyQqYmcJAkZKEybJY1PDI1XpIGdGMyX0Pid0rlbzHkYxsBYlESQQYEYxLGY17TaFY2Jt.GSFgESEkEVJ4DN3sxMiQ1R1LlSPM1ZwYSb3sVZuAkUEESZ2gGTOkVT5c1TwclRqgSb4MUbA4FYxjkKmETaTM0bzQjQpg1SGAidxbUVzDScyfySJMCYqPUdgomK1fmSWo0SlYWSlkGM3fFNlEWSVshLJUSang0ZxQDNUklQw0FbQAmKlwzLrMkU4olKlkFb2HlYVMCUT8TTHMicikDVwYFNxL2b0rlZxsTMKM0QR0DZKUlakAEQiM0cwQSXOciQ0glRNIFZwzVMqYGRWwlUzElK1DjahUlcy8TLjASdyQWcNYUbJwVdLciLvTUMOwVbhsVLwnVX3bTVnMzTDkGN3EEbmkmaHgDNOwVaAgCTwslSjcyS2biQtkEQ0I0MWUWRhAUbuMiL4LUMBMCVoozaKIjQAMUcugkQTsDUzIWMTcUZXgicGEjamcUc5g2LHMCLkcycY0FYAoEdHsTMksDduITLv.CYkcGTWIUVyjFQ2UCME4BSqg0YzDmbMASchcGcxLSdUEjSQQyM1shc3cDZVkCRRAWUxQka5IlTzXFTsMlLqUkQ2IWRKACTCs1MOgTUsgzYtDWS3gyUCU2Z3cjPwn2Sl4BVzTldXQlRhMELwPDVZU0PD81UGEmbjIDMH4VbxgzJtPzQ4HDZrACYVkSc2LUXyfFNFMGLsgTSRo1Q5EjPSsxMyD2ZyrVUPQyavLSZqI1cpY0TVM0StECc5IzS2PjZkcFLgQzZxkWYn4VYjwjY0jVUwA2LVAUMw.GRi0jSyfkPUYCRPMzLYQ2UPQyP2gTNHIkbnUmLHgiY3AyJl0lK1rDaMoVMRcELqrBdpYCVBE1JNozZ4UCcUE0XUIicSQTUKQzMBwVbAEUTysFRKIyP43zXYo2XPEzRiECbIkzY1DCUPsxXGgTLiQyMKImXvrlXNA0bmIzcwgULBM1P1.EaNg2JYQWd0cVZxMjVLs1c4nmP0H2bzUDSzvzZvn2asEjKk4RX3bFcvUVQ3jSb1czbrMDZEACaxXmRIszLGYiQ2IDLIgCbxIERCkiTs8VTCgjKzrxXRUiMr8zRPYVTKoWZzfCcpMzYic1a0YCYV0jaFEUTt4FMi4hKAEyQm41ckUFLgUVQ1ImdXIVUwEDVxLjMogFajUDQwPmXmEDLrAiLWslSwEEcNkVUUY2UtHTY4kVNnsBTqcSMzoGRHMGY0nWUtEyXPYVTC0FSVY2MyQFc2kzMwvVdoIiSL4VQ4rjdTUlKIIDLBICQD4RVyDVLmcGdrckbCMWcGQjSTAGYkUiVNckT1flVLgzPVk2PuUza0DVNk4DNYIEcKk1TKgGcWgzcwf0ZoYUPH4xMzblMGcCZTAWbpsVbBgSVIcDMUE2TZQEMybCdKkjV0X1Q3XDUMwDb4UEUnAGTJgVLLsxXtfCVHcCSybVYGYCT0j1bXcyPAgUX3DmXAMzTqXUZAYUZqTGTJ8FTIkGasclTEsFb2PmQGcTXwwjU2HGcqMCYw.0bRMWNQQ2T47lQYkGTpglVokFV1v1aKMFcw8jRsUkaLYUdgEGVLQ1S1AGNkUWbyMSQ2AmVKQFU5QmcOQkZOwTZmMkct4BSBkzQynmcFETPyUyUMgTYsEmbLkjdhclPI8TLFwjZOYzU1LGd5kVUNcTRIoFSBECSPIibyEkTAMlVXgiRtn0Q2PlZ4PURKYFLOg2Jw41c3QGUMACUQM0SpQ1LUECdvoTXxbkbOgTLoo1RzXCSGMWQnkmM1cEZowDV1bTPMsxLEEWUgYTLvblbiU1QWMVbvLDaIYSNkcVaLUEa04DTX4DLiQTSAEDR2T2aFo0QWo1JTASbW8jXmc2RNczMEICdVQ0RSAyY3YjKtTic2TyQukkRRUGLw3FLK0DQNITVEsldjMmUm8zPqnmdEkEc5UCVVkGdvYFYHglazQDMicVQ4fzMEQGRqQ1RxkzZl41LmUFY43VTwPzPPIic3g0Swo1bEgza0TlV5YkPJElMH0FTnE0PpQiQJUlYPcGQqf0LSMSLBEUQ3sjZ0L0YYo0ZyLkbLYEZ1HGayzVb0slc1MyR1bCNGU2cWsTTjckc1ASdOY0L4XmYmA2MxjWNs4zXLQFTAgiKHwjZW4DUDY1XiUiPqbFMxo1M2QyMY41J1P0LMAGLSYSTOoTZhAmbMIialYkUlQ0cgclTB4zRZ8lQ2XiLWgiarciLWkVbFMjKvkTRyDEN1.0MlkyTQc0cPszJ4TWPmIlVJUiUOYFNyEWZ0nEc50DYmA0P1ciVFMUXIUDaZk2JsIWXTQVSzIWbuEVaisjXtITZCoTajUWajQDSzAERjQkaynGSEAidyj0LtfyPzIERYQUV0QjTIQmUPYCN3.Gcx8Tdq3xU3QULLYVXH4lYDsjMJc1TMwjZXgWPhEVRgkVcoMlPx0jM3LyYgA2bocCdmQUSyH2Rk0jdko0RwgzY2fzThw1L1AkSIE1T5MSYEczLwc0RUIWSlMDYi0VYAQzTrQjbt3jRqbGQyP0LRQTTRUlLvcVXoMlS3nWQwfWbGozXxUEUkslPlASYlYkRkIjX1EFV2bjTUQzPgc2UkoDR0nVQyP2RKolYt0lTFUGMRcUYWsjavTWTEwDROwVV38TTUQGSzYSP0UkUXUycBUjXxXGRUM2b1nEcwgFd0QSNqL2aBYiaEYWP2sFcNkEbHshMNgmdMoDYq0zcvDCT1LDd3.kPiImTv7VSH4lTHQGNEMTNHQETgg0ajMWUrAWTmkkMZIGTxPDdMg0Z2LVQzflQQ41ZAcWbBIWYykkTvPDbCgEYTcVMH0jcN4DbxL0MOEiVAg2TnMjKyDDcqAWaI01c0sFYw.URjoEN0M1X3PjMHElazTmLVshTEUDcucyQWUyS5oUNJQTTDIkZwckbtjDUgImdXcSQoYEbwLTXh41XPg2MxACUNEkKCk0ZiAmKSUWMkISd2byYVIjV0HkLjgGdxjWLQkjbncCSScmMMslMKU0Z18VM0zFTiAGbno2X0HCTzfCT3kTLuMWcpIiRx4jRyH0Mvj0JTUmSYIGUXgUUA0DLsEFYRo2TFkGdwXTdLgVbyU1Q1ECNskScg8VLYgiTYIzbRwVLtXTdHY2b2MWZwYyYGg0Mv7DbwMyavz1MxITQWMSdLcVb03RNwLjRqMVQZkTRQsFajshQ5EjQpUlZO4DZOEVa3UGdW4DaoECatnTVg4lQpoEQZoFLncCMzACR5wDMGMzXmMGSqD1JoImQEIFRNokPBQmV3DjVLoGYW0lQ1gFMMUFTJ81XXI0LKEVVhEiQxIiSCIGc2YzQTAiYYQVVQ81UVYVNuYlSNIVNAM2XlMkTk4BT1TEZVkWPgASUlcTL4Y2QpUGZ0PVPqjjUH8lUk0TXoA2UNEycUIEUoUVQGciP1PFLqDVT40FSWsxaXIVUlMWTtMkY3QkRV0TNukELFwlZXcTUwsxLUgWRzTmKzDEZO4hXvokSqX0XWkmVwciXKUlbzIEbJcWXR0jdzAEc03hLvj2RtPWPnwVRW4zSUcyaykVQ2gUcW4RZtIDLtEVS5kVbZwVNiMUNGc1MFkURYUURF4jcMMVTnkEUG0jPv.iShclMCcGUr8VQSgySEQ2c2YTPUcFcFM0Sz3xR2UTLqn1cRU2YhQkM1oGR3.0TmgCQ2MDZVIEcwPyZsUCctUWLi0FVUECa2T0RzzzTigDUnUyLzIjP0DiZUQWdJIlatPCZ5EkcVcEchYEMhUlTA41UPE2PtQlLM4xJlEyc5gURF0zazfzaIUkPiUWaqEiZ4PGTWMScVslLGYjR0sTTIokKwMCRSQkdUEVaBYVQy.USyw1aiEmblICLZsTajkybzAmSxUGUTMlatEVXZQ2YNMDanQjZwkDa1njcjgSYsoVNO8zRxcVRqH2JEY2S2H2SOA2LnMiRU4FYD8TcFg1UuQVUxLVaDoUT2HCSxjmKmUmQhglVYwTL4sldhY0Px8lKx81Tvn1LhUEY3kiVSY1TmYWQLcmTLc1bVshXA8zbBYWZrAmVxYSRtDmMAkFTW8TV2Pjd2LTYtjyQyUVdqn0T0vFUGkEcXIFQU4hVx31ZtYGcp4BNA81TUQ2aFgiazMmcRIjcv.0YsQDL4cVMhwTdik2clQyZuAGMAQCLlkTV1gTMZgkdyXCYVQCMJ8VQ2vldOQ1LIoVVhECZ0D1T0szMnc1UpIUUwzFSNMFdBQDcpAiSZgzXmIFVVUmY5YUbOUTc34DSqrBZZgES3kScqTiLSYkRvUFSBUmMkMzPT4RTyLDbYQ0UwMmVMQTRYYVc0g2SwEiQ4AGajUTQmklYwkSRpsBLzQTP3b1MzPFbQM2c1g2brkSVRIGStYiLqEUMvE1UxsxSPoTNpgGZ3s1XJsDL0HzcCoEaxUTXYkzLqblPtnTXKA2YvHidDI1Lh0lXvbldZckKNkWb04hZVc1RAcmM3fkcD4lXDElX2slLSkWQFsFMIUCThgCVrcmKqnGZ3zFaDQEVsgUPxEmcn0jbzbWSIQTUvHSSAoTagIDQj4zRoAGbowFbMsRd2nDQNoWUiQ1Q1sFT4cGRSshLNYUa50lLPokcsIEU2AkVqDWUosRbxkFcq3hY34DS4vjMPUDMwcVZB8lUlQDT08jTxgUYjUmQKYSS2oGd0PmSYQzLMgldGIFN1vTR0ASTpUFYhElQEslThkWRykFNwPjPqI2TlkmRycULPUlZ0fVaEo1MsgmVWM0aKc1bIMlUV8jVpokcCYjLuQmQzMTcVAkcFgGMVMDct4DQZkEU3AiYykSRnAkLCckdFkld2fWd0.WLzECVvDCV0TCSAMWYLkTdwf1MXsjKJYmaPYSLwQEbjkESzshK1UjXCIyPpIUdW4BLPYFLq3hYynVcrAkQU4TPgYWQMYjP5IkP5M1cz4lV3kkalYCdCEVVgUGZOMWPRoGbHgTa0A0TYkSMqLVY5Ykc0HFNw8lM4omYx31XU4RSJY0Ro8DM4rlLsY0bqT0P0HlVo8TRnIyQB4TNkUDb3giQTokK0fSUmYyYXokKnAyTLgTL10lc0YDdmsFUUkFVxnFboY2S0gGQOkmU2LSVtUzUh4BVU8TP5QlLyQDY2TyPjQjcR4BTAY1TBo1M1UEMEECVkAGdmAiTYQ2Ss41azLUaVgWUOMGRzIWL0T0LQYTT2EkKUglLIkzJUIETqIkM1LEaToUU2j2ZNElPzDzJAQVYMAEd5AiUwcVPq.SQFY2REYiVCk0RxTjd5UkbEgGaKgFQKk0UHclR1L0TkshS3jFV3c0JzbUaxMCMEc1JSgCbXEmduMmd4LzYIgFSHkkRJoTTTcSXRQCL3LFUCoVU3U2PQEVLiEWLv8zQ5UlbocFUxUjZlQFdCUiLkwlbkYERDAUQFUFNWgSYQMGNkoEaUImUTEUc3PTd5M0JTACYgMlYl0TZ1n1L3IWShIWSQMVLQ8TMoQyJFcjRtvlbyTjVsEELM8TMVUUSBYWbvk1S0ACYNgGbrYSdgM1PtfVbZkiVn4lKiIjVPYUR0kTZUAEU3gFdDQ1ZZUkSMAGSxk1XlsTcxfWLtQ1Roc1byfWcnYCTgo0PyESXwMScm4BQ1ECc23xXsMmQg0za0fycCYEb5slRuAkPOAUSLUmRvkzYw4lQwkTYZkTTB8FT1QFLNgWa2jyYUszcrclUxP1TpUEZYYFZhIlZ0nTMBUmaYACUyfjMjM1Lig2YEMFZUUSV3MEMYMUamYUVqvFcPMFNgAEZUk2T3Pib14TdvYmM1k0RvPjMpcGRKgGdjMmcpYWaDk2YOwVXIkUSBojZGIDdyEkYGw1YwkDQWEGMTAyaDwjQs0FRN4TQtcVd1Q2YiYmUqXST3DWQSEVXKAybvUFcJEVVWkkQl4zbiQUSy7jYwsBVHQTQnkmY3nmQx41b2LTXSEzYiUFYuclZuUCay3lXkgTXiIVVwQ0ZHIkaZ4hUYITVxbFbn8TQFECS37jMxcUcCASQzTWLwrlP1kzPpcDbw.mQ2wFaykTTtg1ZLsVSh0zLwPGVRM1c1QWdybUZYUERSUVX0LCcUImLvkTYXk2YIckaNITLXYCM2PCUoYGcEo2SPcDShAmSXklVtvTa3jyUGUVUMwFQqD1RnIWZTAGdiYTa3kyPzo0bQgSNw7DTtzjQKU0RgYSdsslS4MSRVg0Sp81ZWEjbJsBNEc0YJEVYhAEQY0zJ13jLXgSRswFLBIEMIQ2L2D2aWUVR5wjbsU1XJUDUCE0LXcyZBQUVoUiVxjyYhgzXAQSb3kjVtI0R4EmS0TES2A2PwD1X5MCd3EGMsMGa4bjPO8VV4jTThcSTPshd0A0ZTshZhkkcAMUP0fkdgg2YhgVaLIlMrgTQREyTtfCU3EiavYFRpIGSAI2Z10TcmEiUyECat4TPFgTXjcTYIwFaSYWRxEiKVMmUzvVPZQDTIgFRIomMPQjaBI1S1w1YBgVN3kVPR0TTUwVZPYTatsxTGgSYw8jSrgybkkkTSoWLhgVRzo0aLI2bGIzUAo0YYUWNlwjUsAmTDQVYE8zXtTya5w1PKojcDQWb5EVQQczYBgmYVc0TvY1PLoWZtwVRukyPpkmbzE0Jn8FYJ0TNlcUMU8zPWkkTuQkKG4DY2gmS2QES2wDNOYySpECVSEVXyoELPkiRRACSLUjcY4xSNM1J2vTbFMEUWQCUyfTb4cyQOciQwAUR3jkKAwTTvk1R4LET2o1c4gWNxs1J1nWL3jjUk8zUgwTNTUlZ0c0cPg1T3IDQEEyRKAGayokMjUGVWMUQt.ENAQEUAQzRK0VdJk0bjUWRLc0btMjcEETSNcWcvXlRkI2LEYSPsk0T3QVMpwVNMUmVrw1bGYFVRE1TFA0aokzb5QUbH4xMZUGSPgjdtHyXgIicrM2SsIFQhUWcxMSblgFSyblL3PVU0blXx01UUo0LH8zYSMWbv7DbRIjTqYCNGomRHYlTVQiS2cVYg0jQUISbRYUNs0lPXQiTFo2ZOkGaMoEMkU0JzokMwMTRxoWdwrhL4kiaNUicBMjMHgTZzU0ZsEDU0MDZLslKWAGYoUEQJE1UwAidwIiMZsBZ5YjdWYlZWokYzkSYUg0cWcTT1gGRwY0XwXGYGEGb4M0aMEEdskzYXAiYwQSRWsxbybkdRcmKt4hcNYmYQklK3DkUvMGL1cSZtUTMsITTvk1byLWZTcyPtjWQqsjQ14RaCMTbIAULoMkMvLWdk4VZQIzasczYZwDdIYFTyYTZAAyMuImVockKAAWbo8zPxQVayHkXr4TQB4RauEkcybzL3EjZ2TWN4bCVPwjSzsFb3rlLJg0bwjVP1sFZXMkT07jYBICLUcWUTUFd0L0JlAEUAUCL4EyM2QUTEgiLUsDdqDSYzb1b2b0YDgDYMQmK4Q2X5kkTFIychQUYYg0c08Fd4.mLyYkS0T0RucGQ4UFVmAUPRIEM0kGc2IEU54TYZkTXVglUhUERjICURYGND8DRvf0RZIDZMoTaVMVctvFSloGZUslUvfSbLYEZIQmZwjmLoESbzf0SMYWblg2RK8TNloVd1MERkoWLwPjZ0bVPNokRjMGNCAUUJUjMOA0MEIjLiIlRvE0aFczSvoEb3rjX1bmb33FMOwTLWISdJElSUUEY3vDZCMEL2MWRAkjVwnzQykjVigULUAEb4Y1Jq.WcWs1PV4VUPolZyYlUpMDNKYzZvUVVq4RV5kiZJMzJQMjQtIkK0k0MOwzbgMlT1nWQZkyaIIjV33BdjYGSqTULVMDb3o0LxAiS2kCb07TbG0FRKIyJ5kFV3QGVAcUVz.WQ0UCaq8lQFI2RXgDT3giM1PSNroUYOkSaLYUVV4lK13RZv3zPxoDVqfjc3LSbMECZvL0JxPCZ1A0PIEEN1QGTjMkVZckTznjaucTUo0VNjM0MGkUbzTTYhkmP1EjQi8VNCYWRMQma2cCY3.WSJ4lRnQjVlM0PvslSiEVSzYkUgIWbTcWd3LWYn8ja0E1RzLEY3jSUokiVkwTR4jzMBkiUsIVRlgiPgwlaVokcNkCY4ISNm8TNZIDQnUUdVoGRCwlMJMkR5wlb3cSRMQ1UGUGY2o1JqjDZ0LWPSc2PwLmTG4hTRgTd2biTvnjTVYyPnIGYKYjL2E2aAgmQiQTSqXTM1rRUDYCamYSM2IWTtUmKz4VdQozMTsFVMo1QjQGc3AWLvcFZVgSbxH0XwjyLgEyakAmP2MVUvTlKMU1cPYGRlgmU3c0R3DiTznWS5omSKI1atMzRrACMtsFVpEzUDwTU3fUQXMTMp0zZ44jKzfCNGUkR4HyQgUGSqETXzwTZwAiZ2DWUSMTMisBQGIlV00DUnIjPxE2SNgyTvbzTWkid2HDQw.ENDgSVBUGcTUFNgAGaiAURLkSd4PzLNQEMxnDRnwFVHciaAEzcUIDVkQkLrYCSO4FRE81QiYESWgkYjUCUUg1PlIkbEg0PIoELKMmYuISdoQSXgozP4TFY0ETbAoVZUEFbVgSS371cmolaUUDUqzDZLgUTtsVargSd1Q0a2bVRGUmQqYGTT0VPpEzQgEULyrhdGsTbw4jZ0HkU4XybZM1QrQGRs4TNQQSdNwVa4nmTQESXYMEVGcDNZIDYzICUxHGcB4lUUYTL0ojQiozYpEmQiMUNBQjXrE0QEk1L50zYFEkZ0PkV3YFcYgENiU0ZpMVZxEzJMsFM4IWVYQFblIWQ2XjdCICYRo1bwE0QAc1QIgSUScSMZMzMqLFSzUGbx8zMLMFSzk1TJk0Xto0S34lSmMmL4DlRGkmL40lPzPjU3nEayYiLGEFZnEWU0o0S4DlP1biRqT1MxkibNIFVJwjQIASYGEFSoAWLwn1JK0TMFIyQKgmX4X2MKYjL5clVyHyJQIzQCkiVrgSbvkUajUVLjAWS4f2cYIzX5IVPwEkPCQ1cMIUdoIyZHcWYLY0THgTaQMFQxc1TgklbSkGcpMGRW0VTpk0SCMUQHkFdWcld5czUpwVQqIkZJYEZEI0RwDiLqjWVGEFRu0TRkYTXUUzQ5EEdBEyJAciKkMUMXo2RV4TZ4YySogSZIUlKq3hYiICTpUFR2zlZsEGTXQlU07lUBkTd0XWRsEEMLYCdH8FbJYWUt4hdDcWdNU2SWgjYlIUX1rzZX81UN8laLYzXvvDQoQERqckUzHCNznTRs8zJvTmROESY4MjcEszQicELR8zc0jDcyLUZzgSQCAEM0.2QGcDTY41PtjDUoQyaqg2TssxY1XWRKIFVGkjL4YWMFgiLQcTZKQmc27lYQkzcCclLwolT1o0XpMycFojSBoVRZoTQ3YWXo8DZBIFNkwzMj4jVCw1X4gUdIoTNigTZTIybiQmSzHkbEMlSmImbtXTLGEzJLIGYzXDNhEWXNYDdLMjLLomZEkEU10jZnckVHMDbHIzbGsld2TzJvczYMMWY3gkcGgkMNwDY1ckYTo1R0k0S4rzcJITLtYCUVgTdMYUaNsFcs8Tb0bDLJkUdJIUN1IDQwblcvozUmIVTm0lL1r1b18zXyI1XzjiPBs1QE8jd5okKNIVVIcVMXE1T0T0TnISTUQVahQSSQYDTTEGStQGd3fmQgIVRwckbyDVVWQSTrEGSQIWNLASLLYyPmg0UgA2LAolZoYjTA8lY4HWSSMUUpQ2LBkzbAcEM0LUatnDNlUlZCETdvLjUKc2JUk0Jukic2HkcIUWTKU2bMgjdPkiTyQmRWcSQhYEaq0lLzHyXZEDYn41azk0JTQyXCMjSjM0cZMWdjESMt3DbookYukiUqrhaKIkVWUSMxASPWcTStPVP2zVZWIENjYlTAEWXR4FS4DDSlEVXigyUrEicDIDShoDMyfWTSo2RxL0Zr8VS1cTUngUUD0FLCc0S2YGM0giVKczXw.0Mvk0Q1gWZpcGQQkUU4XDasUkd481Jj81cUgzcXkVbAQkTqDVT0z1LCsBTUEkZScmc47lMiE1LVoGTJc1bGsjPX0zQLYzUhIEa5IWZhMVYUYkMyQWZLsxZ0.SNugTZQEWXzsFaHwlZLIEVSoEbxMUdnMDaTg0Z4sTcqHFS3fmUucldVkiSvHUbyAkX54xJnQTdxMCMKEjMB0zLrczX0XlVw4RY2E1S4.kYtbGLsIjbyf2YWY2PkwzRvvVQKUUQR81SnsVSs0DSAAmcVMUbQEDZQMiLEcDTuYULvg0L2PyaZwDNrcCT1PlaqHVS3zlTWASUuQCYhgjdqUTNhQWX2QEM2EDRgMiVGYSUP4zLI8jZkUFZKQTUTQlPqTzbE81T0c1cncDSVQjdBcETrQzbhUScYI2bq0TUhUjcWYGYNQmbr4xMGUCViQCYyj2ayHCU2sjaogCdlYlcPQmMJgjS3TFZmEyYqnkd3U1ZqAEVGMicyrTUJE1UyvDVIclbjAicsgmcQ8DNV8lK0MCLOIlXSQmazbGQUcUL041ZyoWd2bGVzLTVnIUbD4FcAwDbJUDNtUVRi4jR5ICQkQSZtLGZrkUXLMzQIY0MwYSLukGdN8FSu0zbJMWcEomKKETXokjaWEmUKcWdREkP2MURt0lYRM2Mpg2Tq8FNtcVUAkCN1omdLcGMzPlQTQVMUkyTIQFLRkyYFUTY1n1PVQmZvDTNNIER3gWPqgWU2z1cBQTNwrVaMEmctUGcxYidsMmT2DEZy4VcNcUdLo2YAQjXxbCR0z1MPMldyLSR1n0PwfSMpgWbRU2XX4VdGsRSz.GN27zM0vjd1I1PLoEVH8lQ4flazM0MyzFMPYGMBoWLoYWXPoDLvD1MtDyQjcVanQ0ZNIjUlEld3ozU2k1L0AkTwQUSJszP331Q2.SPzXiUuo1Y13RROQiPKUlMrIGQyg2c4nDQ4EGZgAmUWEDYzLDRwQCYtTSZBUVP0kDcO81PAw1XzYjaFcGM0kUZz.Gcg8VY1ImSTEmZ0nGYGY1P5oDd48Vb3EldE81UjIWYUEFbEM0bwP1czIzZx7DdxbyLUoWP08TXAYjTjcTVpElUxbiYhEkVEcETrcCYJo1XZUjSzUmdyDkPyQGc2YVRvYkPxEiclwVckM2Zjo1cyETTXYkZVA2QZokVlIkZxEkLOMWPO0FUZMlbugmVXAGZDM1czjkXXcmMn8FUNMiU0wTdZQzRHkUS0UVQlkkdFQULHoVZHAEM2r1UxMFQzXEVMgiRXgkdLMzUikzRVIUUy4TZhombDsxYmgka0E1ZtsFYUYkMnw1coEmVogFL1vlPgslLLcUN2ECM5UWP3YlTDIFdOIUPhQFcxASXscjQ1TkdWICbBMVcUUCbtHUQhI1PWw1YNEicQkUaLsjcZM0MwDUYGoUUOUSaLgUTQEmMxMyQKgyQpokbBEiPsEzcz71QMUCNUI0bwISaOwjZ4ImKkQ0J0cUZzgTLMQ2LGkkcsIySmE0bNk2TCMTXJIFQBgWU0QGSnUVSzYyXuQkMgIjUAYmTxbTSUokRL41M1EkZAYkYG8zJBMSSMgTbEoELMECbRwTPtnmPtUUR07TNWUERq.UToQVL48DSTYzLrkkdTkzUjYjMVYTYB0lYqnUc5ECYp0lLZUidyYFM4kzRqIiY2kGcvjSZwk1bggVUpUyLGEmSv.Wa3LDLuoDcmIjQKo1LjQWVwYUT2ojLWojPh8VPjImKVo0cLIENLoTSx8zLuYjZO8lVzAESTo2UyMVXksjS2Y1QLQCMwPUN0ESLNwFZ0ciXgwTZ2TjV2kWXHY0L4ckQwPzJIMTVP4VMsMUNUclPtETTFYFQWMlSoEkXXQ1JqrFZ3gkMwLybCUFNJc0JJsRSuMWLscjR1z1Tq.mdmwjZCkzJl0zJEYVVgQVSDQGbrIWQNwTT0TVNMojcr4TM30zYYkiLEsBMoY1YA0VbZIVNDYDdgwTb4HzctXSagcTPQASRQ4TaIEULuoFLR0jKmMlXy7lTHMTTOYmTjkySwXjdTQWLXk0PIcGctPDN2DkKOgUQ1AGc20DbLQmVMMmaHYVRCIGT37lXzMTbvg0ROMiLtbjUxklMOAWLGgFdUcmKwQmVtgUSCESViMkPEgkdvoEZyI1JxYEQDEyL2cEVwvjY0wTLNQFcWMFUtYlcykkPQQ2Jz0DZyHEVvXiP1wFd271Uic2MtcEUzrFTooTVHASTro2QNUUYAkjZUsxPJIESU4VZ0wjQrkjRwMlLtLiTqLSawLlQVAkczLyYKcWNHUiRTQmaqgFQYk1YukFQnE2MBU0QnYjLwXVVCgEbXQWS1bVQZECdoQVaUclMzXDaxfmTvYzMJYDMzPFL03Fd1TzTxoVLBoGUJMiPEI1QB4zPBIlcwITREUTcJIicyLGcUQ1XSUyXQITdEY1UFgiciQEUJgWQ3HzMEQjYhozJQUUSUMiKhASSy41JGECYywTLBoVcrM1ZOESMRoTZyMkbQUjVXITXLgSNKcGNhgTaZgUSxUDaIM1b23TdHwDTwEEVuYTT0UlPOk2QqUGMIo2Q0IDSowTdIMyZQEmcsIkaFsTc33lKzTELMMVbyMmLDUyRUUjVOkmbQslK1DmLF4jbWESPtcGMjoWXYYGSs41SxEzR3DGMR8lPGAURkAWZooUSDcCdw0lLRolRlYmUnoVPAUDY3LCZJQlSH0laSckZm8TU0bFTyYyT3fkUMgWXVkVLNEVPxYTbmQTY1DVcZACbYUFcEQESvn1P0T0JBEyYnICd3fUUyojQGETVpsFRBkFVRcEbvMUNJgUQZQVU3vTZNISQYUWdYwDMSUSL27VZloDaGEkZqQEUz7TUhkzU0olS2zzXKETboQiXKYDUwHWVGshQNgFbwwVcLQ0azTyMLsTbwA0aGYzMDEDQqcWMCE0bDAGN441c1gmL5MlTD4FLr4zUB0jRiYWLkgmVngzMrESSTAUMVMWZBQiKKUEaxb2aqP0QrYGaJcDVrcSP4UURrc1bgMCSUE0LDoEUvomLXczSS4Dd3szQ3YWbPQWQCICN2bzYBYEUgE1aYs1SrkDMLg2JwkzS34TZNUkU4UjSM4lY40lKkI2PpciMxQlTGckPzslP4XDTqsRNYwzL3UCNr0jX0D0T2D1M3sVQ5UDTl0TVxIyYDIUXHozJSg0c0YGQ2Y2PrgyMv4lSvrDLEgVMoYUYvMiaqrVdtXULhM0clgWRQAGUQQUTQgkTGAWdQ8jSggTPHM2SzU0PwgTczoFNNcWQI0zJRcVTHYzX3PWdDcEcqMTUscWPo0jQVQSdzPSX34RdyH1amg1cn4TaqbmdLUjVusFatjGVo0FYwEFL3AiZTgSTwQlL1gmVoshd2T0Y4bDNSUiUyYGaxHmcxQyTqjGYkAmXNQldqMCMFkUaJsTcGc0XwLjZvo2QjMWV4H0M0IkLHgVRxnEQzj0M1kkX4Y0apIGb4LSVlkyPKQTSCkCcG4jZJMiaEcFQN8TZu4BYFE1PokjTOsDdKMlM4rVLnsDNyTGZwnFV2Y2RiczSqnkK4D1JXsVQlsRUyjlXokjL4sTVGEzQuUzYOMjQVQTTgoTQXoUVxf2LTwzXVYTTQYycRolRTUWcpECYw.iTQk0Q3U2LCoFdQojdqTFNyzDQDY1TkIUXBg1bsoWbZYWU2XkVTkUREICTpIyLKsxSEgSQ4DDR0rjP3rBTxkVPmgVbvjTNF4BMWQEMNEEYAozQFAyLE81MhAkbZkkRJITZkcTL0H0QXAkY5k1YZcUaZwVP0XmUnIUTrg0Jx8TY0USTsg0JDsxPnEURC4BUEQVMPMGQ4oTYQYkM3j0asUGNGkCVvjDTgkDUpshRkQFQ1ImQ0ASa4gWbyY1JtjzMGY1aWM1QMozSVMFbGkERPAGd2.GcwMiTZASQAQDQIoTZzclTqDSQnokMK8FV5EENYoVL24lY3UyTxzjVmMjKjImbDIyTNkmLS8DNKIFUoUDcLYiMmQScF4zZ5ciQGUzY1jCV07jawYzREkUVxI2YCk2UvXUXikya1jjdFIzZJQUdxIEdZUjTi8jTTcWTxUWPvIkZS4jZnkmUqHDQXshdLkWSwgyUjY1Sz8zX0nGNPUGY0olQmEjcAwlV3P2b4I1LvUWU5sRXEwjSAgEZuUTLtLWRCAWdFESPnMjLFEDNAQTTUsBUt8TQmwjd3QmcvkkdGMEZgclXvc1Jgs1YMUiQwfDVX8FLwD0LIQ2PzImLAEUY2XWN3glYMciYnUjaBolbBoEdXkic1QSRIUTaqMiU0MUcHEDRsYCdTcEM4Y0M5UETkMCLJcmTGk1amcVTn8lbOsRahwldxjjUtciYvc1Tp0TSMUyUCkSX0LkbqPzPikGVOgiLgI1aQcEYZ8FV2bTb1.mUTE1csY1SYEVdG4haSQDTPolPzIVL4j0ZngjKw3TXtLlbWglMrMlVgMmPGMyJAIELOYTLFEVTzjVP2TkLHMVSm4RYkcDRxLzSvgTYOYVbnoURncET4YEbGQGaucWY4P2Qx4zaNg2bvEyayvlVlkTNUUzcOEyM1nDLW0DQgoTPzkVLIYSNQM2TZcEM3jmVkQzb34lXq8VTzb1PBsFVFAGduUmcIgmXIQiaB0lQNQFd0j1coMWUtT0ZxPlT0TTQxnEN3EVU3r1YrMTQ2wlawsxcVE2bIUjPDk2SkQTUpQWRHMFc3X1ZEsDcW4RXvsFL1YCUQMGRUYyTGslV2TkPzbmdoEiatQSX0c1PhY2MXkkVKIDYWo1Ttg2JocSYJUDdMYkMHojQ081QqP0P2cya17lSBAEbgcCZvHSQ2nVTUUzc3LiZ2olclgSdyoTTxfEc0PkbyMCdD4VRHg2a3PTawrVbSk2UNkyRVIiLUAGbJUGS4.WSyHFLT81ZqXiMSojQJcycTsDamwlR1PUbsQTVTA2PLkWRzESLvflXgImTMY1Q0MyPxn1ZrU2LEYTZu8TYvXmPGEGSKkEYFEGRUg2SvfVM2DWPi4VcEk2bl4RL4DmZPsTdXMkcAgjVqUDaSkFLz0DVLMCcWsVdBcGNZMTTqMERSoEaPEiMRkEQA0jY0ESMwnmTqElVwLUYZ0TMxP1UIwTLVAWXt4Rbv.SZEQDQCcmRSciPHYDSpE1RxnFTYEmXZMzTwI0MtvVa0ozajYCaGMCdREWRAIiYqXWRF4hM0M0bDw1Jn8DZiM2YYkjKEg2U0nGdOcTZhkkc1ETQnYmMyf2Y1LjZCkTVEU2QzrjamckPYQCV271Q0XDcAsDcVQFYyMyU48lQWAGVGQlbPsDTVkCMoYWSGYGQwolXQUTcIs1X3DzXBQFYHoURy.0TtMicAQUR2w1Lqc1UtjCbKQ0LBYVNzszQvkGYLkDV1kDcYUVb2T0QCYycDwDUSklaycycMkELwE0XLAUL0QiUx7Vcqf0Qw7FQO8lbzUkK2.CS33RdoYUXggiKv7zMTgia4DGdpUWcq7TMwQVYLAGRvITcGMyTvrVVDUUS5UDLyzTND8jYlclYnc0bYwlV0EmXSslVIQWaAcGTIEmUzzjMYc1bBQWSEQFc0oTLyQFSwTSSNUmdhQSajkCaPIWYlASLl4jUxEDR4YVPHETagAiS1kUUjoWRMQidFQFawbGVsszatTWXm4VciYkSPACTOMTaGYTV1ECZRUiU3PERIs1L1TEYFMEcwDEavLCaqEkYlUldjUSYWIyZ47TUGckRmYzZDckM1oTQKsjQ1jDMtIUQk4DS4cGURUiQ1XGbX0TYhkjKIokUOUFTqMFN1QmPpEUS3cSTpEzY0HkQUUCLhYUQHMzX07DZxECUsUzJ3kEMgo2bnYyUtIkZWwFdwjjU0blSOgDV4Lkb4nmdokVVyXWTtUyanMlQlgiblU1JyklYwYkP5UyYGMjKSoUTlUkPNIyT04Fcx3RLGMWaLYGYyYiQLgFMUgCT2UWcoQzR4cSTQUGb0YlbIElVw3FMoUTMvQ2UGQTR3P2MI4jYM8VcToWSzHVPCUjPQMUVyYUUBMETyYjVpokV3bWbrcELBk0byfzZKwFLJQGMLolQyITS5ETQFwDMxoTVz3DTrMTdogCb10jXkAiay.yLq0zUikyLxjjM2ciMY4DaqTTUSEibF8VdSMybxk0TQI2SFM1XAkWPXMTZxYkYSczJyMlaUsxTnMSSXcUMCgDbgQiXOokbqzVY40TN5Y0Y0.WbPMTMRQUVzPkQwjjKRYUaME1U201JPEVQYYmKAMSZYkTNy0DUxc1YHkFb4LzYikDY4PCcqgUYvHGLhImRyUkbyUGbx.UXzElczAUMIgDSYgSYyjGYGgjXocSX5kzRDkjdZQUSq4FYhwDSFUjaLESQgYzZAMVaQIGNO0VUrYkMI8jSuQFQFcENxPFZlUVV1bjUwI1SuYVVhEkRnkWaW4RTmEVatv1Yi0lQu01TEYUVZIFRWQkXSo2a1c0RZsxR5U0MnklREMVdwXFMFgUUFQzbLwFZrcDNEQjSRIkSNISSxokQFomRFUyRoQTTREiXRkkc1.0TiojLBAmUvkEVQUyJj0TU4bUXtrFR0cGYEQTRZMiRushTMIENwIVSEMlQVE2QOwVTWsxT0DELzrVRqf1aWITdyglZjgkSxAESQcDQHUSYBgENsQEN1Tka2YFTzQCdBAiX1HyazTTTWEiMkYEdqDjY0bjaznULVIjZscVVqcjQnYGNvgELIoEYzr1XswTbqn0PmojMTMiPukWNx7TQyHWMmUEdWQSbNk0cyckasETTzbCRWAWN4IUMqkWZyk2UjAmQ3rVcTc1YzQTPMsTV34FLy4hd0Eka1LWbzrxZo4TLBAEVEI2Ptb0MEsTVOESYGQlbrcEZFYkLz.2PBAGZz3jK001ZZc2cukiM00TSy.ycXEjMPoVclIUXogVLC4jc0PVUyQzLv4zYvXmQ3n2YooldRczThkTYnEkRDMUZMUDdLc0RyYVVB4BNHYlLQMmTyrVSyA2c2w1SVEGdSQVNsUjSyIUc4LFMJQCRz0zRmMmVvX2XNolVxnGUUclQwIWPRYiTrcURPUWRz.0U5YzTxwVduo1cvoUPjUFLLkmcTYlVxXjQvcERKcGZYY0b1bkdYIyTyo2UyXybIITQTECZVITUOcCTyrRRHQ2cnYTXAclTyQFQvkGcVUyXXM1PiETRw4DV13TR1HzQhcibmkSQUcVTAgyRlgTaIwDRMQiXzbEUnUjYxfVdMkETAcjVhcWYUojZSUiVw3VRzgVPUglSBcTSYkUcqfVbTISSyoEbBslV4gTaLkjYWEiUwjiKOYDRAYFTqDlL4XTbNcmdIIiXHMmct7DUqLkaKYibBslVyM2ZhoFZAMWUKg1LxLia2o1ZI0lVGsRRjk1PKcDTtglZicWZA41LqfGYhQ0M4TCdqUSXuQ1UTEzaY0TNB0jZIQCMgMTSwnFRpQFSoEURJoDayMCZkomRqT1JwshX0gDRHU0MvwTbBMWdVQiTwY0J4jyMzT2LWgWVDoUSt4xPKg0TLEzY24jTtjiUJQiPVklX3P1L1PWLOUSUD4TUEI0QtY1XyP2MGgjbzf0SJsVQs8jTxfzXhkGLK41T0gETRgka0XCYsYTMmcVUwPmXkQzLtPTUj4xLpMzTIEDdiM1RoUWc0gTLkMGLLAmbFEzQVoEbYMTTwPzcZkESqDETMUSdUgmVogzPCshKYoWUwfSQ5ETRvDSaQAmSBUGRsAGQPgVRRAkQIMkZMQSPJMEaCsjPxoTXvQFSzT1QtvzYxfiPjoDdLMTbiQ2ZNU0LvHFLTgyMIUjRhwDRAkVRnEDZtMiKOkDQ3sVZ3fWPBcyXUECR0M2QOEyJqjjYskWdBI1LXMzPTEWX3gEUHIiSjEzPjk0T1UVTwY0T0MEbT4Dd2gFMUQ2ZHckbqoUN3YTNX0Fb1UiLyQ0UngiR04DZ2fCUTASbhkFNjYGTtrhQ4DUUtjjdqHWcyYWZFgiTh4RPvMkdoYWaMk0MzMjVHMVNjgERPYjVMshLJIGTvnUPGciRx.ybCsVMxIiUKAWblQ1XpsBSrgVPyTkKIkzQFcjXik2azMWbOgSYgMTZncmMFQ2Sok2cvMTYmE1R3TWSk4jMPE1M0P0RMETSDYDTFUDd0HDT1XDcHk2bDUDMiQCaOQGZrUkLtkjV0zTYyMDLIo2UCckSKYSROsDTUkTQAEWTHUzXsMEMEgTdnQ1ZGclKuoDbxfWZrYFM58FTHEla1MFaw4jPUgGco8zYhwTVAIDb08lVgMjQOcSbQQkakITNUojS5U0LDoDc4DDRkAWUyvjTwYGS2cjXLo0UKwTV2cFMzb2TqHESoUlPhYDbUkzSKEDUBQFVJEUc2YyXKczJm0DcDoFRgQETsMEUwEDctcURtXTYUEiRHUUZ1ciKPU2J4MURT0FVtHyaUo0S1fFaDgFcwj0MOk0JwPGdxMmV5YFMmQSbtLGcuQyQpYSTxoVNmcicF8VTr8jYwcCd3ciM4I0MI4xQiY1SngTMJYjLU0lSTAEMXUTUsYCbjEzRybyJYYSRwj1bkcTZwUVQTQCbKg2Psg1PQ4hLHUjKZg0cAgUbvXCT4kCUxcjbCQ1LQkFTwXVV20jMqklbYQESVUVNGAEaNsBaAYUXvsRNybTcBQkcOgUPQIGLzTyXiIkchMmPwXVT4LyQp8DY33lZQAUU4kCVNYGdgckMrEVamkjanIkbM4xY2QUXII1X2nVM2vlQGQGSmMjXJkTay.2cqrBbtoELm0VPEYkYwf0MuIVSVgCVMQFLvMTXz4FYvnmXiMSUqgEZu4jR0zzLHYCdUgWZwE2aq.mQwnDR58lVPcFVnYCUIEzaEkjQMU1MvQVL1XCR2cySocURyUWcyU0aAMWc2E0bFcDcqgyXKsxUywVT581XnozRW4Bb2L1R0EGTII0QMAkTmw1XTgyRJIlKyY2PjgSLNcFLUkWcn4xQyDmR3cmPykmM2UFaLgFLtv1ROE0cyn1L1HERpglKqrjaQAWMPkDNiMSUvsDdjIVZyTWb2DSbiMmR2DmP5wTc0r1S0YDYJQSTwoGYs0VNtUzLsYTRYY2TqUDTC0ldHQCZr8FY1M1UZg0QKQUPxnzPhcDYtwFUU4DLZkFNWwjbisTVKMEbKMkPyUlVNEGdUwzbjg1X0bTbL4zaFEmR5EFQ3fCZOIzJgM2M0DmS4XWXSQCatL2brIGSZ0TUYElLvEmM2DSb1QVZzLSbQMWUW01cNkiV37FLCkzcYQzLFElZ0kjKYMiPDoGLxvDRFYUM1XCbNUUa5cyblA0ZFcDSSU2QYYFSRkSdzTjMiUjKtQybRQlVzDWYNQ0ZRUUdjMELIcjTM01YJAWb4ESUxslaqcWVWomTKoGa1DWaJUjdrsRMSIld4gCNWMUTvk2QLkUVAUGd4wlTFgVdugDRskGVzTTRvg0TCg1Ql8lc0XCa5oWUuQEaPUEchgEbvMUZnYiPyPVQFQyMscmTgYWRXshKFUkXV0FcNwlMwjWMikSXLQUU4gid2fDdxImdxTmMSUlKyIkQJAGYgUCUugTRxXjPKs1YGMSZxHVSTI0QSUiQzcVNBMlbtcVSI4TZK4BdLsFMkciXuMTZPYWXuEUZNc2UtTiLNkmL2P1Xtg2XvkmZwjGYTMUQHomLREDR2YmTS41UxIzYzbGMkkSXZEWUYYySyUmZGIlatESanMUXxQkVDIWQzMmcws1aKIGT38FN5ISQ0UDNlM1UwnDQvgEVzYWdiEET23lKDcTdxjkdOUDdqPGbVwTZvrhLF4lPqTGdzf2LiIjUhEzLy0TaukzM3kmZQgzJPUmMyHiSqjkdWAmdY8TVWASQt3FVjoVTCQDYyjzQ0MjSiUicvEWTyXyQngjZpMzPyMSMBUGUXETdAkCVwozZzIzJ0fzXw4zU1DUXPk2cEYFcrwTYscEbnUSbj0DaGQiTsYyLWcSMxkUX5oTb5kiL0X2bhwValY2RsgFUz4lKMMjb4LlPyYkUz0TbIUjSho1LtsBR5UjU0nTdUoUX0QyaRUjSxHGNLEGQ3P2ZyUTRlMGcsQWPsMEZzUELXwFURgTRPIGbIkCVzPWTywlZzvVZMIiL3jyR3rDM0zzPMg0SukkLWgGQPEyYZQ1LGkDSRcEMyIUXHAyXzYSR1kkUKwjKuUUbsA2Sw4VX4EEN0EETXEycUAkTtwzYkczSgEDRIASNx3lUxkzUvH0cToWXVAkdzUGa0D2YjclcXQ0XWshTzMjRUojMpcFaAcWNwkkU4cSYvbDT2IDYYETXlgCTvQjb5YlRQEyLyXybMYFVJgTS3L0Y3TmLnsFY0jSMqACTqUyZl0FU0YzLR0jd2nzUu0TMwM1J3giQjczYPkDcvEjR5UTRzY0SlsRZ03FMt31cWYlTrMjTvgWQRoTLgUycqXlUtDSUi4xXQkUaY4VSZkiTpYTLrMSdF0zU1nTbmcmTDETdWU2Y4j2aXgERkkjXYIictXjST41UDImTBkSS5QUV2o2btPGL3sjMi8lbio1MRMVTJoVUgQzY3QlYJAiVDA0alUTUicWT5MUNuMUXRMkZOk1bAkVYwf1YK01TmIDLjsRUMkVZ2jyJxnFSykjSFoEdW81L0H0JC81ZiUlT0wFUvnWUwECLkEzaoYDbgcCTrAmPhgib1YmT3Q1TDgDSCAUVxL1UTEVdMQybZMGURUkTzPDULwzMOEmM2b1TiklavASQ3DELxTkYzHiVSkmKw7TL1PzU2kGRNU0YyY2TSc2YC4hc4UEZKEkb14lcFwVL3fkcW4BLLszQ2.SayImQYwlPMgyXLEFZiojXwMWLvLWamYWMiQzUyDzXyUlZwcma1jSXYsTaw8FUhQ2X4sjPBACMsQSUxfFNVomdLQ1JhcGSHMzY0cTaG0TdDIySxHmVCclSUUlbyvFM3YFU0HjSkYyZXMVVtEUbzQWLOYCaVImTNYyPDYFLFYmK3HzcZQTLlcCSYQkalYUQxHFSr81RsIWYyETMFY1UE8FLnYDc47TaJ8DMCc2TVMkSusldTA0U0cSSMQWZhMkawkjLMsRXHMSZYcWQ3f1MEAWV33TdDUFTIQDQOkma3MmLvMjKv0DMQo1TFwDN4UFSygVayD2MxjUS2QCSLkVUQYGYpg0M5Uiaw.SSGMWQybSchICV0QGZnMWapozRwUEapc2cuk2ZTITMUIVM0IVQuslVqfFS1IlMx.yTgMTQ4IySkU0UT8zPGMCViQ2XTo2MPQzQOQSatXTckUWTXMVRJsVMrQSUWUzawU0SzQCZFkUMpU0SCkWdTYUMicGbtkmVwI2X4gFUyEWQqnlZF8VTw0DM4kVStj2TtEyQNshPRY1aUUUPtEjXUUFcNYkKyMzatHTR1U2LDYTLkAEbnU0LNUCS0gWYEMiUpUkSSglQEUGVkoGN3zVaRkGayo0aQkzSno0RtzDLwASTEMUbHIkQigSVFMiMLIUSpASQrwzcjEyT2shazDjdCEUMpgFRXIFb5QiR2bGVyAEawLWNUYzJk0FZQEEcvUkbscWPWMlchMFNrY2aKcVULMiaoA0cn0TQX0TX1fDbxDVSZYVURIDak4VbVkUNPcVVgwTPgQjT4zjPtcEZqPTXBkycZcyLRcGYznmUvjlRIozc5ICQOIkQ2PUQzY0UmQkaXEFN0Qld0Ymd5slRtHkVEIzTP0lTwjGUNkkSTMTPKMTQkYyboI1R4gDcxHTa4cyQ2bCQI4hYzUzQh4zJFcVYtMGLZYURUQCL5ECUkkCQmUDSBoULqjDTyTEUjEFUgkzUJozctfiSRYzUjIUVmIUNtj0LrwFZlYkaKYWRTAyRscDbAAUS4YCbNIyQwvDNEMzPyT0ZQcEMLQWZUsFUqjFVtnDUjkEUYUCZNUyLzckS2oEcJo2cEozTvYlRYAkRFgzXEEiatElVwP1csgjQrgGZME0T1QiYVMFaMQzZ44FS0.GSjIjQ4Xzb0nzbL0TdicET3HyRpASc1MlcpkERLI2UyI1T4nDNPUmLy4TRTYTbUsRRlQFYm81XIcSdJcFRpMTSqjFRxoFNF0FauMmUtHTSxoUY0YjY1bFVFgiSp01PzgSZpwlSqcza5gDVs8FSFYycwDFb3cFZtYmSDklYFQSNJkjTn0jYAgFdgA2Q0.yXHAkYzQkLLkDT5klVFcFcFEUPyP0chg0JW8lRQMFaxPTaX0TM2I2brckcpE0JzfCYPA0RGMmQybzLtgjYPYULNYELjsDZwkiY3UGSTMmTFUGMt4BVN8lVMozPkgWZsU1TOIETzPCMPkEYNIWMvXTUOAyXms1JIgiUws1LSsBRr4xbBQSX2cEMx7VaBQkchgSTBkCSxYTPXYGSz7TXwojUicVSh0zbMITM4cCUMYGc47zPhQiSJMjZD4hU3rjSKcCV1UyQJMGUEIkd3vjYnIGcLYjcVE2Jo4Bbw3zMynlb3j2PwnUMOk0JwIWRig0XjkkM2ciUgQSczXTM4fjKSMWVngjY0rzT5wFTm8TRx7zcgkEciwldCo2YBsjMrU0ZhQVXx0zc1TSc4nzU0fWPzXzXMckagMzQvomM1sRNwQEcpMULtUEbmMlSyU2Q5E1cnc2Pn4RSRQyY4jiUEUibZU0PtbUNVkyT2HyRNcmTsoEa3L1cQEyQKIFZ0oDctsDSwojKTEVMzQmaTokQWUWVFEzPSAmbNEkPVokYIshXx4VXSwVYwAyYUQjcvEEZ2TCdSMyXuEiPK4lSWUjTgU2SiQUS2ASVDUDcJ8TLjkiS0MiVqsFduwTSwASdIQFU5kWcPI2bHo1axElVikTctgia3HTZ1MiTvLlcq0lcIQkVgk2ZJ4jTZEkTtTzYsYCUkgTT1L1PRoGU0rTUmUjK3sFVxM2SpkkMGY0MvIVaLs1bmkjaQUjK4bUNAQCLxHjT2vFcRcyPzHUXR0jYBAEUqT1ZYEWZ1MjcooTYwIVV2b1XxfTMy3BbxLGdWcFLToVYrgFToYjQyzFcPsTMgQ2Py0FZi8FMFQmPisTQFAWaKgGMpgUMvPWNyYTTiICTJgCQwICY1X2SRYVSxojT3.USuYkKFYjRJAkT38TPUMjRvjCYTkkVrMyXMoWbvDmQwkyX4DTaY4TLrYTMRUSdBUkdKETXloFSS8VcnkzRt4hUwb2LJgTdJQlTQUCMykjMzbDTkUUNMYlbzPlahUEcE4TR0wVXyg2YmY1QqAkaF4hYnUjQKszJyfESvLzPpMSbyrVTlQ1ZGo0YqYTMnYmLpkmaMoVctjVb5kjSKYjdicWUIIkQZ4zbjcSSyYTYyYCVxoTVBIVZtvTTk8TN4g0QhsBVAU1aHQzZEI2a5MCM30TRM4lPqglVMIGSvb1P1ozSkojQJYDYIIERlAGbhMCR1QUZKcCSEgicDQ1UxzDd1UURTkibKomSWwzPZokZkAiUBAWXvjWY4cmTwYURtHCc0rzXrQEZpkmXvIDL0rlcQo2MXIUPyojUtHSXDYzMCgSbVkyXDI0TXU0TpoTUvLVMHUGazL2Z2QWN2EiKNcicncSMYYiXFcSYLIVT4DEY4AyMGYUbXUyaDQFcvolbqjCU2LiZkIyMYMTS4gzU2nVR4MDb3njTuYCNwzTQZUlK2TkZvX2JAQlRvDyPiQEYsgjLG8lUwbmK5omP1cTPO4FR4gjRXE0MlQTP0cCNwMiZhISdmQUdSICNMYEc0UEYNoWSjASZ2DULwIWYUQWQroTZUUiYwMjdRcUdCEkKqjDLjoUUB8TUBozSBkENA4BcOIUT33Vb0P1JPM2Jzf0LgslKyUyZqwzQqokP0fiQQ4hY3PSPAElVyrhRhYkaFcjKUMVdW4Fd5YTLwTWMxU1LZ4xavUEdvQCNlgWTtUVLyXWa4YzLKMkbTElamkDc0U0bnEiV4wTcIkUPZkWQWQTLY8jKsgTV1jmdZ4RaqUDc0flYsQyMGcmSgQERw7DRlUEcDI1MtsRSEslM2AyJFImbNUUblIEVZIUboIDU0LEM0nlUtDTNsgWP1XVak4DaBczbT4TLjgCZjgCd4QCYpoVVQc1cMIEMiQiUSIyMGAiKCc0YGkkMjwFSvT0YQoGaw4RQAAUd2X0YFI0Tvo1MvfGRJgjThUGaD0jcJYSYWAyLt0FSgMkP3LWYYcTZ1YzQgszcoIiRJ4lMhQGUp0VYLYGUi01TDkjLnUkPW4BdWEyM3cSYTUUbGg0XqLVaLUVZFcSVtkmavjEb33lSlc1Z2TUNHUzUjYSXKEyamk1ctPDaNkiUtQkTyUmTxjkcqHlPyTSZLUWRMQSUKUGZVYSNxACZAYmL2HjP0kCYNYFSTgDdAc2MIgjb3sVYPI0MP41T3cVZQESbvQFc1TjPy4jb5wTQhEmagI0ShkELGQTUtEidQYzbvI1XiYiRZgjRwLzSyMGSqP0ajQkRUgVVFglYq0DbYIDMKk2SOUCaYgjSOgDZLQCdnAmbv.0S1DmVqEjXZQ2LVEzLhw1cZcyM1HScmIUNSYEV5gUcxoFaNEGQUYTNlcFY44hRGMmP2UTbuAyPJo2TIM0bv4TaEUiTycUNPcCS3PULBIDaAESTggELyEjXXomKCYWTD8FQrQCYLAkQD4RVU4xRtUUVGMWcPklR3fTYj0jUXcFR0DVUxPVLwbTTyLldicVUOsjTtXiQ0jFLJY2L1Dkb4A2SzjGSloFTjEGbJ8lXt3BYJE2JOMidIo0LUomLwrFYv3zcLMCTLEEU1HSXYcWVAASPocVLqMFL1rDY431MtTkKxEDR0w1Lrc0ZDA0SzPjdzEEYogTVBEmbxUiTtoUSOESU1nmPtQkUGQFUnwzPOMCaP4DY47FSvjUMNo1TjMFVMwTX1cldtLmdyPTZxUjdRglP1P2Z3cjVSAyaogFROY0MCkGSZM0UPAyM2DlRIEyRKIEYtL0QoMlK0ASQyYCRMEjboMDMoUUM1kTb3ISaXokZ43TRGIVUHIiXg4hUuUTNgwDT2bkMmkVTy4zYXoDaTQDSA4lX1DFNVQmU0Y2YmAkVN4lRmgiTQUSTZoTUDkzcDUGQkkjVXMFLG0jTmkjcyL0c0YzLSEjayn0MMEyXLYCQYslSLg2asYjclMWYPgGNlcUczgzXkgmZI8DLRsxbA4jcQk1XHAmYyrjTWwTLZYkaGgCY3nTVSkiaDYGb04zLDMSSlolXHslLjwVLkUFdKgjMPIGLSwDcKckSVkmM5IjPWclLpYTNJgmYBoVNo4BUqrxbQwlShETPjkTNvfDTug0QiEWMUUWLxHDZKYlQ4ozRvsxLFUSQ3M2LigEYzLkat4hPRokdDYkRooWa2LWXKMVSGcmRJUCLQsjdZYVQtEFZ1PkYzQkZpMSRkAScRgVRSMyTJEyYAYGMxj2akMidMwFVDYSPpcVdOMCMvI1R0bmPMkyLjYkPpk0UQ8lZzbFSnoUSLYFNQU1PNcTbxXWU0wjYP4VQzAiUDMGaLQTdsgCapgDTUIlUwXWd3UCSzHmXgIGbqoDNgQidAQGTvEGVhQjchgTYz0TbmYVUM0jUhQVUnclUnUzaT4jZsUEUzgCc3sTN1nVQVMjYL4VVSIDTmETUEMmSrU1YvEFaNcWVGUkTj4xY1IGTlkCQhkGahw1JrcUUTozZII1UtDFaAAEatoVRVIESqDjdYQiSSc0JvUlPHkDU0vTVBcEbDMEbHQmXqgDQ2YDU3UGbiMFUqnVSFoEU58FND0jarQ2U4nUNDUTdUIFbzITZwXTUxPiPuAkUYMUXQ4VM5o0cwb2TOEzZ2fTctvDT0HmLEcFcOc0QQgVUSkGbYI0PAQFMVkjcLAiayjyPxYSTX0VRyn1Uv0lLT8FZyMSPpg2a2j2c2D2Sww1RqPVZJ8FcMgVRBkUYOQ1cigWXo4jSzglZq3DNGgFaY0Td2QCSWEDaLAGN1H0ZXszSLE0bFglLz31Sy7jYG0jT4njPwY0UyX2ZzEkUlkFYoYkZwsTNgckStIkQWU1UrEyL0DlcoQCYXI1RUcjaGYUQCU2UGcCStPEbGESLzTzRyTiKX0TTqLmV0zVYLQGTEIEd2rRQyojb0ECLtIlVYUWQUITd4nGSpkyU0HlU08lYOclZiECTn8FUGUVYynzSEQ2bWcTLi8VL4D2U4DzcKE1QuIGV0oWXVM2Y2XDVZsxL4TSS2HDLTICYYACNH0FbvMSNzkWagsTRBImPpkFblYSM2IzPWYmcAITR1TCM2PzPv3BS0c2UwAkanoTNk0jRVcWaPQ2LyQzUxsxaxDjS2kkQzHDcgIDSXkCSDgWazoTU5gzUCIkSMIFbBgVUxrhPTgCb2PiTpkjQvU2ZkQSN3slVEoUMwLFc4gSNuQ2cX4DZjokdzDEbzclQ18jUzomczTUXgs1RKoWTwETawD1LUc2cmIEbtHTbroVNuQiQoo2RW0jU1UUXkQCYBI2SkQkaBAmTA0lPyf2UjshZWMUbG4Vb2fEdn8TaIEUcXE1RwglPvEkYQEkLYQWcHsFaDEWTIslcxUFLFkzc2cVLtElTEojRTUFQrsTLUk0cEgjLNESbFwDVnECZBMjTyLyYQMmaXg2cqTGMPUUYwjkUUUkVyETYgkWbFMkdPIzY1o0avcWQ3sDZR4zM1DEaXEjK0HSZvcFaqgyMznzUJUzTHIVPUgjPyAkSHMCdj4VV3LFSScTQqLTL241X0MWR4rBLrUjPwLjXMU2TmgSdWcmP2DCdWAkKjYFZLAkQGUDNOQGSLECSYMkczbFLlUlSOgDQpASZMMkLvo2JMcid0IidKIFcDUmPDgDNLYmYK0lVOkGS2nkdqEVNwUkMWUEUyzzY3LyPUc2cvcWbtUzaXImMRsRd0cyTqX0LlQSNQE2TqI1UX0VQ4HDcuI2L2fURvYESm8TazMVaMUWMgkDYg8DQAMybMcFbQU2U2XGYCY0ZGQDSM0lVkESTJojdOshK3wFYv7DRJ0zP1sjctTlM3rRPJ0DMqYWdJ0FVEMTb0cTb3cFTMUFMyDCSUkCUlwTQNgEcxYVSCMmKQQWY0Uma0rzc3ACSrgzMxbCbUE1XiMmMvQzTYszMHgTMugFMRgDQloUVTYWV5QjMAc2SscESwQyU5UWMy4hMGEyTzTEdGUEY3rFZvkiUqLCcBAiQxI1c1XEdvYFVRUGcvMjZBQ1bn4VVv0FZWcWNyjDZ13zbP4FVY8TLrgkPHEEdUQmQp4lRyDTNxPGV2EmcQYDdNI1b3IEavQlKPUDZvEWdLIGZMwDT2gGd1LkYpAEMyEmR5wDSZg2U541Z0AWYyoTZqXEcnUzc0gVYjcVMyIFVPMyUP0VdIYGNLUWS1AyZ5Y1XP0VdqfCdLkGLxUGN0sxUGYDQV8zJwL2bjkkaxMWNjY2aFY2YHETPO8zUz0FV0QlcIs1XtzzZ4DGZPMUa1z1X14zQrkkLNEjLyDVNtYmVxLzRzkmdxIVYvEkbqjiPmwjPpMEahEFdgQzPwoEbrgzc4MUSHgTPtnlMyYjZzASdtX0MtkmUj0zRQ0TNoMiLlQDcUUTP3zjTDQlRjk2QEQ2PrslZkoDViACQyYWTiI1MH4hMQAEZ1ESZsESbJ0zYgo0L0DzLwIid2v1bzM2LnETS1XiYHQiak01c3ciRhcTXQoDL4TzJy41U4LUSLUmUx3DM28TNKQSZsQSV3U0aigWPjglTAwzUPQyaXIzJIkVMQ8TQQk2cYAkZYUkL5QyYPETSFMEbWMTVJ0TaZkFZyIia0kFR0UTYuEVdUsFbpI2ZgsDcggSbYkFbUAyTTUiXC41cyfjVOkCYXcyPQYSS0oWaT0DQvo1UFcVaUEGTpwzaSYkKTUzXVgUPxkkPq3RSq31Z5QTNJgkQGQVVzfyRnIzY2XkRK81JAwlZ3rxXxcULJQkKwDEaRcSMqEEaXgmZPcmLYcldxQzbjkGc3j2MnsTQxL1JIM0QvwVavQmcLklcvolYDEVSHcCd3I0UT8jaio1bN4jdDIlR2DUbM4TVwYSZyrxZ2U1cngjdIESURoUdlMCU3HySHgEdLM2Y1PidKc0aCslZ4IGZoMFQw8zZWEjTqTFNGg1L0IlZ0PGLIgTdtMGN3f2PPEGckYGLicUVUgTVyslX2QDLzP0TzQzRpYVXJolZScTd4gEbmclQxoTaAQFMLIjZIsBTQYzXAIFaig0SJMkbvMmdvYiVVQzYAE0ZVMDaAglYXUTZpUEcko2ay3VYzLVSxrRbOIjaqgEaYsTcJcGLhgyaPQjK4nzSoc2USoGLZshKPkSTyjmbtXkM5YWXswlQikFYwPTNoE1XzrxbVgmLWEjTTIVQPEmKxAiZKM0YgczJybTa1kkYuUzXybVLZoTNFIiXjU1XrMyLlMGSOYyPUYyQD8laxDlSC8zThACLZgSYPkEQ1XzTLA2cTIDLXoGTKYSTrgyYksVMjoDSR0TcZYlZ4kVaik2cqg0SM0zXsQFVwD0buc1R44TYC81Z2jyUVEkPVESMFESdIMlZwgGSi4TUhIkbDUkbiU0Py4Dbx.mSVQySIgkRQYiYz7zRskWa0.yLGw1UicVUOU1MuMDVyDjXOYTYqMScnIiMqEkXHkyZRglbAclUjI2PH8TLhYFLIIUQxflLYUSYEQGSjokQMoUaxYyXjIlKDkjTZgETtwzc0HUP2YFS4DFZF4jTxrlPgMjQIIybBUDMwLUazIUbI8lXy4TQv0VP2Ujd0nkK0MVVrg2MQ8lPkcTMYU0bIMDRRISZtsDQybjR4kTU4r1S1g1atMGdMwFN1IiVYoEMFUTaiETLwnVUh4FNCIVSPUlTjcmdAQSYDoTN0nDbEElRzUmLH4xZqwTLHEkXrQzSy3lP0gmSVITSpoGYp8FTPcSLl8VUpQWL1USc4DEL0X1MI8jR1c1ZwnUQ1YDNzTFYt.SPlUVND0VRzrRavjEMjQCatPUdyXGRNE1YUYDaVoTby4jcwDTcvLVaBoTNH01JN0DNZMFMUQCTSoURyQVYSwjVNk0ZkgTUjUCS0MkSGAGSjclTNQ0QycDcp4TTY0DdZY0bxTUbN4FNkYGRVECVynVQ2IFVMMVPwcSMFE0SNokM08zSnMTQiU1PCQTPx4BR1nTMDEiShsVdtTTQ0jUZyDSVzLFRwEmTFMVbFESQT4VbiMkR1DTRkkidXQiZWgVUyPlMyshcxImUrslQ4o2ZW0DZxECdtTSb00VdX0TL4nmVusTamcCL3nTNn0TMxbEaqXVVyoUYA8VYqjFSzjjat7lRIYiP0UVVLcSTmUkLpMVbtQEV4omSH0Fd4j1Uwj0cvMicpolXg4VMpUVcSQGbII1R371UjAWUy4xLz4hYFUWNWI2SQkiZ2PzUkcTNvjGSz.0TME0c1olVSgyLo8FbjUka1fUPCcFbzDmTZEkd0AUXkQmRlwFTW4TaZEEYXImKHUDYxICRWo2S17FLCk2Rzs1LVgGU58VZqDlcoc1Jsg0POg2aZoVVPAEa3fVLIo0RjIlPDE2PNcSNvMDMqUSM4HDMigFS2HTNPIkMW4xJMYCQqUlKtslQK0VMFEDcwHVdGEWVqDFc3HmdQQmT4X1P1XUao01TxjkSxgSSYElYwPTUy0ldRQTYAYSMqnmU1oEMmkGayDSP0A2M2LUcTshLoshU4jDSHcUbDMmXGYUYv3RNlYSQmMEdyXVcjQSLvj1RLM1XnEVaVYSPCElVyPFYwr1RsMmM2.GaDk2SwLCVjAiQ0.2QtQCZ3M0R4PmRgoFZn4zQwLlSo0DUSoDYuEyRQI1YrYzXUgFUVEzbsgjazEkXwgzUC8zLybiV24VN2ImQTMjQwf2b4EGQyImLtEFT04RM2MDa0jTY04TTpU1aqEmLokWcFcDNVkjSBUlc3LGNq3hXSkkSybkKVA2YiQGa4UGTKkmTnwjQxb2QCsDRVQkPxnUTWUyMn41MOcVdVEWPTgUQTYFTyYkUqE0UUQELH0VQiEFRnUFR4shLLMyP2cVPKISN1HlKUsDTg0jKCAWQjEmZzHlb0DyaFwlVyIySHsxYkEUZEkGMkwlV4Q2M2TCcqfSL23VX1vjQVoTN0kCdociSJckM0.CLDwFb07lLlUiVxDWdnIlUx0zb0IWawklQMUyTqDVaCA0bi0TcQcURFw1PLUmUgglUkkWXRAmLtD0MvMiTjYzZDMzJ0bzQrEWSzQkMNk1ShY2MX8FLhYGYlIWNMESM4DjY1IEMSQldtgjX3sFZv7jVJwTY2bVdF4xansRVvUGVTMlK3kjPK4RTq7zQrMTUHgmQrY0JoESdrwFaqMELCUEcxMEanIEMTkGZt.yRvk0R2HSRTUFaw41bzEVZWgiKucVbPYCQJsjXvczaHQCZqnTNI0VbGMCLS0jMvEkXzHDVU8lYJQiY14jRuQ2MNgkdnc2UzIzavrzS0fTSxEUVDgGc4LTQPgWYKgSRvIlS4HCNpgldYEzJqUmaJo0JpUESKcST0IyTuM0U0kFZtMCSlgTaJckKLcGSrEFYNYFajckVhM2XjgVanoVTs8DT4zlXnYFT0YSV3TTUGElcT0DLNQ2XQUkaqjFdDoTQJU1UX0VarMmLFcEd2fiapElLxkkX1cWS4ETShszLlA2Z3nVLL8FROckLDIzYKUCbRcVZ4E2TrUTMxE2JXEiVpcFVYIEVvrjb2LGd4ACTHUTLG41Mz.GQIMFLnQCYVEUY3oTbwXEdAIWMzkEYggSSpkzbqwTN3gGS1gGatgSNxwlbjkkLvoWYzX0LVQ1Jp4la2cGZq.0QPcDa4wTZuYmQFUGaLM2SOEyR1kmbRsjLvY1bwMkKwb1SxUiUHQ0LrcEbRUiQ041SBQ0alsRU03lUNIDLkUEVTY1JXIyaxQVZnQDYnwFS3DkYzXTc2n0U2rTauwDbBEVQsozcPAUctXGLTQzMWgyZPUkL5cjKpAidq3xbhomX3j1MrI1MCgyavkDQygVa2gyTrE1YZ8TQtLmUxkDY4EmTybTLuI2LQUiMA8TURomQSgUUUoFdYUGVj81RxIzXsUlbOomagc2UDQCcwYVatH1aNcDYgwDYzjWaHo0L20zbxDDV1MWLiwjYGs1RO8lKqPFMIYETqgCUTwTdSAib0cWc24VbE4RYugyMkY1S2cSarElbMU0M5wVV1PSa4oWYmkyRnUjKvcEVLYVdGAiRKYiZGMCQ47jb2LFZvXVXLgkPYszJzIyLtj1ULwVLX4jTsUGdCQkPQozU03zbUMyXl0FV3wlZIMkXskTNO0FS0TUX2TGaFcVcyflYsYCQgw1XuQzQ3DGNlYCRrcjY48zYvYWZ1LkTG4hVwYDUrY0MsMycScybzj1Y4DyajMzTtfVTXMWN20VT37lbwkWX1XjXnoDNjg0bvfSPyjjYtACb3MEMvHmXhg1YyQiUGQ1cr0lTFszLtHzQ0j1SlI0SNIlXvPyM3Q1MVECL3bjZ2EyLWA2TJszaJ4VMKsRRoEia5cGVQQSQF4xQSEkczPES5cGUwsjYHwjZvYjYGgSXmsxQ4TSXCUlZigVN4E0JxgGLDg1J0nmatA2aEQEVuAkU1kENQoFRroTV2gkKJU1JvEEaRAmPOAWPWkFZy4jVCEldR8jQtDFZG41ZXIjRyzVXrYiKpMCR2HjMgM1YWUkUOo2UkMlPOMEZPITbiMWRTczLLgDRtHWdCIUc4LWXHAWM13FV2oTR2DUQvIkUJckV2MyXyblaZAyRyvlXvLDUkkDbTYyLC8FMIckMXUUNDEUZzUmXNgFVNsxQ0cEYqLWL4LiT1IlalUUZmoWSYgVZB8lLKoFSHsFRxTkYxcFVx4FNkg1LWY1ZkgCMMk1T0bFYykmLXI1YkUERDIkLzPzTvjjMBYFLkg2XvglLmgFUREjLgojXDY1P4TFY38lc0bWLYczMCEDNNMiYRUlVgMEQKUWQxPSMrgDUPQlSyHjS1.2J54DaqXWbuYiMEUCYUkGMTUCTu4FUSMiX3jjc1Tia4bkak0TQBwVbIAyTYMCLDMDd5UWVqMjQFM2SzLVTzgVV0TDUwQWaWkzTzsVdAMkUnoGUmQ1UxHmcUcSXpQ1SLUCTzQSQ0DjPvEVU0E0QXMSUPMid2P2RwUDaTAyaqkWQEMmYDglbOU0RQQEcvAkSnMkMNEmSZc2MyjUM4cWT4M1JDMVYCMiSyElcDYWUAwDZ0QTTxMCN2ECdIUmTxLVNFkmUtbmQJgiUEM1ZBUmSKoFLZMCLHEVVWwzRMgmVScDRqfjTvTGLvgjaUczQoIGbQo0alYCa3oFYpQESRUzcGQWS5IFTRISU1cyaqH2TZQTQJcWZtQTdU8VQJwTTFgGQzXERFYzXnoELznVd3TSQHg0MxfUNKwFNLMVR4sVSDMyMxz1b30VLCESUXgENwTSaiM1LPECR44BTQIVSwnWPT81aiQiUPkiVEIkP1Y1T4YiMFomUsc2ZOITTMMlLY4lKMgCTUUiZsQDczgyUlgFamMmKgIWQlojdtYlbjkkbQYyPOkzU33BLVA2PHk2aJQVPv.WU0UGNIAkP5QlUFczcvHmdyA2RGEmPCojM5k2PmAWTzLjLOAUU3XVdvMiUrc1cZ0zQuUyQSgUckk2PYEiUwLSVHQCTjAGdiQ0ciAUQoIVXEcDb0IEU0PjY3nmQBY2S1XVYYUkMSc1RCkmY0.kdL4xStQTVI81UxYicJsVaCQUTXUmaSIGMQ41ZwoFQ3rTdxXUSGolKM8VSXQjVT8FaZ8TRTwzUzIiRs8lLAsjU0TGctIEY1kVQz31cUAGbvIVaVwVaQ01cqLjMpgFdusDL3bDMtE2cU4RL5MDVkM2LosTaQYiTzglYY01JgU1ZyHGYxXkL3E0JjAkbOkWTycEdnkmSUYyJMcmMGQ1RlMzZw4jM0jTdV4TRXASamEESGkELPEDMLoVd4TkMqLCakcGb3zDTMgiUGgiPhoDNGozZ5gFdLgDd1Y0SxbTMKUickEjdHAGZpkSYNY0JmQyQFcEL5cUZHolRuACVrMDN0IGbHIiRK41cwMyMB0VS3DyczIVcJIFdxAENzXlLMU1ZLYEZz7FVhIzPnQ1LZ0jVQwDN4DTT4zjTWMiaXEkR04BRhcVaKgkKLEmTUAGMQwVVtQiUIUSVhImVzoGcs0TYsoETL81cjMUXTMUVigkbzo2Xk4lcOAkUrAiPCwzU2glbXgEZAgEL1ckUqUCN4M2LJMzMO4Baso1Zt4VRJAkSLMkYL8FVqbzZxjDRwUTXycWNMQGN0.SRto2P1I0QrUFLtHVd3LlZ1kSRi8jXvHUUHY1MFokUqk2c2gGMyjUbOE2JRsBT3jkUY0TaVMDMt71cUETQ0LkPAIWTNMyQn8zSvQFaDcCNIsxRLMiZ3.mYkElSVUVdxfUazg2QCojSJgGbOICdqTlKv7zJXUSb28DaJgTcN01JSEDcpklYrklTyEibIoGTDQmK5YkXPgVTZ8zP0oVYIUzYqzVdjg1UJwlXMElcMgWXvIFcgUSS2YSdAk1JFQkaxkiPnUUPiE2Q4TkchEWQtLFSUsVLygjRzrlRNIlSJMUZ5kET5wDcIYmVtvlXtTGaW8zYJwlMmkWMU0Fd23RdUEzXzzFcVcVLockb0MyUTY2TYcDZtf2U3QTaxkiSyXSc5E0UjkCc0YmMWEDUXgzPYUFY3X2RxbmQikkaEkVT5ESN58jZzQGZQ4DdybmMSQTY2XlXwoGMC8FQnk2aDgSShA2cwTzMvjVbDI0UlsRZTA0bzj1XgkjTFsRVWEiL5MGLqITcHEzU2IybH0lUBYzRigWbwsRXDgDUsEmYW0lRwcUcwoVNr0lKi01RwACdockTWQSM4fUZkMibzQkTiMjXQs1c2MmT40FZTAiLxgTLPk1Uq4DRYIycGszJQgiPggDc3kSQKokYL4DcXQkQwjkZ5gyUPMjP4QSTKoVM1cmMuQWVXYia3PkPpMUZsoEVtnTSqrxJgsjVwbTcH0jctIWNBYWP0rlSybDLGYESRg0X1MFd0rhdVYSU0vDVvI1PZQGbAAULYIScTITPzX1b4fDMQomTyEWZgA2Q3UyQuwDZugCTp0Fd3QCS2IldockR3UFQVQFMjcEQFITM1old4n0QhIVQHQDRBIGVKMVUmQmdIEGUzHTRycSMPsVYtDGbOcDVkoWSy.CUyTEUDIGM2gFTDMWcqTyM08VX07zc2MmSJozXEcjdogCZqs1U0sTSWASXTc1M2k2cKUjMvPCQCE0THMCa4YEaKkCcxLWaIgVXBYmSYU2cqgDauUkUCUDUsUTPHMyL2AiaJQmK4kyYKUGQQsTPT8DTCI2PpsldFUFZVc1Y1nmaP0FMGgyaCIyUAImZ47lLKEEUnEkRynkUxDTLWIGV3n1QWI2LQkmLgcycsUjYSM2SJMWUHgUMIAiLUAiLUMEUhoTU0bWQ2sFNyDiaToUVlEFb1cSbmslKm0FUvYDVvESYKMDVhUFbp4xZtMUT4zjPgYDQw3TMjAUT3TiQ1Iyb3nDd5c2UDIlUMgybZYiQ0rDaDIVTw8TPxXlKwETSNwTXNY2RisTUTYVYt4FSTglZKMyUtkUc2.EMjcWPGUlYLUlXrQibYUCNxDUaQkCTqjiLNIjZicmT1jGbLYmSREWLwDVTq.yZk0FLB41XzEUMNImdzLWNZ0VLDsVMDc0aXcVMhU1JXYjV3cFdO0lT3gjU1IkRtTUTiQiYzvFRtvlK5AyYsoDZO0FZkE0QvkWT5AyLOEESngCdWIya3UFczkmKLUzPyolYlUkU50jbRQDYtHWbYcVbpwDRXQ0QkkTbxXkQ2DUZBUVXGo0S4fjPTMUN1QVbQUzU4jCMvLWQ2UCZIIlUxPicUAUSsIjSRUldKwjV0HVTUQFT4L0Pq81LBUWaScDRoojcmE2Tv8TYjUDUYYSQHgGcUYSbRklSFI0PwolbzD1ZXYSSksTSsQSdrgSLHwjc1LkS4IkM1A0ZYESL4n1R2HGZmgVNPYTQt0zMQE1Uz4DdLI1YwrRYxvFbw4TNq.kXWU0ZPg2cGUyJXkjdqIWN1n0R2bzYtflRIwTauAEUuMSNtUkPPYDYD4jLAYSMD0lVBEFVxjWQLACbJoFR1UDSpEjZWMWS0QiLQMybgAmaqkSXvYGLRAkT1Y2Z0bCTqYCcVglTJAUcVYCYhMlZSUDapwFblIkY4g1cpMiPJEDZFc0UykSQ1E1SqPDU1TCLqYELxDmcoI0YJgjUwc0TvsVSy7TZBUSU4czPIgSU3TDb4.iPuklKOI2bB0VPhIDbTQSLmISLI4VaEkzTTYSXynEZ5g1PpMibmk0U4TFd2MWS2kCV3LjYLYWP4I2J1USa3kyRhUGLVoWc4HyZQcDa1QUaR0jSBsxRqomTScFYHokbTQjP0Qkc1Pybv8TUvUlKh8jU5o1UwPmSAgldPUTX1MTMBkiXjc2ZtfmbMkGSBQWPhcjV1fCTFgiP4gFZ5c0LpETY0LlUDglKrAkVnklXL4lVGo0X3DTdt8DSvMEMxM1SqP2Ylsza0ciaNc0QZozP37VRVQCNzkWYzwjMS0FYncEckETZ4rhZVUTT5c1SKkEVIUzPkgWbTUjasgEQnUkTJo1LIckZi4DMvfyXTAiKKUDN2s1P1jjXqnUQ5czYAcmQp41blwlbwflc0kCZngWclwldS8VTuIGVvDFdzLlLY4TayLDSDIzbI8Db2XDbycmPEIiTKMlKDg2PgcUNAYFLCwzRRQjdR8zLBYya1YiUm8lKwICcxL2SgMERCQUdAMjRuY2aRYiZh01MocyavEjKgw1ZOI1Jmk2RmIVU2TWNLg1SxgVZFIjbxPlPC0DSLETUi41QKAmQgE0YB01ST8VSU81RtEVbHgVXV0FRnsRNQEFNK8FRgMkV3MTYgcVQGkGS0k2RpgTSAYzQiQyMFYFTTcmd2EyUOQDaoM0a3HETYUDU4gzZAczUEEzPUM1TYkyPxUzPOcDZwEDV17FcX4DLYACQB0VavnjYzjGYgUGRFUDbtIzXrkiTrc2atUGQXMUY3c1MVQTR0H1S5ozM0k2Lv.GNCgSXCgEL5UkZ3LyQusVPmMzbLIlStLVSZQGdLQCZnAyLwcETlU1cZ8DQokVdBwzb2Y1PTYDYAkSVYI2aAQ1TlMkKhMkavQ1J2XTSyQEN4gVSxo0XmEiUBcFZgIkU2kzcmMEbvz1SD0jXVQWUHshUqY2Zv3jaPESRwTibqAEcAkFQrgCZz4hPuMDMpcid0wVZiYWblIUczfidpE1RXgWTKIkLtckS5IEau4FTQkURTQiTNozUNYCQtvFNqfmSrQGNociakU0cC4xXkk1RBAGMlIEUE4BLXckUnMTMGUWUSYGTGwVQtAyUMY0QlQDbPsjRyQ1MPYTTIglUIMiVxYUawDVL3XSPSIVNzDUZz4hZqcFTSoVSwLWYqPmK3QVQvHmawIVaTo0UYkVTHwDLGUCayLja4rhM3fmY1DEUqEVcEYkcvU0L4HDVxQTL4LkYvkSZKEVQNQFZlUUZzLzY0f1YIEVTEkiQwTUdxgGVvHUL2k2atDkd0cGU0kmTSYVc1QGcZ41S0jyYPoDVXcSUXEFUyLmMI4hMvcjQ4QmVJcFbyb0ZoojSC4FL2fUbCs1Qxn0LtcESIMlbDgmYtDkZuolMUMTSX01M2fCNUgjQ1fTQqIjT3TSSyU1UrMUaqEkMWgCdOIEdpEjcxXVVsQDa1ojRz4zXUYTSEEzbqXSb2nkZ1T1ZucSbt0VM4EFRMojUnYSd04xcyHjbIw1TqcTPz41PBcmdwUDSnozRQoVM0bDYXUyJ2njQLU2TnYlZtHDSFk1TyUlUx4xP1cFUBEictsRaIkjUlcWT3oFdi4jLlIDaWgDLA4RUyolVyfmRBIyXlIGQ2TCc3UjZoEkSEgTYiokY2M0J3PWcn01ZPkFQ2E0MjkWbzPzLnEDMxjVd2QiKBAyMlcmQW0VXPMlRXMzSuYiXrYkMhomYwfmUzQGa0glVk8TZXY2L4j0SzPkc2cibtLDbzTCRFIDbSIETp41ZkgSLtbmRngyMXsxJzkWXk41ZYcGatHiS0IUQp0VMIcWP3AGcR8FVowFdIEUcAkSZJUDVnQjV23RLUsjcXEUawnlL2g1QUk1TtgUPpAmbxMGLvMjYE8VNgUkasI0QwfyU2fmbqnGTpkFTZEUY0.mVmYjQwYibRUjMTglTTMjMvX1Q3QySTkDRk4RU0PGUxYlT0E2M4nTUAkUMh4Rb3sxT2gEa1.SNHMGaBMTYgk0JTs1ZvHTRRkjTgg2Q3UERuYUU5YES4.CaHg1SjgFRLUlMjETdqQTPno0L00jdo4VUEUyQhMEZyIUc1TFSzQkchQVZwwVd0n1aJomdQwTMDYkLBc0UJo2UmkDSwHUbzE2J14VV3L1L4vjP2QlY1cDdVcCV3UWVAc0cn4BYDI1XnoWMZgyQPcVauECSoYkSJgDQqkCNt0TcTgkUwQlUyXTb1MycIISdm8lY5UCRzUibTw1XWslQGY1RPUkPAomQnEzaVAyZZE0Q0MWcOEVdvflRQM2XzQDLScSSVU1XGo0S2c1RqkSSUUWLmI2ZyXGQ0Hid0o0XioWcAElXyklPvIVSkEFSG01cg4haLcGVoQUNmc0atH0Yh4zYFQSaYsTZ0YUP0DyUS8jLBMiM3QzLwLTdqcGUhU1cqYkTEQmRDomQTEWQokFUCQlYFc0TSgjYvIVRTQkTNwzZXMCLmgzQ1DkLlQkdBAUQ2b1YkcSUREzawHzR1jlXOQCTO8TVIkySuIEN33hR3YzSFIWXP41UDYDdwjDYkklLsYVa37zMMkjRvIyM0X1SkQVMXkTRqvlaRkUTwjjXqfmdiIUXyE0UooVZHUVPK8Db0EGLSoWdTMldWYUctwFZF41bLQUSvHzRmwDVTUVdpIVV3I2TZkiQOQWXUUFUmEFdGMlcxMERvwjTtIVLywlRPQ0TqP0TmM0PtkCRiIEVRQjZoQ2Tt8lcQkURpQSZzfyZwM1ZNolb0LWaToUdoMUYtkSMvUWalc2J0kFM3.2JO0TbvDWP5c0ZNACYtcTMZQlSqMkV4kiYOAiZ5o0S3bVT2kDa3kWdokyZVUzaT4hc431StXVMjYiZPkjS34xUwTVajkDRrMkaXElT5gTPqfTLoQVMv3zRXISdlcmU4DGZrciUqEUPSUVZ3MTbMAUdqLmMnICLvzjYYcTcT4hYWQFLyPzLlcjRIEFZZglQMc1YvMUbrIFNycWa5o1MmQGZOYlc4ACRPIFRkkFaFUSPxoGMwgjPhQyYZg1LQEmP0PWTEQyMrMGMwomLKojawLWSt0zJ3rzbzUUPv31QYkCSvoTNJMFcxwlcSMCQHUWPP4VRiYTcDITcDgTNqHyRScCU3omRhU2bHYFSYYDbHUEVAozR1YmaRkjczM0StDCQYgUNkIzcl4hYZIyTVczSWUFNyXTM0LkXgIkcyYWQWITZiUyZHkiMxMjdKElXIAUXAcDUHcVc2TzQ4P2Syb0QXEmKqc2MvAkRVEEThElVkokPBUmQVQlMXklPEMGbWIlYqLFZ4vVZkglMIklPEczctkGRWMmYJMVXVgCdCUVNN41TtnDdxTiLDIGRXMFQlQDS5USdE8FMgcDR2gidCMDbM4Rc5QEQ0DFTJszUqnULtMFVmcTRzTkM0nDcNUDL3Q0ZwrVaBUFMJgGV5AGYVAWdZASQ1HVLAgCTJMVQ0XSYZQCRFY2X3nlRqYCMTEicQcCLYUUZD0zJMMUVZslZ0P0XyPGQyDFc0EGM1X0Mr0lQ4Q0XRECZ0AULtkTQGsDU44FaX8jPRsjY03zJwX0XQYiU141b2klSCQ1awYiXwo0M3j0RSQDZRECMtbmR471S2PyMxUGdjIUSzPSVsMSRF01JqfiP5EjTzcUPho0JLokVMQTQYwjMwTSRRIWTTYSXjQmQgYmLEgVYooUPSwzQTcVLxclcQIGcDgWcK8jcYQmPjcCRWETcx3jVo0DThcVYiMVTSYCRV0VXZ8FaLYkQ4XTTrI1btcGbCYkatblP4kWQ2USXAAERjoEMT8DYKAiRyoTQWMkMLY0TDUyaZESNL0jY4M0Lq.kLXMlSII2LKAEVo8Vdg4lTBAyQ3jjMTUzZuUTNzfDNRgCSqwjdrMTNwQDRA4TU2DCQxAGbDEiRN0TcYYVbQUVTNsjPyshLksTd0MCMkYTXCASLyXWZIIWaXUWazoDdvIWNusFbvT0YJUCLjg2ZxTUUIEmMsQiQE4RQpUUdxPTa1HENukSMjoWTIQTTvYyXvXjdRIVQHQiXrQjRuEzaGgSUNMWXtjCbqsTQ2MFRCUmLNMmPGkSU3bDLIsDSFkza3gTP3MWS3AkZIAiR2PmaHslTYsFbGw1UscDcoQDc0kTXqPWLuEWYRMjSKwTVVAUdz7lZj4FVmYDS2LDbzHTPJIiLtASMzMGQqojPvblbDEWSB8jc3LFUnQ1SZcjbvbWYOYkMZ0jdzHUSjYCT1HjSUQkZZYTYigkKS01Z04DL1EyYNAiXuYlcw3DRyPWMwfUYvbWTtszYDEWS2HGS2Yyaq.Ea1g2ZQAWS1ASbzX0a2blLWkVLpASVqkmMOA0PqcFSA01XuUUbUwVVGcTX3DEaJgDb5cWLu0FdRcTQTAEMxfCQ5wzb3ETN4wjRp0lTQcSUlEkLPACbogWXCgmSCwDR1kiKyg0TSkTMh0VXlkkcDQEQxQUdqEFRAclakUUc14VTuokay0VZPgzcCQzTtbGcwEESLU2LyoTUqT2bG0DdsQVPSECU1T1UjszalEUPFYWYQMTbDgyXiwjXqo1TrgmRDEkZz3lP4klaSshMzDTUgoGNk41TjUmZokFLDM1J34VVFozUEIUM3k2TZAmdkgVUswzTnoUdiQ2XycTYGIyJGw1ak0FT4UmXEUDUjYFLp4RML4hLvjTMLcFZM0FYloTdpIVT38jXBsFN2LzcVcjZ0IFTAwVXW8DLjECMIMTYqLUdyzlKpkzUvQGNYMTUh4hZAQUULMlZBsFN3cVMw.EarAUMhYCYA41crU2TAM2UjkjXoIWYI4xLpYUVtYTNzfkLMc0bMMDULEDcSYkc3MSQVsld0QiQJwzPqQzcHQ2XBkzMkYzbBQmZpszJxImKvgyPmcERVsFZzomcUcSbxkjRwHTT2XjZkc0apclUYEFYMslMKwDNi41ZhElapMyc0LUZMMzc13zPXASaCUjLzgUbUkEbqk1SX8TU33FYv8VdnMTVVcTZM8lPsk2XDMzajglMEkTXUQCcIcmZTkyUgY1ZEQSQncFT2IjcugVTKokKJgVXhYjb2oDVSAUYHAmUtoGb1HTaxcWbzHEbn8FVtH0TXcCYIsRX3ElU0I1JX0lQ2f0cSMFVIQ2Pyr1PzjFRjQDNQokQSwjUpQmYyfUNxTmKFoFbrQDSjYWLwDCT2LVMvzDaxQ0PWsDLGgETCsBTikjMVMUTNQTS2EkVEYjS1YjKLkid0HGR2UCaM4Tb0T0QJoDN3IUbmgzbwUmdxkFdAASQnUCdsM2L3XmR4ISdxjWMy8DLxrRal4zT4EUMQ01QGczTzUmTCIkX33zPlASQEgWZvQza3gDTigGVxDUL4fVSgkia3EWbyrjTtQybZEkUFAkK2AEYzj1LlYCdXUkPloVVyfWckcjMxj0apYiSLQjd2.2cvciR4LzaVIzX1QkSDYyb0MiYCkyR33jVW8jStkmLqL1JzYTNSEjdMUDZD0lRPUmdHs1TYgUXUwDbBoTdlImSvcjR5MkZQ8zRY0lcokGcPIzZZolYPY0ZNojPtn0QXklRH4FdtAkX3UETm0DUCc0TDQGUGElbBkWYyPSN4QCaXYCYw0ldCEyUAcjT1YkaYYiQBEjTLgGRhEjSx3BVqQkRngCSiEDM0Hlcx8jZREzZLQlVJEkTBciQ5giL0rlPzwTbvYWUC41ZIkyTwQlS0LlKgoDMDEEMKg2S0YWaBoUUqXyZiACM1M1SQUTdiIVPHUzcBo1SyY2QiEjYjYSYXQUMsc0MlkyYtMSYSUWT2oGbggFanYVQXQlKwfULpcGUqXVVyMkamMWLu8zTzTVZIQmaTIlLvsjYuUTc0ISTqYGMRYjSsEWa0X0ZpgiK0byLoUGU4rRagQ1ZyfEY3jmY03FU0MSatEGQ4jkLqnUZMcmbgcicVUjdOkWUTkESQgScT4lcnU0QOQ1SugEdtUGTEwzaWUWQvASZEckUukUV3TjRlIDNEMyLrMVYAEFQ2rFQuYVLu0jawzzTHo0SDI2Lz8jQDkSd44ldg4zZxMSaF0DY2kCLH8lLVETS4HUSxXCSu81LzQTV0fGctzFV3HGci8zZTwDaXYFb3YUXwMCQvQ1bmkkZhIUQAMjXKkiKz7lKwUSUzP1LqEkd1XjPRQzPWMUZSMzbnEUPwMULIgFQS4hbtDzYFQEd2XkQno2XLklK5clVx7TY5kyX0ckX2fFNW4zb1fjZVcjPCIVROkWSYw1X2o1PJsjUWAWP2QmbjsjPpUmLzfSSD4hcYo0MGYmczUGVMgCakIjcjQ0b0MDdvjkKm0TLYUEY1.GaJYic3wTUlcyUqfTULQCQ1IEduY1b3sVR0zVLCMDTnMkRvjWLvDjK4kmYuwjKCImcPU2ao4zTrc1Lt4xS1nFRFMDd0T0ShgGRpwTLxUkRwcEURYyQVYlUAIETE8FdrEDUV0jRUUUYTg1QU81Xx4ld1zlXKc0PNUScJwFUNMCLhUybXgjLWsTMvQWPFYjSxHGRREDamsFaGYUZmQFbvkDNsoWVlEzLjoDZLcGaBUGZvsVRloDT0H0aN0lbFkmYP4DMvE1bk4jS2Xja04hZOcDZkMUPwYmTwjERyLVT3wjavo0cCMVVyPTNUYGdLUmRXQ1bHkVYZg1Ut71SOo2a5wFZtclcwUWNRAWXUYkQ2sTcpQTc0ckRo0jRLI1ZvYVazPSbPomV3wzX5QmUKUlaUIVQ0QUdtnEUuMCdHQ1MWUjaFgiTw81MyYlR0sxMNMTRF8lQBkkUxLCc271P3QVSYokaZYWUDkld3PDVHoTYVQmY0.ya4MGbwLVbIUCYTUmbFgyZBE1cpAWS4clQKEyRvTUPHQ0QrQDL0ISXPMkMMc2JAQ0Rwklb33jatYVVj4VN1XERLE2YxzzSzEzSi8TbJI0ajoWZtQCZtzTaqDDUgMyPP8TRxf1XmcSUqnjZ3T2UoY1czkkVyICbOMmS2XWSAcVaD4VbrQ2UwEjZCM0ZWQWU441JFomMAA2RlkzTBITRzDFLLAmKz4BaXUTXwHkPUMUY3bCMOIVQwj1RzbUdBoGcmQmalUjXZgiXzMjSuM0X3DDcicWMx.2PJoEMBECQyokdBc0LjIiMME0bq7VbtUGNVQSRw4RTCAiLznlQyU0JxUibrsjT5o2X3X0Y4X0YtvDLMsRbwAiaqMEQXEUR5UCTTUEYWEidTIzaC0zRTcWd1ITNlYEVSIVLhUjZAIFdDETRtLEV2bWaPc0XvQySvE0SVYSZMEEbqTTVGM1X2XyTqUEUsQ2RlQTPIoWPrUyLpcVRj01cUYEUiAUVGcGZ14RbrkkXxXWLWICb5cFV5QTZpQzcJckdhElczH0LXsjdxrVa3sVVoElR2PjZ4A2btgEQkkWaD01JtfmYCgjUqclQwDzRSEjdYAUS3HVXWcUbEk1SCkiU2YzLRISSnwVTM4FR3bjUn4lbqgWdV8VR4UCTY4FS1kUUtkTMPklT3gzZGkzbYIkUUICb34DLq0VSwHFY2XFUzg0JWMzQgwjLqHiYDAmVqLzQS0zSWoTdJkFRPQ2PjcGLvcyYqH1YHkVX4DCV4cGV4TldNoTTnI2TzUFTtDVTsMUZ5gkVvkSa2DjSqXTaHIVPQAiMssDcEYCaSMkKlkDc4ISQKQiLDoUbZ0jdIkyXTEGYFIjYEglZRIlYwg0UGQlYtImbXoGdMMVRmo2QLIWbGUVRqcVa2jGTGMCUhMVTEIVZxjCbMYzUOkUSRIFd1YGSYcGMAsBMCI1MYMWPvUUXRg2MxYjMjUkKvDTagQWSoAUV2nWbIUmLQkETgIUcKIldOsFV3wFSvcVRxMDVUgjVGgUbwfTbVkWRtXjK4gDUGYiaqXlZ4.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.yPAEmRqnDS1UkcI8lLuUWbPkFZFYTUoc1MBI2bIMSZIAkL4HmP0HyUWMDRTMVTycTTyDWUhcjSt.mPlo0YxIzTYY0LHQ1JoUGMLwTaqAiT3EVZJsBUq7ja2blLtPia0ASQWcEQKM0QRcUdDkkSw3lRJYFNlU1TBoUavbzJkoWSy7TV2rxUjc1U2PlMRcDY3vFaDM1aXACdybTTRsDSoIWSVIDR4EUbx81RzbiK5wVLmkjKRcUQqzlShMlVF4zLw7TM4QkZMojPEMjR5MjQ1wjUJYzTpU1c24RSBgjK0MkUMcVX5MGSY8jKUgGQSAmUsYDMJcGb3bja1UUbDkWLGcGa1kmd4UVNkMTNQkCTnMlc4D2JBMET2X0LIwlcAo0RXAGNnEEQRgUUOAUN1TWd1QVUtwFT1DmM0YFagoTU3YDQrEGNmQyZWYkPHcmXSYSR2nEcsQ0cAMEUQYETp8TaKY1JtkWVjgCUjI2UvDWMpgGMuMDao41LzgmXKQEcNIiSmYmV2D0Q30FNAgzJTIGSZIUbDYmd24FNYIidtPGNuQlYqESauUTatLkPSQkR4.kdvISUrEWNy4DRSAUa24lVxTVN0glSF4zTB8FU0bkT3TWQ2LSYy7VSrY0anEyMpojUjASUZcCRYYTS1fzYZA0LnkGZZoTdv4lTOwVcSYWSvXCVT4Bah4zXlkUS4ETUFQVUvLTdVEDUucyT5kDQ0rTU17FYh81JwbFaO8TXqUDTxDzbSQEYxjGNRQkQ24BSLMETuEzXq3xP0UCNEIlQHsDd4AkVxnVQ2TVXTkyb5YTU1shSSoFYGwVbQQELjMkR3nWcP81ayAkL0TCTug1JS8VchoEQwjSL0TUPrUTdtXjY1PFUzoFQzDka1nWPrMFclkmah81bLkUXIElcykVU2DGSBM2YR4TMx8zT0QiRQQEbFYSRhgTVsEjaP0FTYUkYFUWXBUTdgIVSxjGSm0FYqcDZtgTSsUETvEjSi4hXZETZyQ2cyfEdUgFRxIWaPgiXTo0a34xQ0QmUwfCMsYFdKUiahEDZ2nEM4XTYvDkTQoldpAyUL4xTHIiUDIzP18VU2EmTIcmaxo0TkMzJ0MlboQmQ1Iyb0jDaq0jRt.GNp0TXS0TPpg1T2kULTU1QgcjXWgkM0f1ZDwVVqPCMOUSTwrBY3USRLIlRGMELGg2YRgDUBIVR3c0LQgWYOASb4gWSqQ1XXElQMsVXPE0XiICSFUSSxPTTNgSL4PGQzLicJ4zUKMyTCkTZMczZGI1cvgEauY1YlAWYwc1Msk1XkYSaCIkMBE0XpUkSAcSUoImYjYSNIckRngmUOgCZqITdzMiK0D0bOYlajUmQjoGaMEjKrMmPwDSb5YiKvDEb4cUQxL0a0vDLJEUSlYDcGE2Y2oEV1YGTKw1Zlo1JUYyPOgjT4HDbXclTPwFROgkYkoDds4TRj0FbsE0XRY1Lx0jQzTSbkEEbrYmP2cjLNIzZiEySvAkRHcVSwQlYvIzbq7DZgElMjUjaZsVTq.2UWo2JOIjKo8FYUg0UzkyZsICarcGNMEUM5QFNYoFdkkSaXg0Z5YjdqjyPnUVbzjiKuklXMgyLAQ0YqXUZBMFbPEkV5kEaQECbQ8FS3PEQRQFS3nmdB0jS1ACRJgVU4EmMQASLZQEbPMFMJkERLQ1YYgERG0jREomQ4g1M1fjKAcDbhUCYEgDaE0VY3X2RT8DSKgiVNU1UzcVRYgFTOkSQpYjXq0jLk8zZOEGM2LiX0MmQjsDR0rxLEEGMrY2UMMVMSoTaBAUYq0jdTkDQwPULhUjS1gzTCcCNSYiKzHCbMgTcUcWdGIELwA2Sicib3bkLOcSRXMyPjo0XZgCZioVQyoVSRQmPgUCdvcSLDUTZAoFQxTlVqbiQUYTagA2XzfmS0IiK5AUVVo2P0PSUzvzQ1vVLhU2QUA2bVYjQV4hXIA2LRMmU2X0ZlkmK4MDYsciSyHlL1bmSwIWPCk1QywlQgMDYCkWbwIiMIEFV4rFSDckc4oDUNIWXmIELZcEcPoDQkImQPYyXsY2SWQSVKYSU0PyMwcVRoIyURMEQokSbWEGMJEjM3fCQSckPBk1LIkEZrkSZ3jjQOkDZ2YmMLE1TiMESxXic1oTPzUkauAiShgidYk2JIcDTtwlTi4lPxI1XDYFY38VSXU0ZPkWaMQUZ3LkPTgjUkg1XiMka08TVzbjKKM1RN0lVxEWLkcCZrYWYDsVYqf1RzLjXmwDatYWZKglUXI0SWYCZs4zYHgDMLQUNWEGSvcGUVIjPz7TVYMkLVwzR1v1R1HldwXSM2P0TzjTa1rRLz.CdBsha5wDRmU2RsEmKWU1a5c1aZYjaGwlQMYTdvTEd4k1S4T0MHolRgMCYgUlUMUjR4IiQ4DSRyUSSJUCaooTPD8VQxEEQMI2SgUSTGIiRIslU1MValIENj8zR1D1TtA2QGUkKJ8TMIMkaCg1P4bEbtsRX1UCbxnkK0HFSxQ2cE4RQ4PyaLoGRuo2bVoUc1ACU2kibQo0a0U1Q4UDc1UFVMYFSzsRUvEWbCsDdnsFbhkDSnY0LNETPsEVaTQiPmgDQtDSZKsRMuA0LjIUYTIiVCcVbwEyLGIzTGIjPjQFYuoUdLE1byQ2S3X0Mmo1JYUkK3fDLMIiMN8jd03DQZsxRVgjKWYjcjAER2kzLhAGd4giVpoFLyrVRVgCQ08lMCclbQUEa2rDbAUmdSwTXxETYxHiM0.kcPEkavLjXLMzLjITSGQFdUkzZS8lXIgDSTU1c48FLjAEQQQ2SXUSNyHGMv8DMj4VUsQ0S0bCTUEjKnACRNsjTZIiKrgyJPElM0QjYxoWZ2fUczTWRoIWNEkTTskiPzomMOokdEYjPw.yYxUlZ1klM30TLXMkVoUDUwjEVscyTpcTV1Ejd3PiZNUER5YDLwHyLz0FNt3laVgWY4fkPYoUajoTPrU0ah4hXP4RYJwzLLQSRLIFZKkmT3UkdWYlRQUmUmcmTGkTUpoGQ2YkRJgyY0zlR1L1Uj4hK4UTVqXEbJc0T2fGMLkjZyjSZio1UzjFLv0Tdwo0QBUzbPEkUIo2Sig1Ug4FTvLVaYsDZFkUQygUbmUTaRwjUwfWUyA0c2bzLMkyZjsRMKE0SynTPug1Zx3RM0rTdpcVZwjlUrkFaMsFTJwlcBkiPggGTxbzZYclQNEWSZcjZzHGYKQlYuAESzozcGw1MqMSbZcTTqcGYVgkc48zczsTQvwVY4rDc5QjT1TmK0jVMXA2QsIEStQCZT4BawHVd4rzJ1YCbAUUNUIUZJslTloTXgg1LCkDdX8jZ20jZHgjauEia4zzQgslMWkDcwIGSgYiLQYySvgTcsoGUXQCZxEkdlAyaFczMBUidTEGbHEkcjcCZlEGa3UDStkWLzbzLvDWZvgCUpMSUX8lPDUVT0YCVwgWLJYGaRUjPmA0Zr0lQMkTU3XlKpkVUVkEY1cjcOclQikFboQUXtPCbznDLgsRXpwFd4oVb5kkUuMlKNIzY2cDbTImMScVb3f0YF8FVtHVcxPEZSEzPIQiVw3lVhcVTKwFL2PWYy4lXxM1S2shPEM2U1EmbZM0Q3oFMNQmPPEkK5oTLWYEU3nEL44TN54lbOc2akQGcEgERHUTPiUCYw3lY37VT0MWPYo2Q3w1YmQzbYcGLLAiRqAiKR4lbrE2YnwVdQgETDomVlgDLyUiPSQkK0kjMDUCYJ0jRwTyTiIFRFo0LAMEdxMWZiQFbq3RcAsFa0fjaqPCV3gDYiomYlQkawnVYic2bisBNIECV50lTX4zb2wVQybmaw0TY58zatXVPI8lRsY2UZAWNqY2T2I1JMoGUAE2crUSSPYkMy.UNgsjKXkVLmcGMFIWTuo2TkQFMmUGVtHza0gETrckZ0EVPrA2JvzzbLo0RFUGTgQSRpUyaT4VbigzcEI2PzPTXTcjTwDyLvDiQkAybwoWVxY2UxfTMiIiQ3DVUw3ja2bVS44VNZMkdqPyUSkjZKcGRg0Vc3QGYIgmKO0jQMAGZpQ1RUIlUvE1TUklL1oWczPiXIQUQ5kDUXUDQoEFYtAiLxXVTwLURyTmbAYiQiMEQDkEaYwTbFMFQUkGSnIzR0A2T0YkLQwjZ2gGdHUULtfGQyfzaqnkP1jyP2nTMOY2YwP1YEYFbuEEYnwzUBo0PCUzYUclZvk1aRombRUDVwgUVWckKWQSdt.kapgzY1IkP0nkKq7VZEQzTtbycVQDayrhVvoWbWUFd5gkKTImdog1Z3TlK2QEUP81XzQSbt.iTSU2QMg1RiQTUCslT2PSbjg1ZXcVXvgyUm8jMUQSXsMUZrY2LvkWVx0lTjUyQxoGTsk2UH4TQ0k1c1ECazEjUAACVrkjR0nDS4U0SKQlYwnFavjyYnIldWYyMm0TZ4DiXz3RMMgmdq0jZW4FMn0TcLUmSQA2U5Ymdzkmc2c1T0bVZNcjdmckdwL0Zy4TSvLEcZ8ld0EkTL41a1DiT3HWbLA2T1ESPxvVQAsFUKQyPWwVRqXlYGIGRwLmPMMmaScicp8zT1byZ3cyS5YzUMI2QsU1J34hT4MCTyYyRiETQCEUN3EFLoY0TYUFTyMULAkDdLgFV1AEbTUGczDkQTYDVSMTLCASdrUyTB0jRyMjMrQlY3wDN3jWN5QmZkE2UqIFbNUSb3kET1UmXtDFLgEzRnszXynUXtXSbJI1QLUDS27zckEFdNImYP8lVnUkYQg1JMkUVI8zUzcjVGsFVvH0RQoUNCAkVYo0L0HjPJcFcyzFTg8zLRQka3IWV2.yJ38jR1TEMZsFLUYGd0LyTuo0Ms0lTywzL4YCQZgEY33lRAEEQUUDcAMTP4giPhYmX0kFdE0FbwLSUmUlKhYGS0cTTwHyXWQWNxEUViQ0XAUUc2vlZUYmPVUkKQAWSrUTYx8VP50TZ3EVPIwFd0I0LyfmKTMTZMslV1T2M40lTGMDY3sRVqL2aYQiTvoWVLkVPjUGRY4BUN4lY4XiKCkGdG8DdEEWZvokZFkDNWMGdZYVdXU2YxwDNh4xP3PiVxDkTuglPwQyPpsDZ0UFRwLEaDACbLkTbuECd5MyST0FQzY1b1T0LCwjPmQSSl4DavUCNMMURN4DVMYlMjkzJJEmP1EzZhIFbgAkcogkY2.yXQ8TS2z1Z5QmTwnzLq7lVl0jUks1MjE1aqf0SMEFQ3Q2S2DWb2XkRkEEdgQGRDECQ3IicxfCUvMTL2b1PPIWcUsFalIGdIQmUJICNkEUQrYlP0T2ctDCdNgCMnElXFQSTznzMzEGVYMzRI4VcPokZ3AiM2njPWY0MroDMxrzMngla3EmZzcFLKIjVvTEZp4hSvPEcEwlXgYlaUYmXRUUMuIyZYkiKkU1JX4VUIg0LKEFZxcGRJc0QMMEdJgVb0.2TxAGRtklduYSV3DibxTmLxrFSk4VchE0ThMEVxXVXgUTQnglaog2bEUTMOUzZ4MlbPQlbJsDdgICM0I1UBUGUpkjQGMkPzMzPgI2R5YkSw.SZncVaUUldUYEdNcjUZgUYqH0TIojVVoDUtHCSF0TRnISV4LyPqsxUkYjVwHWTJUCUyzVZI81MwklVJgEaxHUL24lPKcUY50lczQyYsE1MyglYoQSUkwVNBcyRCQVcpUDS2.CaYcEY3YiTn4FZs8jPLgzbvQUdIEkK43TMvf2Qn8lZNUSdYYWXHMUTBkGb4YULYESdMgzYLcUbXY0YFI1UQA0USQkbHYzSMgkQwrxJTY2cgEVLC0zZyzzTCEjUJ4BVYolSv4hVzciXKcSSHYkL0gEd3XSZHomS4j0TGgyYlIDZwjjYRoEapEiL1gkVgEWbPgiZ48lcM0jbVMCV3blZnsTSzH0PkQmLU8FUjoWcsEyP5gyPjUlT0sRQv7DMMY2UFYkazvVQzQUcvD2bsgGN3TWLUczUhgGbOAEa0k1QugFN4ETL4bFUqgEVvX1R2QkRvjDd2TiVwokTx7Vc1fiVjoTN4cjM3j1SgQlPW0TRiEVPZASTsoEdVgCRk8zPBI2PiMCZmoTc3TjU2XySn41Sgg2SWAGTYwFdgYTX2j1ZFEEcMgDSjUmd1MURjYEQMs1a58Td3cmbAgUZjshL5EkXGoTPNkmbHQDbRM1JtHGNtHENXolL3fULDYyMlYUR1IiX5g1JgY2L4EjKR8TQ33zPsACNzITLQgyT0MCcqAmRk4hKt.SUtfSdhA2SkcjVwgUcqDTdtQTPIM0J3fCUxImakE2QJoVUtPDdsMFTRc0UkgSNqbkZ3P2Lh4TUWsjUrcUXMwFMSMERVQUZ2LiaN01apMEdVECN2HkT4AyYCM2YNkCMwQycQAmYEYCNiIWaQQyPtsVYk41Q1o0L3YGSGQmX4fjdw.iSXUVY0Hmdv7FcUIFQxXSZQkCNikGZOYzbFQWSgUUcv4DULsDQrcVSnM1MHMGY03BSt3jdv4RSQ81MEsVcRMTRNEkZz.SMs4jbvfVVj4VQZIFayfWNv01XwsRU3LTQrYiXxbFZDUSRAAEVZMGNvbDZtbjV0.kbmYWUzMGQ1HGQz0VcRUSZkgWcCY2PYAUULYmVVYEb4zzbHEjPykCUDETT2Y0S3M1UEQjbhsDULUSaqDGYL4DYkUFZXAWNU0lQ5gCZloWaxH2U4MmUoIiVKcVYSg0Tt8Fd3gyZT4jPDQFaYMGaZUzTF4zUGESVQEyRrMlXxPzS1k1YqMVVAoFSXckavf0Ji4BL5ojZ0kiV2YyRqXDQqj1TFwVMwrRNVEWPtYlU0UidAEjYHIjYmMkKGkGMAEVaLIUc1vDSEcmUnI2JzEmRFwTLzomQp8VY0zzRAAWLwDmVWciSAgiXCs1Xk41XmkSd541R2v1QAYGTqL0R3U0RnoFZyUzUQ0FcI4RbQ4Vc0MUYAszXrcSNNcTNl0DdB4TSyHmM1P0bv3BaKgUMtAWUQUDbEwFb3gTamYWMqg0RzsRbx4RLjISavnzZRklUhkDS5ESVrokYtjEVUISNX0zUVs1LqEGNYQzLCgzZNcUcDcjY3j1b4XWaSQGZtjFT0kjLpY2aqLSMLkDU1QGbwoGZXkmco4VNRMTP4TyUqkFMXoWUv4BQloGdvjkXqLzJzcWdzIjbqnTXYYVPZkiUKcFYhoVX1fFThoFdBcDNiQkVlcFaDMUVJ0FSFo1ZrY0Z0ETQoEyXHUlbswDLCEjS0MFQ2PWXDA0ZqzlVpIlbgUlTBgURXgCcK0VTtfVSAQkKlUSPrIFZlUlSCklTDAmXvMlQCMCTOQ2YgIVayYmaQMFdhg0L4YWb2YzbCwjM40DNg0FV2.EStoDVr4lcN4FSl0TVq.yQlczc10jUgIkVQkWXtsVQFs1c3oVNnImKvAWN1wTS54DRxzDNv3jcmwjaUI2PwY1cjo0Y0nWRwrRagoDN0HTclI1SDY2Mt3DLIMlaUEFY2T1crkmSkoWQjYGZ1MGc0oFMwrlVvjERRoDZiYzTRcEYjMGZ5MlYh0VNiwVPvXmdyglV4IkRNQWZtrlaosVchgUYOczUQMSaJMULvYUMI8zUGkEVjczP2PzaNomZTo0bGwFSBEDLTU0YAolYnkyZXMlLhYWY1QUdjk1JZk1Q5olUjElYCQUbWImcvDCVCwlPQoFS4wFajgSQ4IEVGQDUwcFL44hPD4jZy4BNDwTRXYCbiQiXP4xUNASXJ4hbjoFNv0zRv71JsQzSjUEaikEaWQ0XF0jRDYkaNcVMxc2YAsFSUw1ZZojRWkVShI2MqgiLhYDNDwDTGk0akk1QYgmTSQyLoojavjEajQUYvEETGMzTxH1cmU0U0.USOomM4TiXlQkRJ01UlolUPgid3jFVuAWRukjdjMWbzvlMlY2bRUiX1njd2MiRu41SDw1brgTNuQidRUSTFIEdvT2Q3XGb3QFZoo0awIzStEzLuEjXJcUXTIULpolK0LFRpgyYqQFNJsxX5s1POcjTlwDaPkVagcEbjklbB4hYtgVMIgyZ2DSaw8DMMY1LzEWV5U0U2j0XJElS0DFaywlV0XkLMEiTLwzXNM2JEIzP4kzQgIkK4UFRrQVTV0lUsQlci4RMxH1c4vTNqshUyPjMQ4RMJMCTqMVLVYDd4nWaXgSV0HUdtQDSmgGdOslLvL1XNYzS3clVzwTUQECQXozPLYDTJkGU2nkZzLCLukTU0fGQVQ0awo1R2IzUTMVLNQTap4lTEwVLx3hVYUWdmgyZYE1RSgUPT4VRz81YhYmTTkTYv0zJUQDRDkjcpMSZzTjV4.marA2USY0U0QkRDUmLTA2bDklbgUiRHESP3nzZwQlK0nDMQgiV0QibzQFa5c1ZJ8jRvgzSBMCMvMWZuMGbYIVRPciLKY1ZnsVYyjjbDYmaSwVRqA2YC0FLVM1Jh4TVuACMOECUGkWYJkTS3nzJWI0LvQlQ1rFNjcTbqUiYQU2JFI1a3c2XUUFSzHGUMMVRwcTd4b0a1TSMEU0XqcVQTkiXAUmTXI0Jx3jcCUSL4XTS3jTPgQVdHYEcPM2ZzslMxHCLncVXnoWcsclUxEzPTkFUybCQjMVar4RTQckbEkWazLVbT8VcDsBQDI2RPE2PpAmK1EzSKcCdFElMzXUVQIVd07Fdzf2PF41Mqo2cpkSSIYEUtbzMWgTN5kmMuYEY47VXVgjMnYUM1U0RgsRXwHTQq7jRiwlKm0zaG8jaZUUPkISUK0DLkAGQxImPAY0PmczYqYGSkY0SqrlZqoTb0QzSnMVLH41cqUmMrciUlglTtjld0HEQOkmaREScWUicQw1P5U1JynlXFgyT58TVnoGbp8Vd2rhc041SzX0Qx0lPNUUQGQVbiIkZxTySxAiQvECUBUUSTISLKQlV5EWakQES18jV1Y2ZPICYyXSZAISZPESX4.ENzIDd2YCbCA2btPCczcWcyQ1RqjCcxXFcSUiSDIyPMQCSVUjMog1a0jkUFk2b4MUdzbSSkcTP0fGLqPiLxLDUvjGYLAGQjgDTqPkVGEyJPElPJQFQyYUU3PjcUIEMgUCajcTLzUWNzbUcMYyJLclZOkjcXMGbykGQUYmLOAEQ1kWbvb2R0X1QUkiLqUFa3.2c0QyTy4jLwfTdmcGUxfya5cWLIEWZqgTXKgFTGo0JsAkbUcjXVgTUlU0cXUDSL4RQgQTSuEVRpQGVBElaIAGTD8zZg4DcUg0TVE2bGQ0Q4MGM0TjcQ0FT3jmbpY2P1kTV0EVTuslLg0DRWgSQZElawQDaXshdFMycncya0zjMxo2SjUCNhomcY0TcPYCVEAEcMolbvjDdxfzM3slYh4xXMUiR3HiPpYzU3QzLB4Ba4AUQ5cja1w1bKE1amMCR40jMAUlT0cEVEUDZBEGcgQFcXITXr0TcF4RXY4BLBk2X3oGRCIzbmMER34BYOclKk4lTqrlMDUzRm8lTTUDNEwDaxM1aJcDUEUSbxE2L4DVS4UEZ3oVbBQjY3QDYtPVckUCUhQTa1P1TyIUcwgWPPMGSEkUaAojaYAScGwTXiYyXwczPjITPsMlPssVS2LEa2PTXWMibXgjLhcVa3v1L3blTAkkb1oVLqIkKlcCUqMzbIITR3wDT4EWVNgiYmkjXZU1LwDlS4.mTRQTcygkYHAWTSgWZnokX3gUNgczYkslPYU1ZMEWR1ISLy.CRBQjQOICdvn2RQUUVRolLtQmSJElMAUjVgUFQ4n2ZtHWNqHySmgyPQoUcOMSX2XDcVMzZ0w1cQ0FVTklcv3TN0ImVBUiaxHFdNQEM4bVVqYjcpUzZ0rxXmIWRBw1MSQlU0E1bhUWVVQCdyvzc0M2SwEUND0jTncWcl0lUJAWaH4lPRsFU0X1XzfyJA8DMrUyZlQCNDUDRrQ0XxTTL4jjQZEWQKAWPScGa2MkQOwzLOI0bXcSYNITL0kSMtIlZzIEVpAkYwHDL4DDUlYyP3PiYh81L38Ddkg1PkUlbLokdmUlYYokbz7VaTgFdVcURjgTUYEDb4ckLPkVPSoVdYMjQRoENIM0TSAWRyEUdComS5MFbMgSSsolKqkzUrwjVVczLLgGL24xPjcyYwg0RYg1cNAESRQlYxTSckwTd3kVTXolPZ01LpMjKQECbzgWTtjiVlA0YyQjSEIkLtbiS2TCcAkFY1EVcDEldng2UOAWMtDWaYgEMFwTMloEbTYDR0QzTzcEa2QWSkIkMvLiT0AUY2H1SvXzUJAmU3XFSDEzT3XVdlcjRRIFYF4Dc1rhYZY0SEUGZEoTQC8TVFACasQjaKkyJBIiZHkWat3RcscTVyESa1U1aOIDVvbTds0zZnYidZwVRo8TUDg1JRoUSYE2Mm4BMiI1L3YEcxI0ZzLFS38TPvfTb1DmUmkkT2kGL3cUUzsTcSgDTJ8lbmkSbYsxJBI1L4QkKVgTLCcEL0MFaoMSSNMlSzrxQtf2QtrTd3IDclMCawYkP4klVxP2MwwjYIMDMMMVMHIzTwoERAgybjMWVgMiU431SzDmTzEWdybkb1.GLHcicXk2Ltj1avb0RhozR1TTdi01YyMDY2sjZ4Uld0gyTrYFY0UzMDkSZVEjRT0DZGMVLw4zRRQ1c1YFTwDSXJg2UWMySMgUb4QSavkjQCIiRCACMkIja5QkQ4QkdIg1YwnjaOUCR18zR2rBMxPWbqckPL8zaqLSZGUGSkMlStnWaqoDSMEySPo2R3E2PCozX30zbnkyYCEzPkETUYUjcyzzaW4VMmQWdRoDLtHVYxnjRMMTY0ImRkIDZuEzboYyc2Q0cFgyLug2Ut4TZEslSMUkXAYTXskkd4QTbo0TdYozLy4VVsYESuoTLMgGV2MWZKcUQjASVsYWasEGTt3ValsTcCgSLLwFZPUFbVE2YYgmbrYDLvHycYo1ZyIyYvUUcoMVZJgEULoVVgQEQxYmTtgUYH4Vc24VbMUWblc2UUomRpMWRw4FdZ0DMIUUdJQVTwslRC0zRwwzJ3AkYVgVL1MVRwDmT2nUbUwzTTUER2sRQzUVQvUCSLgmbpgGLsIlLmUmX1DlbW0lbwwzJkMlLAo1TU8DUw7TPCsFY3sRa2XEcLwDcTM0MV01alkFMFcmcjQWN1XjZ2nmLWkVYgkDVrE1Mx4FZAsFdpAWPxnWMTYGTzTUUqLmKzACZ13TXi4hbsYWQgwVd0jlMvEyaAMUblgTMvAkLtLTSx4TVPszZVcmLNwVNJY1ZhQScNUGSFsDdgUSU0YiXC4FbEITTMkVL1.EUWkUZhwTVzLlTHISQLk0ZKIEbiIlK2Ikd0U2ZYshZpgGdNwFZlAUS3EjLSMSRUcjKvL0bD4FRyTGcEMEU1XycJYyMhElVvgmMvHiXrgVTLITatEGMVgGbr4lMsgkYxgVT1QTS0IDatzzLkUCQqEmUtklTPgjcvYVRqjCQv41YLITSiYyLAIkLWIkZ0kVQtESSoUzZigSY50VMtwjKoUiUXoFaiIFSZEmPYMTZVsjPXESSynEN3ECZ3XTYt3Dc0g2P5UGLSomPtHDZ0bFNxMVLG8zYIszYUolPVo1Zn8jL0vFMXoFbyfzPpkyaxbEMmoUMyEVZGM1UBECcFIVLOEUSz3BLMcGMoQCRuE0UyvTdCIDZJE0ULgjKgIFdvEla3MFbLAWTq.Wb44VT2.SX5kCUqbVYyECZoEyc0EkMzMDblEjaVUjXOcySxwTUkk2TtHVRt7VVUkFQV4RPI8jUkkkbrMzPlAGa3HSQkkTVOgyMmklR0czUPEidVUEbnYFVmEjdIclMy0VRi8DQtDFdvYDQ48lXxYlVMcjM4QTUH4xPQMWcVEGayAiXsAUTOASUXIyJQ8lLWkVLigGZyYENRQ0TIMFVyTzJFMiQoYicFU2MTEyTq4hK0g2ZSMFaGE1XJkDdqzjd1PVYynUVwkVV1gWRIkEdNcDc3LzXFYDa1UVXV4RQ1UWQtP0aWgWNoMWQ1DFRi4jS43FQzXmXWMSdCUWaqbySOMmcQAUS5gVdREySjkDdIEkbGgmXMQVPB4DYPgzT2.GSWMzcwL0QR4xbIsFYB8zRwckL5oDZyPmUCkmMoU1UwPjKnU1S27TckciPYgGa5gEaBgDM0HyTT4hMuIVTyvzcUIDc1wDUlgFMsECVPg0QQEyJgMTaO4hS0bFVr0TbQEic1IGUIUTLWoGMlgScZUkMvT1cybVXLUmKvHCZokyRyMCQYIidrkGZJYzUtXlbC0TMHwlRTIWaF0TVwX1U3ETc20TRYIVa0QiMSIzYZU2J5EkaDoGMwzjMynmR2b0a4oTXxshQisVX5YjYMgFMVcTXVAmV2DyYKoUY1YjLAIkKAESPL8FdFUzYq3DTvkWRNQ1aJkDZ2Hmd1LSPDcSasYSdtcVXBMzUyg1Px3BYMkTSpwVX1fiS2YTQCozRTQiLLUGc3Y2MgMEQSQlTqMUVwczMUoWUZkiY3o0PNYUP08lXOsFLEgEZxPVVuYTRzUSLF4zcN4FL4TmQq8VP2UGZsQ1btjGSvPUc27jXgcDaZIVNQM2RZciQQMlLKASMJUFMXwFVHozJDkTQzUDNVQiMwElSJQFQsgyLxEUbxAWZqblTWUWaEoESVMmc4f2cFYTSoQ0XGMkYvPlK1LmUzMENig2U2PURUQCSsYGLwLVZ30jU3M2JMwlK0HzQyoUXQw1QSYVdxoGUtjFZXU1QTEDUtHWTxHGaqrxPJ41UvMWcnUURzYzaXEzZJElVjEGNZ4RTPMkVZczUM0lZ5oFTMgGaxQScX0jakISYIY0L4A2UA41ay3jRxHzJtvjQZMCS3D2YOI1MrIVXzMVMng0ZsIGUuYSR4AmZyYULh8zLDAEUoEFRRUGZv0jLl4jUT4VZGIFYtkUaNMiViUmdRwFQAQlRFMDREYCZNYyZVIjd5UjbZczY24DRUYzTWgkPOEldW8zSJQ1bBEWSvkVMiUCY3IjUmshYkAULFYVYxjWPJE2ZAQFN2HlQKkFcJAycoUCbW8jMyv1Mr4VRjYlLBYjVtbWcE0lUmsVPU4Bc3HGLUsTSBgSMKshcYk2JTomS3X2S2b2aKI0MxY2QZ4FYUk0czTkXhMTXAUzbSUUcyLVPSQCL5AWbWkCYrwlRCcFbIQ1PJQ2RO4BTjAmUmkTQDEVaP0lV30VPI8FVrg2TXAUPvDmP4sBQPYCbtE2PiQ2TZIEVVEzcGkTarcDatnWLqjiTsIkKp4Bbrc0bqgjLWUSa2ETa1sVT2MEQ2zlbWw1UtY1MQgiUFMTVCsRQv4FM0UmM5IkQJgTZAUVdK0FaqTTTJ0FVg0zXDMUN5gjTvQUXFAmKWEUREIzaUEWVOkGdYgSQqklMBIiYhg1ZJ4jQkEmQ2nkL4PVct8FL0MjYNoTS0IEN3cjYvsjLRgDa2b2cG8jRtHTPBQkLTIlKXMTdvsxTx4xPgQjQt41ZgEDdEM0PisjXAEGVJI0LEUVMn4lRvTlM3f1QCAkQ4EVUWckXOU2ZDU2JPQ1aGU1PVoVRGM1UzX2L1rjV4jjMqLWdqYiUjAGbLACTtgFMRgSSvTCMxMFb2IlM47VZPclRCsjbNolT2DUbtUTViMCQhgmKRUVYFgEMSUlSxIWVF8laqHSNkk0bo4hPyLGZislRXkyXVMTahIGSjkCTuQka201cUMlLpQlKHcmYvsVZywlL4gWUxflZMIGMHMGQyY0QzYVMwQTYXgTaEkCbh4RZ0gkUhESN1HiPQYVYDIEUI8TQHEDMC8zbp4BV3MGYqLUQg0Tc3wzatU1bxEiYMgWZ1PFcj81b4UiVIcEdzfVMMkTSHAkUkMyTvUTR3HmQCckZLEGavE1cvwzbgAyPtMiZ0kVYTkjatLDT0szROkUMJkiZ0U0TRUCTKUVSykVYvIiUw8VYW0lX0XTVpA0QrklUTImcPMDZJkldEsFQxPETmglPswjKRkWS5UjU0YkXmElVKciMIUCLvMUSoE0brMDRJUCUSc2UrAUVpMWdCITcLUiLogzcNYVNybmcjoTdxDjVWcVNL0lSDQkXwUSd3LSNCEEMVM0UxY0U2A2MJIUSRAUZx8DTLsDUiolLxAmcqIVV0rxZXgza1AWdU4VZvrlRAo0UIkiQxQlRIoVbGciPwzlLy01U1cmbuokay7zUvHDTKUSaTEkK3IWURkULhMDahwjTSIUQ2gUPKAET2AmdVoTUyM0MP0jYwHiRisRQOEURE4hMyn1RyciXvLVVAIibJQER1DzSVclPEcjUJkCVxHCRs4RbEQCYH0FQzrzZWY2XPUiUA01RHcyYIwTXyklRWoULmIlVOkTdvEjY4PmZqQ2YzLCQwICUvUGaxk2b4Lldu4DNSYjKykDbyojPjcSassxQwkmYJQ0M1XEZV4xaEQUMGMFbmsFQ5IGL4sVTJkEaYYkSvMDbSIWLtkkbisRTpMUd3HlZUAGcwcCbqYDQx4jdO4jVZczayLUaSQCSPICLqvjTz7VcLkjMEUTPR4xcRQyJLoDZ1XkPxc2XV4DS4X2Yn8TRt.CNhwzMukFawHUVwQFQ1PTPyLyQOsDZiUCMF4lLgETTy3hSxAyX3kSNDkDY2YyMMQGMtQ0b4IVY0flTUI2TEwzZmQ1YEk1MyPDTAg0cws1SToDLlo2cosVPzMiPvbVcrMjcRAyY3jEbZEVU2sDYPAGSjI2SJ0FdVMTUtbWYu0lV2I1TDYSXRgib4A2MLMFR1EGancmbvoFNh4TSqUkaHszbJYEV0sFUpE1M0A2X4QURY4hXSUSV0E2ThQGYvUkUREEdqwzYLEEYps1bxEyY2YCNXYzcjcFYYoFZyYiYyLlVEYWcuI0csY1TWQSbH4RUt.URLASbgUEV0MDcXgFRIcyYnIWPjgDM2DDVjQEbwbkXusFRt7zPYoENjEkLzD0aDg1cPU1T1TVbTg2TKQmTl0DQiQyQ4oGQUEzcQczJCI0cYQmVWM2bgwjKAgyRrgFMDckRrAWZu0DUKUVcpckKBkSY1DkdQsVMpQSb4T2bUgibYYmYTgyQss1ZMokLhgjQswlQyPmclcTNTc0XzPycnUFdgM1YmMVVvjkZ4MyZ4LVNK0TMuYFUhA0JlMFY4nzX4YyZ1nDLv4FaPYjcH4TctQ0RhYVbwjEVIcVbyT2Jn0jVqTmRlIlVTYFQlgkcSY0P5sFRisFYBgTYZkWT0ImPHMDRJEkQOYCausRT1QEd2bEcBYUNBo2Xk0lXrklTgIFbgE0aiM2algFVnUDc0vVZqXUPskyahASURgkcYEUNjgzbosxcZUkU1rRals1UvDWNCoUNnQVa5kEQF81YjoFcVIzLwvzcNYkVI81UIEyXVICTzHWPB4VTRgkd1L2Tg4VQSAmSG0lZ4PkYC0TLXAGRqjybMEzStXjbRQ0Ru8DQXICLksDQzbmdoYySQ0TczYUSQAEQGMlb3cWUMg0U3UDQNUEcXQ0RxM0cN4hTigSVt0zYigiQ4LGQxDEL3UiMxTjR3YFVqUWdBsBUtIEU2klQGQGcBc2XB4xJFkiYjcTV1YEdZEVaz.mMvETTxfmRUUGdgkiYNgDTlQTNC0FSzHFdYEkM2jFSJMUav4DYEomaZ8VMqLyUE4TQZgCYvHFUSgDTOA2bWMELAcmXGYGcqnGZBcVS2DDaicDL1j0MW8TRoEDNl8FNjgjQRMyZXE2JKgzMiwVYxshXJEVLzkkMVsBcgoVaZs1cosVUPclc2E0RQYyYNokLz81UwYDUpczLHIDLOgjXV4DT5kVdxASSncic3DjSVMWZocjVJICRMAEcHQiLpcGYGc1LUY1RBAmLxfmLYoFY0sDLGIUUOw1cxHUZlkUUDgDVPk1auUyaVMSQuUTY33xUzsTYyQkcog0Yt4VRAcmKNMFQBgUTwcVMIAyaqczaG8VPFkGZyE2XtLGar8lZ2ozLEYTdgoEVi0VSvcUYyIGRrcERXUCU2ImVBAURFo0MLgCURQEYLgTL0nDYhoDMyUDdQkzZBomU3LzY0I0JSMkKl4RRGwVTzL2c27VSsg2Zw3TLNI0Zw0TZxDWTmIGLRIENKkFQlo1YyP1QuAWV4kzJ3HDcoQGczA2bZIUcUUGcuM1SVQkYxT2Jxk0cXkVaoklMzMmPPYzPvIERREkd2DCUZYmRk4RMy.0YzbmXWAGTEAkKNUiPBUyT1rRUIMmS4QkcxHSXiICb2fFcD4DT08lPybSQZ0DVTQSSRgzSybDMycjLyfCMxEEbAo2MxHiRTYDdygWZiEFLtcTSsE1ZJ4Fb1E1RvYmdZ4DZ5giQssVTyg1bvH1MhQGZlESSksFdkIWanUkY0jjZiEWSvHGSxfiKHcSYLcCd0IjQNMCUOEUZ331Q1fyY0QWVwfELNImXkgkYvjyJ4DGU2Y0S1DGSRUGNBEUTGslUko2ZCgjbEokRDUlK2ckY5E1LwDVPYA0apUGY0PzYxEFbGQDU5k0S1DiTmkmR1HidKkjYqcDMwMlYAQSTEsVXGISPucidSgiQCoDRjkDcUASayLVYvAUPuMka4bSYRkzYE0zb2IVY3sxbUIEYuQyayUSL1clQJYUVAkSLgYSZpU1MIQDZp8TVC01QoYFLUUyY1ECN1XjZZQkc3jURicVLsIERKMWNPsxarIVT4AGZyUEas4hLgMmV2M0TTMFLu4BV04hZwgmatvVLWwTd5UCcx3Db2XTYBk0bjQ2Lqo0JxMkP2M1XMgTQ2sTXmUURyAWbykmUuolX3YkbPMCQoQCNEgmPyIyZ0rTYvw1TicUdm0DdyI1UtkjPJgzY2bUd4.CQvHDayDjQMMlRpk0MLEjTlgiKzYEN3DzPrwDMmICQhEURQQiMKETYyMWTgI2atAmcwnkatshbsYVTwn2c0fEZi8lXMYmXWIVSx7DZz01aTUWTOEDauYDMOo1TzIWUwMUPAszSHMzMWglV0TDM5oWTB01TVwTZWwlXWEULBkFcUoWRFU0MGASMvQGT0jyPAEzJtXGU3oFVKMDTz0zU3Ujd1kFLBQGdUoGRyXWR1bWNLMlSAQzMBcVVQcjYwLCT0HVcv3TQ0j1SucmMqzTNxMEMgAiTkolPQ4DTLU1QyUUUlgkaZ4BdxgUXYYUXxAmbTcEcxsjLAoVY2IELBUkTrklXLM0LScDYsMWdKASYAgzTqMSaSICbiAWcNQ2YvDzP1EUXEYiX2LGYwXGSY0FZKICTFECTE4hT4Y1QyLCdZECVzc2SRoGVUwDdUYSXyQ1aoYGZBAiQ1ISLmUkKPIURiQjdxLiUvjiPZkTZWQVbjwVaikjcPcSLBUTdZciLRU0JrcGQPYjQXs1YtnDd2jjbYkDNPM2Z1XDT38DY17zPO81MHUmRqY1aI0FU0jzXjshasY0LiYjU4XVZHI2LSg0SoYTLxIkXUMSTislKqXlUXslcPwVMwwTXjYGVyDWZzfVLtL2cLgCbqUGdXsDLv.EM1rhcBUlZFIUNVgzSWM1bmsTa1XFNSgTPwAkaWgSMEcyRjISYIUTUPMGcZEzUqDFTUE0cEszP4MGNXcFY0MUbwTDaL4lZ5IDVGQ0crsTcHszYykyb1YTQtk0Q47TYGcFT4QlbHUERQUWQ0D2Upg0URYTZVkkbMgSN0bWcmckQMUzb1TmLkYlXyU1UyPFY1olSmUESookU5MiSpQFNqI1QvfEQZIyUHIDVCgzRSYGTs8zRYoVLwD0Mhg1XyXWLrAiRtbDdRckP4r1LvUGV2giVkUmU0bjUmglTtcCcqzzMQYUZ5MkcVgDU43BZvf1cwvFc4XkM4gSauQVPzrVY1c0QREiYZYzc3o0btwlSyvTb4PSZ2HGUBEURz8zcy8FZ0UFU2TmZYMCUsUkSyICUJEVUVwTL4rBRBcTVTY0JqwDZQwTZnA0bggSL1LjMJEiU17DSJQ0bEkkcv0FTJgFLkUDNNgWU5YmQzDVX5IWX1TTUjgSMkkVPIEiblIia3UiaEkEdzzVXw7lZR81ZYQDUJIjMmYzStshUxnTMwnjQN8VZgs1ZpEiS14zRrYFRwLSMhIkYxTjc2o1XQUiVEgFctMmd3.0UBcTNh0lYAUWd4UlZDcGT0PGSOESZFozPO8VdxE2R4EjXtHVQlYFZOgURv4FM2nlRmMSQOY2RiA0UvYSX3UWZvTiXyLiZXM2PFU2T2shaIkTaIMCSlcjSuIyZJIWT1Umapk0XSgyZ1XmUA4DMyYVRWoFdLACStAWSCsFUTk1ZuMSUYAWUsIUStYFLDUUMWIVTGEjZpQ0cgA2LqLjSxPGNyDDaWQjPsElboMCYW0zRvcWdrgiVzTVNmU1R0H0bvj2b58zbEEDb3ETNZUVV4.2Tj8DMFM2UVokTAQ0Z2PVPZkkUj0lPmEWXzPFUwLlRtACU3jjRyHVUjk0cMoEUSojRTk2SMUlSPMDVAYUTGkmVwYTbzMGVqACRMglR0gjbOo0bUAkd5MjZB01TMslbyvTTzkGZLIUaGEFL4PWdLUGYokkc2LjQzwVayjiPN4hXW8TaugFVzjkPogUPvU0a4j0Ym0VY2PkSssBTMASdok1SOIDZEIzcTQSVpQFMV0DNlgUcmMFVW8jTNwlPhAWbSYUNM4VUrgESYUycXUEViUkPvHyc47zQ2UEUZMTc3.GZkkTRVQEY4PTSBY2SEcGZus1Xj0VTv3lT23VbGEiVtslMGQ0Sso2XSszcCcyPggVcWIycOgmXzPyRkESVCYEQkUCQt4RXycVcEMkdGQ0ROgFY1Q0RsAEY4LzXicicRQkRrY2LX8DLrglTsImREgyMMMzSYEmbtIFaWEGYHUCRrAWNiwVVmwlTAcmX20zSqcDTAMSQsIDY2YFQAE0YRgSTpEjaFMVTlE2XKkidycUdvQjU2.kZvHCT2.kLo4FNxnFbEsxTk0DdRUSXEY2JlUSam8zQgASXQsFTYcSQ3XEbIQjPtAkQw.mMlciSwHyQgcDbgMCLvUEdPQiVW8TSq0zakkVbJQ2L3P2UlsxQhwjYtrjVyU0Zqz1ZyjEcIYyXZkEZmQzMLIjdYQ1SLMUPvYlLuUFUx3zcNQ0PjwTaWslb47VRBMjTkUCLksTd0zzcg4zUtTSaTc1bnElYtPzZwUTRCUjUSU1S17lXFkyaiIGdsIUNQQDSvs1YqPWSTEEQ1bjQiYmbEESSRY0bw7TZ0g1Q5wzRFQSdzUEdyUjRqXGQiwzZxXUMI0VUAkkPHE1aCIkTvTmRBAUMLojYpYiPDo2PjUCalsFN1Q2UvgldDM2cykiTx4lb3Mzbj4hPWYVLJolUx3jdyYGU0XVSxY2Ro4RTyfzbPQibGgzPxMGMWAUaIIDSi0DRt0lQJYmL3wFTU4VbZEUNCQiKlUFNkozZCYkcHYGcNQCVjcGaoQ2XSkmQRgCLwLlVgEmPPcmLWICUKczTHg0Z2jSUOQCRGcmXzclMXMWXRIyQOwDUqjGVIESZp0VTxcEd0omZvT1aU8lLJIid1YFN0HFTAo2YpYDVy.CZxklLGsRNYcUY2QUcmAENWIEMiAGcWoVd0fiPDUSNsECVBE2JTQSaKIUSVgGZyoDU0T2PpQVQyU2LxH2LvLVc33TYgsBZWMDb1zTMyDlMCkiVvXGRtcWbLYUREITcNgGZBAUcVUlYJoVXCkzboclKXMGZwrjZVUDRP8zLxoVN2PEcYAmRZ0Td1Tma4k1JvP1SJAWPlQlPTgEUkMmY1nzZ1cDVTQiR4LCMkojYsYidrc1PYoWX1UkaucUM4QTMqbCQL4jbV0DLu8DL4fDdxUlV4LVP4MEYBckZzojSIEmLxDmVNIVdSYGdWgkT5sVZLcVTHwjd3biRhgkdloELGICS4zFbDIkbwwTaNglPsglPlYjdz.0XSk1c0o0StHyU30VV5YmcNo2JJ8TaXYTLAE0P0.kLFU1ZMglPwTSVJUjRIQiYxkCQuMkSq.ULIMFVmIDcAYCYvgWbOglVxrRQkMWLtfjb2g2QVEGcyQFM0MWR2cDaFM0QsslY0DjRTMTRyI1Jvo1ZUgFaVgyQmYmaFg1QrkDQO8lQtXGLXcEbk0TTEcDRVITXIkkV4jkTgshMIElPzPUN3kDTSEySUo1LTElYnUyPCMTQRYCdj4la5YEayrVPskjPAI1RKkVbickTI8lb0rhL5IVRKYWMyjiY2PDYAQSSwUCbpsTLWcUQ1XSc1.Edug0bSkVNYo2YvISQOACQqzVVwwTd5IFZzkkSDszLjMUTwcEMOgCL0MFSLI2StDEUOMCNCQWYGMCU3UDdUMmbvTlZLclXqfFVhgVPTQFb0gTcOYSL5gyYPgkUW4xcWUVZSE2XyUGMp8VdP0TZIkFSrkVVYglRrUmaho2R1cCQzoUYuUUNw7jcSIVbJMFSJQiKIUjQ1bkcvo1QxLETwHkZXYlTx3DSNgSR2EiShsjU4gWSBYTPjUEaDkkRlgFLqL2Pxf2LSU0TTkTZKUUMUMVZJszTQY1YhMmU1XFV24DbxfTLHIERjs1YGoDQzTGaq3zbOgzL3vlPFcUbFEUVpQWUsglRFkkd1DlSFczRA4zJwPzSOU2cZkWaM01Z13Rb3YjSWojVZgzMGYFN3HSZqTSNmIkdqYCdAkWbHgVa3kmT50lQEgUSyXmQxMzPoAmaHwVXn4BZvc0cwbDRp8VV2f1Zr0DcgI0LKw1bhUzMAsjM4clYNMEVzPiT0PzQvT0ZxMzaRcWQkIVc1HiZJMWX2rjbhImTBkza141T1vDcmIESSAmbC8lMtfjL0QVXioDNVYVbxYjX1XUUHMVLwombvIkPuo0QtjWZ3TiSkoTQ3QTPyIDUoAGdng2bsYiSzkUMGkzPlAGRJYDbQEUSPsjK1QEMyTjQ1sRMGEEbvYyShsxPYESd4z1MAIzLEcybFUkYnAGSCkCaoAiS1QTQXU2RwvTdYIiStAkTNslT0n1LMoTYRQTZDM2bMElT1cyUCciKw0jZOcENrI2PQ0VZ2kWSZklbYA2T1HjTPQDV1UWbqT2T3vzSHYjV3XiMggyaMMFYUI2RugVapo2LwIWZgQ2ZRQVdYclPIgUa4DmUjsTZqAUQxQCYEYlKKgmTAYESqTUNzT0TUkCULo0XHElXYUGTGETVzACSzkGTkIjPs0jVjgTZCIlQk01S1EVU18DTYQzUDQ2TNkkcLc0MtkTYoYkboIDd14DTncjbAglMWgzatkGTvU2Zyf0at.2QJIlXKoVbAwlYrolb2zTP5YzRT4RVBQzPQEWT1cVTzkWRFETYIU2PqYka4TSYjIVMjQDZgYFVQkkYM8VVG4RcLQVTFwTYrUCV001L2jmdwgFZ2gVMygSZpkiS0gWUkYTVQ4BcJ4xZKkVNUo0aMkjKCYUTB01cBQ2YTMCbjETTEEmaLwFaxQjU4H1bQklUDgjM2XERJkCVocEbzDDVtTEVhMCNMYTM1IyLJMyJDgWN0bzUK0VTFISMmMjPUoVVDUyLzYzT4PiZQoWLsASXNcSUX4VVSMTS4UGLNAGQ13hZgYjQGAUYOMVaJI1YzDib3kWalUmZYkSNX0FQXg0LOUyZYEkXSEFRnQFUuwlYugCNyUjPuU0RQMTNJAyPzslS2rRRyfSTi4jQWg2bYcVXPMCSiImPIo0aWg2ZZshUZs1Y1gjbmUzU2wDNwYGTHgkR5YkLwfVYrg2RMkGTv.iSJAycQYWcJgGZLY1X5EUTgglTAkzUtICNHomZ4cjaCkTQhQ1TU8Tb3b2QLAmP5UCaiQmUzLSc4.UXyDlSykyPBcFVyY1QYwlLQY1Jr4lKiszb2gUVqH2QCEEbBAyMQs1Zn8VV2MmdsQUZt.2P4IFcic1MRkVTKgWL1TmdwvTVlcFayUFYtIEShkjSi01coUFNvkTZQ4FNpU1QWQjSFc0LyXmRPY2PVMVM4ImTkAkVsESb1fEQyICauczaIQ2QKY1PyIiYPQFVUgWTv7lS4j0P2TyMQAiPxQDQOgDL0TmRxvlazgDUSAmbqgVYJcjR3UTQy4xYLYGQg8TNp4jVBQSSJ4ha2XGRQclTkQGV201TB4hVw41ULgUP0nFQ4vlX0.mPqTlXxD2PgIiTMMyY5I0YUc0TtcFcS0VQvDDYPcDarIjKGEWZk81c5QkQPgSc0vlclgTVHQiZYwFU3QSMqU0LyIlQrY2TlIDNvojdlsBSLYiPqYWQ2nlLT0VdqUzQhsBVIUEVt4RLmoEbBcTVPcDLpoWY3XmYwHCchUUUwMWPhg1TQYWbqIFbysjKYgjdnElPvA0U4jEQP4zYGcyXVUkYzXyToQCMBYGT0QlKC0VPxQjKtUmQgASQVEiYvkTTyImRiEDT43FMR8FNvIzQAIWS0oEZ2jUQOEEY4MCQ4jiPiUySMUkKko2bwTlTtIDNE8DcxsRU4g2SIwTStLGMBoTQMkEZs0jXV8lY4HCR0PUV1fUTLMiXxEWPLkictLSQtgCVwgTPW0FVicTcqPWXMIVbRc0UFUlUkACYOckYt3hMnklQ1kzaKczPnIyQog2Mx8lau4Db5sRPRASby8zSOo0aXYSU3DGdE4xSHIUXKgVNLcyXiM2Rhg1P3fzclclSrYTczgVavLzbWsRbOkEUsczcCkiP4DVdQM1PlMmS1TjS2j1UY0DTIkkT1LyY0YmYHYGTSUkKkkiXiISThU0XSY2ZF4FTlIlX3XjaZUSNwDiU1L0SRQUUT01JsQTTtjWQzvlUykGMDYCdyoFUCICRlEFUpQjahEWdYUUTFMlQT8Dd5Ykb2kkKQgCQDwTXGYCbkA2byb1RqsDSXUDN5YEaBMza23BY0nzYucTNIMUbiMyJxHFMR0FSNcDNIYjSMoVUVACatAGUJQzJwckLyDibt3xcEQ0Z0vFNEgUUhQDQIYVbUcmQXACZ5MDbsEzUt.CURgVULk1coEVT2LEQFcmZuoVakQ0X3PDS1M0UyfzZiMidqYSRCU1RzQWZOw1PIgCZOYmZMk0YsUTQxfjQyIDSS8zYNkTLkMCSMIzXY8FcyMFYEU2Q2bCQzn0S2PWZVYWaHc1b2Iyb5ojank1RtjTUh0FQ4bFNSQybRMTRrETaEcjYyYUbHw1TzbVRlwVTYMlVCMkaZc1RtDUYFcWYUcDLEkDT43RMEM0QhMza2TEbkola3rFN3IVTYAmXjIjZ3g0Q4D0LqM2YKI1Up8jRH4DanQzULcEUk0lRF0lVXQFLy4ldmYFYsIiTlkUMQkDVNcFdNIiYL0VRF8VdYMUYnAyP4IzSn0FasUCToMyLEUTLHE0Q4kWPqnmQwLmVlQUSIUmb3cjUy4VMLIiUUgCRuozTngWRRg2QvnmUXgVTwUlMGsVMtTyaz7DMpsxZFoVXlQELgMzJtDGYtUDVJklXCQVQNQ1THYDQKUmVBkiVkczbYMEMZoDUrglLlQyaJEWbzIULwXzXZECUxLTNKQjMWkWd0bGQTgEU3UUMlISd0nFQGYybhoDMxTCLrIGc0cSb4o2XKgkRFAmSiIlRlMyR4MSPvsTVVomVwbjZRomb3okPJQmZyjlarIyTJUUYGMzJtQ1c4zDY0ESaykTVt3RSTUlVrcmLWcmdikEV0DEMIQmKtgmUWYELvbDa0gWYgMUb0bTMA4Bb1bGRwXmSYoFMpQySMQEZycWczH0UwQTYqLVb4IWNOwFLYc1chEFZQMzSlUWdugGQg4xc1nTavj2JqLVY0E1TToTTm8FVzr1POkDdAQ2bgcGN1sVb1ciKQIySUI2QOMCZ5cWSqnjZh8VUiA0L1rRQFkELxUmTQUVSBMzP301QOY0SLslLEkmR3PiZ1YicqbkPCEkP5IzQoUma5wlLy81UnkjcYgVaPc2RIgEQ1ckdqQ1UmgWSy8VaAIGb2LEdjclLDIUQ2bCNLcEYOAiatTEUVkTSAs1SNslR0oUNUYSLQITZRQkcVEySTMjLxXlUVkiLyQSMA0TYiMSQiglRyIGVGcjdyMEZrgScI0TVTQSVj8TMvwjRNcySCgWZXAUa4jDaCsVS3o2cEkjUwEjUrITXFIGd3jTbvsRLREGSJklV5c2SYc1LjcWL0HTdLciP3vDTuckUSc0bKICYAgUVY4jYsMFa4zja0gUVpA0czHEYrsVT0MmKPgVQxsjalsDUTkjUy3hVtwTcJEGNTg0ThM1TlAmZW81TEU2b4IDV1rVN1Hkd0wTNyPlV5I2UDM1ZEIiYSQmKCAyaDUCM3cTbHo1MGUkLvgFUnUzSA8VdIAUbqnUbssVRpAUdyYTMwQFcOwjdzgVZgEVc4TiYOcjY4nlPMUTRFQiKFoWN4I1J1HSYUcCbx7jP3kVZj4TTvETLhMDVXgWVokCbEMGRzYVZqTjMVgScYE2ZyUkRqolXtDFZGUmZxDzcMkSQTsRa2LCaqXGQXkWTlQFaoIzT3gjStQlVrU1SAUFY5wTSOIUPJMCdwUiMugVb0PDN3g2bJMiZGc1QGMVbNMESxjmLuMFVHUiP2XTL4AiMRkjPykWVR0VP2jCSV4RRuEVRnokLDEVaSMkRLclZZ4jXOQDVBoDSqPCMt3FbyjSQ5sBdU4BT3QzbOczYOwlYtjmcT0TQlgzJw.GYk0jKxLWZZslPuQjUPkFbqjjaocVV3DiL1zjMw3RRiMFM2XmRFkGdOYkSgYkVV4VNhUlc041TEQTcZo1LsQCNgoFRDIjR0DlT3fFVBwzUlI1XqrVPL4FUMYSUBgyZ0YVbLUSMIUUSmMDU0bVQ1EEcIgUMRclK0fyZ0cSMqT0JNoVStg0LqISUXsza5gTbzbEdG4BbLc2cpcjbyTDTpE2cvg2PlYkRw3hM0wzTnwDYoAkb4vlVwokXCUWYo4VVqHUR0ozYlg2LIcGawwTU2cSSOAWawDVXOcDcHEmYAolXCUFcOMSQxPTctgCZPcmYSIkT2LiXIkTatQSLDIGdIYGUgIVMHoTZtLDLw8jXGY2cLomVzYjSwAENhU1QyszPwMiKWUSX4cUc1Mlbr0VTuYyL2olS4XyPjYSXzHiSx3FV0PSaLYzaNg1JJgkPlUlP0AWcgEkXIImKtsFYn4xY1f0TpQWUu8VRHQ1cwMzLgY2PqECYZUWNgM0akMDS3EjVNczZEAWRFc1QvzVS4jGLTUEMUQGM0j1Q00zLQIUMxQyUngVa3PiXP0lSyT2cVUmLsgCVK81J5cGZN01JUgjcX8lSRISTvXmQMAUavQSYUcjQhIUbvsTciASU1MVM1HkVNIjVC8Db2gCbqjlSpkSX0Lzcr0jdIQDcUk2RRcCakwlSTc1MS4DdzPyQp0VQzHUYqn1b0flRSUlSVUWTWUEaOUEdFMSdIkUbVcTR0PEQZY2PQsBVQYjRyslZoglYkMkUzI1agY2UgIkRybVTvUyTxUVLD4xaz3DLVUGa4j0MloEZAsVUgYTXzQmSrY1LJMyZ0H0M1E0Qlk1cBwDT1MWYtfjPC4xQuI1ZL8zMIMmb1D0TFkVauQWYp4VLEgSRtk0R0zTQ2jlU2HyTlsxb0EEVRkDTC8Ta4DyPVcVVwkVdKoFNoMCa4o0Q1D1JWMjLWQyYxMDY3DkZWM2anMVP10TSzUWZxM1RFsjLNYTbv7lZOA2PXUSVMQlM2jSUAUVaNIUYxQlKVoUNqjUcNQSQ0jkQr4TbvL2YwDyQp4DbTU1aEozbyElQ3AkVN8FT1sTaN0FbJEFUucGRVM1Y1nmM2Pja3bEZWk0ZN8lLtsBVgoETtTVSzIjRi4jaNckP3flY5kiY1jUQxXUMCgUUTEybJIzbG0lMDglPCAUQmQCT0DURxD2ahQWa0EUR3MEYCUCR0bEZzsxQq.UYog2aIkmVYAmYXkzUy.GaDIFc1sjPqLzc3QycucEcFESLtjmXQwlVyrlb3DTVqwTMVEWNNkCM2LzPY0DR2rhLHMVVY0VZOMmaVkEStzjVxcTN2YCTxvFYEU0TxYWcXUmTDgVQAE0SuY1Skg2UIEWcRUiZxITVxDTLzglPVo0STYicyIkdScFaPMDSjA0XsIiY1oDYzL0T2s1XqsTQxIkXV0DZRoDZs8DRLgjQEEiK3UEM2c2QYgWanMyUDEVTyHTZRkEdhMVSqnzZhMzMOkjRw0lP1QEMvf0RSsFUl0lVMUjV2bjMVQlPxfEL3MDYmUEdAAScjMFTPMyX0AmVlkiQiUTaXEEVj41TVwldvASUiAEMC0FbyPFbnwzaPckKg4hS0c0LSQDNzQUZuojbDkDQ4sRco4hSTglS4I0c3oTZmklSgcFVYo1XLQlayTSZoAWLToUdSoUZjY1U1XlYyUUVI8VMyPDaWIVTwfVYgEEZ23xTmoTcBUiMP4lVIgCbUMFVzsVVyE2P0QDVvDzLvglSKYCY2TGLTsRVyAETqA2LFshXREEcwsFRF81PGUyTKkTZ4DFQIwFNsgSVUQVZC4RZzolMt4VMEEiQXU1SpUjc0.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.Gdz8DQM81X4M2ajEjYoQkURY0X0kjPrUkRto0JoQSR27FbXEkX2HjS44DLYY0XLQGMgk2MOsVZLIyRPYkc3kmRlkWZtPlSu4TM1rxSQYEZqL0LyEmV1ImaFQiLqkGS33xRM4TUyISZSkWbZwjKwAyQ3PCUZAERhklT3I0ZEEVdVgCRkUVdsAkbtH1U0ImSwQCUEMVS1TjZGoFVG4jVQU2b0U0QugDShM2UJE1RDsVRtEmaFwzJysDQIcTZxPWYN4RLpEmTQcVVtjzLtg1XgEiQ3PEZkMCMBkEYsE0cvXmX3LzXOQDcYMUP1PVSzbSMBcFcBQyctAkLz.GbrYlUocWS2vzJpAkMMQDV1jUdGUGSwQ2RYIVSAIzb4gFb5UTRhk0S1sRN4j2L5IjUhQULqTGLMEUaDgTUmozaYI1csoTLokFZpYjT1MSQg4TLGUUXq0zbzP1bR0lXD4jX2PDNjEEcwnkby7zMDgVYSkmQRgUSSgTUoIyYtjERVYjXiEiT2XyUFokVxcjP3sBdx4xbqQFcUQGQ0YVcBc1JrcVYoIWLgMUaik2SwAUaPQia1U0SYc0TXk0SIYFViEFRCcEdHAySX0FT2sDSVITUGETPDImXhICYCYmSEAUZ0HVM0YFRY0jMtAWRqzTUBkzRlsTXFgGYzkSXQETZ1sRRq3VSNAmYwczYIAGNAgDalIjRnIELBomYwHDLT81UJwVN2oFdT8zbNUCM5EVcvcjKtXzMR0VdvfGY0wlZvTyQ1XCUPgCNVACa0bSZwsjREwTYA8DU5QzX0TCMjACbzclY4LUPF4FZqIWNJ0lKqP2TxzjUBsjbzjyauUyPEAkPtAiKA8VPz4jcwLWUNk1a1jSN2USUqjiTjAGLmgyYi81cKcmQMYUSmIUT4HUXmIDTJQmdR8jYs4TNEcyQU4RVyoGb14hRpgkLxnWa3LlapYTP1Y2aSIWPXQGLoI2b33hYwAGamoUdvfGb3czU2gDMFUWYXM2Z5ozYOQjVwMkZSMGYzPDbE8jRMMFcgI1UZMGL1XEMWsVZzcCcGIEbVYmQv.0ZAcSNZoFcmUUTSQ0L0LTbJIkdzQmLJAmMVEFaHkUNjkEUvU1TEcSMQI1cYk2TioFatA0ZJYWSqrRZIgUcMwzJRImZ04xPksBL4QjPyk1bOQWPwDmayc1crYTMGEiR2n1bjAmahAGLVIkYTsDVOwFLsI1S0DzLNMlLOEmRpMFawLCSAQTTYYjLTQ0Y1g1ZpQ2S3.WYiESSMQ0aq.kcEETNFESdMc2Y3DULqsVXZMVNxDyPus1aZMURhkCUBsDSpA2bpYlMlkCVZQUdIUiaxcFaywja1nzUFAiaxMmMmYiaYsTP4j2Q2YFbUMUcEokdosxZsoTbKckUnYjUnUWUmYFNHsVMNoGTTwFcooVPtPTVWcFYAEkRT4BZLMTcSIFVrgmaUEVSJklbDsTcPcWVvE1UGklVxrTZkklM1XyawfURLoUa4XGNxMDQl8TVFAUM2UDNwYVR3QSM0LiX0kkaKMEMEYidTETZpcSVXQGNsEUPSgSYsgmUZgTQFoFaAgSZ2bzYx0Fdsc2Y1gjVW4lYAkjR1XESmMyPlgWXlozYjYDLqMFdXU1LTMCQD01QLYDR4PETqbVQVgVNBImcgEEQT4DVwgVUTwlMOkCLjkSQQcmZFkGLOMlYVQGUNESPQwDdXQ1P0UUTEYkV4PWTmsjYUUid4.WVpQEZVgmaWYGM4EUSy4jXnoFZ0wFLwXjchgmatUzcvj0PmUVYVMmS0Ikd1LzYRwVM4LmZrEFZwDzROI2QQYmRPQ1YP01UwbjKVcDbxMzJtbjPXEEUI4VMxIVaXYFczkmUggDZn0TM3XDZpgCYxbWYicUV5EycD4BYvf1bG8TSTMUNlckSYQ2cq8VSPEkQ3AiXp4VU2cTa4TzLQkGbncDZPkDYqomTsITLxzTMRMTLpAELxPURjU0a4o2YvoEMxc0R5IEMwvFTSkFcvM2QJYkbh0TTLUDbCUEQxISSU0jd3L2LtA2cFAiYTclQ54VNtQyUZ8DdkACbDYVXPYEdCcTcWQmauM0Pl4TXk8TUQo0Y4rzb3gSckM1MHUVZUYUPLgCNhETaSgVN4YWTCojZX8TSkElTpA2QqD0RisjZzIjL0MTd4jTYvU2bkcyPqQWYFQEZ2bEbIQ2ckgjUUESdZ4Fbik2ZSMyLtDEZ2szcjEjTFQzQlEGdGY1YxcCLZkCNt7DQzEiR5gmP1vzcXICSVQGc0gFTxPjM1.GS03BQyEEcP4DN2vTaSM2UlY1YGYlSmITdigGRwHlUqnUUnMELvnjVGsjVHw1Xk0DRpkmQhQDS1EzQwYGdLQyLmUyJ0kiXTImSsk1SHMjVwUzLQgTP50DRlY0SKcUYFUGbFQmKzLCZH4TYtTWLzXkc0TWMpoEUZ0FMuQjcRoWUOk1YM4DRBkFawDlbqMkbyXlVIwzJ1jiaMICbsMySuUkSgUWXybja0v1UyQTV0rFdmMUc3H0JBQ0MtwjV4.GMqkSTJoUMUE0SZgGNLU0LFEkbPcSUyDSPqD0U4bFdiokQJkDcK0FaNI2XkQ0X2T1RxgSdtAiT4czUvbGYKsDaxEiVIkCaoAyQ4ISNIMjLzHTPQc2YjoFcG0Vdw8DL4bSQZEDVnkVUDYkcZYWNmgUUy8zUYkSbx0lQ3MVXrQjRpMFLxICZsUSRz71atnVNucibHI0SHEUVVAEUAQSd10zXXYDZYE1QRkiYLkjQMQCLxT1YgcCb0g1Jkk1UvwTR2QmKTUFTZYSQtACYAkGbPoTNwrRQmM1RTQGSro0YRUVdiMjLIk2XwQTdDU0T4PSV5kibSwTcxLSX3olcAg0TZEEdPIVdRE0QzImYok1RtbkLqL1bvkDRDoGMFUVSv41LpoUYTEjLyUSPSM0YyTicEQiToYSZUEmXjMCSq31cwXiM5ElUYQ2cBkic4cSQVokSsYkXHEFZVQCQEszbvo1LLIDYmwTSTITXoM2PW4lTMoTdvQGcoYWN3gWbJASLHITNyTGMV4BT0LjXBUEZyAySqfmb0sVbJAEQHwVPvQDdTcVbzsjb3f0YGgTbh4VbqbyMSIEctXkUNolbuEVNhcWSAQFZiUGSYMmUOIja2sBcYMCTyHlXH0Tc1.kKtT0aGQWUtzFd0jELDkyYU0jQWE1bTkWaYcFaq.WQAQ2R38DNncDarQlc0TUNwMTdOgyPBkycTkENDIkPrElZyHEU1sDaxUEU0jzbwYjaiM0YykTdnU1Qg0jZp0DLGMjMnQVVqbDNiE2ZOEybFUFMQcjaoMTT2MkaNcDVjUjdYMFThwTcCYiYWMVcxHzayIlKkEkS40TV3jVM2EiMNAEbjM2a3wzaCkEVNA2b5cFS3.kUtPjR4gmaZQkUvczbmwjMMMDd0L1RwTTQwXja1sBbAQGNiglX3XSUUshLKQVcAkTR2YEatTUTkolPi8FbPsVTwT1TKESa4blVlEzRNEUMMI0ROczYvMiViEmdsglTtYVYsg1TVcGVFcEdKIUP3jEY07zZOMSVJg0aEMlXUcEMw3zblwVdwIDcoIjYuQjMqjUbjcUbMgGNYUmXrMyPwfFQL0zJuklKk4xbLwFZi4lcNMlMgoEVgkWL03xP2.2PmMlU2IiQ5wzLGoWZzo1JtLUSxYiMJgWLyz1YY8jU0gCTVgTc2PlVpQkPLkDZgYmUlgWMFYEb1ozQ4j2RtP2SZshVy4jXOcCcCoWLOASZDMTd2nmMqXSTvQkPWcjLlQGTzQTM1gjP3HTLhAWTV4RbEIGaoo0ML0jTRkGR1IUbU4DYYozRQMTbNM1YQUjXWAkawkFV0HWVqTUMQkUUVYSTvTkKEYCSlMCLvc2PkoGYGYlXsk2b5cjPZgzbZckMg81Lvg0cybUL2ESLDEicPE1SwwTLnshVko0aHEiSOIUMng2UiUTMukkMsMVdnUUNybidhITSiA0PzXiUWUyZLIUayHkVJIyYLgmTT0TT0flM4A2RV0jVOYURVA0cEEkU0fVanYUMyDiXjgEQgMVQDolZrIEdqHlaHYzMSQSUvbiQJUCcj4zRGc2SQElSrgVV4IFZwXiKLAEdMQlKpIUZyEEZLUUR4g2Jt4RamMVTtwTLmICUFclT3MWZpg1SoombnozY4AENNkDQUs1aqTCaWoGcPQkZq3zPC8DMGIDTmgVQTwVbEgWYPc1cJwFTIQTRj0jRp8lVqIUYlkVR2HlK3MDUNMmT1.2QUoUcKUSU3kmYjQkYIIkRqHyZqXmcXcURFkVXCQzUy0laPA2XyTkKoQDU0gFSmAiSWYUVTEDZrM0b3PWaVojRkISTXAyXuk1UO4TSvb1RoUlTNQENKg1Z2rVTkIFURMkVsQUMIQCaBclckUESSEkYDUiPrQyUlYEQ4XkTzs1PxfTMoolXqo0PqEFV54VMREVdEcEMUUSVBYiTTslVq3jXLUlbzT0cYkSNUAkdBwVYlY2J0kGaloUS5E2JKYUZMwDYuMER2bUSxEyaZUTVw4lTpkicHojbEgEa03lKJgWSHk0aqnDMu01Mx0VUtI2UkUCNC0FQs4jSk0DVEU1a1Y2TEszRYwjLmMSNVo1bPMmMSIyXv4RSpQzUYoEQ2PSc2gVY3QDZs4laCAWVx7ld1nFcRIjc1PES0zzTs0VYTYDVrM2QvAyYp4FaTUiMwLDNIEjUuIlX23lT2b0ayc0cz0DUFMEbJ81bXEUZ2PUSHkFd33TMocUR2klPwwTLyn1QvDkU3sVTUkWPZYCcjIzRznVMGI2JqTzPuMTc3Pial01RoMDTtwzPWkGQSgiXBEzYwgjUynlYR8zPFIybzjFLvECL4jlZVkzbtfWUAYmb2PTUt3VYxITYBUDRO8DV4vzPuYyJEshSY4DN2QTRzsTYkoDYSQlYnIUTtbWMHcDaWIGR13xSsclTZsjR40lYpgWMsEkMjECNRgTXjcyYEQVdvjkdCkibnUDU2rhQLgScU8FU3MDY5IEQNASVAkEaCIGVSc0aVEidN4xY2jVbuETV4bUZH8lSjAEdpwTRYgWaW0FRPsRU4H1ckgkb2jGZqXzckEkbvbkQDcGcM0FLtv1ZjcEchESdO4xSSMTVwczaqXWLv3FSPkFbxcCN2bTX0bjT1oGVmUkLFkTRs0TP4HyRIoDLoIUPSQTanEma2ISNRcjaAwjQZMmSHYkPgglQ1DVPzLUcnMzMpUTUwjzSAclQJYTYqH0JRolKV8Tc2ozUVgUMYAUVyUmXuE1XxD0QpQlLm8TazjVMH81QqYSZz3BYgQ2QIUSQtAUMXg2JMclQrc2JtsBQ3MmPnQlKtD2LiISdnISVXkiUBI2Rv0VMyACUCEUSE8jdtsjd0n2c3TUVY8FUI8jXGAiYv7VTzQDQFUiVLsjXzf2XkYUSHojZrMiL4QjQxTSZlASbKslKykjaHgiVnMlaV0TcLYzPQEzMRcVTMg1Y4Mkcxo1LtTld1c0P3XWZ0IEN1nDLUwVT13lQ4rjbXYmKsEiLXcUPCI0S1EUVUgyUpQ2RtUUQI4TMDgmYV0VUjQFZLwjPk4FTVUCMukyTqMVcXglMqHDMDUTS13VcKUVZqTzbuYzcv8Fb3LjZKYiaWUzYQcmLIUTTpIkPMolPrgUbCkDN2AycwTGSSoDNBAUNuQCbz3BY4vlVZgVc3kCMOgUZ3gVNzY0RVIjUTklaVMUYjI0LgMjXxcmZM8lT2XWQtcybEMVTy.kYqrDROgjLnMyRtTlK3UmaoEGa4DUV0nFZGEFcTMWZUQ2St.SMGombZglQRMUVXQGMhMTdHo1XoU2buIkQ43jXrMjRmo1XGM2MNMkbKgFNvAmUu4lShIGd3DVZ5oVLCEySVcSQmA2LusjRVcUR0TUSnITUGkiYhYVRkcTUlIyQg0FdDImLqcUV4g2QyXyRyTjSxUkRRgzMp0zbEkTPzLEaiEiSoICZJYTTksFS2TWYWIGdycFLXYjQLQTaIkVQ0M2LLcDUVMlV1rRcE0TbqPjK1rDLqQSPzkTSskjaxbkLvjUZ5oUZEEzQtolVIwzJFshSmwjR1b1StPjcoAUdLMlc3A0YQcmYOcEMnczJnAUX48Td3zVYW0zXzTVdHkSMis1XBMmdToVY4jlUPsxPPUDL2UlSSokZCMWRxD0XtDWY5cDdUYFY2MENWEyYNkVM0XWPQQUMooVQZMWa38VQNkCZ4jlM2jWYDolTOsxSVMSSgcSTRYTbLIiQ4njQrcyS0jib3fSazESXvDlUMYScvslRQIVLswTUJUkL3PFYZo0bEAUXFk0YwLCSMg1PQY0SzX0MZMkSw4DLNYmK3blQvI1cg4lQxb1P0EEQnITQNIUUMIzXZUScX8zQ2XmUvI2QtYDMIwTak0VQ0XEdswFVR4lY0UmYCkmYxbVYvbkVzslKokTaPgULxYUXPcyQYkjRScmZGIiSzD0U4MFcSMFNMIzM1XmLzDUS1byJYoGNWcTM33xcZMCVzTUTtPFMUokMlIFSl4hLmMTL2fSaN4VZMc0YQI2YjcGVwYTXwkTNzXmSBI1LukGLlAGY2X2TIshasUib1bCYyICLmclSyTlUtXjT3shX1I0XugzXyU2aNIyTxDlLxbVQXkUQlUTLl8DcqrxUxE0ZgA0UvzzR4jzaC0lYiQFQxETU2MUMOQiKXIlYFkWPWoVLCYyRBkzc2nkTUY1JyfDLt0TY2YjKTw1LqTCUwjCY2fkQPc0PPUlTwUDbMYEbJIDM3XzMC0VTRg0Pr4BdsMmcVESUU8TLqoFUwU0PYYFbwg0PqfWV4.CZzc0XSg1bQMFMQIFUUgFVo4xZJEFZt4FaPsFZCMERzAyU1b1SsgyLn0zSybyRIk2cLslcIY2LsYmLxfGRhEWMFgULwE0XUIGVBEEYAkCdygmV4jDVqgDL4jyM5E1JQMmP40Vczo1aJgGRIsFVtcjKmYUROQVLpkkZv3xclgjLT0VQwYSUnMFVO4DSt3DbYYlVzcTXs0zUHkkalgkP4AkdyciMtUTRTozTEcFaBUkczLCdJcFLHElR2EiU1kCTV0TNDEDdnkWS0gCUqrhKjA0UFokVEQSRMQkU0gFdig0PRMzSPkFaMEzY0DFMJwjV4HzXz7lPiklMNcCczjEQwbERvLlQH4DcAYlU3PTV2byU2kmTjMlaKMmVig0LUoWYu8jMvEGZ1Y1SwgyYBUlPKIGaUIzYw0zaQoWd5UDY1EiK2Ukc3XSTvblYwDFLxjSMGYTcwrFSZ4RYA0Dc2DCLEkGQjQCRRQzLxsBREkVZoojQukkdQY0QvA0YRcFa1k2QvY2ZwElZnMWUCkjY1gkUGkGRT0VQNc2QtzTR08jUoMkK4L0QqTkdHQjSA4TLyLjcVIlc2A2JiUychomd3T1Zqrhb2DzUzzTN4AyPLMiKFcza3o0axXVdwMjT581QAQlMvUCciQjd4rhULQGVxb1a0vjatjUM47TctT2USU0av3VNmYiaB4lL4DVNXAWcVkmZwTDczTGM2kDdNk0Q2XUdFcWZMMFcywFNtk0SKY2UNIELKEkLygFSKQmRCIWaYIkPqfkLSQEcVoGUUwzbTc2Svc2RGYELTQjQoUkdw3FRZcWPEgkLwIWUzXkdSUTSDgkUgQma5cCTmAWduYUQ2gEVUgzTxozXpE0XmkVQCU1ZGAGM3DFMH0DM1gjMrISdiUSbMYVSX0jUZcib4nFME4RZmMyMC4TdWYEakIyMzjGU0wjX4rFSIAkcX01P2UEVRImXZEiPNcCLvYjSyc2atgGTVITQ0LVQUg0JTcGVoY1YmEiRTMkVNc1JUo1JPc1ZQAkQOUSRSAGc3fDQjgmR1sFVTQiduoTdtHzJsw1JL8VRtQyTuMDVOsTcTMUMKwjXsUiTxMDLTkjRx3xUtnFZzQFRjs1JxQFZt7lYqEzTJYzQm8DNokDYkMWV2LmQDMGN5UlcBETUzfEZwLjbv0VbYI1c5oTVWQiKn41axHUTVkDMTklcqckZGw1MrAUMHkURysVdJI0R0kCLyHzczM0MVc2PtEUYKEmXmo0USQFYAQiUi01UTcDVvf2ZGYEVxLicrklTj4lZLk2QPMkR5AWXlAyP2nzcugiQ3vFS4PFTwQCbB01PKsDTwIWSQgiau0VQlsjVRk0SIQDZFszUJsRaLkFcmMGQm4TbDQCTR4lUSMyZyYWZwUyRwUUUBoGQRcETPkVbhASXmokZCgkdBQmXQAkMFcSYj8VPooVZj4hL0fyczs1TAIUajYWL2YVVkQDQJg0T2nzJnsjVAMFdt3BVSA2L2DWaBokRqfTLok1QwnDMuQiR241Q0MzX2LGUNIWR47zZEA2UDMzRoE0PV0FdpEiM2QibXEGbh0jUvj2Q2sVPNITP5QGax.2Q1UUNYkkMzQzaFo2MOYWbNciaNYiUKo1ZAMyUxQyRPkTUnQzJgkiaB8TTJQ0cuglPybGZHkzSmcmcIUiMxj2SxMSdz7VdToVYUczXXEycyDiX4nEZKAyLwnlPSIWXRU2PBcUU4UjXxAiXyoVSYMiMVA0XqEDZtflPJoUbtDzQKA2UlETbKoTcrgVVFoDczbjZ4LDQQcGUAgFcpk0XjUzMmoTNMAyPyIDTLkmTw.yT3gkSRElcQIVVvEWdYolP1PETHsTPWkiZvbFUOwDYFoFctoEQt3zT0fUSrUyQKQEb1DWVp4zYAMTPR8TZiE2XqrxaXIiLQM0PikVNgEGYC0lXGYSdq.WUMglQxTkLUckcHQjV401PggiVuklXogzPpEGYD4xc4AGVygmdGYSZFMla0PmKRw1Py4DSuQFdRkCVmMkL5wjdAMFY071Ut7jL27DMvMWPrYVawjWPAUTaWMDVyT2bxDyaAsBYHUiUAQlam8TduEmS1cVNrA2Jw0jZqMVUSYUctcTc2EGYjoUUKciZr8TdOoUXQUjUqwjSEY1aWoTNG0TLJUEV2giKAYlK0T0Z1Hzb4HWTZckM1TycIQTd1DWUlcGczwlSzPULSojX4DTaVkSd0b0J4kib1rlLBwzRu4lL4QWSqQkMBszYyU2LAYiQz.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.WQyoGTFY0TwXVMtXDdW8Ta5MzcpoEUI8VL0sxMBgmUFkGb0AkT1PTQUsRR1Q1aqoGdWIFQXEGRToDc0f1aFAiciISalkFUTkDNUgzR5UkQhYmMlQSMJEyR3LyUXAWYqkiVwrBaNg0QFMDUgoENDIzY1DSdQgmYwTyPvH1TsIyJgIVN0j2MMgGNq3ja4YTLrcCVzIERAMlTIYkK0U1TTIGMZ01U4PzPQMkTtoFZ2fFdrIDawY2ZVoza1UEMU4zPQUCclcWY2M1MP4FdgEidskSNvfFTiwjYj0FZYEkS4TiVTgzagoGZlk1bTkCMoUCbtTycrw1R5UmQnomVDUSU3UiQnIWQyEUVqYjQiUmSsolPoMmZ2okZW4xSYoWcHo0MAM0bpkTapomUJ4hV1PCZzkDQgkSYgEzYKcURPoVNtLCcwwDN13TdHo1JowjYDYkMxUWQHcEMv8TLq.yY1UVa4H1THkyPxPER2MTa3nVYsQmMXEiapckRD4ld4YzJow1Uj0FQ34FT1TDZOQzZzk1Rzo2S44VNJM0MRgCRtEkb27VL3U1L44TVXAWcxL1Q2E0P3YCLYIVPkYEQ4UCUNYWb3zlTGAScDcVPBk1T4TSSxPldggySTg0UwrBSQY2PmESMKI2J0nzM0bGdokSN3TUY0D2Q0HFUhMWXEozb1DFQV4hTUgzUjIibS4xc28Vaq7lLK8zPCcmZl8zaMMSY04Ddy4Dang2QPISMKMCc2gWMxISL4QlZ3gEaz3TXwYFZSYkTtbmL2Ejdpo2LBg0MgEWMDElQ07DaykTaiMmTrYWXlsjZ1rhUpsDbAoTVFgERHsRSgIFU3YkThEEQnshQhgiUBEjM0vTcEgGMx0lbHMVR0E1QygDavUiMJIyLMEEYY4zcN4lMQI1XiUzQCYDUFUDYhkiKxkzc2MmM0M0XYYWX0AmU4DmRnkFRNk0bzgDQqnDQznWZpUTTusBNI8DdPY1bowzRqYVQ2T0QCQGYZMWPOQlLEICNyHFcv.mUZk0MugzM4f1TyTVLvbkQJcjS3U1Myc2Q2IETncEVvDjXzfGZNYGcTsFL1fkLYgEcyTVaDsjTvQWU47zXSIGVpEULz0FV4TVNH8jLj4TM4jjZ4YCSZMUPTEyZNM1SGkCdyMmdmQ2TWoUd5oTPt0FbUYSXGsFNikGbiQlMX0TYUgFUWc1TzrDUYIWMRgFTiEzPwTyMwDmYzYibLY1RrYmTyPCaZ8TPVIUTxgjd0X2RDgCQ2n0XzcFVF01YhoGdjg2RZwVZhshYKEiTCUmcPUTdRAEYFMka4b2SVcTVv3xZgcUXK4TU0H0YqEmctT2ThQSZvLyXvfCNhgkcSoWMKgmcybSYSkWTMY2P201M5Y2XtnFZEQTMS4DRyMlSjQjdHU0aDYzYBI1Qj0zSYgzX2TmQkMEQxPCLskzTmAkctcGNgIlc5Y0TYYDdzkGbE4BMZYibWwVXYACS1jiZyQGTuMVct.ybhEWdhkzcynzYxfEdXYjdYoVVqHkYCY0a0LyLqPDQNISRw81JFQlL3MWLy3TTIUiaJIyPqTjcwfjS0rhU5MyZBM2PwbFYAAUVioWXLc0ZAEDLIcEbhwlMVkmQzQkVGoWZqTlXhYkZ2rlLZIDL0LEN33zSRwTYA0TV0EkSxASTSIWdVciZnEmQ3.2S5QESTUiR1kDazgCSwokdyXSNJgDMyn1UrYFbiYVXwgzaCAiM1TiVggDZ1QlMmUyJBQ1bDAmZBIUXUE0c3giLsUTNmEUZrQVbXwzSyEEY2IEN0HTM2rRdDoFZ3jDU5MyTAYSPAMiKy4RZ0.kZAIlRIwzTJAGNAQWTtXibmgyU2LyRGMiKtIyckMFVnolU1DFLx0DZoMyMnIGQngzJ4oEbxbybOYidXIVdYUmXYkmKtXibRI0QT8zSxE2c4rhYyYiMn8DRzoWa2PWbvQkYH4zZLo1TPQlZv4lZZklU0UER0szSwbFcRQWQlIVPzc0ZxHCSPEidYUiPygiaYEFZXcCd5giaukkdtbCRvn1LB4zZ3fjayvjKSIiVUYicBMGSzUFcPMWXXgVbxASUMoTcWgCZyzFMwXmRDoWbCEUPMUjc2ASbEklPIciXJQDT0gTcUc1RmUzS1UEdHoGVrciXLg2JDkEURk1QYkCcP4xS38VTLQiV4QFT1Eyc0gVaX8VNWYzX3Q1S1TGZ2PTdBEVMoUCVL8zL3U2MFYlUgQDaXgCbUwFYEcmcBo1aCciRkIiUYAESAg1RkgzUtsVPRYCaKE2a2MiULYjUX4zM2EyT0YFRScDS4TjaIMWM4flaIokavkya4HyYvEjbZ0Fa4oDTgcidMY0RSEzL0PTT3YmSNgmX4kDQMYFcFUkYK0DVyvlK3DlbooTZqrBR4vVVJcFQyQ2Uh4DUYkkMBolSAsTSmcFTUIUUNAGZxc2SrIiLSAEUvDkbzLza4v1RqkWaybGaoMCMxnER24RLPYVRVo1UvEkPhgzP2L0RqfCcPUlL3o2QwkiTvsBZPQybtokdWMSZRokVAgTbWI1c18lL4EybGE0RnkGVHMURKw1RVgEQMcmYP0zYrUDaMwFUQg0XyszU5cSYYgSd1T1RswzXrkUQKwDUNESdvrlZPEVYhQSS2j1ZuYWQ0QVNWk2RWITPMI2bvXkcuEWSpkVRvfEbFsVYSYlLKclVWslS2HlQUAkZskWSyDyc3P2XxbzL1LzPEYFVIkjRIUFa5E2RjQ1YtfzJxUjSAgyXH4jcBMUVhI2JzUFV2gDaIkDVWsBQJgkKYUzJSMTdtLkX43BYTESL0PzbFsVV4HSP5gzP1YVXZoFcwkUPUcUZlAkRoMFVJwDT5UFb441Sro1cDsjV4AUNPkFd4L1bsMEZBA0UvI2bCkUT4kGbMwDYHcmRq3zaBsVP2rVYA0jZtPkKqYmSwPCNtjUXEIWZzbWVhEDYBc0T4.ER2XTLv8lRVYENy7DZqsVasElawbUcPYmQpACaBozPtUVSPEGVAM2cAsFURETSOMlayoUPKgzUOMlZDszQIcyZyslUqshXGMGZxXVcvQ0J3Y1RwjlQpwjTSUGUmAkZ2sxYtPiMv.SNxPkQ1oWaWA2XUETUX4VShI0SDcTahMjXPsDMUciZRUFVsMlLYk1JWIDQPEja1j2SYszb1f2cEclKyrBbqnkSwvFNVYCSuUiKEgSbB0zUkQjS3n1QK0VRrIzbSQFSSQkZYAUNH8VTssjVMkkRKshMCI2RG4Dcic0cn8zQyshRxsDTvMSX0gjS50lLZECT1bDSWgWTNoUM5cCZqIiXuUCMKIETtfUV1blc4XjdZUlXsQFaNgCYFkSXgEyMG41PnUSLDMERzcFcWUCMgQ2cZYiRv0VdHQiT2fDbDwjQHsFNEEDL14RbXYTVIMWcgkjX5ElVxHlYqoWSzb0UD4TSyjWSBImYZE0ars1P3kELtnWLyQEb4j2Y1sldmQVaGslRjIkMDozTqklTO8lKjwDR0QkXvvjaRIGYTgSbUoGV1ckRyfjagMScMgSQLUyS24DYpEDQkICTHMlR4MSNwfkUBIUXCcVZ5YENtMUPxEzczokcqPFVP0FQ03jKl4BMToGNTMjQQAGUkUjU4sjbgU0MpkmY0bzMyn1TucCdBcjb1HiRZsjb0M2Y3vTSXczRkA2PMsjc0gSaYYENi0FM5A0SGkWTLIFL5oFZL0lXsEFLyP1bvrVasUyQYcyTNo0JEEVUukTX4czJQM2UAESLSokcn0jcUkGaxDVaTIiLQIEUosDTNAGShYFNFoDZ4LCUxMkKH4DYoYSPYMVaqkFd2AmUP4jUtUyJikjZjMCZholL3DzbCg0coUDYNACZGoUPTsTcOY1TggiPO8lazc2XnMUNtcFRFQ0X2YVRDQSZ1jjYosldBcGREkmavPDVvfGax4Ddog1QgI0ZzfjYLIWaP8jUvYkVuUDSps1YC0lbZglZ0TGd2bSRGs1RhEWSLUybYwVX2PiSggWdnYUZ4MjVYQjLqISUToFLSoGZ0.EUBQSNDshblIjavfjSogVUNcCQ3UVNFkUbWcidtLWRqzzLnU0YWYDaKo2RiUDbUUFRFkVT2rhXLcjUCkza0TWXsMmXZslZK8lYFM0XYY1JWQEZYEFQFYURFYmQiEWSswjPNQSdnQyX1XmZmUVUjkFSQQVVZkSP0giLv0lKg8VVAsxbUMFRZkUPrMUPwHEbKclMoAidsEGTvLza5gSbTMUUkQ1Mo4zajAiLSkFczPDN2cVbKslRqUUSAsRVznDS2MlPPQlRYUWaHMUXzH0cOEzUGESZ5cWUqXjY4rlb2Y1YLYzJ4YTcEoDSV4zYl8DM4jGNiQkSRU0XxrhQOoWcwslaFYGayMSL0nkYrY1byjkRxzVUAQ2XUYUU0PGR0LkcVMCUqbiKqbGcCgGVkoVPAg1SrUVUnIWb1U1UvgUSo8Tc1QFVUUTLO4VLzLCS2PWNTE0XyEkLWwDaIkDLUkDUwbDSAEVLTY2c0jWRzfic1HCa03FSPcCQtUEQk0jKjUkQvT2MXkCStYzU1b1ULEVM2sBLFEVR3MVN3g2RGMyTCMkVTgCTN4zZ5U1YtkiTig1Jw.GNJA0SjgTXXkUXHETXAYDcsQTLZMycyYkK3X1YQM1YuwVQjkCNjwjdGIkLZUSTrEUPXg0UzMzL0gkcUsVZCAmKjwjYDU0Q2czcNg2MtczMN0DbxnzLyjSc4IyQt8zbtYjaDokXVYjXqgVLxEUaw4VMSYySwb0Q0DiMyQ1StglUtYiVGkDU3n0SCUWdy8Vbs0lPWQ2TCYiVOw1cOokMwIWNoA0bVU2XkQTd1DWL4f0bU81bhkVTgYmQHImRNsRbDYkaxASUZQEZ1nzPvMiUxYWU3jldrUDQW41PtPiUzklKx.kVEgTctbCTtfTYpcUaTUFcXMGaHcVYBo2TyLUYPYjQFITTJQDZuklSWMTNvoFYwT1U2kyLwTCaAMkQgImX3b0UgozUAUkLAYyc3ozXvjUS3cUTJkCMiMlPWAyL2sTNtbFZgkVRzoFSpgURpICaJMSZnYzXNUyTVcGa4YzQmUWYiczYxjmYhMGNzcmYtTGYBIjSgUVRz4VbNIkSYIFSycUTUAWcuUlYngFQqsFVkUyZkESLZojUwHSaVcUVOUmQPISRWIlVRYUc03hYxYkPYgTQ0zTSmYidkklLwjVQ0sBMOgyXxgkV2fEUXcmXhkCaq.WLicTY2oVXksxRzDTT2AiajACaKITNl8TXJ4jLNgzLjcVLrAUT4oFVngSY3sFaN0VVZgmXgQ0XvI0ZzvFQuMWc4DEZAozQiYEM4HGb30DUV41LY01MFEWYDMFMgQTb5sTPJUVQ5AySuEmSn0lV1rRTLYmRv3VZ0rTMsgFQSgWSjwlTGYlM2vTS1jTUwXGdTQWLsUyTDoUdJkTNMkCbzoESWkjT1MCTYIkbIEScAQFT07jRO8lavIENAE0Ro4DSOolTkYza5oWPkshchY0TT4FMsI2RBcVdz3Bc3g2ToMEc0YldRIUYCUTb2k0bh41XvXjRFcEdz.mKME0QtYidEAmTqbDLlIjbxLzRlMyTkMTcUkWXLYzYRQmdp8lXNQWaKEVPIQWc5kmUVclLMYkbREDTygiR4klZ2nVZgUGTJQCT28TRmMUVnEkYkEGMkQGN1f1cDMUcQEzaBgDZNQVZlICYowjRMsDYRsRcKkSYBUTNR4DYTwzMQcUblASZVozPFUCLzTGYL8TVBI2YBE1LkMmR3A0L4HlaDM0P0YTNlsxbOojb0EGTwMVcxYWagU1PEA2cikmaZwTUComVRgiVRUidvjkRT8VXTYDR0IkXigDRCIzQQo0Yt7lKvDWa3QkLvfkYg8zbto0Pq4DYvUUXBQDcLMjP3fCYJ4VROkEbUUENXAyTAcWZ4M1bznmbZ4VbVwzcpIyL2QEQgECU3jiXtQSdQM0ZCUGQ3XzcwMlL4QGRJIkZzfTMIIzQSAUcgQkczYzbH41bS8Tcpw1cO8TQooUbtTVZS0VapEDTCQTayL1RAMWYIkkcNEzYnQlPCkCaD01JsUGR2L1JqYVbKQTaDYjUtXkU2PWa2UGQh4jRPYTapMyUKICMpQ2Pto2QvP2UjcWPoQUTxbkPw.iSJACSDQ2RNQ2T0YVUPcCVlgGZNUSSA8zayUkQYQVd03hVJUlav.SXqLzbiUGaxjTZvT2QPYiMtfzU0EUXBEEUqcTb1.iKvUCS4jVNVszbtHkSwLkLUwlbqA2U0EyTiETQLAGQybzXvPUXA0VTDIEYAg0cqjmV03lKmkCUDcSbY8FMUgUZRgCNsszXtcVXqHiaKQmPMsxTnEmUgUTTYYUPzQzTZk1JwX2aG0DbYYjcCkTT14zURcWZ3fSVWsRa131ZyMjb1nDUhIlLSszJpYmS1sVNqrlaiACRNMSRFk0JlcmaushcjgUSOAkTVQTaNYjMgo1bYEFcrEGcSIyavoja43jXv3zc2YCbLQ2MAcVcScTYqjmbncUNJYSZJEUPRgSdOYkT2XCUvPGT0kScBMGcD4TcwgyQ0o2RkQzXxrFdvPVTxUUVqMmKq41Q4Y0JFgFVSM2LEEidIgTXPgjd4oUZGUjX5YFVBUkavElSjQ2btYDQtLlVz0FbJYmYTcCYhgjKyQkcx.ELLMiMSUjShkGboomRUglUH4VYrESVKUUXLISZyfDYnkVSA8FSLMUYiQFMIkiQsMST1TCMtnDclUWXwgzUyIGY0bmQyLCVikkbAklS2sDcYM2awLCQZ01ZKMkR3jVS0P0UH4hcBkEVKMiZN4Bdwb0RJE1cKgzaPg0L4QUSBICUvX2LzPFY28zUZ0zUWUWb0PDTuk2PLMCbxHDZOUlPWQEcow1SyAGaxLWSLITNBcVVyfFLrcWctnUNIIWPBYzZPojQIYWSnwVL3UWTwIUUugWRtk1UYQSXyo2L2.UYDwzJSUjVqnUSTIiMqT0aEsVYWgGLQUWdqgyMW8DTDoWXPoESPAkPOYUPSYmZUkmX0.mRjg2LKomc1r1QkQzZWIGcTo1bvbkSlcGctTSMGo1JUISQXAmczQlVzIiaB8lX1HkMIUiUwDERqXmYCclRFM0L4rVSOM1ZjQ0SLM2cnkiPTc1UnQSTjYWY0vVVYE1Z2nUQWQSRA0zT3E2SIcCMrAkU2glc2rFRQkFRVYFLRMkcL8FLSUTag4lMXsjcAAiZl0VTSkDYPUFcSMUQVUkVnIDS5kidUIWL0zVVpcERMUGdWE1YXUzYlgWYvEVduMDQkYWLYA2YCkkUlgGLwIFaYAENHsVV4o2PKk1MtnUTPM0TU81UQIzTvkUXAQjZ0E0R4AUbjgCY2LEZngEazLzZvczTiMlT2EjPQgTaZkCNBslMzEUMvU1YpclQ4YkTg0Dcq4xZOgWZyMkcvXDNEAGZwE2P5Y0P0PUdAYDYFEGQoglLqH2STgVaQITMtHWTjU2cBI2URgiVXYjTBkFNmUlUPwDMR4VbrgzbtL2S0XGSRE1L0PmTHEFYjIkdzDiZZolPxX2MvoER3nmMgkURmwVXSQ1S3gSZIgjUzsFcv0VdD4VLE4FRIwlUtsTTX8lV2nkUEQFZLsVPyfiMGMSaIQDcU41JNoGQNcyLyfiKGYidhMjY2I1JgEFVAcVMRciQG01YNICLzQURlkSTAkWXtTlcYgENxkSX1L2MhQ2SH4TdUQkQLA2MwT0c0fWTQo2PPEiKSM1SicGRoUkYEM0JsUCQJYlTUkVZIgELrgjUoQ1U0fFTl0laq.WTkcmP2rlT2EkcDIGYWUyTI4jbG0TPVACYuYiK10zUjMlVBYjUAgUbicEYXMkTOcCN2k0MzLTcQkGZx.SLRgUMHMGV2HzSFgmZtT2LXkWY4HlRPM1L20lSYM1L3.mMhgEcDsBLr4xMrkla2M1SJYjZoIWUZ8DNv3FROgkZokyZygGZUgyZqkELlkWR2DTP1AmZtozZyTWMoYySvLjcVkUMlYTTqjSL1TkPyYiQYE1ZpElYMYlap4jQJ8FNtcCZWYyTzHiZuwlcHczUx4hL0jUZxnmMsozJ1j2JrQ1LzUyX0DESGU1TYsRX2XFSosjQvDURvzVc33TSq4Ta1szb3ASNqfiX0rTQk0VdBYlSnMVLNMGYXsjQN4BLosxbz4DRznTNgszJSAWVjc0Qz3jKXQFSznVRRgDZOUUR4bjSNY1XNc1ZJY1QgQmVlMlMlQlL2rFUg4BaNsDRY0VUiMlbkg2a4DSdwomUw8TRXsxZ44hVPQGL1vTYSkSRtLVVAITc2fDdtcUdwvTR0YEdTczbwXCYsQDdIQCTwwFSGA2UycWcwrTZhEFSUsBRt3xb1cDUZYzPUwVa1IWXMEjbTAiM1Hjato1b3gVPtnGNhcmYBg0XwEkdvYja2TSNznFZYUlKpwjUGEjKPcDcmgURlw1awEjXBAmZTIVXQY1ZXk0ZT0VLwb1YqkFcRIiMV8lcTEmKHECV0YFQYcGdxTCSHMWURglTREEZ2DCLvbiQ08lZzTGcmk2bXoFb1DVa0UUQUESM5c2JVMmazk1aOkCYjcTMtAiRz3xQWQSRB4jaQIEUoAURjkCT1EVYZ4lURMCN1IGUho0bQU2LvkUTj4DM0PmbzQyPzE1U2H2RTQ0MxoldzI0Z0LUT10lPZkFRTEiVDkVQPkVPqHyUX4jXoI1c1DFM3cDMzrVXzEiaxsxRBgkMNIkMx3VRqAWMvLEMZUFSSMWPrYmKEAWUG4zTQAGREcTMq4jdhUEVvc2UtMWbsUSNBkFMBAGdHciTLkGaociaJcFdtQmYjI1XoMDUNISbWAGbTU1bFIldTwDNDElLhkTa1fVTuIlamckYPwlK2UVPM0DdRYEaRwjLqQkLromb2YUMEI0PGkiSoACZDYiVwrVLxsTQ3UyT4kzTikVVGkVV2nUPx.kduQzMtQ1J08TNIAmVkQycwgWMzw1bngkRzHCTNECLJgSdFIlMwPyLoc1JTMlUnEkMwnjT4XWXvTTMvr1PRM1cyMFauokawTUQpI0bJYCZ3YFQPMWLzQScngTYtcVaRMSL2sjbxoWbCIyTYIyagESVhI0ZwbUUXA2QgoWTkEEVzkSa4E1Ry3Db13zLZQFRAwTUyYjSNQjQ3oGTEUUSyoFSzgiMAMCYHYTat3hcysTYEg1L1kTa2kDZzXDa0gkL4ozQ0f2bEQGZnIlSRsRQQYkUzT0a5kjRu4Bd2HkcucTa4MmbzLCalY0aAcCcz4xQwESXnIzQVUzJBEFSGoWTxTyUC8VSiAyTyfjPqYCRrQVMIQVUqTGLXIGd1XWaHEGRn0TLpclVDEWQTIlYqY0an4zMvbmbSIjM2HCZvDCc13jMXUFVMUzcHMUVNMTYKokd1fWbrgDRgkyRUgzSwvTX3g1UzkFa0TlSxIiMRgGMqbSLQc2bxP0cqUSLYM0TwgWX4TmdDEDQ0.0M2wlLz7DctTzMmgmdwXzLrwTNvsTQFYkMUESZWYjKzrBLDsVT4PiSCMVUk4hPCcVYwHyMyLjV3gDYxn0Qh4VQ2cmVpIGUtEGaLUFUXUGcxfDUyUUTGYEM0AiTLUmMZc0RHImXOUSUmEzbkkjSX81XNgkMyczcrEybVQFUt3Vc24RbCEVaiIVS3DCZrsFMzHERzfjPhMmL3wjMGYzQNQCdscEYowjTA0lQyoWdqkTUIYkVEY2ciAmLqLjREkSUSU1XEc0ZxHETrokVRITP5ElaygGNKI2aJMDQRoEUqwVQlgkQOESQmIUaU8FZhEkdswlZEETNVc0PTQGLhQTXtI0bm81UHoUVPciMAg2ZZMlZDshTlkzQoMiKRYSTAAGNGUTXsc1MhkjSE8TQqQGRNoldRImZjUCTRo2QVsTclA0PxQFZ0.GQsEyXQUFQn4RRGoUTwQldwD2JwUDMz7jZ4fjdyAkYp0zbEgidrc1MqgDdlUEV0fSUpgzShMybFg0RWQzLGYTT2g2SKczcA0FbV0DNoEjYvbGV28zRJISbY0jSvckRMshUxrFSY0jbogGY4D2UEU1bx8FNk01TlkDaXMGLwn1aJIUbtgSVjg2LzYSZNAWNLQFNjYDaAcFZuIlVHQGd3ImPoUUTr0lbXE1JTkyUPU0QxMWYyfkV1HlKlUUMwIza1XiXXQiM3oUdXgUZpETPRomRoshVIsBdwgCNiQmXwjELLgWPwEiaqHUdGkkYMEjVTECNEolYHszXlYSMqE0SygkcVoWUyn2YqgFaOElUwLUaQ8VQNU0ahMTUTQSTmQUXsshP1kjQS8DURc1PNAEZtYmSgMmQgUmSLUTNvnma0TCSgIVcssjUyPmaZIUQxLzSEI0XWQFasYUVwckd0IDMxv1MVEVQVckVL01cSwFVIE2LIAERyg0PUISVncjLUMyaOcGbzjGRwHyPgQzREITYzkmV4LGTmUUb4fSUQcCRvDma2cTM3D0JGcUc0rTSpMjMDoTPjU1LyDGYp0VcPQlaW4BZGoTThsDL4LDVFAURJgmSAUGToUFUXwFbToVYHkFZ2LzSvfTMsU0UgcWaPYGNwbmKwMCSVokdG0DNtQ2XuMUbLkDVzXmRkEyJFgGQzDUQNYkYq3lQUcSXU0VazMERxI2SDUGaAYCNMYkSL8jbxLmbUgkTKgkc2PTSHs1Po4DdgYFYQUkcqAGbEcicHYEU4nzR4HmcA8FQMwTXXITXJg0axAiS1gEVDk0cyEEUSQUaTEEYgYTQPQDb1zjKrglK5w1MkgVRM0zZtEDULgWcAMWZuIjVIMkUBAiXlUkMho0TvsVTFQkTgUyUrklUhkkbNYSVLYkV4njdqc2UR0zcV8VS2DmLtDEZxUSc2XVb0TESI4FVnMCcw3DTXMSZNgVStjDdsMjZqbyPvgTNx3lVJoTNYUVNLM1XyolVKsxZyEyc5gVdXEiRWsxc4EjRm8TMssRYqnzPp41JZgjP1MmdtDVYvQET0gSam4FM2EWQv7DMPYyb0AkRGEiR0o2L5cCRpEVR1AWb0YSNHcDYlgUSJUUVxjTZMETPgwTRNIlXMomMtnUZVQlX4v1YtYEYnE0MEkWaxY2YEEULGAictPmPtkzTwPSdyczZPcWR47FMl0TbA0VaCwVSyfiUy.iZzDSQhQFbJIFZpI0Mz4zLG4zUHEUQl8FMRoFZzXlaZAkV2oTM481J2EVayfUUqEUNzImLvc0aqgjQuIkQkoDLzz1MN4zUmkkPWMiaqfDaw.UaZUjT4ojQVkkUG4hZ4bVMqH1XqklVMkWSqHSRWE0YqTkct.GSmshVI0VUFoGUTc0UY8jQPoGQ5IzURUialcCU3PFdm0TbPgTSU4Ba3rVN2cibscSLXUmPSojchU1LGAGSyTWVrYkPA4jXxHCMEkiLKklXJIEQtT2RGokdyjSTtb2aOMyRFEFVxnlXYAkS3j0bsYzUskmUtfzbTgiYxU0T0gDLQU1MrgFUBMCaigFQ4.mT1YzUN41PyjzR1gCV3DDYzEkMV8FYUUjYU0zXAk1PWcGc1XFV0HjPvMCdikicF0FdRcjcPczJ0HFdhIiY3sFMKAWXuQUc2fidnYVNgYWdhEDaxIVd3PzQiUyXHgzaNQkQIoTaLgkUlIjVDcTZn4FR2.ETy4hbEIDUT41bi8ja0bmTy4DLAImXgcTQ3M1LoISUkUUTqYFVWMiXXkTPiQCZyc2QDAWS3LGL2rjauEiVqHlPhoGLpIVTSMVVy.2b1DiPrAkY1wTYUkkZ2UUYqckQtM1QggSaS01cCkjcBkSSNgWVLgzPxMTSy4zTtfCMZcCa1QDQyI1QgYFMTQjZk4FZZEkMvj1cmsRPHE0RwHycMsjSkIzXlkWXlU0LngVYmMFUDEiPyDjZHQTXrIiQyUVT5gzLZUWNzLGRmgWLvP1a1LkTBk0SJYVMxkmbX8TS3DEaF01XNIVasYldwgiY2AmbycWT1sVT44lVkIkSBsxT2IUM1XUZ1MSV5M0PpEyS3omLuMDcRk1UBE1LWQlVVMiXxYTYy8zLIc0L23xbZUSRy0jKoI0TXQDUpM0QtkTU4cCU1HTQ5YWRZclX1EVUmAyaTkGcx01S0kiSBY0MxbkXtHWbXoERzMCQDMCd2TSQCkzL4j1XUUkQug0Mn4RUhgVc2fScB4BNDUSTxcWNT01YtsVUNMlKN4RUzMFYE8zbQwDMYQSNwPzMFkjLvDCMVYiXyTmZzYzZiASd0HFRrQSPK0TRQUiKtgVTBcTR5MjXGgSMVMVLrkmd1oUc4jyck8VM0fGMBACYyTTRmIjdXYFbxL1JtUUTM0VUU81MDEFUHYVRBkmKl4BY50TUVE0bIcGNQwldI0jL5cyZuISUkMGRW81J0wVQuciL3k0YxUmbYwDdvPGQtEVbjojRZAyX4shKnczaPsFYgEERwPSdLAWQrYkVLMUTWYybJwzM03Va3kCR5M0cxQiYVIEZDoDdPQmaGUCd0PGSsw1SwYjd0QkaJkSd0XGRvfiZWcjSusjSC41J3v1cwfkSgkkTkEEZFUEbGQjSFszXUMmYjIVSwgjMNsTbKQUTQcUPwHmcGkla3nFQKEmaEYDLZslMYo0YzQWbn81SqLUQ0TmdyQlZ4UyLPITNYIyQzk1cqHWL4gmRFIUUvj2QSoGMjkGTvrRctEzQQMCMqsVMAUEUnQkULMWRzPlUlsRc1H2apolPWYDd2TFTz8lVIUWMToUNjICdHQ0bXEVbDgUb4U2RpYmVgUiTvDVNWIzaUo2RVoGdAYzZ2rBUyMiVLwVQvLSR1IiPIEyMDMjLikiUqkWZVkTdhYyTtvlbQkWZ3TjdkklPI8Dc1IUStfkYxHzU37zZjcVdgczSzQjKwzFNZwDLP0VZzISLDIzbPcjbv0FQmMCcPEESBslRTkjTV0DL2fDLWkGMNgCMZMVRzzTUMI2ZKAiPL4RV4ciVxj2cAEzaZMzLLwFLZMzJ4HlUyfzXN0jSkQ2cPQjLxbzMGUlPCUiQFg1LJ8zUS8FSm0lZ3rjR2IiP0bCSrkGb0Y1XiAWa0QWUGAETtbUS1fELSkmZDUGbyjVTvTUaGgjLw.yUNA2cEc1LqAiVAACYiszYPMkPvkyMTAEQxoFTvrVTqcUL3o1PDkkKKU1YxzTcNIlXT41b2fDRF8FSI0zZ1bybzYlLugSRW0DRz31SgMGUHElYHwzM1zlM1EUSiMSSvokdt41bq.UMXQiPuAUXiI0YPM2azHUTUoGQAYTLKQTXhclXOUFduwVTxvTRzI2S1gja0.2J1MmK1rhVwU2awciYwQ0T2nVXrYVbZYTd1DmSmYycAUjPAQzazASYlQ0c1o0S1bzMC4TV4LGQ0nUNyrRZ43DQOsjQqT2M27FS3sVLtsTdEEEMwjjZmkmZmUzJzXWcJwFczI2XvDmQBsRdgUkSIcFcx4jRAEFRxDVVo0lSBYjc3jCUz4TbUITZG0zRSYGVFoDYtQjKZwDVBITLtf2ZzojKsMmSIkiRno2To4lQFYjY2T1MlYCb3I1RqQES4cVd1YWXmUGNsIjSvnWb0fUNWk2UwY0YwcTaWMEQzHmb4ESN5cVLMk2LRE0c1HUXKISVgQmX2YDamozMHwjL0f2bXoVP0LCYiMVXJQCNYQyLtIiTnMkLQsxawDWL2HkMyX1Q1PSMtASPocEVmMyZJcCcTUiRKgCYOU0UwjySzMVcSkUQvUUNIgFVGU0QwElQhIWRggycGQDMvPESXIGQ5MCdBYkbqojXKM2SqjiKMMFZYkiXBUidRQzU1j0QWM0JP8FThImaqESZ1TWYzfFaVokQQ0TYNkGZ4U1RKUmULE2QhgGNnU1UykTSTkCQZgCc07FYuEmTNISQDoENzLTXrsRXwAiVrE1RyQTSQUiZtfGU3PVQIoWc4oWVrwDLTsjVVUDYvc2XPgCVPACZXU0PrMUcokFQzoENwvVTUcDN1LmRXgUUUEmcPIEVOg0cAQEdzfkYtXUZ0PmZY4RRBkFbpQidvwFZsshX3TUQiMycnUCMqP1LLg0cggiStPmMwT0ULg2YpIickIySpwFYEwjRn8FdoUkQTcjVLkVVwYzSPg0ayfyRv31YMsRZY8TRKwTc3jWbzHyXSkjYMgSdZMUNogkMkklYU8VXskjMLMzX3HjSZESc58TUhEjSHA0XtQUb3LGcxAiYRUSVxcGZTICRU41X1QSYLslPx4hbDomXgUjVzcUQocVLZczPX01MGEGYBsFTVoWSzomXwE2TogkPmI2RjolUT4hYCMlQvDTTEokKTQmKroWTJcFRMgiR2gFN4b1bXMiQtzDYkg2MTUWbvE2UGMCY2ElVwo1a4E1QlMSLIQzPnUkSXEFUjA2aUMGRQo2aFkkcFYjXmYDRCsBSjszLYwlZMI1RTMEYvbmREIDLjMWSIc2RqbjTxjEVRQCRkQVVAwTL1LSazYFNSQVMZEWchkWRAkVaZ81PO81ZRshYRUCQiMTLZ4VNyzjKmcGTtojLiQyRwMFQZw1LWYyQK4VVwPWRCc1JIcEUzYmYsMSPTYTcigkSmshQrAEbXQVcPklUx4hZxkWb1wlXLQkQYo2XToTQWMULBkjcyrhbtbTTBo0U2szYwTjZ1o1boshRzQTLS0Db3kUSxHGT48jb0HUSYIULkk1SOwldJECZJETMjIEVxwDYO4jQUkGZ5EjZyrzQVESN0oETSoWLoshLFoTTxDCUFgTUQQ1MuEzZnIlUiU1YGczYNYmdt8zawfVSlgWdzQUP2MFUSAyLtnTPikzZoslRpU1ZG4lXCw1U4cDNYMSLZwjQzcEVCI0QiozUqITcTkSRgcDLHg1RWYSdZ01RqMTSUokdysRP1kiLBklTqglVs81TuglMD8lKxb2JpwDMnM1QScTUxU2Rok2cVYCVQMlREAkVgA2LMAiRhgzUvkVSW8jL2vzaVcSbkYjbiQGVVwlXVAybmUDZmUTTUACMmwVNkQmTD4zQYozQ4bzZTEGYAkTSEYGRAQlYCAGVHUiRyfyU1.kRoYkRCkUZzQkRpwja3bCMU0VQv7TVqI0btfFN4MjPJIEVs8zRNMlTssxLNIjc3EVYoUEbzDjZ1PVa08jXJMTSTkVZhoFaMkFaybTQAISLkwVS4LyX1D1cDYkPQI2cVslb2YEbBwlSqYUPZ4xRTc2R2.idiUla2YUM2jTcqXFatckLHUiXg4DR1PEapUTVjkzTwnTcD4jU4HUTBYzY1HFVC81YAECY1giSYQ2MocSV1D2aiEEbSMDS4TScqHWYPIWRmkDTtkUP3fTZUs1QQAWSPMWPssjTS4DVtPSVHAULlwjTNQTThIDLxXlV2MSPIczUYgmUKQCYgsxaC4hchk1Qo0DMIwlawfTXJkycyrFLq0lMlQmd3MzR0TVLtjWQLMSMmkTRpsBaynlcwnlZlkiPzPSXzkjUvjmZGIUZoUDUA0lVYMlYIoTUEwjMKo2LqDDaAETb4QCZOgCYuAkb3fkVVgTQ2nGL0PGQRECZ4MFTnsFTwrlZnYTU2UmYJo2LxkzRVcjbGMkXMAWZC81LDMmYgYjPRgmKjMGVuoGUMIFV2YkYrkzPFYCUrQCcqHmMuAURMMVMPkGdLoVYk4xQX0TUloDbCkDcVI2YRAidwYCVvsFQiYjXIIyLOgiPLc1MxTEVqUGTwP0ZgwVZEo1QUQ2PtXVVDYmS2Y1RmEibzTUPtYTbAozLQ4xLh4FS48zLzTmRv3jQ4wTPSACUkoWTzbycz8zRxIFT50DatXTbBMDaikSQDU0UzETVzfkdEI0YTMmMxQUPS8lSTcTSPYVdhQCdt7FNi0lLp8zY0TlcugTb0E2Yz.0Q1n0XmojXtHVShM0QPY2JvYGMwn1RQMGaBcWUYkEbBoTaUMSUygFYxgGRYszRQAmVGoTahAmXDYDRpoVTL4hRh4jbGYyYWgCRjcGV1UmKVYyXncWbAkzbSM0TjclUyDkbCIiXngVUsUkblQVTRMyJGUya1TiZI4xJvkFSXAGNU0jagEEQF4TMqczUFI1TPESSmgjZ1nGZKsRLx8FbAQzSTYlXXU0cvHzPLgSPmwTTKkSYOY0SXkDb4PUbvgmVLU1YBEyXSUVbBECQSYEaDM2brM1bEYVLEklZy81LiUUQrAmYoMCLqHVLLMCNhEyUm8TVuc0UwXiXLEWclETNiI2cGk1M30lZ3AmcJs1YvLzbh4RMxIVMkomVGAiMloFQKMCap4jaIYiVYsFZk0lK1cmQGMmT3M0LNISYMcFZmsRNv0DT2sld1EzMKQmclI1U1LCckEzJBgyaT0DcZsBLNgSYIgFcZI0LAMGVxvzJtUFNs0zUtsFckYFc5YCcvrFcl41SsUmRxXjTsAiVZMmSuUDUWcmd0X0PwoEM1j0T0wDRsEGclQEQoUiS0TibpYUQNMUPDMUMXoUbE4RTGYVd2LTMRkkSvklcRQWNhc2M2QVLXEjSrMFYtPSNRYlQO81SuwlSw.SMwg1JJYFbRMEY4XFY4XkMXsVdyTVRSYEalICcVMTXJETLpcUPRgVYJYEMIslQn4TYG4FbMQCcDsTcBEWbEcjVwUWd5Q2QEY0QqnjbxfkctEWZxPENjsFU54hTTgELzUSZwH2J581SmYDQvkGZwk0U1LST4DyPyYjSlsDbLs1YKQSRREidVYWXk4BcZ0TLqIkVDcWUGU2LtvDYXcjdLI0SUshUCUVL1cFRVQ0PRw1LKUzaxP2P3nkdTs1TvMWQ1QyStAySPMTVlgDbkgkVzkDYqX2R2QmTvEzQNoTRoMlSvE0PmIDcucVPKUyXy4hTVMUMusxLqTTQ4DmMWc0ZBI1b171bPIUc5giXRcCSGE1Mm0jKigkdmgyRRIjZyXkSowDMC4hao8TNx0lM4TTV1UjT2MiVt7FQKkTcQkkMHklKYcUM1L1PtkkKmY1JNMSRyQ1akoWL4gkbQUSRyL0PyTlXv3FUyPTMqPVLzPFbvkzb1LlTKoDUwrDVWY2SgwlL44TVTE0cKYTURYjVqH2QsYiXHUUXJgFYyn2LwkUS1rhM5gzaX0DRhEWRXIkaKciUvPkdzjkMyHyPW0TaLEiXGciSxMDVBISTrkVRvMjY4rjP0M1YJglYqcFaYQDQ1DTZsIDQmA2bWsFYkclc2vjPqHCazoEcpEyMuEWPtjDLBAUbvP1cIMCQiwlQXUVTSkVSFAkZSEzXVcGNvjjUGcTMv.UN2LyLS4TXEwDc1bzP2bCMqjTUHISdiUmM23zJms1R5czJzDjPXckYL8TazwjKHsVMJUSclkzQmgWMU81RG0TY1r1an01SPMTV4YTUqHURiUSdAEiPSAkbVcjbjIiSzYDZ3YUXoQka48jROMTXUc2RFg1ZpcCSBQVXyfmMmE1JIEyT3AUbnEFVMIVZicFbkcVLFkjYlYkXI8lPkQyX4XGbyP2LZcCb1Pkck4DVns1Pnczc2kVcxIGQVAiUMAkT2cVYBIERq7FcAU2MhkmbGM1aSIiTvMEYGIiQH4TdDwzQmkyXqcjX1IWXmUVNqDjRLMEQ2HkKCEiKFAUY0UWSpsTQzYVMAI2aKgDcZAkTlQmajg0XuwVZAMjdiEESVMlM0H2Q3AySPAUZiISXPQCa34DYt8FVFU0Xx.mRNU1LvTTbMokX2wTRtrDTXE0LCMlPxzDRI4hbqIjKwTUZsEVTtYSNVgTN2kGcL8DaKkjQU0jRSMyRKIUPyQ0LyXWTm4RbqXTbkE1URYTRYEjT1rxcznGVSYGLNcCVkkEQoYDTrQUQWgUU2gibrYEYAU1YNElR2AkQ13FRvbURIIDZCI2Ru8DLJg0JQgkMjYlQRkVLkY1ZDEzbv4xJ3L1SoQDVr8lcN8FaBc1YBcUb4nUYSIkQRQULvIGQhASS1f0cEASMqXmbncFYMcyS1bzZxbiQWo0PToDYq4lapEzQNMEVrMFaGcVa0MVSwEGMJgmVPgzSvLiRlY0cNoELmEGSgkURHM0cHUSSHICdYACcuUCRtAyUIYybzgSVSslK1U0PXUVcXcVPP01byUVRzzzZqfyLOITdg4hSTQVcwYlbtUjX28zSqwlcL8DYAQkSEwDZhkkan01RxX1MDIEcJcSN28Vc1bVc0EiSXYlKYo2cnITaQc2bvH1cwYzRkcUUTczRX8DRH4xQtLjZZICMmYWZEEkK4UjXHYjZ3MyXpUFQjYybyo1JJEjZGQDNMAycxT0cBMmSlQmL3Iicq8lQ2XkVOcjP4kjaqQVNKMVZhkmQmE2Uqs1T0jzahIWMXwFZRIVS4QUQok0J5YVVlcDcTYDRsQjQNQiSuEVPGEyYUUSQyXGcwTDR3MyZ50jTHImKGQGV4MWPPQCVzfEb10lbjcSXyYWdAgyJ1sjaroFVgMELkQkXQgFSHQiaEsTMOcjQnY1ZsUySYcycLAEYsQEM1I2RGISPkIyJVk1aXolYxEkZMUWZHcUQHgGMZQkUvIjazsDVXgVSwYkKy.Wcso2ZvDGMzEFQxAiLDQyYjIWa2kDUr4hVosjZxn2c1kTPSUlYZk0QmISRuUiQiAUV0PkKggFMsckbEkUP1nGducTXu8TTyDyUgkVcDYFQFcjPzDDcC8zQIglcGgyLQAUPWA2b4QzPMc1Y2ETZsc2aPs1R3jyavIzSvMSRlQib0blKvTkKx01L0jWc23jLkI2PzXGck4VQGoDQvfmZqDjbjkDUFEjUqYVVYwDY281TFkEYsUmTWwjUz8jVvkVLvTlTrISRFwTXUMmMw.yZ3szTTETYAcUbS8DaEIiMxoVQ3EzQ1gCQEg2b4YlQnISVwI0XsolPUEkbFoFcRIldJsjSFAGNzYiMOUTMwDjVuEkSPciR2sBdYE0XhMDcNIlcAcGL4DUNhwTMY0FM1QyZ4LSRybVcuQ2JvrzQZgEZtD2POEUd5E0JSkzUwPkZNklXFk1Q4.SV4cGSxQEa3QmZygVauMWSP4VYnISVQACMYc1PzfDNvA0Yz3zPI8VQxjGT1zlbpMWLPIiT4jVXwIDSVgycBEyQWQDMwHiYvwlcVMDL4HmZMElMZkiROA0SZciLSQjP4nEZho2XiM2PwgUY0IkTxgVa1IEdtfyRGw1avciPJYGNN8DbM0jSKICTyTlUkcELBUmbhUkLVMSMBwTM4kUMQMjXDMCQJUER1wTdJQzbpI0YGISMrwVM1olZto2JnIVaRcSU5IjRL4laos1S2kESUMzYAA0LOEjPwPVcvTEZukjQnMTMHcCcCUzQybVczMzaZEyaFkVSE8jQFcCczk2U2AkPKgEU20jSpUDbKkyZ4MScZIGSjgkRwHlZZcEVXYlKKkiVtnUNgYDb2XjMzEmbT8Tc2.ELIMDcxvFaG4RM3rRQM0DMvwVRYESLtwzXVcWXVo2PGkkb4bEd1kiYUYmK4zFQyDES0kjVVsFZzfiKzPkRCIDaTQWP3MiSYcTUAYTPIQEVIgSLLYVUxHUaHIWPRQCSoMkaNQDRkkiZpQCUNYGSpMkSL0FMzU1ZhUDSzUCVqYmZwIiVKEVahQmU0Y1XGMlXCEVaDU1SDU1YW4VVZ4jP5EiTxgESWUCUhcSdwgiSzfjQrQCczzFZy7zMyP1Jwwja0XWYyDULJA0JlcjTTM1YyQFZ0okKuYyQyDVTNcybtb1RgYSLqXkSFAmM00TZ1jiKEYkdiomKiIWNsMiatIVQ5EiLjQGUFQCQZciMLoVPuQULxLmPCgyUngUMJo2a2XWbzkDQ3.EYOkTalklLgMCSCQ1LvDSMzkTa3TFVOIjLybyJoMWQrYEVzY1J5cCMpgzbvMGVOImc0nzbx4RSmYWNQMEdKckRioURXIVbvIUXSgyS4jEc1IyamczYlQjKVYia1EGU1fzSzLDYPMGMhcFUigkbJo2XGAEUJ4RNFQ2b2UWT37zJAEjauIGbI0VdgQ2cpkUS00VdwEUXxszJhgWZVMTdJQzPuoDURAkZO4BLF4VQqLEStkjPEwTNQgFc1DGZUA2XPYkPyAUMSkSdXAmQ1rFMtcjUFkmMRkjZ1XjZq.2cvLkLzLTUGYmXisxSvfldQQlY1AGVUczTOAWRQkkQxA0LHElaAY2QtrFaBcjatDGZRkVR4.mc1EzMOoUSyblT2kWREMmTOQSUHoUaswjMO0lRvk1Z3YWchgCN3g2UYkSb4IlTlI0RxIGdg8lV20jMOISRYUEbIMmXvLUV3P0RBYmZF01XjcTNJgmRwwVTU8zMkwVcOQCSq41cIsxP4f1T1Mja2YkLyLGLxImS2wjc1kkSRMDSrEkaHI1LCITU5UlRrYibwQEah0FclQENnQ2cNE0RlMCRqnlcrQGUhAmKscTSCYEbYI2MBkjXQcUbVklLwMjYFgGdjYUUBc2bvvDaxfmTBI2YEQUPMYTMgQiLuECT3nUa1jSdBQVL0fFVOo0QxQGbUUiXDAWQwfjQyX1Q40TdAoWSvQSUTUiPmICZCAWYQ0lQLs1PNg1YOUWMhglYhETP5EGLNU2RhUjcxM2YEcCUhomXVQlQQA0LpIyLoQULk4RMDkSVAYGZPklcVACdpcSTigEdTkSY5okTs4RVrs1Y0MCbF4hPTc2byHUcTkkMtc0Q1fjTRIVMVMURxckbDM1SzE2XgQUMSkCaEMCQzUFZwoDMWkiXgYVVpQzaDklPmUjbTYTVYYTUBUCQrckcr81S0jkSBckXHIyT4bTQOsVTzQVMWMyQGAmTTcjVnMFTyLkav7zTpwzLlkjK4.0LmQkbO4RXMElLB0DbBI1LQkScyHCY1f0M4clViA2boQzXw4DcWkTRPkEYLYWVtwVXwPGaXUVVs8TYsozLysBNFQGNwHjT3UjKlkicPAGbxU1PvYGUocUREICZnQTYBEEd4LlZvH2PAIzLqoUQKkicPITaI4xLYM0az4Vd1jWNnoVbxXzUGQiUvcFSiQkYtTVVAoFSxo2TVczRrMUbAoGSw4TNzIySzPScrQyPRckQRoEZMM0LtPGSlUDMgk0bKUSQ2jWZvIzU0DSQ5IkdxIWTq.kTTwVUyUyZSMUZ4UFU2UyUGkkQLkUN4fTUHgjQqXTZ2XULrEmLQMybtTEUwcjVAsVbBkjSQYibCczLYMGS3MzXxEWbmQ0QBUzZHUERQcmT3nGTqTyLDIicNckcPYlP2EDQJU2TMkkLwUVboQUVswDS3rzZoECLCIWVZsjdXsjMvolK3LyRVYVbhkjKQUyPVMkatjCVCEyXvImYQE2aOQyTOsFLYcjYT0DLnITM4XlQjgmQmcTQMomQ1kUUssTdHgkLwQWRQo2UZkTVtwjTgI2TQMmPnoFczQlQ2MmSHUmSSYlbZcVZPwzcFAWRtnkXVMSXUkWSqXTM4nVdxcEYFQ0JJgGRCImVw7DV3sVdsQDcKM0ROAUaRIScDojcUU1ZhsVMz0DbggzTWQFYtgVVLITbMgUZq7DTGQmTy7jbJ0DMlglKug2bxTWaqsBTXgUNnQmaZ0VYMQyPBkCS2IjZQozZ1oVcHQTYPIjcwclcVYVYrIVMLU1LwomVjokcYUFZwTTUZciTyXmckkFVZg1LLEzchQ2PEMiP1UTPzXWQxPEZHYkXvEFRNgFNXAiQvs1REIjLvICSBg1TBQmSPc0bzjyRVszX3PlcwrlTEkjb5g1JxMzRFgGLlQUbzjUMwXmXLAyJAkUa3fzSFMmQ5EDL4PkYYwFT1gGRvM2JBYkKgYVNRYCSgYjQ5AkQy8jKqHDRMUmVCg1QMkmcuAmSOUDT2bSSwLjZxjVRXMCUg0FbJQlQ54zL3HDczbSXRgCVYgmXUU2Y3rVbvfjakYybtAyTNUiVEshVVomb38FdwHlXE0zYIIDajMyP2Hid4YGNrEjbuECVLwDdZIVV2HyM4bDdRsDMoUGaNMCZjY2bkgGd1jCcHM1UmYDL34FZ33jM2k0PycSQ1LWTTwlKHU2Mw7jT0cGdyPmLGgDVu01ayfib3UiXLImKQQWNwDEUm8DTXIkcoEUPF4RYlU0SRoUSuYUZlMFcXYTRjQTaWsTZqrVLN4zLnAUZucUSBkCbSoVck81Zp4FdIk2R54RNCwDYQg0QjAEUQg2UvcjYUszbiw1PM0lS0fCdGECUhMiQ10lL0w1RPkEQRoVYskFNoIlcq7Fd3XzJGUybyIzTPIkY1nmRhIkdngCUmY0JLsxSZUVNQc2L10DLqrFQEcEMUQUL4HjYjUENSo2cvYEdYgmdKQiMqbmct.iM27lRioUcU0VQMYybBEmLiM1SZsBQTcFNCUmLy4TR0YzLHUmPlcVTXESPV8FMmo0avk0RLgDV0vFQikVTQ4DYoIEYJAUXJ4zR5QzRHQlVyMVbyckZvY0c5YDQyMTLrcFVvT0bKUGLmcSaLwTUDYmZqfEbk81TvjlcCYVdZwFLAM0ZtESRpQSZVQUbYgmLA4TYNoGLyE2PS8zPSQlRucDSKk0TqMTN4czYMUETJ4hLRI2QqY0T1UCYEA0MhImPOE1LhcmdtTjSlETNJ8zUGgGUgIDcg0FST4TSOglXygkKtLlVGYUcU0TLZ8VZqQGMBImSUkDcZYmaqICUgUiZ1fEVockSjE1PgUmPUEycVkkZGgSPp4TcwwjR1.CcMElbAY1ZFoWQWcVUyMVQKwzQD4TXhAmaxozSPEiY3X1QrMmLDMlRWElX33BU4YFT5cFNzE2SMcybgsjRDEjTKgzTw7za5sxb2IiZrcEQikUU2T1LCcSVz.SaWw1ZE8VL5MiLVE2XGEiPXUyTKMEQqDlam4jRkcSdkIVaD0VPSMEVlIlYiwjLMUCZqHGUlUWUxLWL2DUNwjybrslQCojcqHyM5cVMAkWMicjcPg0a3bmMEIyXtMmTvYkQrA0Q1DDdqX0aLgidwczPFoWPLszL1EiZtj0c40VXRYFTF0lLzoWQF01RYESR0MyMGYTYTIVdDUFRwL1cBolUTAkSwISYEAyQkcUbIolXwHVSHYzXDQUbko2UZgGZYkiZYICZzDDRjkSYwETZKMyaTEiTwcCLVg1RrEyZrgjTJo0YBgmQt7jQRklanMGS3D0JzEFbH8TUtXzUnM1YhIFcSczLrYTUOklaKYkZ4DmZYUiPvczMhIjQRMUVNYEZvbDNgUSbtsDN1fVUxIkUXAyTls1TDg0MEkUb0QDSTMTMqbWYZMTRxIkQ08lP4PjQgI2TmUFLqTlLlIiSrAEdqP1MzLlSwbSSj8lP4wDZsQTXjIidDkFd5wTc3XSUoMlXZYVNx3BZ1XzZp4VaREzTx3zb2AGU2QDdzLzSvkUNYkiRzQ2YAMidnEzYLIFMPcldFo2ThQzP0I0UpsTaqQSbjo0UUMVbMMibrMmXDcWQyEGTwETM4nGdhQzQXQmXDojP4bUXmkCRu8VYqDzQo8FRz4BS0UDUYQETlUGZ4sTL1nEZ4AUMwIGbH4zUxzlcZozZwDFbyMmV4cFNTUSQEk2Y4UVTyDjaisTczDjbqEURKIma0YiQrImdy3RMFclc4XDboICQAYSPCojTPM0Jz31bS0TdEYiVjMTZBETRJwjYhE0MvolamMiaqcEaB41MCQSawkySW4hLS0TQhAWPocSRZ0Tdg4Rd2g2XkYTPjoFMsUlMYgEZ1kCahgSamcWVokyTqrDaMsxUTokS1ImYvUiLnEzRYQCUKI0LDsxZUkDLZoWdjcVPF0TZgAUQqf2RhQkQr4zYVASMSYELKETXJMSaO4BN4k1P3bTYQgiL2IGZpgUMykDVz3hKhoESZsxUZgzPig2JuQENZglbIgWN1bVUsc0atkSdoYSYM0lc4bUMMICVzA2ZkUlc2jDMJQTdCU1J4T0L4gyPUYUZ27TLvX2Mwo1Tyg2LgUTT1nGSOgTSwXmYGg1T1AmRNoTXyTlRWwFTYIETQ0zUEQzLIQCcJQVUHI2MOUiPmkUUnU2Zk8VX5ElPCEiSEMzJSEmRLEjThIFNms1JPAmQpsFLK4TQyMSS0QGSEg1MznUaZgkPzfzSA41JZ8TQUAGMQQUMtIUS58lY1U1SFIENMgic43VQ4vVPykWdowTMNISaWcUY3DiSEoDazPWZAQVNzjzRZY0UwjSX5cGNQw1aFYUM1kzLgQ0UZMDMq8zUhcyPwUkKocCN2HVdscibqk2XnMVaPMiSgo0Mtn1ciAUaWEyRqASMCUGVBc2T1MEaDw1SqX0POACTQIEbw.yR1PiVoMjTx0DMm4lZD4BQtLkQxU1LN8zQygGdso1PBgESyAyZyDlP3k0YqsBdYEyUCoFLV81R0EGQrIFLm4BZiYUTBQjQDMDZoYTL4gCNwUkSz8FTXYibZ8TNVIiTR4lPlgmQqvjTmgEdCoVVBkTcTYDVVYCUWEyStDmYYYFS10TMqQlMww1ajg2UEEVXvkkMPACa0cUMxomRoYzZ1oDRsMUT3P2Z0I1MVIjT0YGdxk1MsAEcuslRtgFapozbYACbXYkZGgFThAiUC4hMBkFMQIVZBYGR0XTbu8ja0I2ZnISa3LzQuUURAcERn4TNYElLHUEZ33ha3rzRyTyRAIjXTk2bJMUTqjSTyHWZxXWUpE0UxYmbk8jXHs1YqoEagkTSHQ0SvkVRzzVbS0zTqIjZVQlbOgjRwL2c1fTM1XVUMkFdQkkT1QWPqDyPScUcsMFTKQjPJQzM2wDLRMGUwPEZBkUQZEiciACTv4lYyTyJi0Vc2M0bjI1c2klPGojVg4lYNwTSwjlKvkTUvbzTpQWUxz1R0n2TCokVBASUpg2RQUUazHCZWITUgMDSHIjbSUGQTIWTZgjQGQFbBQkT2XEUvklKBMVPqH1MZEDSqclLOITaG81YzsFLiQ1Uv8lUyDUXPYiRtYVcGwVb3jURwXicSA2a5IUaHUlVOUjSyQUZKASVpwTYykGc5w1SVg0QkckT3vlYNckPXcmaXYWUEgWRPgCM1XDYwbCQDEza1cyQO8FZ2QWarg1Y0YCdwojPlw1ZVYlRUkkXpE0XxDmY0YiXxXUStX1MLU1bRI0QB8jdAECYgYTUrYjQKEEaYQiYqwDbZMyRtkDUy4lcYoTQmUCNXcDYxbWaqfmX38FUvfiKjYDSNo0b4jkS3kGZqTCcyb2TKw1XWAUNXo0c47ld1.2SjIGN1r1YtTmSzjmRKgDT1IkcvHzaO4DcxbUbB4xSrYFaE4jVHAmRs4jTEwVV2gVdKUiRgojYWMCdnQiSTEjcGo1PIUzToMSPBokaNU2Z1oVNzUkMMcUcwHkYBIzLznkbXYzPgASYCQGM3I1Q1MVSlgCUH8VLP4BRCQ2XlMVT4YjMyzlVFMidnozYio2MvX0MBcDcHYTQwglMqX0XEUTYycCRyYVZIYiV2fDQSk2cEcVQpQibqczMComP1IFb3DGYlM2bNY0JtPDbDkiduMVU5o1XCkEclI0ZnwjZ3w1auEWPiQjcyMScQg0Yocma4sFNPIkUFgmUAcFRxQjLxIkROoUZjQCUXgTUv0Fd0LjQRk1YAkGMvMlMqXScHcUYzshSQgjV4LlRuQkLlwDN40VUx.SXogFR2MGZZITRwojb4ozY3XVatgDVQcSL0HDNAEEVQo1ZDomarsjQxXSQzcFLYcTSJEDTxr1XVsjZ4gzRBU0JtIVVTEENFcSXKkUT1slaokyZMo1YYo2UyclZFUlT5EkV2fmcQAybGglPpQFL0LkVSYzUmESLYElZzISRIUFdzHGU0fTcNMGUkUCLiQVTJYiQPUVanMWSyMTNo4FaZU1QJ81bwQlZXg2cwHzaXEFTwflLUAGdREEZ3YmczA2ZRUGQM8zLsolagkTX3Q2X5Y0MqwVYHESRmEmQwAGSvEFLlI0aw7TPisTckcTU4rDVic1LRclTs4VbTQ1P4EyQNsFcCEjKFklMng1bSA2b4.SPmMiLYEmLx81Msk2Z3EkQw7TUOkFSL4hLSs1MFsRMk4TNMUVLCo0YSY1cJgiXOAkSvIWSwUEQr4BQSc1Ziw1MU4TSRolS2wTQw.EYsckYHkGQvnFa1kjZSgkSpkSMsUmaN8DNxEFUgYDLvvlSxnETqH0QtjmazbUSMQmVF8zQTMDUE4VcVg1QGgDYps1RM4jZGwDaWQSaDs1RjoVcpQVcrYzPy4FLsgUPKolKzTCc1EWcCcGZkYTdpMCQ34BLh4Fa13xJqcDNQIWURc0cqQ0RQkzLZklYtPjUi4lPpUkcUgiLjslXOACTtDkYxEUSq3FZO0FU1f1cIsBR4j0LlAGNq4FSEIDRMY1JqnVS27VNkQjU3AkY5okUYoFbrICNXs1QKoDdOkicpUlYK4jaXUTMVMlbBQUN2YCMTMVVpomVJUFRVgGVSIzXQckYQ4zaPMWd5EjXsIlcmkWV0TFbycEdDszT3D2XZ4jMuUGUsQyRWE2MDEzZ4DVMLU0R5MTQBcVUzLzPsE2UHUDV2g0ZZcDbMYWTzP1bzAScxLWN4E0YzYTbyP2U2HySUs1JHYTQwEiZzYzUzjFRO4zJQg2SsMVY1TWNHEicikyMJIiZHEUR4o2asM0MyLWLz7jdmQDMTcDZzglPEoFdigSZlUCRCg2SKIFY4AybqkVM1UmaVQzRJsDZEkzaIIiduUDTsgjZtIDRIozavslRqc1bR8lLvnFNvMmK1cVXXkUQVM1LmsVbQgFdIcUbDsRcqDGUSsVTNkUTVImcxfEU5YUTCkGVyAiVy7jdI0FNPslQzHSZ2PFUxTCZSciM3wzUgA2cVcjPycVSTY1QigTYGgmczk1PNAERWAGZi8zSHIGSpkDSDIGaqHVT08VQLMSVQEzakA0MEcUcxsTV18zSyvDMrA2MYglL5UVZmkzc0TFQ4XiZMo0UkUzYGg2bJgUU0UUbqUmS4TiZw.2St.iRPAGbHQ2LyXDMXo2UMszaNU0XGoGStUiZucCVv8VUwLWX4LiLL4FN1MFRvDTUtA2L3QWL28lQk41bxXCdMoFUkkWaC4zQ0kTVi4BQHEkUoIkPrUFU0bkLtDERYcVQqL0cXEGQybyPlYiSSUDdqL0X4MlZvHmVqz1c5c1ZMMDThAGLMkiUSYyaLcyZXkGMKI0UqEScoYmbxXUNxYSaAAmRxHzPWUDLw3jLzHCR5kjavMVMZk0YQolKXgVT44zXss1TiUSRQkickMCV1cVaUsRSMEiUMciS5IiSFUUPG8TaI8ld5YWZWUkVwgUTqcjKxICLQImcNkUcPACN07jdFQERxDmPQ8TSKojZqQDcYYSPWESY2bmXqkSNuQlQpMla2b1ZZwjck4DbUQjVzoWR4DCU1H1LvolK1XzJjYTPZ0zX3LCZhkldw3DQNoWcCQ0SicFNuciTNEWdxTGSPcFZtYkVLkCcPYVcv7DT5QidrMkU0jWdyIlQHUES3M1ZoYDUHMlQUkzLBUUZJMiPCwVPtHTb2YGZ3Q1Qos1QHIWTjMCT38TdJ0laoMSVZkDVxMiUGAkQtzzSvw1TvMmXVgDQ4IEZgwFdBgGQ1sBUuISRQ4VVZcyUwAUVCc1QtvVNFQSMyfkP3vTdzslc3ISUzTkdloVLhIDMFo0bVkUXzomToMUc2XjMJYWNHEWNybGZjQEZSAEVIQTRMEiVvEjYr0VP4vjQ1gyMnczYqXGc5EGTiQmdEYFMiMjZJY1QAkiPo0jXyg1brUWN43BavUycCMCN301Pgkzb0PkK5UCd4M2c2LCQrEyJBkWanEGR43TXUcVcAY2aNMmax31Xv41Z0MDbTklVkk1XmgCd0PVcLIyM1QVMzEiKWgCUnUiS4AUYgg0al0jSioTYYQlYzQkXYsldqDDTwHETLMFZGkEV2gzQ20lVIcyYCoTM2YTLyjCd3j2MNITPpkUQEEDZqPFUnszUI0zJicTXM8VRhwVR2HEdushKYUWc0oGR5sTbTYWT4Dib0.0Y5YSQiY0a3gFV3QyUkASPLoGUJo0M1bjRLgTT3LWRXQFYJk0XWshcZIUR5YGayHlRRkFLj8TU0gCdUIVbjgWZIY2bjcEd3MyLWYybi8zM2MSbZMjPuk1J4QjL3jCMHgUSHgSNqLyczbmXQYGTOYVap0la0c2UgQTSsETPNQUTyQkPZE2QloTNCQSNzfkXhsVMtE2Ur4FTL8jXQ8FSN0VZ1Y0M4rhbOkVMIQDbW4TSDYlT4IyRJw1ZK4Dax7FLHUlVv.GZqjES4TSd5sDdUEyarMUN4T2LqUFQDIDRxElQroEbOoWLnojbw4BRkYCL0sDUM0lXyLmUr8Tdg4zTL4DdPQVUiEVaoEmdJc1cxLDaikTczDmc0blYD8TPoEkRQ8lMm0laI0jLwMGZp4RQgwDRWUkZ1bWa0PkdIAGTJ4zJDgmZE4VYwzDVZgSZGwFY0MmMGEUXwHSZBwTTq4TP1sjL4rTY0cGUNkyXtPTLN4Bdu41JxHCLpMVUIEkLI8DS1TkbLg0XkAEcnAmTGUCV1kSbQgkT0ASQ1IFNwYiY0IyTn4RRNIzbj81Mtk0XsUVdpkjPtAWLVM2TOg1MtvTSBgldlICTJojUpEzZkkENTQmdiE0bYIDVSEUZvLiTvQzcyXjdnESS4PVMvAWcFcmS2UGSyXmMqX2P40VdsMVaYITVjMiS0TkaWMyXY8zc2jlcxYGdF8FTyYkYtQUV2.WM4vjVuEUNYclcBkVZHgUa3HTVTIWVL0lLwMUXYQldDElKp0DUjEja1E2XEkybyYzSW0VMDgicEwzaXEkTqE2XsgFZvglRQYlKskmPNMGU1okU4XibXQiYH8jTyLWQygWbGcmStombFUWRiIkYuU0bYclPDoTNHszc0P1JHYiKxDkduMzQZgmRhkld4PzUKgESQ4VL3TUUjg0QJMiLuczaAo2YtnlXhsRMTg2MVgiK0jSahUiVzPzb4.UVxQCZTcESUcEU0blQHwjXsUlcvb0c4LiXQMWatMycso2MPQ1PtPDaMoURrUmVmUjLTcCSQUyTN4RUybyctUTSq7FNZUjMjUFMFcVTRcDZCo0STAmcNESRqUGVu41Ygo2ZtTCbQc0ZJQFRKU0RrI1Z2XGZmACTHgUd3wzUqLkX1LCV2HiSxEic4o0anYlclAiVwgjXlMyRlsjLicVY1XlRnAmdnIka2IFbNYiKFkyZO4RRLwTPzYCTx3RSWY1aHkjaSkDbl8TVg4BQ3nVSsE2aOc2MtjFcho1avIVRBkUT3LWY1QTb1YSVzwFVxP2cu41RioGd2gSNvblRqAkbPUTTxECQyIVN18jKPkGTjolQEc0ZDkTcF0TbvEFVNkUNw81U2HTdNEiaHk0apoVYP8TMMUDUOIESxjWSwcyLRkid3Hia3byTwfkRRAiYzzzUMMVVy0FdBIWcO0DVPshaOgEMJAyXHgkXUElS4UGMFUDMXcjayQ0b4EFQZIiZxIUNWsTdyXUTWojS0XiQB0lVtc2XKQ0XHUmZwbmXmMmY0MmaiEkX4PkVzfmRybGQk4hLAAWPuYDSzHlUqIlUIYCZ4.2S3.SPnU1bHsVdJw1Xtw1Y2r1L4clRtXFR2DkSPkEcwLkP0QiVloUXmE1Xvc1LFU1b23lSlMVbzMGMlM2QyXVZsMSL4g0S5Mzb3IzLGETUvT2YwXzR1fDb3UyJIMicLYWMz3hLZ8jPC4jKyXzR3HFcvLlTJcjZREjc4ozc0Yybk8TcgE2P2XTL2P1czUFLiQVTsoUaHUlSCsVMIsFaBsxP3LlYIsRP4UDcBozQmMmdkICN2HFbyYmPlsxLKQWMvjEQqcUNMw1T0wDdB4lLvE2ZEASXOgUdsEGb3AWRGMWMgg2YioFUYg1U2b0XyoWUY0TTR4BQykkYvIUd1MzLSUFRCIWLGYjdTImQSAEarY1SPIicnMGQuMmdgISZOsRbDkFQpImPwEFdzQCRzQGNpQTcN8lK4ozP2LkbQgjUQ8FQUoUURkSbyPkUKQkT1rxU4n2T5gTQvrhckYlUlY2J2I1aYAiRRMmcCc0c37TMigDb4D1Sz3lRqEWcMEURHEldq3zYRAEb5EmPqDSVPgiXOMCRvbkd3wlQxYmRvgVatDWavE2btASaW8zZtnmYx7lYjM0Z5ACaJcEZ0A2U4.EYkclSqICVt.kQtDyJUc0awEld4vlMQgWZ5EGdQcGa5wFMKU1R1U1a3sVNJEiT5UzMNEjbxTkKKUmduAkUz0zSMwTNCIyRGYFRWgTUBUjUukUVy7DUyEjLFESZwTjTsI2SVU1PyPCT3fVPkQSX1kWQzDEYWIVdXsxXzDzZKQWNE8jQhgjVUMmTlsBUJckU5shTncmLvImQvvjVTcCU3nGLBIzQ3L0MnYlS4gjdBYmQ3QjTmwVMH8jR1gGcvTDL5UVUwEEMM4Bcz7VX4PGTyHzMz3xYoc1cxAUMWwVTFICb2c1JgM0aOclUzrTYUsVUIEDcqblb00VYwoVPBcUYoU1R2wFN4sDaLISTSMkM4sjMM4xUvfDa0kjcEk2YzYSY5glbgo0R3fUcxImQ1DUU3rTX4TlMqIFUqsxTuImRAgVPxbGZlc2Xh4hVRE0QO01aNUFTrYjR4QjTXkDZH4TLMUkT4EkL5kCTJEkQ37TPYAkLNYzUlEiTtzjQzIDbWQTQEASRtQmb4EiKq0zTzDkKAMCNCkGYFQGczYDVrgGdUIyUK8Dbrk0PM4DQIgCNUkzSYkGdugEaX4RdjszMFUkT4YjMTACQVciVi8FdSg2Z2gEYpcFMIgUbpETQxLWN3DDUAk0aqD2JQgzJ0sRSuAWMCshVIEjTZIWRDcFdVEjXMU2QV0TXpc1QtbDcQcUT4fSMDMzbnESX2cEZjQ1JAI0M0fCYqHla4EFc4MkUEIEYuMiZQcGZtokYRsBTGczPtnFUuojdoQlT1IzXoIjay4TPw4VUvc1XIUSNoA2SzUkXtw1XmMVSt8DRZESPXQjKrkWamcUMpUzY4nFVrYDMLYDLp0TZNgTbzgjTqkjcysVZ2sBbRYFZZY1LJkDTvDWbUk1QO4FctHiLqXyLZQFMUwjURQDNKUjSSQSdlYzZ1ETR4DmSYk0PkwVVQMSV4o0aBslXDM0YzXWYREUVKoWcGEjZqLUbhIENRgkXo4VX4jFUBQiTVEFSIMUTDIDQ3b1QkECRxczcMMzMyvjPWklcZsjPtcWbgQ2RFoFaMkES1zVYqMES3jjMZIyR581JzoWUwHFbVUiMUoTM1n1LtfycsEzbGUmXQ4TQx71JZEiXZIFdlsTPKoGSqrFYXYCM2PmK3ckRDYiUt3Va1bmPx3xSVM1a27jKygSZPQ1RLAyYnkScx4Dbv7TdvcVdmk1PCgWdL8lP3XzPT41UjEWU4rDMSsjLAwlX1ETMIYzP0HWYJYWXGAmL3Hmcl4Bb2E0bv3jTjIyXHkiZDsjdlsFMCQiaFo2LCkULSYiVQ4TUjMkdCcFQyclXqzzLFMFRDwTV3oGVIUjLNYkLmISQ1Didxn0PY4BN0MUNqzjZpI0a1bUS0njRrsTQ5IVRzUjVq8jYgk2SLQjZAASM4nURwLDVncjT0ImQxPWQXYCLQklT5USZXgjYKUkKLM1ZOYlL2LFLpYSTWEzaKc1SwTkTOIEZ0bGc1jCRTUkLKUTR08VY3cjS4HDcAcCQUQEaBgUSxjmVhU1SAMTSLMCajUGbEo0ZBgkL4rFZLwFYggUYkgicF8VURkGUyrDTwQUXvIVZzUTMHIzTxUlPxf1aqTlPrUUMEkURyYkaoMlK3ECNqfzTI8jXxjFSvoGbx3hYuQUdQgGQ18jPvjyUxIlVqczZrMEbv.kShYiXGQ2TZkTYxEiPSMjKmoVPyM0ZYo2bgQ2ThMEMtbUSKUkM2EEdvn2ROY1ZvfjKmA2RrACRRMTbtfCdCcTLtASdOUENnsBZsUDaNQTSMAEankjL3fEYwk2SZQTLqLzSvYEV3ckdu8lUh41ZKwjM4H0b141PkcVL1ESdxkmRZcyLzrzbyLWdQgGQIUmTxzTVqUTMBsDY2MTTFwVVn8VS1fEbzMlXjcVRtMDdT0FZK4xagkUZXIWVkc0a5USPzvjTYYTT1U1SOslQooVMp0zLkEWXUkGbHY1JiUiZBIFYYgSXOITRoUkZ3IzMwAmZME2S3ITTkY2PI0DS3bGd4gkSNgDLt.EdykySXokQMYWagczMj4xSgImcScURlUCLtclcxLzRzP2J1QjbAIVcz7lMyDTQH4RUTAER4YmaKYEdPcCV3bFVpEDaW8Td3DiaBMENFc2UugSa4bGV2b1SgsxRiwlbVoVctHUXRcGcioUZjMlYngzLNQUbD8DTkoFMKUDbqXEbRQlb3MzcyA2S2Q0YPYTNlEVTEMzRtImVTQVQooTR4rFYHkjKMIENBwVbFMFNsklRG4TY4PCZ2PkSzY0cV0zUIY0ZqwDc4b1TLYkT0UiXOMFZMsVYgUjPScVR3LyMTEUTCECLLYDQFElbo0DVwPlXlAENWQ0RlQVTQMTNz8DZnoVNggyYHkkR1nVLXQVd1YlUtQmUkQzciA2UIwVdkAkZO8jd3HDT2YkcBc0Y4MTd1.Gcw.kRZE1Rwj2aiETbhcybXQyYvDWcyMicXojV2ITL50jLKcjMZEFLkMCdHITTqHzbmImRW0lcRIUTvbkVvI0TuEVLNMjRpkDT1kELDUkXzjkSkEUc2.GMMo0PVYWYgYicAQkPVoEU2LGQiEWPzTVLgolZIICM581cOoWc3HVUrIVPzAmZ2sFTsgWXkQSc3klaZUSXGIGLD4jL2ImPFYlcqIjYDc0SqbyTCcWVNojLqnDbGQmZiQFMHoDM1nVNlojLLgFRx71LQ0VctbTUQUDb2UiLoQWbyEFaPsTYy3BYq3zMj0TZDk1SMo1LtfWXgklMrQ0cUkFUAImXXYUSMk0SMgEVD4hczLzYqA0LxgGYDElQ1LiYvkUYDkVXrYkLicCM2QyRzjmX2rjRZgmVnoTUXIVNJgUP2nkLrsBYR0lbZkiMkkEROMSRWgVTjISMwXmMz0VXhojUIgzJCsjMxnUQ0LFSxPjPkYTaDsVMNgjRWUSSTkDTWIkQZMWPkUkb4Q2Yt7FRnM1aVIETnwVXSYkUMgDYCkTNoomYTMSPBkiRznWTkMGRPQUXkkjMAcUdSsTPMQWNzLyMsgmQtIDQv0lai8jX5gTZCkjRogyYK0zTHIFMpMzTTUjUuQ2LAwDc3nmaKgSc1LVTyrBdUg0bl4VTBIDdGEyaAgDcxYkKPQlM4w1aTAkZ4czTKAGYQUzY14RZosFaFAWSOgWd1TVPBIzTlkWRyc1RhQTUHUWTwPWZAIFdUcSZXgjdpEET0czJ1ACb0DFcUEzSqXmSOg1P1L1a4XiZhE2cBYFVG4lUi8jVyjjMMkjcqcTU03BZqDiXZkyb2jFbOgCcsckau4BZ3HTYhwVTw3BR1TlY3PibD4hRAIDNBkUP3MCb47TLwHSctcEaHMGYXcGVQczMpMGcZ0lKLwlZ0oDNxETVXUiKFkFN1oTbpwDSRoURjYGMhUVQ08zcsIDZMszbWIDSyX2bz3DUrUGZvLVcDgmTukSNtjFapQUPPszPmgWS4Y2TsokS0DSL2zFZS0zRKIkSxDyT4YlPNYWc5gkMloWNoAmLvIFNtQkcF8lM2bVSxLUYvjGMtDDd2AUZWIGUHQkVmUWZy7jXxU2ZV8jR5cUL2HiRpcyQOoDVyYySt.mVpMEcynGQEwjMYkVQzQTdr4jPvsBb4LGZi81J3r1MisBYoclLTQFLVMGZEEmPwkWLHYCTyDTdZYCdtXCYFImXmQDc3giL2X0TXoGdy.GRXo0aYYSQmU0SkEVVOMzSNESYxbmasEEdTMzY13TaJYEZmUWNxYWStIGR5UGYvzTPqPGUvn2bX4jViMkVvMCTBEjd4U2JyLELwv1PyMUTrMjTqPDdFkzLlACU4EiRq8zcZMCaHEzcyDicNw1UygSaqsRTx01aTYjZkUkSEYTbtEGM37ldM0ld1EmRqMCdy0DVnolPuYySGAmSCICdSw1bzc2ZNEWd3nlaYckTpozZjgmbqLELoAEV1nVLi4RXDslbzLDcxnmKwkUc37TN08lbKEScBkyJt.2RGEVU0XUatjjSqvDLt3FLo4lc0UWcnMibjsTMwclMYkTdFUCNToUb0TCctTCQQgDNNU0cpQ0RGgEb4s1SLg1LqcTLtTyMlojaSgUYvPFcH81b0TGZNAkLOMySpk1QgASVVI2JKYCQCMDMrYEb3M0QIUCYQsjVhIyQKcTcYgjKJYEUJckXvrRdJslUtvla4fmTZETcBEFR1H0ciUmKHc2X1cVSXkCaComZzXWSIQVPQgUdyTiVOQVYkETN3P0LvDTPigSayjGUXwVY0c0MDcyaXgkUiAmRDAiavLDZJYjRUk1ZTMmTwsjdZk0S1oTNIkVRKsRbOYTRi4lbgYERKwlagcjL4o2T2PULUUjVJ8FRkICUOAGUyXUZKcWMogWTvUET50TVCo0ZP4lbtjUP4DSNPcTPJg2YpcScyDFUsUCRxLCTyczciQFbHUidC8lYJYlMYkkVmIGV4kUX1Q1RwHVQVEFYTUzJgcUctQiYtElSlcCUggEM1EFNAEiMD4hKRwzaOAmVtgiTEIlVF0lXtojSJYSNq4Fb4kVM2PDU4o0UzfTTWkjUzTkSYMWQK01bNgVTMoUL1gib3UDQ3HCal4zXTgSVGUTRwLjUoczbyMFNQcjaqwjMIoEQZgFcVAEVr0VVOsBdCQiPWgSdmMTLEAGaWsxcO8zbwD0a3MzJtjCVxnkbQMWRpECUznGRvcjaso2Ulg1PqLzbnQWUNMkbwkkQ1LVXXUyTtTGVWI0ZBoTQ4QDLIcVT1I1QXc2YgEmUm4TSPYTVxomRPYTLzMVMuEEM5IyMZYkbhkkRkkGQAkFauIFcCsDUqkVdTcWSxUSP0vFVYQWZRgiYz.EZWokdVcmMlMzRo0lSPojaMElTH01YTAUbTEiKoIyMzUWMR0VT2HUV1oFM2f0MIQWamY0Uhc2QskyXLgEYwI1YocCRGU2Zrgld1fGar0FRq4BSro0QzLDUk0VbCMjbWkVP3.SaiETUYQyZtXWUpYzZSMzUYMFSQYyJw0zX0LiLLcmL0wFbME1Q1YERooTbrgTPwQkTzEkS3kDbBoDcyLkV4biatPCcjwjTRsxMPECMiYldrg1U4o0LQ4zSGIkVT0DdtoVU3ACMiQlTKYCUIQlVssBLhAiXNYDbloGTHECLooVSybTU04TZIYjLtQkcXcybQEGM2YlZTUjLDIlbtA0YQkFbQIiKFASYSEmZpQSZ2I0PqjjargmU2XTPjQEZR4BbM8lMYImTT8VRicUcCAENRImRzPUcEUUcrkjT1rBN03BYogWa4fzTxjCTBcmUw8jLBcjSjMWY5clbwQmX2vFVwYFUzXSaYsTLwIFZlMlcvb1YsIVL4LiRRAWNh4zQJo2ZPUTQqUjb2rVVOkSVwvzRwMWdqoEaikFLwTTP1E1MuYycyjDatXkXoY0PAgSXO8lUwg1TQcCc3MFcWUlV2LVNQAkX23TcTYFaNEkM4TSNl4VUL4jKFQlcy4jQ4TWNEEiUZkkZ4zFdsUkMQMCUu4zbRUySjsTTHElUrQCQwg2J3b2PqcTd3UUYXISYxHGU5AyYIkzZ30VcLc1XtXSLiEVSi01alkUZCcWRYUla501UUoUYtfSNy3Vd2wVP4gSSLIjKNgzZXA2YmUGNwTjTWEGT4HGNL0DZMwTZOYUU4jSVvQjK101aoEUZIYSSzXka2oEN2QVT2PEQpACQygUbNgWQ0TyTvPEdOUzaPYEMoo0bjklYRojdL0TY1XETrEEd5ombO4lQGMSQkslUqkjX4njdy4FVDwDRqrlbCY0UhsFYPYVcSwzLXcybDUyQyUkYxo2SEITdtDFN5AURKYDamcUQPAmP2cjZ0IiQWIDZmkTRQwDb4PEYMYULVIyStnFb13DVE4RUPU1RkIkTP4TbSMSMyr1aHEUTqQEUDgEZTshbGgScxgjbLgUP271Y1XVVMwFTZMGUAcTb5kmPOMSazYSQvTWblEWLFEkViEjbyYyZgAGSDUjSHISUiUEZoMmYxjDRAAkZW8zbDQVN0Y2PwgyL3QDYg4VSjEUQ2HDUwMmMyE2clACa0PFawbjR1wDRHsTR1Q0UQkTViETZFolRhcDRPQjM0I1X2zTTG4DbrkFcVcFZzb2Z2gDLpQkclQVbKMEMWU1XUkFdMgkbDkSQnMDTXYyR3DyMCg0TOsVM3cGVw.GVFEVXwTGd4DVV0jyUukyJMMEYGcVUn8TVOMkP1PmKRszaxLlPZYTMzMGZ0vzP2rxX5gmMLcmU0fjXJUTaVAiS1TFd2QEVCQUZ3bmTR8jY2ACRSU0MrQlUiIjTGU0PzEUdm0DazH2TqfzT0MiV3shVmo0btAERuw1Xvj1SsMkaOsFcEMmMv3xYSYjYVIzYzIWcmQib2c1PBYDSio1LBkGSxIVPlQkUDI2Y2klQksTLCcTSiojZjgkVxbyUgEVQt3BZzbEdksjXZsRSxPlY0vDLKEFcxD1a0bGUKYUThUEbqMCZpI1JywzM4QFbDQUUxHiMCcSVzbiVOc2b1zVatUFa1QzbmQCYyYEcK4BTIImRGkGZIgmZUAEUzkyTzT0U5oDcCYmV1EUUIc1STojbDo0b4IjULUUZXYTSzcEUxUDb1UCSgkDTgUGTyfUdXgSbgsDZ4b0MmIzRVQVPKg0JYwTYvbSTkIELYk2P1c0PyASarQGNtHiai8VT5U0bQgDZBACYksRbvomXrQ1PTImaTgjbQgkPyH2LPUVXAg0bqfCYusDayUWQiACa38TNyI2MwLCTyU0RSshcqg2TPoVUqgyYxoURlg0Rp0za1TELvH1U5QlUPEVNvUybXYFVl4BTRIWLw3VaGgCMCQ0XAkyZVQTLxHzQkQjRhgjX4.mYjETdrsTdggiS14VTRUFSVQiarAyctLDYynmPybWaSIzYvsFNOISSzsTcE0VZso0SMkTZ1zFcKQ0Q13RXp0zRtnVS3jySOI0Uj0lKIw1cLQCTvsDR5kiKjQWQJQ1clIkdIcicKAUc1kUbCQTR2XELtfjSrEzXRQGNSQja5czJ4giduQ1QWYkRrcEdKUiQv.SStYVLioWVg8FSIcGSwDUbzUmR4EkYtDGNr0TQLYjUtAmTnMzYEMTUHYEZSQSUPcDRTwFYSo1JwsRbJkyLFQUThkFZwvlSHgjMhcidIcEblkFSPQlatDWMCElQyXka2YWRR01bHk2ZLMzZtgGMPwDSJEkSyflSHQybwn0QkAUVZECNvfCVGc0cZIUYvUkYlMEbvbSQV8FNjoGct8FdjshStDkMw0VVZYzJkY1TnwDcXYiSzM2Zx3xP3c0LiMUUAASMxMyJybiZ3HzJmIzJ1DCU1LDQtYjStHjKAM0JFACVpU2TyIkVXYiKrMFN2c0X4cWZ3PST4UGaJITbkcGT1j2a0U1Tt31Q4A2TNMlMjkkbHcVMZUyPyQEMHQDajQDSH0laOsBSNAyJVMTTGgWS1jVPVESdvE0aJoDSsIULFQzZiYjQ3bmUtfyPOI1Ql0TTuQWP38jMPImTQgENNcSaOUFUFkFUTUldwY2JynDVSgSVm8TZskSM2TzU2LiX4D2UyHUQjwTPFUEaQIjU1LUU0UCduQ0bUAEaqbDTEsDdrAWLYQ1YrACMnwDLAMGQ1Dya4n0SEUkYnYzL2k2S0IFTSMkSxfkXlI0Lg4hTuk2QOgGNTYiPkESQD8lMmAEdCkmXDkSN2E1TqY1TqTlQuQVLNM0MoImUigVYAMkbOUVPgcySEYSTqPmU3njU3QSZigyU3fTbEwlbrAyXzPGM1LkdJcyTYMUL4gGVFIkRpYmYxkFQOUkdGMla48Vd3T2M4jSaDUVdvTkYGEjdt4VagkFSJk0TqEDT0k0MqbmSzLWQBIVYgUiTAclSMkjS2EFS5EVL0TCNQsDYqgCSYUUdWM2MiEmZSQSSAQVawbTL40jcTkkbqDlTzsjbwYCT48jTMsRLX4FdEAkbyPFcwACN3cCa1IVQgg2PXYjLmMyUx3xMPITaxL2Q4fEQKYiUSICby0jUgYSaZkSS4g2YIEFboQmZpQUZxkCUQoVM4.iVh41UvUlQiIjVtsDLiYmcq7zS0.EVrIyYzEDbBYUbkkyT4T2YN4DVssxRBcURJkDZqPSUDISc0gDTU4xYDcCLUEmXpUlXwsDLUEkVXQWczbSMz0zZhkCYLQGRwLGNQwlRw.WSyTlXYEWS5YUXoMjThIEc0bTQZYUXmgDaCASRLYDLTYDa0QyZzsVXkcFcTImRkwFQAcDYgoUPzsRYh0FLTQ0TFQGQVEVTVAkYTMUV4Midw4RS0gyLrYmKFY0UDAyStg0cIIUPwYSYscWTGkDcVcCcDEFMScVdL4hdOoDc1Uidi41XrESYUUEbgI1QXIEaFQzbr4RVqnWT23jXiUiMV4lM3IlTOg0cgsjXmEFbtfyQpgCRMImUDMDU3YzTHA0SHo2X3kUZP8lXZ81ZqTmcX4RV2sxM1jFVOM2cDIyJTcUY0QVNE8lYzjFRxslXt8TSJIFUPg1avTTRwUmLtLTUEgzQzjjL2D2bUYWcgoGRAg1XrMSP3YldX81XTcmULEWYQMTRYIkRGMzX5YyM4TGY4gmdFk1X2MidlQzcwUybr4FQyjjUxnTQwUzbScTZ2cTbuwVYlgTR3M1JIEjRUsjRVIDcCkyUwn0RIoUUqMELPUkdUAiLUkycJsRLtQVNCYUNhoUPkgycFQSPmUFV2AkKtjiQ4oGa1TWVZcWTwklbX8jUOkmUV4DRyLUZM4RLTEiXw7FVEcEd1MFdnEUQxTVTOIUUtLkQRMTRQM1Jw0TNJckVuIjTmYTQqv1cuoGcz7DVTkkMvr1MUQyRIkDVxo2QWMEZIkzUCIkaU8DQyfEdNglcQQ0Y2jTNu4FLpkWZtPjVr0zJxwDb2UUQoczY0ciVHICdIkyaYo1SyYzQOQEd2EjRqUDRMgUb3Tlc1bCcvHFT4MUc44jQmYkYo4TarYyT2zjSW0lYyfUY08zL1rFT1k2ZkUiarkUPFEWTis1bwLFSSMzMwD2LpAGLwfidx.UXIMCcNIkRjMUQKMCa5gFZJYSLtHCM3XSSNc0bGASLpYidKwlLyASdoYmRDkFMUklTxbmZZYTazHmUQgDV3DTUjUFSC4TS0.GaDIWLHYSLS0zQicFSOMlSooDYKgVQsEVR4DGZuUVSqD0RswzR0YCdqEVRGYUdnYDNXgjKmIVXA8zTskjbzgjXtQVd2bVQ1MTdSUzbQAEb1IVL03RdvU2YBMzbkkEZhMDVScVRWgScJUFaVA0XIkzLkkTPIwlLDAiVyQGRIQldDslVPUEQ5cmMxrxaQIWYGYUcGsRa3EESzvjVFgWLTcDd4vTP1ASMJojPvs1URQSNAE1cLsxbgcSNVAGbzXSRg0VcDIlQoEybxHVXuIWMLQEUwLUL2nzcrciXIQWbyLERMUiSYkjTuE0JNI1ZLgVZvHSMV8lMgIDRhkGcwHyLSgSNjY0Q4bSMtQ1XqkDTnETS2jWbtszLNUlLFM1R4Q2Yso2bRshXWozQHQkaBwzUQYVV3UUYNIWV0Y1axL2XzMiPQcjY3PkTs8VdKomcjcGd1XSURcETS0FVH81Mk8jbxEyTpkkYTkWPNgkayIGSNgSRv8DQg0lR1ESPZwTYFUCYIIDdAUTQQsRSMIjdoYDU3XkYMokZtH1UEgzS3XGTggVQY8DYkkWR2fEbT4xUTsDdkcTdQMTQ4PzXLY2YCQyRsAELzTibmsFaKcmMBIjVYYSZrAWP4sDbjsVUTI0ZIc2QXUUYwbyRSUzc3nkQnIVSy0VP1HEcqPzQv3lVCQlR5wzcQQjbpMGdpAkPmMjZQYUTuc0a2kjKsk2a48zT3ASa5YmTDs1YT4xZ4LFTXE0b2jlVzMUbzYkaqPSVs4hcHcTNmEyRQMTZ0AyYy.UL4IEU4YCMX4TaNQFSIgyPDsVTjESSucVQ1jWdqrxb0Ezc1.WV5ISZYMVLgc0cBAyJGomLkkWZqHFdqTyRQIiLZEiXJcTYjYTcKEzRsMkSlcyTjMURzszT0MTM2YVVjU2ShYTTjMyPksjausVa5gVTJMELEY0XGoUQVIiYxjWUyYzRTgjQ5wTUOYUN4IyLvjCTFckMDY0ZZYja2jDdwwzStc0Y4bTTC4BL3PGbhIWMtfSTTcmXxzFMSoUP1nER0zTc0fEMOshQTwzanYkL4jEdx4zP3cSLNISXrMjXHkmTKkCSKETQzI2ZCUmLqcFMJsxJYMWXQg0YjM1T2o2LtUWRNECduASSgkVZqj0RK4RQocGSz.kXkk0axomLoUTT2wlR0LzZB0zTtjmd0jkT2nEcAI0T4bjKigUVqk1TjQ2biYDQRsBbGkmZs8zR5sBN5cFRBUmYpYzU1HibRcEUBcEVgQmXRk0JvcGROYmbrgkYtYiKicmLFQDNhYmRBwFVMcld5ESPGkkK4EWRWg0PynUb3kVSU8FR2cCLkU1Th4BTjAUZZIUTwYyQHAGREoEd1sxL3kiQqPSRzL0Xg41cHUiMUQTZLUzTKk1cxfWL5IicRkjXZQDQ2HmUrgTcKgDcFMWMtrjT4cVcpAiRAkkVKs1XuwDVrgTQJo1b2ElLtAUbjUzYFEVMhIySxjmYOU2YU81TMwjUAMmcYIVUzYGZ1UlP1kiYzYVV3.yaHgzRSEDY2wzMGcDVYcjViozXWcCcn0FaNoEV0TVdy0DR3.CLIQlSNMGToYEMyzjV0HmRLMFdUAkS33FTDYDY38TRKAmYr8VL0IiQG8TYzwjbX4lRLYVUiYjPsQzaDQGcQEENog0LwcFZvslQg0FNEYERrIVasISLt0zZBAUZOMVUy0lXxwVVZwjcy4TTYokd1sTLRgDTq4zQoQUZ4ITXs8lPzQTX24hTUo0chEWLyslLDIUYqYzRsszMyDTNuACVyz1MzHyLMACQKQWN1H0STEyLqIjRv3BMoAiTiISPtPFbF0VZG8zUScCZMEiRuMiLNU1UF8FSjIGMXolLHQDVB0zQ1HlSMQUM3sDTjEVQUkWQNM0UxfDLZMUUiYCc2IEUR0jZ4f1XZMEaVcUaxHjR2IkdqoUThE1Sh8TZyEkTuEVSno1PQUVMoslQMkkZgMkRnYkLhMSNxU1ZOU2TVk2YS01UmgVXmISVuEyM1rlaTUlM5AyQvPCZogib3sjPvsRPvvzbxHzZNMDd1rzaAUFSMUGbIUjMKwVbhITcicSL3s1aGklXzzFLFIEdvU2P2rlVrEjT4kVXZQURuIlT4TDdKMiRkgVaq3lVLcWcoMScVcybhMUMSM2TXIzcrQTL1UCU3HSaYsRcvDScpEiUKoVaz3zMsYTPqolKyUEL171ZXQjTzXVXtEkazfiL5gla0bkYskTQv0Tczjkb3MVSUAEZDMSPDMGR3cFRMkGR5UEcGkSX0fUVyDCUzIFMNc1ZoszQVIDajkFYmIFcwfjdRQTSSQWUwPWMvEVcI0VNBczcBgyXnETdjokRXkEdtYTPmMlRPAGLiYDZJokMMgWZoIiMTEyaB8zbhEkKVkiKuMjdpQyatHiY3DEZzoESkcGcPcSVpEGbYM2PSokX4.0c33zQkcEVGITMlAWcrwVVZMkcCcVaZ0lP5QWSOoUPFMmYB8jbx01Zm0FTSclZ4HTR08jK0cVRTkialc1SvAyZ4TURiklZ2MWTtHVP1b2YWYzPOUEL4jVbvHzLzXEazomZDkiXzUWUicSbHYCbQYVSm0jQ5MFcJomcIgiamsDb1QCdzjVXXM2MNEFYKQyaWcDYKsxJ0zVYx7VM0UybCACVVcDVxEjPUYSLvTkT1Mzb1fEZB4lbuMkQF0zbEYzTgY0LWkjLyv1MvnGUyYmcnQEdSIVSmoVYHsjSQkUUJYycxfFaPoDTJ01YQclSQcCbXQkL23lXvgya3MCZ5ECdxjCNqLDcJwjbnEVXpsjPnYFVUg0YY8VSuwzSyTERuUDc1bGaMgFLjEEcqczU3jFa3PVahkmTYUES5UiQpUTXwT2STclZuMWPHU1MWUCY30TVTcGVz3FRHMUT2MGbM4hKXgDTzUCR341aYgGNTAUQ3gkTqAETqPjavHTSDIiUNAEZXEGMncERWICbws1bPA0SNYyLOUGTjkWTGsFYyrlUs4jZlo2Xyg1M3b2SrEVY0wTXKU2auYiP3HiZ5MlPzEFNQsVMKQDRiQ1TYgmMuAULRI1LXUzPBgzcpciVF81R3QVUCE2PPgUNz4TUvwjQGQDciolSSAkcVo0ZOo1SWQzb1gSLsoGLzAmLCETQrcVN5kkS4HSXtnDL5ETQFYFNtcTQvEUTmUTRAsRNA0VTmAUUFYEdEQTQH4jS0I0Y2YjPpomUrYFcWIyPqvjbr4jPQozLWMCQnIlKFoVcvLUb5QCZQg0ZUgFS3clKR0zUjQSLgAmMtIiVtkmVAklaiMTRvTWPNUmdHkiaVcTNSA0YIkUSZYES5sTdVEzavDzUuQkRukWPFESPxYURgAUYpoGUmcDYwHFYZ8lZlYlXBokSIoVPogUb4bVULcDdz7VMrcVatAkLYYCL3oUPTgCUlUEUYUmZAMVZMcCTzHyXJEzbEs1J58FMTE2aKIGcj0zR1kTYzjiTCIFd2Q2TJgicqjDa3oUdDACQns1ctvlPgQTYvEFNHEFMZgjaWgCLq.CLmgmVQUVROEjRjEmYR4RajQSZDgmbqfCMNA0UEIFQ1PWTzwlR2MicUokQEkSX2bCcRsTXxbzP5kyTVEDVh4lbZ0jPRkzP4jzTvsDdJgUNrMSbhMWcTQUPBQ2TnslYyfEU1oUMFQCV0USdqolPskzJJwVTTsRMp8VXikzZxHUdHMVXtMEUz4xbWEiSGMWZ1XyXEkjMvIGRKsBRDUUbZgEVg4hRBcWd0g2TEsBUXgjKiAGT5kzU2gkd0kSav4lMtPzU50jQu4jTDUjTjYSMLwVdEEjXtXENyHjdKE0JPs1YCYWPHgDZ1XTVCYULTQSMkIjMOQWaHM1LFMyMZUVPkkUcA4xYVglQYsDdVgGNX4VYBIjYAkWVjcCVzTTZzUGQ5QlbmM0U4TicwjyXvnkVogTVrUWXH81UAg1b1XUUkAmTKMkLZQyJHsDSqoGbtDzTicTRlYiP3.UYGsFUDAkMJMkd3zzXocybzPUPQc0Q1TSb2bDZJMSb3.ScLg0UtbWa2jSdzcmL4IjLDAybJ4FUrolbKgiQTYSUBkEb4EmZkYGVtXlLLs1RBAEQ4n0cyYkaog0UwkWR1PyUtLlQuo0MnomPqwVan8VQjomXAQUQ0ImMCISZSQjY33RSJQlSJ0FUvnWbGUUYUAmXX4VQzUiKNQCVHgTXVEULr8TRQ4hbngmbiAkVSIVPynGd1kSTPQyJFsTcoMWXhMyawf2PR4Das4jUy.kKjYGQKYkY1rzYFcFRBclSvgDawU2PkUSSK0FUBclTYUlYwXiXvgDY2rxXwI0LLckMZQGTyIkXQMzSD4DLSoGQDwjKsQkYSsVZFUWXMo2R2LlPksjdVwjKKIlK3g2JvT2cBI0QT4hd14DT34VMBomP0AWYIgzXzgUPHUVNqTiblYGMZICSCkUTWolY5A0JXcCRZ8zMNU2SPklZ3vzMlY2Y3kjTpkTMhMiZnsxL1HzcsMkQyrjUwoTNwfSR2gUdusVcIcycNMkaqnWSBoEc3U2RwHmajQEVqUUS3zzbhMCYFsBbMU1Uyn1P38DSy3hUmQ1Q5kTX4TzXqUTLBQWdRckbDgDapQ1Mq8lZ0k1cvk1RoUGS2ElTnEFbOczal8lKyL2cMk1Pso1ThMFdNUUYgYFbYMUQiYFTEImLvYTQ1YWMwPWPP0lPS0TURYVRFECV2nWPWEzJ1MUNtbkdUYFayHyYyT2ZzT2XMQCNvbkXqbGSzPTRvUUVhUSUpYWUMsjLFAEYuEjLtACLOgjUXQGdSICaYYlXDAmavAWbB0VU2oUVjEkbyIGdNMSUgMkYqQ0MSQTUYEDbwbFY3QmVRQSdwImbJ0jU1TlZLcSd0slUEYkYtcEaPkmQx4hX1shKAQETUgzaBA2MRYiYqH2LssFMsU0MV4BM2AiKZQEQxMjbhUDRFMEYFA2Sjg1U4fyPVECcQUCL0LWdzQzYSIzTi4VNLEkZm8VcR4VTFMzaBQSc4bjS3oTRP41cvASVPoldu0VYmwDVPkmawHTZ5okKwI1Ui4DNMoEdBM0YU0VNqnmc2bDdFQGNAQlYukiMzYmK4EmRZ4DbyMDLzsRRLclVJYSSNgzYnU1X0wzbmoTMz4FSjMVSjIzPDUjXpAkVwfkLqPjc0jUTkM1R4LEc3zVapMFYkMidNUGSTY1ZTI2Q2ESRGMWRDslPxICcOgEStYTM0XldgcVLsYVLw8zPzPiLmsTZUIjaT8TUgoTYIISawoEUzX1SybibQoTLv3RNvIlbzIlXHcVTVozcnQSbM4VMy0zcBAkcS0TUUk0XHklRNMyLBs1Z1LUbwAUXyITXmwTYGgWY37zY2bzYYshLPkldGwFdrQkLT0DLVYFU5ACcMgGc58TYjAmTmgEahElUS0VTtbzcys1ZPciVXM2LRgCMHUCU17lM3EVNRM1JqkFc1f2QgQUNYUTRQwFczQWLx8TT5MTLhETTngmc1nWamklbTkSLOQldjUENhUWVrwjZxEkRtIEUOUmY0AmXzDib0zDR3EEQy8VUpMzcv3lXv41StIlPUcldJEjbybCdAckMEQUZqE2Y3gGbAIkbAYDcZoWXnshcTgWYp0VUuMjXqUUaXECL4Y2Y0flM0.iYwcFaxc2PqgTaHwFUMMSREM2SOwjd0.2ayHiX5AiXkcTUSsVPmEGMkUTXpMzMGYVN2kVVskEd4zlLyjGZqfkS4XibyA2QzsTayEGYJ41apIWZ1TlMlsjPXIFU1bjd1UkcnMiS2MCLMozXYQlZqk0Y5czc33xUOw1TnUzYRUDUzkkTwoEbFwlMvLCNtQCcOUiQCQkVPQVcJ8Dap41MXcWL3.kSlcVRKQDMSklRtoFR1bkQw3FdX4TSS4xLIw1Xv7zYpQSQlUzLRglP4LSZQcUXNYUUJYibvYyJtgEMUk1JGAELyIEQBs1ZNgEM1b0UEsTVhQkR2.WZEslZv.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.SPuoWa3bzU08TYtvFU0YlYwIFRiUkTZQzLyQEZIYkKtbFU1TkXyICbq0zP48lQlIzXssxYi4DVlomdPUyYLg0PxgCaTUCV2UWQtgCSz4hPMYCNIYjQvDjKh0jZYgmKVshY3jSZx.UZLclY0gCVQkGLvXUSEkUUXM1RvbTTrkWX1PCbYMmXxfzMtLDLFUFUwsTa2sBbkE1bL8FQIkUdKETcyQTT08FNJAGbqvVcEEDZWsRQyMiZmQjbDYyXE0lUxE2T3PySMkmaZQWMtLicqTiZCYiMlQyX0kkPEEFawrzcykmbLckTw3FMHAkRoo0L2g1QJsFLnESanMWXDUVUxf1L1bCaksRZrkTPjEUYDkSY0sxSrMDVoIWap4RTjUTPqkSPtkEbwY1Xh8lX5U0QNcGYFAGMWIjPgsBYOokdzfSPToGTqbTVwr1cLslKuclPxb0REkSavLTZqgjK1zzJ2oTSz7FRRU0U3UVN2LVLLcWaGg2JoIzTU4RTpoESUsxXJg1MuUWd2b0YwzFdssBSnUzUuQ1cO4TRM0TYKg1P1AySJ4Rc4AkQzgTb3YSTKYzTwc2MEkyctjiVHgGLPsDVWg2UXElPqjka3g2MhUiRDIjZ0ciX3ojXQoDVtPiYlkGM3fVV4EUZhACaGYGdnkiSPkEbpwFUWMkZDUEaHEUbz0VVw4TV3IETZo1ZwAmR54TRtfzT0fiL1vzaxTSdJc1X0IUNxo0S3HkZt7VcUwzPlQScDwTNgElS3MWU4UVS2nEdyDkRyEDZ0kUaUYyJZQkLnQVTGgSRIMUVxgjLGQEYSMCS4fiQ2HkPtfSVOUmMvQ0ZmcmVUASPXoGZAkDTRoEcyHjZhIUNoo1T2bjTDUWa4.iUXAiKH4DcJQlXrQyY5clTwD2S3DkYxrjRGoEZq3lcNIDbYcTLqjUbzXCayjjaIcFLt8FYVYDcZgSUHUDdEQiRIYVQLsRYMkTY1ECMZkVP3Y1bFs1QCgiKxrDQ1XFYYMVbQoWZEIkMPcCaY0zZqY1SRgjUyXVUDcGTosRTQMVVsYmUmYSP3gULZgSP2j2Q1ojTyTyRtUyb0YWX1kWLmklPyDUciEzJokFZXgSPtnTYAgkMQg2U58lalkjVxEzZukyclMSNn8zLyIybs4FYzQkY4PTVKgVZM0VLVM1JvQ1ZyHlYUQ1XlQ0crI2cOgkTxoEcq7TSZcmcOgiMuY2Lqc1RyLVYOEjPBIGZAEmZVoDLCcSMvQDNQkyTQ4hYRkFRVokS34TTjkFTucGS3T2PqclKzU2boQkZwcVTYk1Xy7FNvU0b4PiZP4TZDgWZ10jPGsDNmgENpACM4QkXVk1UyHiSHIEQSokdy8VPGMiaJ8lSLgzRBg2TWQkPt3FSi81QtTkLvEDRTkFTKAUQEAGcKkUSOshQmQTY2HDNyDSZYoWbzv1ZQgULDshcvEibsI2ZGQWalomZYIiTxnFTYUSbFgzUA4FdCsFYxLGNqEjYtk1PIMTPHU2UBYybN4jSYYyT4fmaL4FNqb0LUcGYrcDaCMDSEgVV54hd2cENHQjU0r1XBIjb4XiPQUURhgmc4EiUWslV3g0UEoVPTsTQvQUZ34lZqHzX381M2DjThgjPo8zQxDjZO81M4rTV2PSPgUUcG0TRDQkaDE2RvTTNYYGYkAGTFkSTwITLAgmX2bFZnIVUpsRTS4RPQIlZwzDQRkiT2wDbCM1LzgkZBwVXuEELrYWVX01TBUDdVsjav3jQ4XlMQE2Xi0TRywTRqrhcHoTRiczYVYkcmEWLqjiPSciURE2bnQEL0DFa2PkMOgzQTQ0LhcGbDUjarIlVNUSShoUYzYldxQjMHQDQCcUPlAiMxciY2flTSYEbFEDQOIGNHQzXAslbKYCSxjicyYCNwzTPwHSa2PUapcCaWkVZ2PyRpQlZKgmdvn2JEIzYNcFaUIWUyf1RsEUcz4BT3cCTPMzYS8lYzUFNgY0RjkkY4HGVQUlcJkjV0IyaKMEaAQkS2.ScwPEc1glc2nzJynzaLIWc2UlXHEDUrIEQy7jMlEFcGQld0.0bX4BcRUSViUDcvUkQAE2T3gmQN4hXDsjdXUUZAIVawD0RF4DV5Q2ZBYjTmE0agszRmQ1aIozZxXEbLUDdqLFcVI0S0.iVAkVbswFaDI1Rvk1PCgWcOszYsMlPIciSwzzMAYkbzbSSnwDQDsxJ0.SXyQ2JholXT8FY4nmZ0kWZYEkd1DFUqcGYTsTSJcyXFQjPq.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.2RQAyL0AWLsMCVjM0JpEjMwslZYQiS1IlXpYUT2jyRzkVTj0jLM4DU4n0Y1M2TpQiSNYVZvPSLAEUdKIkX2nVYBg0Mzcians1LtQEbgw1TDYzZq4RSzvlTGETQGwlPJY2Y18zZ0fWLgUWRrklLoUjX3nmbiMWPsM1MBUCbWAGN4vzQIAGUS01Z1c1Y3ISbQYSRKkjRvzDb1EDSk4jYtXiTCMUUUoDc5QybgIURD4RbWo2LxDCROIkQPU1c481ZgcVVDAiRogVPDQlY1EybDwjVuc2Qvo0JnIUTJQ1UrUDUW41cugmYyrlUCUmcxDWNt4xLxAUd3.WbNg0SP4lYwX0P5gSdTslawEiLlgiMxXzYEYCTUgTd5gTNvE1ZqzjQy3hUDc1Y0IGRGw1YkElbMoVTiEFcuIWaFU1YhwlcXglbmIjRAUGQB0jXt.iMBQWPx.SQ4jGMBQETZEmQ2UCbEcCZhkzQ2QEdCcEUP8VYqjELkckP2.SRkcmdyHicLYTMzrDR0bDZzfCNVomVlokL1oDdEACMlkGQ4jmKSkkSYsDTIkGQ3k2TqAUXBQkTLMibsQ2QlgGVQYmZ5cGbj0Tb4f1MCkmMzAEM5EVQzHUNtXmUSgiZDkFQBsTMHg1XzjzMGoDMCEWY4QyaNkmc38DY2kCMrYzbHQTLwUla33VTuAEMxYEcLgTSy.GRmgTQw31a4QmYybUNzTjUq4RLio0c4TWQykUNpwVc0czMGcjVEciTVc0T3LTLQM2U3Tya0sBYUAGdRczPBIDdQolY1DWcg01YhglTWYVM2XyZQcVMMIULFQWa3cmdzDDT2PFSyoEQ1PVXJUjcEkVLAYmVC8VNY8DcWY0YtH0P5EmRXIFTDwFZzElL5sRcWcyagY0Tr4jUQgkS301cyXWStrhPFgTQNY0LSEyStgyMTQ1UqTFQuI0SJg0QOkkVQMDQxDTNtzDUpsjMQYjSvcWTvf1SGshVn8TZmYTPzTWMyHiPtnzUFckZHMGM08zZhY1XoQFSnIiZiQSLMMVPGwFaz8zMRw1MskWXlwjTBETbqPlYxIGTPU1R0H0T3b0LOE0YWQESMckXR4DMQk2LzMmTsA0PKwFajUSSjQlYwYjLtnmQqrhQXUTP4P2RFECUs4lZPUkPUkScikFLFQ0PVcSaxokMLkiQxkFM0P0U3rlK3T1ay4xS2Dibm4FUggFSTU0SwfEUKkVaZEEdX4DZvgSThkVV3TFY4MkQH81PXU0b0nDTrAiZMM0RQ8DaYkmMNYiTn0zUiEmULEGSzP0TOsDVm0jPwQFYqPGNFICY3.iP1.iLLA0RvAyYrkVdo4DQ2cGblYUYz8TUykUTwLFZOw1S5IiRYk0XDcSSvg2SsUVUZETMIYFLEo0Q0nVNv0TZtLmYqfTaqjTLL4zYBszMyIkLIYjYQ8DLtXjZvIjXCAib3r1TVUGa1nGdyI2YvXja5UWVqrDTi41JokTMmEzR4nmQw0lcqTTPq0DTgYWbookZ4jzX4.WNmYiLnoUMRUWPxMWTrMVNPg1ZIIiLN4TT0LSRUQWQ4HzYwQlZnslZt3FLmoERwgCc5MjUxUzYUojYJglUA4zTZglcV4lRrEyQt.iXUc2cRsRbiACUwUUazXkb2o1QzUjYzD0ShQjR3bkZswzMX4hP30jLpE2S0QCV2LDMmszJyrVUK4VR1cmLw8DL0PSMwEFd4EjKlYUSX4FSCgyb3MDRx.mQBACcFY1Q4XVYQMDdwDFLwwVaPo2cqcSdMshdyjGdMIyc2YSPWshLRUkVHYDbgYkL1bVcNgmYjgUakEUPgokKMg1MXUGLTcVQHYFMwnUNZ4hb0I0TOIVUtb2SxDWXNwVNu0VPVkERQEkKuEGShkCdBk0YHQDb28VRqUCNqg0JPkkYXwTV4fWbUE0LTQyQvwVdyAEMTgTLzAiXtXiVFEWdEwFQ3okcEszXtPDRFkmMzXTcBckXh0jbUQCTx0ldXolbCAERPkUXL8lUy.kXLMEdVMCVjkiLngST2wVXiASaG8VQVITNZgVVkElRwDSSY4lclYSRAIjKtUzaRUkVzPUUyjWRzUDVIITaxPmYlEkKRg2U3DlTWMiX0gkUBUUQUkkc07DUyH0MSkTSzAGctXVRN4FTEckd3j1YvLkUvcjRCMybtokZQcUMJ01P2HyRYgiQsA2QjMjKvQiMy41TWMlPZ0lShEFTqjkYyHTQI0jUTgWZMY2M2.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.EQqkDLxI1PjoTYDcUZjM1XRYENTkDdsYSNGgVQwEyM3PzU3gyJEEkYok1RK8VV4DFbQEmUjQFTsU1L2wlZTg2J0jkUTolSSYGLVsTSBEVT1ImMBsVX30TMmklTXQWQHUTbhMjb4klUBwzPuk2c2oVdswjZEkDSyLVaTgGSAICbqnTcy4jKDkWcCg2QGkiaqYWUSk1MTsTQjEkauYWUE4hX1kiZqgkTDoDbVI2cxXURFEGTOEUc3jjYt8zJygWdyfCbvnWXw.SV3YzbjYzTwXGQtszQxn0ZCcFZ1USNxLWNwshPNQkRmMUc4gCYwckbwDkTAEUUn8zcpYWPPgyZF0lakklUTgUZvXGMqjkbXkWUGIFYLMkTLc1aV4jRhQVaNsRSA4lbJMiPPoGZgMlPNEVNscCVsgTViEyT5sRL4E0QNMWaqXCbvXTNxD0cRECYyHkPqgEZQgkT3LVY2ImPWA0X0XWNwkSLEkGRvLVU4DGaU4Vb08VSPcVS3HkSYACaAEVd2Tjbwj1SUMkR5cDQGQTT0gmTJk0JZoTXPQULgQDNuYjP5EUbxLCSkESbtQDUTQWZM41ZGwjcynGZyQ2UkAUVq.iZEYWLoEjbXcGMwDTU3XEbOQDYXk2T4shcQgyXwsBUtn1UAkmZ0jzUKUzUiUDUTMldlclaOsRUuACVXY0bXMCU4Q0cqHWUGcycjoWVqEVQvDTPPYjaXQkUp4jQ1.kM3H1cGcEdvrhQFAyQvvFc3HlPPcFSsgWcDESUZEkQkomZrMSchYWPNEVS3Tjbz3xXpIlRUESM3kWTgwjUP8Tb23zTMMUMkkEcp4lZ4jUVmcjVs4lRwMCVYQzXswlQCMlVjolUNMkbKEDTPMmZTkVXVwjUOMmKRUzbm8TZjIjZsoFLq.UcQ8DVIQ2LVIjKYITdjsDVBEyJqU1cUs1MYEGdNQyS1nUPzb2SBk0YmcWThsTb0PmLoISMUM0JWEjPxEVPtD1JIkSMjQ2ZwUkM30jKFYVcXUDagsVRnozPKokVwTSMx.CU18zLFYlZrYEahcCTRcjc3n1J2YUND4jUgAyRGU1Z3byLnMyavE0aRMWLynDbH81MLQ1aOY2ZtHUMNoGTUgjLqrRTK8VT1oGTmAyTxkGLRIlR4IkdKshbKUFdK8lLpM0TgQVPYU0PUIiU3HTawj2JvIkK2UGYk4TcybUZHgGNykmRBE2YLE1PFE0UQgkSOECLkQjPO0zbC0jaXcGToEUajc1YqL1c1L1XncGNmAGM2XSTD4DYUozPs0FMvjWaOcGb3PiLvHmcHQzZxHVSlQSVmMDQyb1Q4ciU4cGdzkTNzMTX0nFbKcWcFQlT0jFbuEDZ0MUd4v1J2cjRo8TXzcyaPcCZ3PFTnkiaoUVQUUGNXcFdkkWbV0TVYYEcwYFSqMWdXA0co8zLK4xSzEkdzblR4fkbq.0M2PFa1wTZ1oGMvcSdo0FNEASLvn0YAwldqQmL1MGQvMTQIECbIgyMxX2LXcWPw4TUEMSbSIFSogSNjcTXwP1bSQ0PiQyUCgCVggVXlQkYkQCYPYCczAiM1UjcTglSxLWRggFL4rVMpwVcyTyJrAmKjQCdSsxXFIzP00VLVcSMTkUcB41b2TyXkg2MjImS4nzSLICMXcjbxDGak4BZ2TzQmIWYsEkYI8zc4QURRsFTN0FVzLDcFMjV5omaR0DT3f0Y1HSRLkCZgUVdZoUZRo1L2EkQZUDVZIDMBQTSr4FZHMSY3oDcQEkYgI0Ro41ZYYzRlA2TjgEVZcjSg01bA4jZ2PzMhkzbOIlRVYjT1nVQmQCaWYzagUjUwb2LMsVdnMzUNUUU4kCQKQEbrQlK1EGcXITZ3TiZrA0QIoUXMgWYZ4lXzgzX4rjaxU2ajIWPtEVU4ImcEMDVHEGTvTCS2cGS4XiLXAmKhokLLMFUiU1bzEEYZAEavjESxDmPsw1PiIiMvLEU4QUXUo0LvUmLjkVTH4lUDMjSVw1TDAURxHkc3fSVF4RZvEGczTjYpQSavTlXrcmXmQGQlUiUnAWcIsDZ1H0azvTP0UyYDQSSrUEV3gmX2glTnoWaRcmd0wjdrUTZjEzZz71J30FNtUSUocWPRkjUNIUMVwjQjAGRHUiM5kUXgsxLAA0XyPzMJcld5MUYxMFY1IET58TLvTmM2UCTMUjQ28VMUcGdzMFUWkmVScFRRQjYYsBMTkSVDY2SsESdNokaGA0SrYFZ4DFLiM1QwkFQyTjR3UVaCYjSFMTblITYwTkTSshX1LzPwjWSGA2LLE2UwHybHMlSxYCMHUVZJ8FM3olMPUTRwg0XzfiRwTDL0.0JqIGRxPiUwnjQTgzP08TYBkWQVQ1SislawgUQ1jUMSk0JxQkcvvlQN01TlEUTIQUbkkmQtHEcxMUTWgmSRcTLRUVZqfVLUY1ZKA2Y4XlRxbkStHmSkkGLl0VURY0Y2IkciEWNtc2SXgjMBoTMLIlT0PESGM1aJwVV10Db3HybCgmcrIDVQUUTqQ1aIYEMiMmUvTFREgWTrYTSY4zaU01Jt71QScESoEiUQgVT5IjVqUjMToERjgjdOECLjk2TZ0TVB4jSvblKKICdPc0TMIUL5IzatEWVqg0RzsFSi4zMC4TSHwTMqv1TPUGTtMTL3kVVsola0c2b17zToIGcDAiZMETLqPlc1bjPqIUN3PyZCQURRclLY0FLVQ2XAMVSvDETLUEL2klYFIGMHcyMmMGVrYyJSc1SEQVRAcWPVQCUAsxXX8FNC8jZzUjTLs1csI1PEojbOcGZxb1Uvb2cT0DTjomP0DSNucVTNMjR5wTa5kyJXwzSBkUStICRz3lKJ8DLPAEbqHSQxP0SzH1cwQCd5sjUyf1apgVQvfCZ1M1agokUkISb4DlV1QTNAUyTL8VZ0XicqEkX5M1RxoUdWoVRCcja4kEZFQmVGcmVKkyRqTFRYMDdjsjXZ4lLK4FZMM2Y3LDVNwzXzTTVAEDZ3Lmc0nGRF4TXM4hLtQWROAmcKU0L2.GR1nVdzokX0fUbOQzJhcGUNgzSYMFaikDVYo2UWgGSqcGMBA2XnslXHkzZGkFaO4hQwvVYtU2PvYldGsRPk4hLlg1TWsjY1rRbnozLjoTaVoTNXYkMMYGUV4RSAs1R3jjd48zJtomKGQWR4nVdxUVN5gkbVYSVOUmSyLUSjkCZiM1QxfTZGIEdIgDVmESPlYTXJMyStHWavYSUpcWc4sTVs0VZKUWY1QFLJY0QOQTNpQSaUAWPtT0JKc1XvfldzbEQ48lPSg2aVgiL1bkMvMmZxUVLogWTzfSaLsBUzPTaOsjdRYiLiMkP4rFNIkkKI0jTrkENyLlb3XzROAWNRQTPt3Da4YDRCESbwjTLyQFaiICZBAGdqbkKWMWMAEGThIEZmoDQDgWZgQTXuwDLyXTROkCUuckTFkWMNkUPTQiKqAWVyLiYNEWdSISPAoVSnMkLLcWMOcCay01RtA0bOs1al0lQHUSPyTzT0rTTtjVU3IjUHEEcyPySIM1SpECU28TP4A0ZtYWLvUERrUDZD0FcBIkQSc1RgkiLCgDUGkmLY4VSNoVN3LGNyYCTn0VcpQ0XCQyZyEzM3wlXQg2c0kjKjclMC8DQC4hav7DYyUyP2omSRUWUnciK4IUMmAyY5QiKuslQvHkK0zVMvYzLokjMwg1Uy7zYrshMqoDTq3hcsomVz3RNUk0YqPUb4EETrE1XOYlPzLWPBgUYSYkcocUQwQ2b3HSPRI0ctkkUloUP1HUZVEDdsk2TKI0UE01cYESYZcybw3VPhYjSskkLyblVyYGajUjLps1MiEjYqTUS1IiTyjWcnwVLyAyckYVLG8lT4f1YuU1a1HkT5ITYqkWP2fTa0IDUooDavrzM3Lid0HzaykWNxgUS20FLyshMK0VYtLERlEyPpQENnoFZDAEdJc2LDE2J4kGSmImZlQVbuwVTPkTU2HCZDcSYJkSXzTzJpIFcSoGdIM0Um4DMOEkdkk0YnEGcwUzXYISNzHSSv71bZcyJColMZM1U0HVVEoGb1L2a1PGV3.USXA0TtHjZhg0RxzDMtLmRkMWVGIid1n2U0slZukWYqPTcAMFQnA2SEsDNCkETy7FcBczTTITQRglRr01YCE2b3XGayI2X2YVTl0DQngGZDQVNxHDTBo2T1c2XZMlKwgyR3XGb2MiRy81YuslaFcCNto2a4L1T2LWNyHVS3cUPGMCaEgyMAQEMAkVbo4hY3HTXKYWS2.2XgkmMhEEYTE2SvQlKWsBU1cTNnAGVUkyXUIibKQ0ULElZH0TZLsxJx0VRYUmSnkVXm4VP0sTNRI1RwXVLCMkTZ8zMBUCVzf0UkIWdwbCb2nlUFkULkQiPy01cg41J58jLvclSv81LsUmK1oDThkjcVglZRUSZ3IDLHczT4MWX1nUR0TCdEY0cyjmYn8TVw7zSLYkaxDWQtAiaqXFaLIDUqMVZ03Fa0.CcHkWSlUVZvEiMRAUbm8lX1gVSxsDMTgmR2IUNWYCYs0Va1EkctvTdwL0ZJ4BYL0jQpkTQCEUaIE1PFcDYUYmXZklPKMUZJwlLKIDdxIiLxLGTP4xbuE0MgsjMmEWcXgGRno0SnMkVMYVMoUTVxPGZ2X0JIQzJwkScTgFc1QDNyfyX0TCZ2TGL0DyXyrhTuMGSTcSPuUSaS4VYwDmZoQVMHw1T1.iczESLmsVYUIUMYwlP2zFNyTzLVYWd5cjVvjjPEQmdrwVQHYDR0cWbFoFUq7VMuwDZIYmb1zza4YjPO0zLqrFZ1MSSTI0coACd34FQDICVyXUcYo1PYozXgkWb5M0SoAyLHcTcBciPDQiR1.UV0fVajoDYM8jT1oVP4QmLw0VQMI2Y271UWQia3zlQIk0JgcUUS0FNr0VQOYmMZE1M2HibRQldY8lPDIFL3YDLtfmV3.SSigWPik1P0IlMnYCNOAkVggyQ3QWQYwlYoUDMMkTcIYURqI0ciQTcwDmaWkUZnAkdjcWUKIUTPgUUJYGTqPlSKwlSVM1clUmSyvlbtcFLGoTVhkTRNcjLXQCLPwjMVETS0HWTmAmKlYyY0jFNDkmZwXDb0oDLiwla0LldZUSUlAEVSkSNOESaMISLLkTXnwVSzHkKvYjVZwDdPczQOI1aXUWRhgFUIolZCwjXUojQNYzZZMWduUWNxUSaNEicKEVLAYiRXg1YWo0aSsVTtYDYrg2TRgSUNIETyYiV0kTUTMlcQE0RCsVMkkWPN4FTIoFdgcWS2bzckgTRKkkZRMTU0vzUFg0SukEaQkEaPwTY4IDQJIyaZQFSU0VZCcmMssRQIIlV3nTdREzRyDzb1PldSkkd2s1T3byXVcCbjolM03BapISbBgyawkST4slXMMSaOQSRJkWNMcTdyXiKhMEakoTM1bjYME1JvHSXm4DTHsVXqn0SsoDNqPkVWgUQmgldt.yYwr1cvIVVRczU2U1Z4TibtTWcMwlX1TSUrAkKPo1TZU2XH8TTtkic3czb4slSqnmXybURv.WbjwjKhY0X3biYYAmPO4RXFo1XZIkKQETRucVS1IycrUUTZkyL3nmT5EFTygzXjA2a0k1TyoTTvbFU2bjXVQUMp0DQNIiKFEDSzsTYi41PBMyJNgETXkUVusFRSwzPMgGYOEEMBEldyL0SEcWLWMkP2zFYhQ1Yx.iMDEGUQYzTzMjLmgzLjkUUQgmPxrDSqEjQwXTPqEjLyH1bnQ0MBQ0TPwzL4n0L2Tzc4cib4YySEYWbHkTZiQkbqrFRY01ZYQkcFsxUvnjb3cTdgE2TyPESpolRLIUVwMUbWsjSiU1JVglZioFcEkSYHQ1SyIWZNkSQIUiQCYDVC8zUxHCTSQyLuEiS0HzTH0VSZkzToESZvITdsIUQKAyb4XjYMQkQDcSdGQSay7DTwcFV2HUaislap4FTj0FRIo2QU4DcAMDRqAiUwfkZVMjTyUFSx0TbFQCTioWVHMSN3fmS1EzXtnUSTQjTjEiVYYkXUQjMHYjV2fGQHMCTCo1LIsTLrcmQ3DUMZM1LsQzQhcUYXYCVwfWMyoWLA8jbPEVM0nzMEUGTOQVdtjFc0j2X3DEassRdHIjSt3jcvEUPl8laFwTYqH1SJU0SgslLOoULmoTV4fiYWMlYvgGS3sDdlsBQxLlKSMiYtgkbFMDbZQCdl4FLoYCaQU0XgoFNWY1T0kUNxPVLyEmTGUjX5IlKqD2RWkzMukkRrcEZUM0UyoWVZw1alw1YZsTVjg1SXQickQkchgzauozMG8lY381UIczbgYyYL0lLFMSVBsBcGAyTKw1XuEmYxk0JoAUaXsBYE8zLXU2YNsDQuUiKUclYQc2Zh0Tb1XkKG4xUH4lXA8zTzrlRxnlYynzPVkEUIQWYvYTLtMGb4DFcnMVUmc1PKEFN2YkMx7jXrMCYToVNH4RTMUmTHw1bZ0jTXEyS1HjcWYyQg0lLjIiKQYVMtDVT3DFZ2Q2PXcUaNciQFomPk0DTFgiblE1JrYCYDomPRQVXXAEavU0a0QkS2PEcDYSRoQjQo4TLOYSYoIlSDMzSIMyaiIUay4VXLIkR4UWM0flTwjmMhUWdBgjZugWNGwDbIw1YssRZN4zQLozRPIkKx4lctPkPtzlSYwzTToVapQScvcUXr8DYSMFTzEyc2klMw71RMUWa1MTbPQyMskWVJUmXJQzUEYlK3IFVXYyY5M1b0UVb4cUS2slQ0QFS1EWXqkkZEgTYhMjKQMmcvgWPgYTcA0DYJQ2S1oETu8jT3USTjIkPEYkdRoDVvQCcH4zUlMVX2fkSjYiVSY2PjMDY0sRUg8lZrIVZlgUdSkVTiYmV5MzXNQkTYoFN4j2bGkldlM0XnAUSTsRSJMmapImVq3RPXEmXvQGS5YTPvrBVsM0ZOQDQ4PyJtT1LwUySQEzXwgTRq8DavbWPAQUb2P1MTglYFkUPx3Bb3ImawP1cjcTUYwFQKA2R5MTTq4DQoUkaTIDcH8lTxXSXtgjKmYjYvkzQ2rlZ0jWXpQSSQMVLXMiRKUGQxXUb1fGcoMkX4AWbVEibhw1MKgmTwrVU1j0bGUDc0sBSwn0T3MUNTEjYg0FMVIiK0XyX3bkLXsBLWEGR4glahACYrQFZ0QiSFU2SqjUMHY0RNIyXTgWL08DMyUkSZkSZWwjLIkmalAiMwIULKA2YQsRROYmZuU2YmgFRqo0bp0FY4PiShclT3.SZu4jcmQ0P4vFZ1QUTz7VRRkFMtQCSzgVRgIGUSsRdqMzRgo0XJkmM4EWSxPjX2AUbVUCbYM0cq01P0QjLXkGNLojZhESawbmZDYTT1gUPp0lKh0lUJIVLTIlVKgGMWYlaHcTbYgDZHcCVXEzPssRZ1EiPRA2YKokaEcmd1LTRoMCR3bVZngid1jSPDEmTzg0T4UWMSgjVpkjVzEDQlcVUhklRAoTZDoTXucURQkVM4clV2.iSV01a5ImLvDTQ2IVTYQWSCACd33Fd1YEamY1XxEEQUgSdKUVbtgmTmwDRqXlQwfGR0QFRqgGTnUiUPUUUwjCUOQESMAUbyXyQwcDZlYUYvokSFkzZtrRUUQzQ0TiMB8VPZkDQlASSwQULtESNRIVdnk2cFM2TVMka3gkXkomPPwjb4gTMAoGcuMUVTEUQYQSTHY2ZJQiRvYjbKwjV4LzPh8FdykDM5QkbiMkQ4gUXHkjLyAiSqMEawLDS4czL1DySv4jZUcFLEwzRqgyR3n2PnM1LJgEaxEjYUYDa2IVZlIjMqsxb4g0cogEaWEEdZQSNSUTL1cyMrYlavgGazLmZFEWPPMzMqEkQpgTQtMVSGI0UEEDTT0zXI4DTGkmK1gFZrISZyvTTsEWYH0FQM4zJqMCbJcWdkQVXR0jLvnmStflSw3zRUI2buEycWc2RsUWMoclPSg1JG8DLToEVmckTjw1LIU0aqTmav4xZUgSX4DWUZEzaJMTd5QFULsxXq3jMt8TLtQjT1oDVWsRLyXlRQUDbIsxPw4zcxLlPJAGRlwTT2DzSqsDcPglT2b0bWIFd4kSPmcmXRgiUHY2JTclKnsVbLokYxgiaLETLBUlSUkCT2cWTAoVR4cWYEgkaAU1LBIiSkMEM2rlYIMGSKQGN4Y1cMkyckQGZNsVPtoVdmshZgETLHETTEACS0EiULcybDkDUuACazHWPQgCRGkGLUoVYWYkKnkkaEE2QtLTQKczRtbVZhImK4HiXxLGbH8DV0IERMMEMqjkVqAWZuglY3HDTsgjVt.mblQiMus1MmIFc2vTaPc2LHIycNcUUCo2ciMlUWkkSM8VTuYWLJk1J2XmSoUSPXYTQ4IGVyn0bvo2L0rTby0zT4YSUAISQ0vlVLsTYOomayzVVw0laB81TPQWTjk2ZjkzcgAWQ1b2a20jSUwjR1UjTWMzQKYmZX4jRVYyRGYiXhMmVvLkSFYzPhkUSQ8lT4zVPUwlctbSTuomLVcCNDEUT2oEdVckbEQFTkUjM1olZPIyT1b2cTcyYvzjKEYmR2MkLMYENtA0c0AUU0T2bRwlQzsFLwfkXjgiRO81T0okR3cFSjkWaSMVcYEUa3sFNZwVa3YVbOM1QFMiVuMjQzY1blUiSDUVa20FcUYkVvLyTXkjc3jWZrwjX1LlbwbVXzPDRwETQA4RTWgiVjIUVUkFUPcUSAI2Yxs1MyLEVVMjbtIWbtfmRPU2as0VakckVsAEMtgWYzc1YuEDdoYzayjUXSA2XDcFalgiQzfDVyMkTwnkbvo0JmoWa2TDRHUVThkGdsk0UCYETznERgkUURUSZOoTY2YiKl4RPuEzZ0UWZV4TSVUEMyMiPEMlV1MFcOQ0U4kCUuc2T4IyLQEDYxMkLxXFYVoGV3PFM4oEVvXjbIMiX44VT0E2RHk1cxk2YQEUX2EGYNETTrMWLoQma43hTtIURwQzRxTmazjFZxXFbu4xXtMGQ1sBM4IlRnQkVzbkRXgSM101agEkdwkiYF4jSYYmQzzDRj8lbwPVd5UTdSMCLC0FUiQlL3sFL0fTXF0lMAklbRUWLGszcqgEctkVSKEzLIUkZ5gDaDgzJAEyc3E2MA8jQYUyavPmK5kCZwLVS1PWZx3xQtM2Y3HSa0QyPscGR1IETIwjX3Y0atj1TxoTRyDTUQckR1IDUqwjMFUDcsIWLHwjMFokPgIVPRkmVvkGcwDWYL4FYBAEauYiPt3xbtD0ct.yRxg0Tj0zXlICcPMmRmAWXvT0UzEFUr0lLWojdn8zU2ISV4UmcqwTPUMUZOcCbxL0SK8jPwsBUA4DTqMSVMUiUNszMUIzTDYTbOc1PEITVMk0cDc0YO8VNgkVUx7jT1kWTloEZ071XtTjPoI0Psw1Z0LkPQoDaVMSUsk1JwcSVvQVPvPjLQszcUAyZlUlaJ0jdkcVLWYDQlwlck41XIkycE0VVu0DbvYmaKgjZS8zSFgFbZMVQ4TTYQEDa1MlP3rFaCQkPSMSRMM0XQkmPYAiXqPTdxUFV30VYMU0X0k0bXMzaDokXv4xTSclQMomLyHCQz3TViElRFcWZt0TbtUELhQWQnIGZWgVZqojRQUjbwvVaTA0ajQjdB4jcmwVaQQDZvzVSWoDcgcTLHgEZ1EGMBAGQ2bjS5QWN1oUZ3M0bzIWUREldvQVR3jSXwD2bxjyYtsxPhgmPXIyXqc1cH8Ddk0TR1YFZpImbvcTSqIWcOo0JVAyMlojahUWQzUVa4gUNYUzQ1fzUwvDNEUidGITLUshPQIkRhUmPQMjV5wFTwjGbRwlbYcjLHU2STcGbxHkbqLiXmciZIwTSZQidCA0SsMmaqoza0oVLMQmTx0VdTMWd4PENZM1Z2UCMtkFVCIjZQgSP3AGM4PyTuoUZiImbF4lanMGRM4VVw4VRmIEazvlRKk0axX2QEIlS3klSPUTQ4EVSZEla0QDd2Y0U1cENncycx0FNX4DSV4DVSMUM4U1YZMzUvUjdlojaHMja2LCRAkGLpckV3jVRIIDSQclPl0jPLYEcHQCR1IiTOQGdRc2cLcFRucEQu0jKlM0P5kiKqTWb2kVMBUjbpEiYGkza3QCZpIld0sVYtDDVFYzYxgEY2HiYNgjVQQWUMIyXZQVL3XTN1L1SoAiRwUSbN0TPzczQ1MUVAgWNxokSSkWb3PWXlEyTDwFUtTlbybEUTUiVLgFLYQ2QIAEbSgFSq3TY0TUXOk0XMgkR1rRdGACTgEFZAAUcy.kMDAGYYUkbIE1bwbkKMQDSRkWYi8FYpYkXSYiP2YDZAYVbkcFU0oWUBoDRvbzc3UUYMwTPigiPno2U0PyRPYzQtXzSnU1JJ0VQY41ZvIVNBkGR0kWat0TRtbDdSAkVpEWdIEjQAgVdF4xTi4FRLgFVw4RXv.2R0DUS0sBZZozZtjETo81L1bGQAYSSTclKOEUMq4Rb1MibZYlMh0zSCgDM3HENtIFajI2XHsxRpAEcJQkbzoVa3PST3UDbTU2UAkGctg0aqv1Q3f1Q0cSL0njSvnGdJg2Sk0DY4Y2JIkjTz3lM2PyT3QVdHYibGoWb4PzbwwzM0.yQ1nzZogCR2nDN3UjXFE1bw.GNTI1TRU0cCYDYqEWL0kWNyM0YIUEN44hZHoTRjE0MLYVRnsRUogCVYw1Mtf0LTc0T3MyZMcEVDY0XkEEQBwjb5AGL0kWP54DbD0VawoUVOo1Y1A2bvEUP0XzRrA0LW0VZy0TPIYmZgoTXCQSQTwDY4YGZqUGL30jRII0TQsRZqMDV1TyRC4TY3MlTT4zcwj0SmQybwLEVYMSYxUGMUMGdkEGYpwjMDQVSUcWZh4Va3TELwHGL2YELzYGav4DMH4jZSETdVkmT3UzTRYDT4YSMTk1J5okTmcUdYMiKHYmcnMkYpoVSW4jamoTb2kDTvblcF4RdnsjdyDiZIsDc0A2YvTGchYmKycDLEEDLvHEcxHldrMWTNEkbWclXzMUc3bjaxjzR4XzMj41SDczSjQ0aOYWaw3zSJ0jRkckPGgCRwomKpQWVkklUrUWbPMzat01SZMUMHQkR1cUV5cCb4rVdhIDRMElaFkWXUI1LhYVatLkTvkSMHISbUIkRlgmXzQSUoAEc0gDUGciYB8jbXYUZgkiK2MCdQMEZsgESOk0YyMlaykUaWUzQDIiYgYiKZEFQxD2PXojRRMGb1L2a2EEVnckMI0VT5kiLTISNQEkYmAkSgg2bXkiThIlZOQCM4HyavLkY3fiUNEEUVoVS1T0PsYjVPE0QmgyZt0TPZw1YhIVQo8DNMMmQqEkMyEkThMlQh8jdDc0cs8VQtolTz.2UzDWRks1TGEURuUWT4vVVq.ibVITZNIlcSoTRNozJFkUU0PTMNEGbCIETHcTLCkDbNslcsoFQlQTNBgkK2PEbEMEQZcSVo4hPCY1XZMEYFEFRLM2azUCZWIEaEokXR8DSiE2PVU0YhkzX3ICd0kWMYkmMCQkavImUFY0RlokcGUia3MVa4kiRMgSc1HDYzw1JHUkPkkDNB4RXiU0LiY0MtXiUvomTNETMX01Sj81ZPETbn0TVxkmULcGQ0TyMzshUK0FYkUDct41bNMVTvXlSwoFLNE0LyHlQxQDSFAUL50zbhoFNQgjc2njLJYDcxD1b0bGdAomRwjUc5gSTzkkYT0FY2LycCg2JiEDN0ImUvkmTI4BZLszYWQzQuslQOQCcwwTaX4lakomK2EEQUshVrgWMBc0MuUkcuIkRFMWZ1T1cYw1LlkVbGYVbpUERoAGRZIlU3XWTMkCa4TDNho1aQoVMR41PtcGS1D1RysRQy.iXyHiRJYlcQ4jU1f0QQ4FYjcicrECS3ETTG0jbrUzQscVMx.0QxbkMJM1Xos1ZIMSQrc0Xx4hVxglbzTkZvPVPz7Dcuk0UGkTaL0jVNIFSoIiM1MSdt.0cI8lYFwlXwTmMno2R4T2S3UiXEcyZ0HCLMY1PKk2X2HDNUcTb2cyYEACcvsDRw81ZnQWLUMDdwUlLPklR13VZzbyX08TM3HiKqkETDg1MkIWMroWZsshU08DM4PSPoQkLDshSH8jLiIzRE4DQj8janQkZ4kiXtnFbvsBbIo2ZL8FVgYyaQ4VNt7DavXCcOslX2fmTy0DZ2fWawc1YroDMFE2bh0lSSIDc2PWayX0QMQTYnoEahwVLr4FSFYWMyACMggmTFkkPVUmbQcGbEkjSOEVRpYkULUDQTcWYwQSYz.CYxLlSu8lKokWS5c0cMIVXSIGQzDyZCITZtglSUY2UoA0MvQCVwfCViokV4fFcpcWQ5YDVMYGTk0VcAU0Mu4FcFQVSkkiRtrjbPIjLDwFSrQlLYslKJcUdzkkQQEzU1UUMI4xUvLibZkyawYjL4Q0RRE2PK4DZRo1bIglSqIUTzYEcZ4xc0X0Lt.EZGMGRlkEa44RVGg1T0oEVqcWQAQ1X3okY1LmZGMDcOQWbnMGcH8zYE4VLFYmRxEldgIyLJsjLvH0XqIyJIIGTgckLpo1J2rFVj8FNgUkX3k0c2Q0PycTX3kjPDAWNLYld0cTaQgmXOIUN24hPRcUPy0jYs0jPGAUdvnlYwPCSFw1QBUDQTgiXWcCZKQFZnomZ0gVP1AGRmEkVvEybzI2Mvkycw8FcDkDNtLUZPgiXRoTRlsVd0MzQCUVM4zlPiMDQGkSSSE0cCYTTIMkV2EEbCYDdDYmdH8lYYQCalIGNJczRUkyJFUUP3H1LzbETJwDQEYjPkMVdlIFduEFRyQSPUYGZiITbtkTSvkTYCokctrDUwLmMMo0bEM2ZYkFNhcSdjU1Pnwzcy3jRlgGdpEEVlQka4ImUz.mQgkFZGkSLoUWQ0PTQpASP3HSR0HFS4HDcS8lL5UmXo0zSE0jco0jQ2f2RNMlRmo0YFYkZ2j1JBcmTJUTTpAkcQEWSuACb3TWY1LkZwYTVmgkPx4jcxUVcIczMTAkYu4TZCgWRpYTRBUSMZM0XEk2c0.0LMUSU2ECMOYiVTEWZmY2UTcVVxbmMJ8DMVwzLYgTZX4BTvckRSc1JFgiTksBcGQVdncWVSIDZYckUwkFSWkUSzgjV3f0X4QTMwfCZHo1TJkySjU0Q4cTcHYCSBcyX5cVLmk2Q0TSZQIiUAASXAIlVG8DcL41ZosDQU0DdYgSLt4Vd13jX2nEQvLjZEYTd2bTLCkUSMUFcFgDRggDTBY0MkslYJEULAsjVO4FMv.ENPY1MAoGRIkWMiclQ07jLyPjX04jP3cVM00jKPkjYX0VP0kzSMYzTuUTdZMVSwTGdxokQMsjX3IyLNEUYVUmbyImSmgVQLYCTwHFLroFLtMEYAYkUUkyLBcyTyfCTJIUMGkUVOQjUSA2XqAEbjglXk8zS2QiUQUWSAYESPEkYLUmQtMDYxjkQRICV33FZS4DRPkFNGIUSLslR1bUUYgGMtA0Y4MkXIg2TCYyPMc1Uy8zT2oEdqYCT1M1Zt.0cXYiSAgTX0DlTDQkZAgDNHsVa1PzMhEkdoUlaRE1ZQMTPZIGRmEmVLcSbkQFQv41Uw8zUVoUPZUmKtz1TpQFZHMWMq3jby41b4MCaXACVBUmdvgDTO4lV0EDcno1bQY1bqHFLlIWbYk1LznGTFk1RLkkQ0ICTCk0UxshUMkiQSYWMPcELvkmd5E1XJMjTxnmZzEGSxo0Ytnkd2XlVxwlXMImcuoES4z1XWwlKDkFRvfkdsETSsgVLnkTN1jjP4MyUWI1SvYkbnoUSIcEUVAGVNQWQ5QWZPU1P4MEdiA2ZJQGbRoWSwzlT2UzX1LSYA0zQ2fGYk4BUwc2X37jPUckcIwVawfVLzzjcpwDagEVMlgmZoYUS0clZ1byMSAURzH1YnEWa4XTV3PTcAIiT2QzarE2Y3cjSSIjSSQGaMoWMWUWL1olaMolTnY0Jgk0Mqk1P3cDQWM2bmo0YYUFZ0MFQt4hbkkVUPkmdJcjdNQlaQ4DYE4DMLEGNTkjR3UCcvLiLlsxb1HEMVMFMvTjLhYFcEoTPPYVPXETVuYEVCACT2ESLBU2QEU0LiUFS1YVRXcWc1PDVvjTRtITdxTmX0sRLjMESYwVVDwVLLozXoUVaNMibZclX0QCNNUjdUUWLyQWVznjXhUmbw4jSTc1YhUmSP0jYVQGRzU2ZusBNLAkUVgkcKgFauUkbTg0bLM0RygTVIc2XoslV4vVc3TyQ03RYjE0Y1TjM0HSToQ0T0bTMW4TaPwTbogkXW0la4wTMFciXmUiSOYFNtHkKJsxJ48zPXEDQs4jQPMCMBMGLy7FarQjRIczQn0lSVwVVzXDMUAyUq7VTwPGaSMTN3PkQKcjZVUlYqU0TGQidKk0UlQ2ZsYWMtvlMnYVURglXnk0PkQiMxbkcxMlVVUFS2cjcYclRkUEN3fWM0z1PsEGTkgCSp4TLIczMzg1YTclMLgFUiEUVo41bKIEVLk0U4LCTzn0LEIVTqHVT4gGTtjiZjEiUgwlSLUjXCISUKwVSV0VQvLldMAUaMYVcLoGNMUUYjU0TqfVUWMWNRYzYzQDLrMCQWMjc5gUU5UlKJQGdiQ1QrYCQpICdPMmdqk0RxnFTREWY0gyUkgUQzMyXXo0P4sxbGsxLvTTctfmUAsDYqITYGQiVS8lTgETUyD1LwzDMJUkXVEmdnEyPJMDV2UUY2clankzS0gSPiQGNUgGc18DQMwTXEAEYqbEZisxLSoWNtE1LO8jTyQzS2rxLHMUMZgCVtbibxICVgIySoIEbAYkdGMGVJo0UtbDNYgVdlAEYqDVRIo0LxkyPPEVVqL0RvcEUKQEUyXFdgAyR3zDSzPiXT8TUqYTT0jEVyDTclYldoEkSxTFVG4DLkUmXHIzRKgDMEgUN3ciSzDiQLA0PwXWUDAiXZYWTNUET0rFUvXDcybiMxLGcWQ2a3UlPv0lS4XDM0Pybk4BVgYCM37lV0ESPkklQlMUSBQjc4byXhczZhY0R0EkT47FVtESaqrVQJQDSvLjcPMlLzgVMCkVc4sxMqIWQncEL3z1L1nkaLUjbzj1RjIFLmoEZ4UCVg8lMQsjcqj0Y1.EZloGaRcGTtPScCgybXQlVz3BSG4jbyoUPTUEVpMSTtHELlglPzQVVVcEMDQkUVUjQxokTUgCcJwzSmUUd3H1SyQyP3Q0R3YiXNwFbCQ1ZFwlPHUzMtUmPEglKwoVLtgmaFIldnMyUMwTN4QzJZM1alMiK24hLyoTT2zjSyHVaSoGVSMjZIAySoY1XtAEL3ISPn4xZ1XTQtP1Y2T0PKA0S17zUHAiLtAWc5QEQvb2bhUGU0PGNDoWY4AkPJ0jQzE2ag0FTDsDNk0zZzwzbRAWRuISaBolZsUSaIklS0cSblQzLPAiTBgWRoEGSrojXkMFTXYkPqLSPBoTXqjTQyIjYLY0Lsk2YvEVLwYFcPIkROUiPhkVQ1oDUrgiKhQWTKEmTMIUPnQmbX4VdBA2Z0QCUqszLPEkQ4fTa2z1TPIkVpolL1X0a4LyMLkkMnwFZ3YzJF8TV1o2S2cUL4g1ZhAEb1A2LTwVSw.ycKU0c40DYpc1SkIiYBIFSNEWYoUjYhkmUlQyMsYGR0IVd1j1JR8jVRUVN1YGYmQzRJsDLDACV0cEZPIiMqnjY0fiYWYmVVgFaM4hZsETRyYDNyg1RwL1Lv7VTQUyRyIWa5MSRpkEMzA2atAyaxbVLqQDRL8lUJA0aQIiRzflKLEUQsA2Zmc2Pmo1MKQkLlUCYtnUSM0TQ2YmPLIDcSUyQE0lS1HyPLMmSVoGdugGdOgiMJMTdEkkLvf1SFEVQRIiRtITSmETV1gibIA0YZA0YHAic4LzboYlPvrzZ0vjKEQmZ4.kdxnUXHY0YCY0QHQ0SXolMgM0TI41YlQzSq7DY0EVPQAULoMVM2EFZ2HFUIQ1apQGTqAESukTXDoFb0YkKhokRBUidvXmYKMjblI2SFUDUCM0bJQlajIEcxESMBcVQrMmLmoDLIYDV08jYhIFShcyRCU2XQUEbwLWNQQWT0cDVqHTTXETNkUWXKsxaMkiT4kCQ2n1agoDZ48jPy0TYGEDaUQWVhE1YGokR5QGSWUSaDQjZkojXnUUTnI1Uw4TZvnjUosjVQ4hYxsVdEgSTQEkLkA2SSomT1EiMFYiVqnmUvYTSncDZ20lZjkzTMs1RUUUMwAkMqn0RzUSajMFZ4n2RocEa0wFZAEiZIoDRqbkVPcGQLsxPikDVBwFQ58lcFkSLAwFLxP2cuYVTE8zXy7lZh0jSRA0UxoUMHkzUlwFLmE2SgAUdDEjTiszLvgyUjo2aQoTMDAkPKEiZTUEVwnFVpk0PxUjc1QjPzQ0ZwA0UlIjSOUUak4FdgQkQhc2a20lVA0VTqMSM1IDNXEWXuQjQggTSOE2cy0lKzrzS4P0amUkRzMFb2gTbjUSU1EzatUWV54BMjglTKk0Z4PGc2TjQnkjSzoTb0I1T4jWPm4zbtAGNYECSN4DV0cWatnWMpISawQTRvnEY1UyTwz1ZQc1QwLDTwLyYI81MvUmP3QGUkkTZGwlYAsVbi0laxgDRocmdyAUZGkiLuQ1YhEkQR4FaYolXnM1bYkDNmkCL4LDayXULm81Zv0lbiUWSFcFdgsDSvICVHYWazMDcp4xLPEyR2XCYzvDLRIyMNAGdXIUV4cFT1sTSkEmRn4xLZgCMUgzZXIWXoI0LUAyTswTPr81JqgER0XlcBAiTHYWbXkTbHoTXGEETtPzZTE1MQESaoIkdQ8lMOQESPEzSJoDT3j1SGsxa5IkYxgEdpYiVv4hXqPEZp0jdiUFYqPCU1L0ctQENNckSsAyJM8DZqDCYMUCZIIzMWMibzbmd3YjaqzTTSUmX5YkanIFdocEZZUSYzMlXQkEdVcjYwbCMvIkTgM2UKsjP0vzLgQWLuckKMU1cq71Q2MyU1MUViklXnc2QVEFT3rhRmEVX0MjVOUETyfCTXYUQPY0TyM1Zio2XW0VXtHFd4ElLWgWa4MzbWEEagUkLYgGblkDTQYzLRsjQ2bSLnoVTngGbQcTPxDGUAwzYqQmUJICZqMWXTEDYLcSbFkkYWETStHlYoM1PUUmRvglLWQmKlEWamI2XyDDc0AkZ18zL0U0cx4DcNUUX0DzPzHEM4vTXJoVYoYyc4jDdHUFVtISSKM0Z4EzLqDFdlQzJqIjbXgTXyTVcgg0LncFQAUicSY2PqgEdLkyMvfjaXs1Lzf2J4HyXxY1S3UmRZcjQ2HTPuASLzLCctDDQPszJNIUb0D2QtM2MJElVYQSQIQ1XtLyZQsRM3nVUCcWRCMTdDoWYkMUakYmTmQCa1nUdtbyX3U2Q3XyJD0jXzEURM4hMIslPAwlKq.iX5cWNukyaC8zY2MULXYTMvDkdzTCRgIWMZ0FYn0FaNgEY2LzLEAUdzjjTzUFRy0jLqDUNzDkPQASRSsjVicVaJkzbRYDaMQidUcSTvL1czbENYQCdJAGYgkyUG0VNyHFT3QzaAAGdOgSc54ldJASRREUMyEkb5kyRnclTPYidwnDZmEmUxwTQ1DiRyDjc5kTQuoVRtrVNx0jYxzzbTMUZmMkVoQ1LSUjMGUFSjQkMwIWdDIiQKIkV3T2XmASPqUSVj81XwfWZkIibzDCRUg2M43BLUokYDcTRqwTYvMWYVMGQxUCSxslPBYyMJImTzT2MWMFMnMybGAkXJMkKjQ2Y2XUXFI0RgACNowlUWg0Q3MDZ0Q2TvsDaiEUUBIUX4jFT2QWNvHiL0I0MVQkKwMTQ4QCVybEUlYSdAgmc4zzJO8DZlYmX0UmLUEmU0kWVMsTaEMkTx.iTwzFLJETUGAyYRUmVvI2TkcUdvshLJUza0k1UzbyRvzjbUQEYhglU1bWNUczayITSqT1TvXFMgckXkIyRKgkZ2cmYYUzRtbzQRIzUj0lREsRby3hTXkiPDsDYnoES1bSTIokUpglZAo1ci8lXtYCRJ0lLNUUPCcETCcycIkFU3fWdGcDMuIiL2IyPKEmdqYDaFUjSusxU4LkSCcySx3lYVISZFQSLi0VbwblKGI0brUVZXE2RyMVPUAGM2QEV4DFUwsjKzbCNzsRSmIEagkEZXgzUv3xMyHDRNciKVcVN1vzTMU0cNkVbucFYBkmcqgEUKkmbOQmT0g1Zx.GRX4xJwDmT4Lya0ImPzbzPG8VXjcGb1MEMGU0L4fDdHcUY0PSUZYmXMcSdGsDSp0FRHYicEYCbZMWdr8laIgUR2szPqXCaMUCZUozYjslbDgkbyEFdxwzYzkFVigTL2L1U2c1XxnEM1TSVWkyTyvDLDAWbCEidZQ1XOwjKRcDZxUDdU0DZyfUXnQVVVsxS0rzUiM2cIc2SMU1JnQDaggSTNAEM2.USR4VR2bWa0vVVSoVb1fCdyEFREQSQx3TSqrhKDUiYogWXyL1XC4VXqrlYsESQqHDQzDWcwMkQ2cGQqrBZIYVMqI0aLIjV1c1Jy7zUZ0TQiECUHMDbYcyM1kjYZA0M1HmcIQiLtzlKEUCTUYWULoDSVQUU3.mbiUDdkMCcFYldtfWXiclZq.Ec24hKWQkZ4MlKS0lMBU1SoUzSSk1QxYkURYSSzTUXI4DMicCLAU2aq3Vd3c2TLIldgEyU3MjSt.2bLMmUmQjb0TUX4nmQoQSZ3LSUqQiLzY2LwTWSHgkS10zX2E1J1.EZysDTKY0Ut3VTN4zLznDSZ41cFoVX4Q0LCQzJqDmY5MGYxLVcyTzbwkTdyDTV0ASaIciQxLEayLjU5kUNQc2J0kDdV4RbrUkVtgSLuAWbq0VX3DEU0f1bE8lUmIkcRQ2XYwTQB0zQ1XGZzPFbJUWVG4jSyjTUrYVasgCYEwDc2kGYysTMHokTqvVSyc1P2nTRHcFZkMTRCESZzkFaTgCYmQyRjgWTmwjRvYEL4QSUyEzY4fzUIUUUpMySrcGT1MTPq7DQPk2ZyHSMzHCVG4VVRcySRcWPiUUXvjyJEITTHQFL3HiK0oWZZEDQ2fjMmcmbCkCVVImRvAmT1cSYvnEb4MDLzrjSzLGdNYFQuwVSOgjbQAkSGUVQUMzJY4RTsIUPwk1Yn4RSQUWLQ4FRKgkT5kma27jSI0FQ2.iROI2bvkzQmAma27zMK0lMQQjRmklSmY1MEUWQWw1MH8ld1TFV34lKZAUXMEzRtnTYXAGdNoWPV0TXGQiV1jWTqcTMXEkV2b1ZEQzaz71crIUPkMFNgIiPA4hShQlMAclP0EmQZkTL1c2ZvcFTGkELtAkRiETZ3vTYJgFUIciVMUjbVYFcxcCbLIWR4kFRtXUdYsFRx.2Rzolcr4DNNUGUzozMXclYwwFU3cUSkUSQC0VTOUWVuMzMBcTbhoEcl0jUMgFckUlLOA0Swf2J3gDYq8jaOUFd5USRXEUYYkzQ14FMMshY17TSh01SocVUHM0XFojRWcUXZkGbJUFYjUDSzTVMq.mc4rTSkgCSjMkV2PiSwkjbykVb3QSYrgWTKwTNJ8zc4wFYRE2R0zFSs0lbToGYzUkb1Y1JiUjU5QmMjwzZh4BMockRHYSNJEkcXUiLs41JxYCMm8jdmQzb0TDMkg2PQkSUTEVPDgzRq4zc5gWM4ESagUWZCIWNgYlS4DyMUcUXyfCUmQkVjA0ahAmMkUCS5shS5QmLlUERSQyJBkUVNgGd5w1RPEVaXAyL4UkZPYCUksDLzfiKgM1T3b0JlsRVD8DZFclcG4FdsQiPSozSio1J3fCRCkUMMIERkAEQTgUdqrRLlkUbggSRSkCU3A0JPYWXSA2PhImQqfkKlkWXTckX4kSLVkUb28TVmgUSOUCczf1T44hS1PlRskEUvQkRqjVTGcTZMQzXtAiYnQGL04RTUcFMwMTSm4TTqUzb4nURvQzJSgCR5E2S4QFSmU2a0n1cAIkQHklVSgzLiMVa1HmPwDFV4XVY1YDQDY1Q0YiMvsRawfFalgTdzAGVtHkPwgmTtElbQI0Q4DlR23xS0f0XLomRm41JAshKkgSSoQSXpgCNkgTUL4RZvjWVyDSZjc2SBgjZUozP0YFLjEkYz31aJo2aTkWUWE0RFoUM1gGMHYjcCwDUYUFVjY0QoQSNwnlc4rDRRMFVKozQIsVZwk0J3kVZRYlK3PUZtIzLukTNnUjKXgDTOMzYLEjZgcTbVomVWo2RVMGUCciVWIiPUw1SOMmZCU1cvPCdIwlTC0TPJolQPoWN4wDct4VSJEVZNM2ZUkzLWEURoQSRmc1L3ISNgIjVo8FUIYScwHjRhojK5oVPFMCNuo1X2UVPtnUZFwlUpkSaXUlKxY2a4ojbTYyX0P0cKc0UmszXi0jdoEGa3gGUvYGMVclcVEGctXzMyb1JNMFNpokPzXDVQ4jUFwFRskCQnEERuAmKkA0bgQSdwHSaIsRbx4xJRUVXYcGQtoDNFYWY4fVTyn0X3L2XssDd5Q1aEgCbFciZ2o1JgYEN2bWP4I0TTQmZFcmUvcWdskkdx0FUUkFMUYGNqkldgI1RqYTMOYEUwTGc47VXJ4jcq0DUxDEYyXSZxMmU2ImYVECUQkVNZU1UkwjMzzTLZMUNvXUd1fSZj8lRvM0agkSNJYGMIo2ciwDTqgGVtMjRTsRTLkkLogTRPMDMTc1bHYGMu4RYsEFLDsBQmgmYpkTNVkEd4j1RsgjREclR4IzZVYkZ4HjSSolPkICT2T2avk1Q0EUPCYmLxsVTzPkbxf2SpwDasASVOkmUwo0QQQUbOgmLTUDVIEDMIA2JvfUPTk1ZyrlUtn0LEYkZCEiSWcCYVUzXMIiQRI0MBQ0Y1bmdLICMpc1PTklT0zDQkYFVwoTMusxPhUiMXYDMIQFRTQTatbGMwrjRQYVbvslQlAiLjszQjkmczLCa2zjSsczS1LTcPYzcu4RaPc2SJYzTtPTNmsBczEEYqTWMnQTYh0VTmMWN0rFbwf0RBMUZSIjTtckRv4BdxXCSuYET2kjXT0lVSgCLQ0zcks1TNEyUxYUa2czbjISahEScIUmQ4MTMpcDcJITY3UiTv3hbtI1cxkTLoI2M4f2ZtrRT2vjSJI2ZuczcTAWPPszMRE2QvjkV2rTVhIFVgUiSy4zQywFR5MUaNgTPn4hVmUyZ1fTMXUmPZYVZqA2c27lTk81MqckbDgTXMgmPvM2YFoGT281bFAya3fFZy4lMyDCUqE1XvoGVDACdwLVYlk1ZzjlMHs1JTQmcNgELoYWcNIDVH4TXHUFL1UVaz.iYrQ0MQozP2QkR5IVXv8FNswjZmEzR3PGN3bSTA0lSugCQgUiK4biaMQjRn4TUB81PZUCR1AiR5kmX1fDUxPiKRImSqbGLtI2QZgERw.UYrolbxjEVlAERWwVVxQUV3HUQxETYPwFMkojYA4RZZczXuUTRGQSMG0TdNoDTn0zbnkETo4RTuU0RiczM5kmV1jSZGoWYyPVQGYWLEUzSqblLpMCU2HWLSgSLtI0TMYSXJwzJE0VZIMkMXI1bGMlZ2b0UAszMwESZN4hUm8DcvYkPSIlMEcWSm4xcTIlQL41RZokZXglUBgzctoTXwsjPFMEQBkEa5YFRQwDLvzlRgA2Z4rDU0olc4kjdikTStTmbTYUQTgFNPMSNnQzJWYkXZ4BUYshKwIUcBUkU1fkMt0TMJQUQOUEcmgWbsYiPx3DdUsTLsMVN0EUMw.yXkY2J5EVQzzTTuUERnEEbWcSRQQkPTYESggmVyEmYFwjKqPmLzjmS2kkXiEWLqUTMHoFZg4lZ1.WbAISdKIDNGoWYkoETTIWaEk0XPMkc2cjX3szSSg2UBAUZpMia1MDb4ozLqISbywVLAAEd5QDdzTjK4szJz0VYyA0JAcENKg1Qxf1UucVbOY1Szk1S1f2UogVYtjmSqHUbqQjKjIVbgQyQZQTLWUSVG0DRyQUaJwFQEQzM3bTTH8TRHQURNgSQuYiSIESdjYjbMYFUlgkbHgGdhUzP1LjVnIUTOQEMVUzXssBNCo1YNQzXmciSlwldQM1JBUEUmEDTTYERwPUcK4TRkYFRqjjSAQVdJY0bwEFS2bEUrUjYLE0ZDsVa1T2L4DmS4EDcqMEMpECNIAkbyQUXlkycj4TYKM0QuYmZ0cyLgokRxPDbh0FZGMDYRwTTVMULE0VckkmKgQjPzM0RE0TZxMzT2clTQ4RZJkka0zTP14zZZwDcxbULkMVLNcCYEMFaQ8VRtwzMDkDNME0bVYkbiglSpElZuQFNsAUYTEFUq.GSt.WbWgUTyUSUjc2c3sBcYgWVEEWN0Y2aC4DLOQiX241cmgFRlMmLmMGTA8jZxnmRBYUVoY1LKEWbPEGNxU1cusVNXIVM1gGMDI2PvH1SmwTSEkUbTkSQxvTS3fyTLAyTNYiYzjDdYAmL0PDTJIDRgQEb3QCLts1YzjlQxPFbgkkd4YWTtbSMvUiTFU0JAEiMq3zJ4vFcO8lXq71QyY2U1bDTqsRa3EWUqg2Q1EUPgEDZ2fTVMgmV1M0cDICcKMFbSgiRCkyLEUkS2gGZVomK0zFdBUyZm4hK3bUPF4ja2XFYTs1YhUGRjgzYrYiQkAkLmUmTUMGYx4BTCEiVwDSLwL0YnU2ZpcDcyn1S4jURZMmKPMkP2Y1bFElaEcVcXIFayAWVwcyM13jKmISQrszTPE0LqX0Q3fzbEYkdOwDbRUTZFciQn4FN5gyaNYGUCMEZggVQEUiKFc2bN8FZt7FYpwFQkg1JMQlQgkkLt0DM5sBRzcTR1jkZ3sDVtAEZyz1SKkELLcTSWMERBQFLi4VS1rFajoVLl81Yg4lLugDUSUDZIEzJyY2b2gUV0QkbD0zLD8TVkkkRDkDTHQCZ00TXhkVZDEER0YFS0PEcucjM28VNvPCc4EWNRIGNgomdBUyUWQScRIjVt8DcEYkRiUkRHIUXtXDaUAUaXUDYUsFZvn2Y1wlS2DSZU4FUWIDSsQmczHjargGd1LmUxLibRQjZuAWQwkibF0DVBEyPBolY2USTrwlbSMmVnsVUtEFZD81PnY2bw4DclEDQywzcZMGTR0zXvQjb0LlK1f2btnGUF8VYkIVa27FT00jK3QCY4wzPSIWaQQWPzozLrMCdGgDLqcjM2b2TigDdykVbEM2U5UmUv.mc3wFV5gUY1wTMLgkbyEyZBkidtw1cFMSYznUSy.WTYoGMvIlSUYELuIlL4Y1RqzjMwHzMYM0TJMmMiYkUMEyUqwzLMAWV4IkbHM1TJ8DdC8lZxTzMLQmMpQDZUQzJD8VY3slMYUWMt01S3TmYogCQ1XUZBMFM3jkaHQVQwjyM2zVcMIWdzcySJckajcTbAklR2j1bosxTq8VcOcmTxYmbK0Da1UDbDMmKwTVMYgGLDUjP0XFT4bzZYolYSUGQAMER1QGboQEcmQjdx.0MtXjd2jWNvPlXDYGMDwjRHU1SqsldRcELIYibo4lTxYTcMA2X2M1X3gjXLYSNvMTUDk0LFkENyPSQSUWLYE0ZUMEVgY2PzLSb5EEQM8DNg81JyoFSxn2SgQTTVAmU38zPDwzJ1QUMzzTZJs1YyHkbIMGMqbGawMTMUQzTGAiSTkCTXsTMXomLkgzQWUUaScSPwEmZSYjaI4xUvk1UGIUTBIWVq4jXw.yTBIjagkjZzkiRZQidFEVSl0lQtgldu8lY4HCNlE1c1jTPwPjLuMicwXVUtj0LiI2QrMmUgEEQsIDaywDRPAELuYUaQQCapQ1J2QiMFIDMlISbpMlUKgFLS4xMuk0ShIySmYGS4sla4UUViUkZh4RUO8DQVYVMiITUPUldZUTLVE2J2nmYHIlQwjWaBYFY4bCcYU1MuYDV0H0M5cWMJASNwISYnETRVwVc43DTvD0PpQEdyrTXEUFdQI0b5EyauYTdvEGY4ITRLIFTIIyZ1gFLOslYKAELUICVyglbgsRLoEDZBwDVIsFTPo1YrASapwTLvcVYJwjbUQGYPkmUwb1bCEmMyg1QvgDYgQTXzXENwDlLXEmbqD2PTIFS4YjVmo1TGEGQgMCRDIkRvQCd5UCQIolMHshSUwTbSUjM1XySMsVUycCMogETvEWaCc1QmICaDcEMP8zLmcSbXsFQNUzQjsxcUEkVsEWTTgVNkkVL2.SStXjQHI1UMkWTUQlS2rBMAwDc3s1SZsTLBUDbYsBZ1AUUuMUN5oUS5gWNsQVbWEFbiMmTtLEdPclUvg1LG4jRDEGT4n2RrMjao0TYqYGRIcTNLkFNjUEYxLCatIyaUYlP2DEd1XSb3kUUSUmaqzTVtTka0ESVxkEUKg2UmMzUnoTYRokcP8TbvEWct.mUNUSYOYjbiIya2UmKVYTdU0VN0T1RvnFYIYlSMIVRtUlUCAGZX01YTgULXMSZ2giT0vDbngCYGcCRZozan0ldJg2RyEiLzkCMgMmZ3cySoIEchY0bTYTXLQTROshLtPjRGEDY3AWTSYTcGEiTm0zUGkzaXUyZMsFM24hRq.GU3jiX3ETNk4ja2gSSy4RdtvFZggET3kyLvbFTqXVchkSNXM0bU0VUxTjb4jjYM4hTWojbwrBazQEc1cFSigid3kjSjkza2bmPMEDdEMFZ43lKDIEUmQkbScmQxPDQ1UTcisFcBYkcygTTlAmVZQjRNYVVgomaTQjYUITTtbyXKkWLVklS1bzYzHTMvUUQQQEZOUGZvL2ct.UZyPSMK0jcsIkVOIVdHkFR3HjbuMTZEEVPrcGTSIjYEEEQwfUbCQWNtflL3MiXEQ0XOcGUzcVdG4TQJkCRnIyPvXkdOwldvEyQTIFdVAyLtoUM2XVLwHUb4gkbSEUNhs1RBQkdo4RLoIiVm4VLyLUXtECdlEjQk0FZ1DSQj4RMigGRkwVNJgDNWolPkUDLRgySrgmMFEkdPg1R5YSLlQlSKU1QyQERzojP4PlQ0nTVREWdjMidKsTdQcUYxnjPVwDVJkCc2Y2YAYkLiQiRZU0UGkWSyDWbIIjYLQ1MyDmS2bTYRESRWYzR2E1Xyj0JugCUvkCYXcDZWc0PTg2bIoFYSoGZyT1L4fDNhY1URAmKoc2PYsDbAIGY4wDcJESMtIFNl01PKc2cyTWNOcUZzE0SOoDUoIUcwYlMJolPkc1RyTGZ2DGL23xTJkiTCgmczDWN2DEbqQVcZg0LRkjV3YGcMYCYgkzJEQlVrUGNEgGVYslTZElThUjYwcESkg2XjEyQ4wjcsYlbJsRdEITSykyZ2PibLwjPiMVaxrxXggza4f2Tu4xaKMDQBEEa5ICUlc0TqckRuMFLvEVTyYlRkISdTw1aNcDL1UzRqfVQXAELoYkVCU2MzImTN8FZ3nkdHkiQY8zP2slLykSZ2EGNikVY4XiT4I0Q0jWYnEiQWMDMBYkQXUzThAULFoVTqUiZA4zXzojYWASUAg1MhoTUO8DazLmR4nVYykUMzjWQzbUTm8ja0PjPKIlQtAUbgAiPrgUUKUFaHMlQMwTLMk1JkM2J5MlR0DUdho2Y5w1bFQ2cAgUZtk0Q1QiStcVTiQjMP0ldJkGdGkSPxXFRWszXAUTc03lXssRaGkWZYMSQvTVMpckLoEUXhYiS3cVVnImTvnUY0bWNWMiVZgTMjkySqcFL4MlUN4TSrkiSMgDVYMSMrcVLtACNAgWdh8DTtbTT2vVRvUCQLYFMCAkLhUCblAyREg0S2gjR4cVRZIjM4nlKZAkMTY0JwTWXKYFSHMCTwk1LvLkSvkGYXEmVMAUSjkiKPMSamUTSlgSc0cSbUIyXYgUcrMkUXcGZjISLZYzcwbiVtTVcm8VdzAUY0TiUhIFdUc2LFcyXQ8jQ10zZZEGUw.iZzMWYpE2ZA0VVoASby4laGYGS4b0aQszQhEzZhIWSybTahoFQ5gWSyM1Uh4xSh41TX4jTvTGVs4xJqHEYKUlRAECS1zlatjzPZIlQ3UTS5Y1T3giVybVMtnUTvHmcNAiSTo2aTIldVUTYwwTRxjWbtEGQBYlUJUGQBYmZpIEVM8FVrMVRoQ2XXEFZlkzTLMFQNclcW0FQ3Pjc5EVNlQ0byQEayPUaSglLnAmQxDySjIGcIMDR30zbpEkXOUCN0PCdkI2R0TzbMQzbL0DRgAmSgESRIYVR5oGMKszUUE2Jo8FRx.SbUkCd4L2MHwlS0PEYwsBayvjP4PSPtojLgkGRoYicgIFaKgmKz0zP0HVaOECZGMjMSIyQUcWM5ImShoVPBUjbAgWZiojMh4zaXgTd3nmczUzM1EibwjWMzAkQVclYDg0UxjkS4nEQ3XlPzkjYKQiKYEyUrQiSIIELComVmcGdPwFaygldpsFdxsRLCMWd2LCT3HUXkYVLtEWTqrlbyUybosjLvQVdxQ1UZUDQh4zMIcTMt8lX03xYlASNoYERgk2JVcCdCcFTx3jTlkGZqnkXJkTMQETPFoGSqkiZYYlcjYTR5IidOIGNU0FTqX0ZJEDUKI1XyAiM3T0TTYTaZczQNEkdHUjQm0lVXUFcug2TRYVbH0jcXomU0kiPGEGTIUWUpslUHESQtEWUNc0YGoTVwb0Lj01MFsTaAMVXjQyLusVVZMWQg4haDMzcxgjPTUjdTAGQw8VQJczMUASL2DWLTgiRzPzJEcDRgAUYIAWY4giaBQDM2YFbtPSamY2QGIlXR0TSqIGdZAiVqg2ZOoGUSIWYwMkVTgEYHolbYgDLVMkSVclSEkWXyAkLyEWLNA2QQMjPgYSMOg0Z0LWatwVb1UmSFQ1PAElSy.2L54RVBEyMPYjM5YlMHIlXPwVRNo0JogDSwPiLVUCYKg0amMmdlQ2aNI0aIkGZybVYSIDbtkibRAkYZYCMxcER20TMZsFaKoWMwwDNBo1bg0zPCIjMNAWQigmL1rRVAY1LEIVNJQkKjcESUEmVVsxRn0TZ4AmXTEjL2jVcCQSSYU0TpMTYLQkb4oTXLMjcZMUSUclbmEEUtESbF4TXtbTV4HCN1.WXgQjYNg2JsQyZ101PuIVT2o0Y4kGZwjmKtQTM0cGaUQjUFgTPug0Q1fSbqElRUwjXWkSR0byZZojLTE1L0MEUyrjbIMCLislaVQmVNo0SCg0ZW81TuAkaHM2RKIFRBgFNzfyYgAmMtsDZyTUTFACaSMFRRoVZGIjbBUDL0TmUho1QCwTcF8TSY8Dam4jLxUjT2LzJPYFZwUDc3jmRtwlRXUkPL8jS50jbrkTav3javHGT4bTNvA0Lzf2MwHUNv7zM1cCSjk1JxcyagQCVjoGYxMTXvbmK0HSSYk1RJIDdQM2M4ECNiQDNCEDUKc2YQkURHMUZ24TZRIjVxblZoIycsIERiMmR3DCMtUDNOMySIM1byrVRRkWTFcVd2kFaSMTMVclbwLmTtsTSZYjVDIVMRYzJiUlXEE0ZvMTPoo0Y4XDd3zFMtIlb2kGZ5AEQQQiLjIFZLwVSqQlZU81TKQ0a4TEbzQSMzPybj8jaHwDY3ElVzX1YzM0YNgiK4E1aiIlRQAEYLUCYvcSNNc1XiIkKi4hUCcFbK4VPvXUawkzLuASTIkTYCgkTRYScAE2R2rhKOIlSJczYKEkSTgUPXYVXjE0YUUmMTg0Yybja0vlKFoVTTklUw4TQWMGMRgzTrAkb1.CVwE0RAASNCoDTPYUQl4VZ1rDZxkzcgQWc00lSBoGSiQSUx0zbtgiLRIFcyrDR1AUQlIFMhgWXAs1LwzDUUk1LWQ1JyDFZwnkPBkVd0vDcxYiPGkVbRMWNSYlLZs1YF8Tc3AmKGcTRzYWaKQEY4TSMwHzZNASQNcjYssTdEIFSUkEUy4VVKIya1I0ZYoFcnkEVoESaxLGb43DMV0TRrsRRTUSP34BbBITckAyUvk0JFECQ3PDY0HFZmckL581Sv8VPEs1UIklKx8jT2LkXXE1XDwzR3IyRsUFNj8DUHUTSFo0bD0TXyYSU0L0RtfCNT01JRclM3LyStcycso1PEE1Y0PUSpE0YCQGQEgUL2AGZBkVb4vDYxX0csYlXOsDTXQmTqc0Uh4ld3XjKp0zb2MkUXsxPyfkKFwzPXYSXicjRIszbqH0YAcjaRQGcRQja2nlMwQkMIkmRngCUxsVTnEjPqICaYkFd2MiLQYSMxDkS0jCMxDTNsEzYIQlMAckUNoFYEQVbXI2St8lSRElMVYUctnkPxjTPNESTtjlbyk2RRo1P2jSPvY2axUkRSomZZQGS0IlSyDiPwoEYnISPlEWMLkFYZs1Q3kWMjMCL0MEYxzzUToDSRg2YqQmRqXkPhokcxwjdnEmXpA0YtAmPpcDbx0jaBUmM0kiK0DmZh81PWk1cqUGdvMEbWgjbl4DLOoVXzsxS5MCU0YUYY0TV1HzMoUkYDcWXyTlUQACNlEFMqI1P4.CRJU0Zq7TbjIEcJIicVM2QZI0bKkiVwcEUP8zUgMjbtL2YzsTahQEcwXTYwbUXvHiZSwzSRIEYFIyMuISRBkWLIokbAU1JmsBQmYjKy3FYlAEaSY2M5QiS2MFNlQmZL4BbrcCcyPmSygFSEQVUBcja1gyMXACUyciQ1bzJgQlQWgFVt4TMiACa3nWcxDVZiYGbXsBSgU0Y3rFV2LFNIICUT4DS4HjYWoFNhYVNT4jbkYVXr8TPukSTEczRXUkMKISLg4lKyHzaWE0RIcid5oGSAICaI4jSy0jYgQ1MZEjX0w1bOUCSRcib30lT2EEd4j2cyfUY3gUaxszbPQ1azwzb2MGb1T2aoIyL0MTaiciZy8jdrcUVxMkLU8DLokkaIw1RE8DLPMTXqLyQQ01R4DzLhElVBQyTgY2MtQDdjMVRLwjLCYGRL8zUjISRwg0cqzzSvAySlElbCQERvfzJ0n1avczQzX0ciUSL10jX3UVX2AWcScidQ4zY3jUXzLmSRU0Lushc1IlMxHFb5QTLZkzcHYFcKUSNqgkaqImKtQVZxUURVYWdYE1LJU1cN4RSTQSNh4hRSYDTQwDVZE1anoFRLwTcVETThcyTrYyMqkUTiMmZAokTYsBT4g0cyMFLq4lMMg0JGgmKmIzbLQEQ0MyZXIDUIkDM4LkYMQDcvUFYEsTMTImKZgjLMU2P2HVQDYGYxkzMv0VL58DZzYkc5MlZEYFRwEybocEZKAkcT8lX2bjSsQyLw0jd1zlQ2oWT1g0Z0MTaMcDZxLjdXkSUrASRPMlXIMkYK4xMYMjVMshYnU2SMM2ZFk2J3.CVCI2T0g2XCo2PUIWLvM0b2gjKWckZFsjSxo2UJkVagkzbXcEUiICYOsxQGE0QhEEdqjEaREkPFETQ5I0cC4zXUIyavciKQA0ZwvFZ2g2RTcUSJI0cGMCdxQkU2.kZ481cvEjZzLUSBkmM2f2YxYlRsk1TFIGZRU2cBYmSUQ2YiUlbDgGS3DSP4TEcP4jQBIybqcmbBw1SCQjU18zc2XDdwkVcXgSXK0DMCI1YBUFTw71QVUCdzrhL0rVSFkyMvEDb1.2cM4laJYmVVs1LqQWLyUUciEWVIcSVTsDQ2jkc3LCSYwlKVEDS5kEMmkGZvDkPUcFSFwFMjUCZLUCUugWMsAkbSgSPR8lU4P1P5wVVvT0SJk0btzjThE1b0vDVPEFawbkVNkDdWI2MAc1c1wlLmkWRwIVVTMDMqojSSkyRv8zJGgmQLcyRuc1aqn0M0UkQZkULCMGUOAEbZQybEMSbm8lRq4DUGAUNEUFS5QTZKIDZ001JMgDZk01Svg1ciQkX1cDLncUL0XCVFU2U1QiVxEGR47VZWIiQhcEQEc1SzgGVzokRl4xLZc2c2IzYvIDL4TDTmwTdLwjKhYTLwLiLHESbwXSLpgldWA2PGwjPgE1Ru41MqXSLBozM1olUXIENGgSREM2YNQiSWckRHsjTVolb5kVYR8jUvo0cq.WSJMEY0T1as81YsQ2RogzUCkGV3rxQ0f1TxUWQMMzXSMTciUWbGY0cWEWdocVRtkEdnQEQ0zlRyEiQmUFbmgVTkclVSYjL44zR2cidnESPOcVS4gGLxTUdiUWYwklUsc1RLYGRFoTZVs1YvY0MzLFVtYlMpQiaskFR3IDNzj2JxQ1QEImVZ0FMmUWVy0DaNgkUUkTR3sRTjsTUwkzPLAyRVgTNLEiQXkGazfWXLETYwLUXt3zbBc1Pq3FZmg2XZQyRFEWax3zQiYGTNEyJ30FLyMUNVYkQQkFLr4DMhIjSGg1aJgEL3YlcHgSRH8lVTY2MN8za0fyapM1UJYycUQzbOMiKGIDQy.SY0cCU1A0UDUmR3XlaqozTk0zJuQza1YiMhkCQiAiUzciPw4DaJUDSooERVkkThMTcWEidrIFQwv1aBwzMiAmYhs1c2XiaNMWXtDTaR4VZAUmSqUVbwXmVAUUNncyUWc1MVIld4k0LwUFSY4BUzU2LqYTNtDTbksVRjMDciQlcK4jXuMiS3ACVxQWSQ4TYtoWRt01L5E1ZzvTYGc1J5Y1bNICSwokbMQlMgkmazjzY0fFQOQSSkE2QzbEa3oTXmg2XmElaI4lKIgFL2bTTAwjLxgiQW01c4b1ZjoTdHcmKFcFVVQzPLMkaW8jdJokbNYGS2PDVvY2byrDdkU0XZIVV2sRb0r1ayImVBoWaE4BRqPyLsYjK34DSgEFQ13DQsESTPUFbToTX1gUPEcSMswzcLsjbLUSSrEmSsIVagAkcloUdrI0U1kDMRQTPisDVsMGRDkVMLEFVzQyM4.SPK8TU2XERIYCcGYTcnoUQw4VVXgzUBYzQ3MFM1cCcrYVbPgkQUUCMynjR2jCNPYVNjMzJvHmPngjcrkUYJECboA0LnEyZuYUTKkkQMI2XxnFQTYja0g1QHY2XgIyXLEmU24lbtclZRIyMRc1Q5QSUJM2UlMWX2gDNDkFcocyazgzZUQlXyj2JqjyPFkiUT0jXvsBSzAkRu8VYtoFbvQSbLoVLvTFcrsjd1bzZ1f2PTAiaYEVUGkzMq3jKUkSRWEFVhMkTS4hZSklSy31R5EiZok2b0EGSkgDVUU1MPQjLJkmbjQiSjoWaHcSSBoFbKsFTgImdxQyZGMDLWgzcCYyYWsTNK0TNEYCZtUlK4P0J1IEVLgkVQMEdAEVMPETVhsVPJwFUsUlMqIUMWYVQVQWM2LVa1vTLxbiQjIVb4MUatAmX3XVMGMUZtDzL10jYTU1TJImStDkMwTEUtbyJ3HWXPIGTYYTcvU1UmkjVm8zUv4jRv4VQEMza4olY4YCMtzFU0A2QVQDZWgDbBkCYIQDYAclYlciQvYichUDTtbmS3QycFgTatL0TtIyUs81LxcFQwf1JTczToQ1bxImKmIlTD4TNVI2SgwjbTgWcUwVaXACLKc1TVkEM0QkRMkkL5QDRRQCbBMyRzUULI81XkASQrIWdNEkQTIkUGcVQEE1cksDbpImXtYCZt7zJ1XSaZE2PVElXMYlMiYyYTETQrUUbwTlKD4VXx41Zl8jdQQyYhgVMKA2b34jSQQjZ4nEdXQSavD2XjEmQMYjY0AUcBUlP2fVdHA2QSMzTSUzU3TyUjMmVzomKtPEY2oEbRQ0JhcVLwkmXwnzZoI2ZUsVcIc0Sl4jV5cWY1bGYxfCVEECbGYkdKk0Jv7jRCAmSAkiYFszZsg1cXITLZo1YlI1SLMURnM0Z2QWXgY0L2MDS5AkYS4hYzDUS4fERCUWLVgSS0M1YzIiYLEmaR0lawAWchQkawUVRYIUXyslLAk0M3gkUiciYxEkP1Q1J1gzJgQlcgITcusTTvkFNyY1ZtbkUxPjbyH2P5EkZXYGVvU1bPkzUDACUI4DZrgVd4IyT0c1clQCVXklTDU0UTEUSKACcXITUybiPAsRZLglc1MCRzIldX0zRZkGSpglQNg0QMcUdV8VXhEiLtASNt4jdAQER1cSX4PVM3MWdG0jauETRwEDNiIjayLyX1sxQykTcwn2Mx0Ta0LyXCACbnYFMyH0ZrsjcREDMBM1QAQVaq.Ua3XlaKE2JzfjPzn2MtjjdHYVNsQ1a5QUPKo0a18lUZgTTm0Dduo2UoQiP1QiXtMyRAojRv.kUDAyP4cTY2Y0JDQVM3HSd1jmRUkzMYA2MggTcFYja1M1ZXkFLOcFTQgGdJkGV4PVT3HVaggDdyL0UwcVVX8FTzPFVy.STwEmLKYCNggSb5kzSsEzaEs1RgUSY4MVcskkcRMEaRo0bDklQwIUViMkTtPGS1ElZwjlQhkWYocGUSkDVY4BYU4VQ2X1MzHSUuE1btIzQtg2Th8DcMczb5gSMJEDNnkUMQsVSqomdEQGR0fVVzcES0EESCYkSyTWcxQ2UPMDVLYiQxITVzn0b0PCQSMjPyYDVyzDaIYCUNEUX1.CTBcSUx.2Zqn0U2TjQ5U1aiIVT2blV1HGTtg2JSojTVIWLtzFLGM1PDcUSxU2XyT2cxT2TxMFcHI2TlwzXhYSdWAEZXwlY4j2RoQyLREjUvDTRpI2ZGYDT2Xmd5c0RwPSQx4VbGEzRoAiPUo2ZK0TNxfkPZoUL5U1aCAEa0kST44TdykTXmMDRhUSNxvjT2oWL0nkSRAkTu81J3kEQPEEcoYTTQkWYZgTYgoDSmYzZzDmU5ImZVsjPw3laR4zcNoEY1U1QpsjPFckQ0okQqs1S2XTVxDCNvk0XXgySnc2UEIUYlEiaKgmSLgmTz8jalgGTnY0clYzUjg0T5I1Sm0jVIoWN0TWdmokSvwVdtHjXnYVYEQzLJkkTrMCL00TcDMjKTMDRSMDToASdwrFYAIyYtTWYKUDLTI2RO81MKcjbJMzbwz1TKUSdHgDUEcDaPszYgwVViEmRy7TUhYWULYUVvYWcEEmdvE2ajACNnMjVCoTdRgzX5cTPRQzcrEVVOsBa2DkKIwzXkgWMromYu4xP4c1JSUiQKQiKgozJzI2QCcldqkEUtMDZmUFYzLzbXIjd4jCSiYVbwfmdMcGai81RlYDV1olcwYGZynUcUIGTuslYBQldJgVQugVRAgWSJkFa3DDNMo0RiwTRXIGZzPVdAMmZzjkQ0AUbiQiViYUXvg2SC4lY1rzJ5sjM2TjRFcSbUYWY4TmMioVX3ICaAsBbPoWLpQCdrIkbDslVY8jZMkEYDkyQyX1RDE2a3cyM4ISQP8zR2MEbxzFYLU2TWYUTPY1LIgDUPcjYSU1XTAEaWciPgI1TgoTcTszLIoUZMYDMhUiY2fGYtk1Xq0zXqfFa3oDVBwDaRUjUGEjaY4TSvrhatH1ZhYjcpgDQq4zXuETLiczQw3BaMU1Qv3VRC4zQDclUpMGamoVTvHWTI4TckQjLqklMjsBNEQTRL4xRjckMq4RR3MVT2cUPBkmPTg1QYUzUMU2aTUCc0UkY1fmbOszSxTWXEsBcRYCTmQSUHsBL0kUX4cTaGsjUOgkSKUlTEEWNvkCRAYzbwYEQSAWQFYTXDUUNAY1ZxfFYh0jVGgyP2b2XqrxbEIDYznVbxQSRAYzZRkVZ2jzPxgjdqQGZC0lYGcmZ1HGMtLSR07lSpEGYFUUc4nVYXIGa4clT5shRyfUQhg2S3cVRAslY3HzZIIycQUCQlQ2MnkDbuEzLuomZmY1TO4ldnIjYIMmduUGbxUjZ3k2LvkCLwfyZ0HWbtrjT04jQxUEVrISdhAiTEIFU07TTF0FNtUkPpQEaHg1PRMSVJEjPEsRTioDNEYSdmUEaQEUP0bWdEcFQZMmdgcERK0lQhM2PIw1Z5EzZugUXlUiMvgVMGYzL33xPxHDZjcGbYMyJqwTMwLkdzkWSUgGUFUGND4zMCcFT4nUSFoWTyk0QlETaXciTIgjY5gSTMAEaOo1JNQ1ZRgFdyrhKmkVcikyaPcDUWoTMIw1THEyJQYzcOACZjIjTR81b5QkLCUTPZMCZQUmPt.0Pmo2aZU0SzkSTNMDbBg1XvUUbyMzbzf2aPYzbREGdkwTTRIUP2cTVEoDLGE2Z4zDSKY2UXU1YTs1a3QjVrQjZRsxRCoDSEU0XrAUUKkmUwQiZxTTYJ81SyozM0PGQSo2PukVdDQENJcVN04DNmgiZ4fiaOIkYqHVNgE2T5kmQxT2ZwkFYQciVMQiQSMScwfiUSYiYtrjKlcWXngUNRI2LnYyJ3fyPkoUavcWMwAUcqQlLSAGQmYkYYQFTEAGSqYjK0fjTFMCbsk2Uxg1MHc1Y3.GLZYVTuQWRwfGQIwlaG4TUQQGLsUVLkkjZAYEL0U2QvMjYpUWYk4lV2.kTVcVYoM2Poo2QscVR0IkaOUWLgwFNEgyYuUGZTMEaFs1QpYGT2fFTNAiZCc0cznGUxUWLUUkTT8ja3ASSqMjSS0FU0XkSvElUSUGMMgEYvwTMK4xQlMVdHYjPwflRqUCbrUFSTQyXr4jUiIlVRAmLLcyJigELTQlVw8TbtHiMpsDUPkEUFcyLhIVZ4D0JtMCVQgGZ0z1PJgTMXYTUycUXybzR4j1JJgEY37lX4PVdXgFQ0T0aoUFMzTiaGkURSYGTg8Fcz.kMzfjSJcjPic0anQFSz0DZSU1TWwVahQCT10TLsgVdAY2QQgTZ3USQWUWL3LiYI4Rd5ojKJ8FSuMTPKElM5szJQITZMYiMjEGNCo2LPUEb1c2J3TkcZ8lYEMUM3fEamIlQRgEano0RE4zR2fDdtASNqIiVF81JqnmL3U2QEgzZkgTVB4FTTglKmICcHoGVoMmKq8TN03xbSkUMJokQs4DVqLidyn2YFIkc371UqjVQtbUUHgiP3UiVSkUZBAyQCwjQ3gkUvsBQqb0Pz41UqMSXwUjaEMlShkzY0sVahMWRg4TXMAUTXQCYw.yTsomQWcyXsIVSy.kR1YUMmoDMgslTIYWYEIEZokiZl8zTLoDcRgDZ54zXTYGTokzaUEyaXwVXlMSNZEVMJc1Lok0L34VXUQTUFElXj8TZlMyZzX0cUIGVNEiSzXidNUjK1PjarEyRCc0JlQTZvwlL0MzaPgiSmc0QuIVPN8zUZw1MmEDZZgVTOgVPNkTZ14FNqTzQUI1XrUkd4ckSlwzYD8zL2bCZFQDM1zTUn8jd3Q1cVM0TEcSUwXSdjMWQzEGNwDycqvTdyszLJsVdEISLqPzXzfTd0LTcrYTMEEyU30jck8lXj8zZ3QGMjAiLPIiQXYSYtTFVmkUP38VXzcCYZQyczX0Tp4lSycDUsAmbqglQPIGamU1XKIyRv8TShgWXzXUZyLWNFoVZAIUd3bGSwIVZPojZvIjdTMmLLsFM3LVcMQFdEEmMpoETzPzb2fEd2QiRQczLrQ2TrkFVMglRzgScgglRUwTLnMDV4DlX0UjUZMiTxnjSFQTZhwzUxjCbPolUSIyangERLElVIYDMzXyZFE2L3QzQBcWZ2EVbWYVazPkb0cDQLc1RyTWPy.UPJgTQzX0XxMkRPkUMls1aFkTN1UTU4LCVWAUYEkEL1ImMxDVYtASbDkmZEkmK1EWMnAkVWoWcvP0R3QGR17VVj4xXVIlZjgVTnAWXCciZzr1LXQVS3PFR4MCM1.GRxgDYzYmSroWRF41Us81RwEUV3TkcPE2avYTbHsxY0TiTEcER2MVTxMySFw1SBwlZyIiMhshb27Tc5giPzDzSgEjVg0zajMWbOMlPNUWNxAmaWQ0L0YDVUQVNtUGUMElYJgScGoUYqkFTRo1Jl4xRr41Plo0QyHGVh8FMvXWMJoVVWsBcGglSM0jX3Mld4XUYIczbrIUZHcyJ0Y0ax4DbWYGRhI2UYQGRxnWV1zzZ1zDYnUDVwLTcvgTUUcWLMETQp4VNrUSawETdkIEazLEaGESUB4FTAEmLqMWbtPEc2sVVLwzRzQmR3s1PpcTRwDzb4nTYxL2PCM2LRYCaSQDbhQzTxMzLsITU2fzSFslQWQjUMkDNtYmRzHEd2LDYhMUVDwzTCslPJYjTAkUR0H0XX8lUlQ1aXUlQXkDROgkUGcVNLk2TZETaV8TYpQCTFkiV3E2Jmkib4cTQkYDNY4xTjQTNtECYGA2SMQTYLgyUvIFMHgVNx4lcNclK2.SaQgUSq.ULzI1ayzDZwYVcvokPAQVTnk0YVcVYSA2RVo2cCk1R0sDRBUEdI0jUJEUPQYFN44lZJUFcX4Rd0IyL4cySFcGZ2.GLSsBRsYlXBgSRAMGaDYlb1MlXAsDUzbEdtMUPNc2cpAyM1DSbxgTVAMULBkjYyLlb2I0QIMiRxEEaGk1UnUWNyDGdP4DM0.0TPIWMucSN4QDcxU2JLUWUSsTNVomTDgiP1TSNtI0aggWQT8TR0UmcDMEbNUWTNI1SwDlRCElV3XiYNsldDYVSI4hVEoWSDASaRMUc0AULwQWa24TQpcDYZgVLBI1PQgjZVUWaLQTP0gWdYIVYpISdvUGY201Tqj2bw.GUB8DNDMEN1Y1PSA2QpIjdlgjTUUWZ24hXq01JAUGZxf2QuoTaxszP3fGZHkya1kmb3EicGs1JoU0LUcSNS8DaHQDbTMyaMEmT03BcZoza0bzJL4zMtXlP1HFVQQiTQUSalgjZSMyLtoDSMASVBkkSzPiTJECc08za1fTZmgjSYIUS5kiZgAkPCQkdLQjc13RYMwzZ0fSZ5gEQy.GasMlayPVaAclQrg0LIUVXx4RTuMTdCcka0jGRKY1TAM2QnoURHgTZkMCbHgkKg8VdgwFNHEVSgcESyXkahQSXUEmREM1PxQUQ2f1cRIWTuI2R0YyX4k0T1EkUQklRy4BbRslMrMTPVEmLro0UqX1cy0TTugVQWIGQIkjYnMWUF8ld24RSrIldjEUX0L1RvAEaFICVx8la5MEQW4jYy.kZWcER1rFSwkSNHEWPxfkKSUjLJ81QCwjUIMSNtYkX4EzPMoFaK8jSxTmXkElSJEVaQoFMwf2PMMWYtsjPSAET3EiY34xZVY0b1YmRDk0MOEEUDAGUzTjUVgSR4kWNCc1MIUkc1gDLMklbiQCdDUFUYcVRQQlRxbGbGQjMQAScVUUN0z1Su41RkglPMwFTYUyLFYDRtrhTVgkd0k2JmUSLHQWQ4ImKzjGQrgia4kycsgiPN81c0n2ZLEmSUEmc2kyUMUTQRMyQAM2TRkFTwrhdsASXrkja4QVZCg2SrUFVUQkasMUYnIGRyo0QOojM3jjK1s1JA4BT4IzRkYzQ2z1X301Yq8lKBIzaKUjc1.0QMIiUiklXvfjUsgEbqwjQukFbwTlcMk1YWISb1Ejc0PCZCglX1UTREQSZyDjQvTUX3PUbA4hP4MFcGAiVvLkYOQGZlAWYMEjPIIiM5kiQ33FRsoEU3v1YKoTYng1MGgSRqTyUxblKPwVQPQVdxbGY4A0bx3VbZo0RyYzU0oGRus1Y4c0TSczXE0ldiE0cyAiVVYTME8TRr4RT1fUavIEYrImUVsjRZQCdyjkPqPFNqHkZ3AiRz.ycvcWYLUjUNcUPZETMsoUaUMVSEMTSW4BSxnlRRE2c2EkXtUWSzPCawbFS3LjTGg0aOwzMpgGRhYUdUc2RPEzaWIkQFQ1YLAUPSMWZZMVXTQmLgQGa4UDUtLTXu8zREYVR1YybOgCbUYEZz31MiomLSkiMZgWbrwjZ3DiXzvFRLMSMigzUzYlLQgjPNElUGwVSOsjcLUCSI41UokiVNojc2cCdUIEQUs1Qx7TdzjDS3YmTGQUUtr1Y1sjR13zUwLkTUokTQYGUwX1Tq81bxfmQCshP1YEQi0TQIMlaK0FS5ojdnsFMO01PD4zZRkFUTQ1Rxz1cYgENrckYGUDSgQjUYITXzUWStMTN4UkPAAySBM1PrYFRocFL4rVaUgmZ081avU1P1fUc3vzQyUidAMSYXYWYSAUYOo2THwlX4omYEo0QggzTvHzUqYSaYEDLF4zPNMkPyjjZtEEUwfzb1bya2AWcW4lTFIjQ1ETNkEFLwUVUqT1ShckcK4zcNsFYH8FLtgyJkgyYzgSQwQlU2EiclUDT58DSxbkQ0nmdMUVPBM0TncDUVcVahwjREQiP1HUXAcVZ4jiLwP2avzDMxo0aZMWLv.iUMImSgwjUoITRDcFRW0Td0A2QFMTaLkiZlcyTqIjX0.WLIUDatTFdqc2RgUzQJ0VNX0lQqzFMpU0bhMySCM1PGEEdwklLA0zTRYjY2gzJhAkRXcCaUQjcxPCL4TVVWo2YNU2J2Dkd0TzSKMCQRUCaE8DRiIjTxgzM0EmUOcVUgMybwIFTm0lRqPyRZUGbWwjXBoWNlUEcOUjZt.iKJIDYy0jLE4RUiQTVRcjYEcTNzjiT5glT1f2SZUFbEACLsgmUJ41cGAWYvzFQIMTT2HlPAMCaDYkSybCNIgjck8jVjs1Zso2RF8DRCcTVr8jV4byLKYUdx3TQ3TDczb1T2UiUDUCNRYVdnQTc4o2SPYWLhUicls1ahkCSLQybGUiV3YlSWsFcAo0Y3YmX2olZA81cD41aXokVTAEVjQ1RZQ0XDAkMUojRNoTNKEFLYcCMIwFaqX0XT4xSjMCcGUCZvwzLms1MTslaYQTc4gEdxbDcJokb0XSYG8DdjcmdIISRTsTXvsVaFgVZLgDUFAibOwTLWgmZlkERtUyUGEmTzfFazHGLvDyP2PTTskkUhYGRPAmMZwzY1X2c3c2R4PCdFMGcnAmKj4jXx3xRYg0PyHWR0DjT2UVcNM2JHgjM5gGNEcCayDlSZ4lQXwVMIYjQgAkRGYzQM4lPH0lQ2gSVuclb2HVbMYTThQEbPUWdJUlLwfVYQ4TLlYybDYTYDAGaQkTMFgyZhE1XIMDLW4BNyfTT1MEQOsBShoEMmYVRQgDRoASS0sDTWEGYzrjUw4BQIoVUQQDUw.kLJcFLuwFQqzFalMCYZEFVuEycrwlL37jdXshKGQmMIgzLtMlTzjEQG0VM1MCVAkGN0zlZH4jdJYTavUkKKMEbKYmXKEWaRslbNkiLlwzbZAiZyPWV4IidEk2LYY0U1DCbIUiYvcVMmUkd2D1R43BLQgSXzDDTVkWZJYTMuMCdzX0XXMkYtMUZPcTZhojTwLWXLwjdTEmZwUSV37TRmoWUMw1cvYzQDglTgUUPjMlVZgVNtfyQDU0YCgFRukSLzEmYu0zLyklT2LiaIYEVg8jdVQUciMzYlkmXjU0bq.0TjkyRlMUS3Y1TVold4.WTJgGQXIEaxTjXlMVawITZREVSY4haXUCVFkSQjECU5ISaGMDZSEFQTAka2LzLtvlLEMkVnEkYT0lYMYUM3H0QiAyZvzTTzXVZIIGU3jiPzYVYFAiXpoFdAMFL2bCQv8zTxLidPoEaDI0ck0jcmg2byXjaxwDY0jla0QFMG4hdTolangTbxXEYKoUXhMmcqnUMYIGajkjUxbTPjEkSwTmdtXGQKcDVr8jKE8jdwrRMXQiSHAkYnUVcSojXt8lVr8jPhkSN5AiXPMkSxLlS0shK1UWTZk1UmsBSskCUhkkR3ciU3HUblomM0rxYSMEYx0lR4rzMoUlRVITVJYDasgCZ4oDMsc0cCshd28jVyMWagkUaHQ2R4M2ZKE2XhYTMGYyP03xQFsjPjM1bJgVV4slKlImU38jSqM2bCECTrQGcNIyakk2X3YmSTAmcjU1PNQkKjMGTwclLTgmXocWRSUkL2ASYzMFdQgiSR4hQHYlbxgCLS8FS5MVR1DkQEgCTTwTPQUCaXI2axIVQ0.UM2H1PrUEQngWS3TjLoEmMuMCbv3xSq8FYEQVU4biMn41JhIUcwUiYD0lTvTCLh0DUB0jb0MGSjgVQo4TUEMkdIAGLOEkVtnGYzE0Rkg1ZBgVS1PmSsgjUDgiTUo2Syj0awfCQuEiMgQlSzjTLOY1UTo1XuUjcgkkdPACTzE0SxMUbig0S4I0Pmc0cHo2QjY2To4RcRUDctPEYicFL3DkdY0jK2YTbSslPAkiaFk1XZclb1XTMgkUbNM0QFU0SMk2MoIUN4sBL3QlVuMTLyfFUtbySnojREUFTnwzYvTlcVcyP23lMsgiKs0FQ0Y0X201SMoGSh01cRQ1PYM0bZ4VSOgzTyMzRXUUdlQFZMEDRGY1TrISPwn1cBYjKVwTYSAUZ0gWSgslUkQmdsc0SjkSPsMDcNMWalYERyDkdwLFR20jZKclLHYyYSImcyA2MtrRX4XFZ48DYwPyQC4lKNgyYPYkZYEjVIUFYyw1J4XCZ2MmPRsFNlcSZwHCcmIDb4jGUnUzMIM2JMUmTp4hYvTCVUgGSzjzbiY0UhYVQwYVXggyUv7TXPIzXwHUSpgFQAkiV4YTYDo1a4UzX2XWQuQUU1rFZqXlUQEjaj01cuUkY2fVXwnlPlI0btIySRcWdGACdxDCTpQWXRsTYX4xLsEWcVciPO4BVo4RLrMVcDMzXuMmLuwTchsBNqXkTyfWN14zaNcyUhIWMU0Fa5klTCUTTFgkbJkjT0jWY4rTX4MWYJgUd1LSNI4jX2ACMrYWdwgWb4jEQB4BZqITYLEmPigUYn4DaRYmU0jjcmMENJQ2JqLSZ4E0YgM0Uy4BawLmYwo0SqMzbBckbxPGVpMScsQyRZYWYkAkTRgyQzHUcokCLLcGNoQCLAEmU1X2MqDmQM4VNvnURTQCMZEzSPYlRtgWYzPlVwgSYSMTTUY1XtjmbtTWVtTFYq3VXsMEZDQlXJEDVjkWM0fzaL8zMLEGZhYiYQcCaVo0RhACSroldRETbS0VVZIkXjcSMRkDN2M1TAsjUpomSwD1LrMiPAgySlomZOMUPygiXYYFVEUiMuQlazMENtQWYxg0ZGEEM1DENTY1SsAiYTI0MJ8lcmQlLtMULT0DbV8jLNYjYFUSQCk0aGc0XEYiLWkSSqDGL3MUUkEkLxHWX38VSgolZWUVMDQkK1jlYxjzM4LSN0EVPzEmXybVdGIlSygDd3wVYMEVR0cWSsMTQkQFYo8VYhkVPkoTRk01M48TSvbESFo1cOImRHMDR0nGZyclZ3QCTqbzQF0zJYkzQN0jayPmLyrRQEAEMqfFSjMlbE0TSVIVNtcjXxfjcWM2cxPVb1PVaxr1My4FYy0lTuYEZ1DiTQUkKV4TMBYiRkUTVuU2bKIWMq7DVjkiLnszXqcCdtnEaIslKxnlT0gSTyPCbjIkSZEVXNg2LWUFTIgUQHQSQWUEaNEjPpckQMQkSME1Q5gmV0okXYMEMiAicK01cIsxSoMlLLcyPnIkZJQ1RWYzTvzVXvQDckMlcq4xXFESVYojd0DWYPciTDcUUu8jQCUVTwPVU5YEYvMSa3IlZrgVa0UDd4kjVvUlbYkEVXMEd4kjLgozJQIELugUd2.CbFgCb3v1RwM2TtfERx3hdEETUg8jZPMzbzc1PtYzbMoGV4fmZBQjaJ4zXAQVR04FMoklVEMzZyM1Y1bTXhECVvkSPFoEVyjyM2fGdrkCV2ciMqjVPBoGY2cDV0UjKwQEVlEWLtjkdBAGZmQSQsY0cWc1YoIVLIM1RSoERUEFSqA0MRIjXjgGTCQjcgkkdYEGa0QmM0HEL3o2T2zVYNMWZmIWaQMWMxUSbVgVMRUjLG8jajYlVxrBViMGVoU2bDIyMKQ2RgsFMMg0bqr1Yr0zb1ElS5QFRWczM031ZlszZI4BbqsVZ3gCLrElZFcmPqwFYx.iczDjdsYzaWc0RToWY2ImYXYUPqUjYMgSbVMlMzM0UyETUlc0UWsFL1AWP4fCM2b2RKEWQOY0XWk0ZUIGa3.2YAojQUUiRHMzQOAiMNM0QIQjVUIWUNUWTLgEYJwjcHkTcRolXrQVN1QTTtXkLwXmX2.ESn8VRNYjZOQkcxXFRz8DchYSaBwjMVQEdHc2Pzc1cBMkZUglboIDdIgGMSAGYtXVdVU0QBMTZ3rDRyLiVSkEdTQDTzITZ1LScNI2bGAGYBgUaPcDLyXGdKo1QQElc2oTcEUTcsMyb3HjPBgVMoIGVVgyPgImT3UzJSEldGEERJokPgcWascWdznDZM8jREgUMGAib2LTV3rTVZAUTEg2UoojROsxaGcGQt71ZqIyTj01Tnk2azTCRCISaUIkUjcSXPgkd1jmL0TVS2DlYO8jP2QEdWUyXzLkQUwlMj41YzrVUuYVYyT1S2H0MVkyS3.kZNolcEM2TMYlXUEzJ4k2QOAWY3jlUz4VVWUEUzA0X3YFcCcDUt4DQlcTPNkGSqrRcLcEbw7TXREGaWEickYWNVsRXUElTT4Rd5YFLwo0YX0TQzfWP4oGVlYDbqDCUPIlbvbyJZAWLDQCRAUkbkEmSTgUU5wFMF0DYsISPWomYHoVVtHlMJU0X3TlaTkGbgMCcDM1XQciPBU0JqrxcpISd20FbtUWb0YCZO4jVtYEd1M2MmslXxblSrYCbxrlb13VVUcmLvI1RwfUYGYDcJYSXhwFVUo0c3AWazzTNqIzRqEVcsAkUXA2RVkmaBoVTqQTNTc0XEgELiMiZnsxLkMyL5QWTpACY0D1P08FTxDiMqkSLMwjTNc1RwIzapczQBQFZ1DWMzDCcvTTVMcTdWYlSWQzXZYUb2gCa2MVPmAEaLokTtXjKhMkcqIjYO4lUCQWPPo0Y3IiTYUTbpYSRhkCNUMURTgDbC0TVhY2SSQDZkgGVlIVLnI0SnElV3IWS0H2TokiSjQ0aUglU33DZ2LWX5MjZSslSybCaTclZ4AmUgMSXpAiZM8FTGQjY2AGLzklXuEUXiwDUqkzZ0fkZ1UiP4f1P4L0S20jULECS2DTbxnkTxITaxgiVFcUVvoVYq3lPJUjVN4RVuMyPJMzPjUVVJcWaLsxb1g1ZvnDZUgTUvnzPSgiSvLDZjMGT4oDVwcyPgAEMyLGZ0PWdvQTcwTUdx3FV1XDaMUURt4zbAQWdX0TbOM1ZqHTRwAUZpsRTOoUL4E0PNEGUK0lXo0Vb1PjPRQUZYokP1rFLNcVZ4zlal4RUYUyb2bCZRQETgo0LyPFMnMERAQjY0UFbJUCROwVTHEyM0kSXFYCUmIjUDQCYqfTYOUDVPkTLyv1R1bjYGI2TQMCYwcTSTAmPTgmKyfFT34jZ4T0Tyvlc4IkYu8ldxfEN2PkU1sVNuM1UJcUQYk2PHMWLzgzY1oWc0slXMQjLmgjK2n1P0I0MBUFUpIkRH4xbJYyJSUjM4IUToQlYiojMzH0UV8DQjYDbC4hR0wjaS4lL5cCY23BLxPTQPIWPZg1Rw4DMqPVP2HUcgYUczT2SisTcrIVNJwVYDIyS4QVayk1c0fEN1TDaPYVT1AGdAkCbQc2Xm0VYrslMHMzSUcFczHULzglSNEVLSUycFUUM0UkZqnGUhkmTJMVc1LTc0E2URISLTo1bZkWUrQSTK8FTC4lVlkCT1TETKA2b1wjZ2EWVPwlKzjTLRMUThkFamsDLzIVUFECQ4b2Tu4BMRoEZigiVIQWVMUVbqrBSt3jRxEDc2fVZWszQBgiXyITcG8zXYQDavYiQi4FaFQmZZokQXYWY1YyTswFNBISSPYiZlgTM2YDbF0jRTEVSLo1YtoWNNkmPQM0LnU2R1UyJ3L2YzcSX1.CVG8VTEo0ayYiY3oDc2LyUBcWX4wVMCckds01ZoUjKIshUv0FdUQVbzU1LqPmU1EGNwXkZYgmL4gESQ0VbuMkdrcUZpYzcBgGNWwFZrciSqIWSVY2btAGNtTmSWwVUxPmdkQWMrkyL3IyMqAGLDUTZxHFVFI0cMg1RDEEYqcFZ3AWUnkVRyLlMI81RxcWLMIUSVM2PZQWLIY0ZlkjbV0DR4k0XlciUkgyRAA2JPQzXqM0Y2fmQvfjcMsjY1Y2LjsFcCElSyXETWEGc1.iRwHmaykma3ECdYUyZxXSYFElSlQTPBckYUkWSWIzXKE2MvH0T0HDUyQEaBwFSyjUNCwjP0fmKOsjQqwzM2LTUhcjVQI1PTwjK18FMzPSPZwjP4M1bgEWRWEFRIElVVUWNTcDMNsTTA4VMNQVdJU2UHAUYNgzQvgGMTQ2PAYVaOshcWwFYBomatnDSXkjayLTNhEyajEDNwQVTHoDRJsxLCIlQ2YSM47zJCwjYsAkXGYSMhQDUvMlasgWYgwTSCQFdqI2StYzRDQmUoQmP2wFRngGTuo0X3.CUEIFYGYCRDgDNqPDLGcEUoAUM0QFb1fyRmM1UHoTQJACVAIja4jWSIgzURUzUZAmPFoEaqjEaRsjX4fVSxHWRQY0QTgzakg2YDQSbjAWZJoVTpkkQikjcOwzMWQ2JIoFYwbGdvsFQpokasYjKzfzczYFMHc1SzoWX3sRP2HSV04zJT0lbjcGavQjRMcjMhckXGMlMP4VaLQVNoAWciQ1btzDcCwzLNAiP1AkVgUmcy.yJ4HiR30TdvQzQZoTMmcEdNsFaZwlRK4BMjgmU3PWankVQIgGbyfzLSsxX2jVaQkzQy3DasgjY3PSL0kGSvIUNRI2PrIEd0.mKNwVaYwlZyYiYqQmZ2fyR1EjTGQCdwn1LSgVT5ITZIEiRG0zPls1TvLWQGA2ZqEFa4jiLI8DVmczaGsBZzklMwD1X2YkVhElayvzc3EUdBMiaOMCVhoDTyIDZC0VMUUVL3E1PUklLz7ja1PyPmU0cjM2J3MkaUI0TOUWNzTVaFMlQrAWZLYibBQDaIUiX1P1SrwjQ0bUPGkWa4TFSRoUa0jGZ03ld1DlVTkWVEgSMZUiZCYiZzTUPwgiZvQzMPUyMzc1bmAEMmkiR2HyZskzL1biUHgmXU4DVvgTRjAWTNclRpomaBMyJ04TVYgibZAUZUcld0ckZnIUL2UTMKgzZKoVRL4BVmojMtPzJqcUPxomZ37zJs4BMRMySig0RK41Y1AWM2jTUJszTEQTNVMCYLICbPE2XGYkZpESMBcWTEsDZzIGZGkCLBYjRVk0QU4lS1nEVyT0ajgDUQgGbYU2PIUiVvoTTLUjYKc0TGMjbhcSUvMUSTEEM5Q1LNA0TvfGSSkmShYCctgiXB4xcSICYhI2MIkDNxECQ1H2XPEybWk0MAozROIlQxUUQocWN2QjM4X1QTIzXRQDUxM0TUQWQT8lZWUjPwH2R34TT3.kSuEkLi4Fax.EMXEkbxP2Pi4VdyLyJtIVa3nkYqPVPmEGM3ciZno1UIQiKO0VYKQERyAGQIgDTww1MpgmVqfGRUYURnMWR3vVLyn2PoMTYvrxXsYTPGgjLtTiS1zTVQIyazbyXCwTNo0FSIUFQtIiZEgDbYAEYOgkVyYTNEoDM0olKDolXVMCQWAUNhIlTvIUUPYTVo8VQoUCb4YGYoMjRh4hXpY2bNYUXlAUcBcDdOoUVFEkQrMVQUojKE4VUPsTP1wFdZgzP14VVSojT1fFLr0Db1sRRZ4xPrcmQ2UDNwsjKyEENL4TLxjUL1MSNyckUyEkSREmQIwjT2HmVGIjRMISMP8lXlwjMlslRUQmUA81JLMEUMsDThwTXs81cQM1SVgibn4TLEk0UycCaVUUVwEjUgEVYWMmVMEGREM0Xr81LFcSM4cUZxIFNIIzYwf0cX0FUlkzLIUjQxgCYsQWayUCUqQUTtL0bRcyYJQDVgYlawXkZw8jXOQDdxkkM4QVNLUVd4szXhczQW8DYCMTdJQGb1LjMrk2QioVax0zLCcEVvDTZAMEdiUGZlcEUyUjRKcVL0TTXSoja5ITdiA0J3ICMCElQjA2RGciMkkiZ1DEbsMjZJA2JoU1PtzVURMSXZAUYxD2LWYlVvsTaTETaPsxJ3gzJyj2TT8TYsolbt3lLLQEVyoWXjQjTxUVSEITS2kTQQECLDUzJY4jXoo1Y58zMwUUNDoELXUySzHSctoGNVkVMy0TdjQDSFkFSHM1RkkSR2HmcnM0JJUmZyYkLhcEMvbESwECZ4biSts1MAMiY43Rc2MybjEiZqDyRO4FQXwVPyMGLgYFThwjSqMTRWIFYPkTdvcUTVMTMtXWP2gycVQzT0wTQ0HUMNITPvMjSDwlYSYyUBAiVRY1azbUQxwjLAwjXvkGM0rFcAc1PygibXMTSPMjXSQCLvLlYxXCbNEVQWQiY5A0J1Q0TL4VNhUVQpQUMQglSP8VSgIWcUYCLFgTbKEDarMlU3TSTUMWYNoESUsjcrAGQqTjPYQzTBEzYts1YBQTPj0DUIQUQwUkSQA0RXUkakojUnokQSkVNWAmaEUTY3PmZ4szLxUmMJo2SXM0PAwzXk4DNzPCQ2HkLEYjUzfUa0.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.SVT4DZjMjSJ8VUBEjcNESRgc0JsAyLrcGcyYSTNMTatrDYy0VV3DDU4UDQPsxX14BQBUWbXQ2LYI1RuUmMvvjPkMjcSY0PoMCQqQ1RtkkUGcEcVgTPRsjZ0LDbXoTTiITN4Y2TyXFUk8jZzsldNY0RqkkTJMlPy3VaPYjb1DzUIQ0JwcFVl4FRl8jaXU0ZOojP4QWXUw1Z2fjaqnlVG01R2rhcLk2PFgTQEkkV5gjSXU2TzHkKAcjPz3RRDoWcIY0cP4zcs8zaDYFYSgGSkcDVI4zZvDmbr0VRvv1Tqg2TvImPVojUCMCa54BRFgjRQgGZ0X0czIkZrUGNMUEYYIjLv3DTBshXVcVVwg1c3k1RikUZKITQVUVLvU0JYIkdKc2SkwTaOkEVzb2aYkmP1jTTqTzbLACViEWSkcyRZsFNngVURQCYkAWSCsBavXEajICRlIlLAkzZY01Zj01bIMybWkVbvb2Mw7TayX1bo0TdC4FMvjSRKkiUtQ1XUoDQQkjbBUiYTgFUyXGQvfiT4ITbnESZ3jUT2QDMpACSCMiL2IGLS81QHsDV23FUQ8jUPo1MBcCaSMmdFUmS0LCTxAmcKoFch4jbWEzc3oELVQSSzLSMFgybpEDLJcDSP4hZHIzUHc0M2f0LuQSYoQWMyjTUAIESQIldioVc2I2avUmLXIDZJQTYqfGTx.WYYYEaNYTNlY0QrMiaVEkdikmQFY2cmoFchYVTS4zTxfmVqUyTkwjQEYzbRYmcGMTLSETcucEYAMGLyDlTIklK3rzcyUGbjwTV3XmVnYSXFkmZrcFQ1j1a5wzZoglVmk1MV41RRgWb0wFc3IGbFMUdok1QZgEVvDFMME1ZkUCQX81QP8lb4MzX4vFT0fGTJUmLw.UYrMlP4QUdigTbYQyLsQ2bj0FRqgVMIIiY3njKNUjUtUzYqLETRACNZIzYlYiS13lUVElU0wVYLgkYUMWM0shViM1Ppg2LioFLzI0JmUFY2.ib1UEQxold4IyPtUTa2oFdosxXnYEcwICb1nWchQzUXUyJjgFMBEmcvHTVznmTv4VL58DMXMUUSYlTCUCUqbSQBA2MzQiT3HSXvI1PKkldJImZ5E2Yxb0PmQTQyb0P10TXVc2XsEjQkcmSv3TLHcWS3YGMiYVajYmZHYDcoElXuciasQkVokiYJIzLLckZ0glKNUlRgEUXmoDchoDZq.mS5YDdwYiTNYWdqLmSr41Yh4zbEEGdNUCZwHEaFw1btDSRRcGNYcybqjGSWcmdsgjL3fFLnkTPWMlRwYES2jlXGQVRus1RqrjX4v1TVICbuU2UoIGMQ8zYvQ0ZYEmRFAyUjYGR1HyPw3DMrk1RzMyM2Imckc0MvUmY1EWTwUWMOMWR1bSYYMTN2DTUxDSaKAWLPYGR1kUczQDRwcia5QUbng1J1nGckUFSZY1TwcEMDIyZxc0S0sxaZklXKAkQ2IEREcCZQoUbz8za04TNvnkZ3IWQqjDTGYmMuw1QoYkLVYlcw3VXZMyRQUTNtTSZKEWUzHDdM8jQMYFLLYmXxYmPtMyLEgUcGgmR1kUNSAkdwLCZvI1TkYiKqQjM2PjaxYTXEwFQ54RPOoza4MzQuUyRSMFcJk0Y0DCSwDyJxbyZkUFMk4Tb2oEUzfFbGMSMUglXAoVb4sxaqHmc3DTMvrVY0oTQnczL4DDNtn2Y34lKXoFaPsBQzETZyfjd0wDY3bUbuEicYEkY34VUzYEa5ciStkGavbSUAEScRMzcF4DVyrDb4bmZEMEYPMSUscTSrUlc3fmcLoTSvIVVtbjPK41ZrEDMjAmStvlPybVPxMVXjsjckk1Y3HmYgcVRl41JLoma2EyTpEETxrjZncycZoVR3zVPsUWdYYVSqjVaEwVSY4Van41Py0TSAokTrMUVC8lQG8FYtH2MqfDNDUla0IjbMEDVMc0R43jZrkDLgYVQoszRiQmd4YWXTUVLwkzc1YFYBkURTE0J0cmSu4hY3H2QQQTYPMycLAkQXoGQ4cGa14zY5UEdsY2J30Fa3QiXgUSUM4ldVwzcpUWTU81ZqbFVEwzLyUyUPkyXM8lP13xU2w1PDAGUS4zX0YWXuUjbRMTNnI1SgQFLiYiLtzjdLMGUUk0LzbGLx.mLMUkPHkmdhk1QPoWYwITRZgiLxbzQwnkMtLyPNMTYPgCRVomVqQWS0o0XhQzSkQjdRkCMHU1PAMzPzvVVRMibm0lShUST4TVXLICMqESLYU0Xokzcr4DZD4DYMokSlAmPKYmdO41SgE0MUsjPIoDZVUzXTgzR3DyXvQ0a5kWSEUEVoEkaNkVXYAETyblLhEybM0VLlMzXkgDUZQWXAwVSIomP0TmLhUjRToVbZQ2XAgTXYQmVJczMQAGUKcTYp4RZy.CRYoEMnQEQYQlP3PjKVY1XY0DNHgTZmgTNSkGST0lPWsDLCIFTOIFa0QUXOsxaZUVSQM0JvUCazjGLzwjKTciMuc1MwU1SqTEMFM1aYkSctXSbNgmMvnlP4njaNUzYBMjYLEic2EmP0PTYsA0PK4zXHY1MYoGV4bGZ2PSLiQVLSECcTsRV0IySLIDMm4VcZ41ZIgEM0LGRWgkZGkDSQQiduYzbUU1RuQDVpolS3METXIVUqPyYz.UVv3xc3PmMvYyMZc1Z0fCSx31LWMDbrYSQwbTTU4TPzTlZhMTXxnEVVkzJUUlQNESaWUlXRYkSEElYUUmUJoVdSMFdqQFb3ASNKUyLyEEdLAWXZETXukzYhQ2Y0MEU5sDLucEToUEdS8DNncDdMkkXvIkTQEjc1nkR1kFcPQycioWaDQCcoYVQ4H0bzbCRPgUYJsRZYgFTr8FNpc0X5ElZxUlMDMmKVQkXv.kL0E0bWMUbFYFMS4TTqMzSLclXi4zS3cmPBkSUXkGVSkiY0j1RU81c3gTQ5EFMugDRzISXGkkZCcmM1DGTWQiP031Y3bVLlwzLAMTdBQ2M2AWQvLmSzMVVXYVTMYUXGYDZvf0LvHzQtPSa3nWNjclcJESYpgkXtPzJSAiQZ8zLLMmQswjQ4kDdAA2Z3YmP4zFL4MkcwTyLPsFSLQ1UXMkREkFTrgjS43DdvImVAEEdwgUdTA0cKMTYnkkS3HTdI8VSYYySWwVX1rxaKUmV4TSUNYScPQEN0.UdwHUbLEWcWITVvj1R0DEZw.2aFYCTloWLnU2XIgmQKQWSHMDdtjUYiUURkwjKJ4zcynDVA4RYxgmVv4xP0DkPAUVctbyPUMycoYFZgc2XZYyaiYjdSMFcEMyLyUUcj4VVxTkMrQ1Qvo0atsxbSwFUPYyTSAiVAI2bYMWL2oWXVEVdyLyQ2TiSwETUCQSNikmVZIVQzLjSZICR0XyZO0FNzczZRMzbHAWXZMCYRACSUQSU3bGLDYTR1UzR4gCdXcDLz.GQqMzJNgkKGYSZXAmMzXTNrM0bybmYOEUd3.yZLcFbwEFatI1RzwlST0VSwQTMDQyPxDSTpgjTqEWZEQzRhYiVTsDaHkzMLk1cqHVd3jkQ1PERnIiSrIlPrEUQYIFYgE2RDMkcuUkc1TmR13xJGMlPRkVUFEyU4flaIgUSNQEZvEVRsk1ZwjFMIQ1bRIDdIkGbw0TSX4DcwPUb5Q0ZPczXynkKnUzaZIWXMkDM2IlMEIFS4HTYrECU5oURScUM0o2S3j0MqTWYBYGSP4xbyDiRnYiQS4zZ1nUaskWMy4FUnIkbYsTUxUybRUSbhIDQvgFYIEkaxMWTwP2bMICVZgVbuwjR5YFQzv1SVYWU5YVVUUyTrcFcwMWY0L1U0jzRtsRNMciPhEGSGUULzjVcTkUL2jGbhUkdWMiUsEkV1PSQGMyQ3IWYJgEQ0PVaVYyYzH2YtQGdKEzM2XzSI8zUCMCQOQ1LhgEL1PCVkY0cYY2U5wlY3YiKusTa3kSZjshR4DSZwAiUj4Fbok0X1H0ZMsFZBMVR0oTXqXlb1glRMgTTusVXoYWaTgjdGczUwYGNBk2MPomP1MmX1USZWo0TxHkTpIDbwfkcqgjSIMSV4ckY071aqwVXXcjVvoWQNMmZhQ1ax7lS1wDU0sVcDAiRsgCU1MVVMIzQPMzXwHTdOcTUqTUcTkVP3A0MLAidiQzcsQFaSACLzAkRlEiSAMzMP4VXrYCdvM0StcyQBcEQ3USV0HVR1nlSwfVT241UhETblQkRmcEaZU2Q5ElcrMWd2HmZ3QDSukCLynVUgwVYQEidkUCMYcCTWMyZI8lT5gzPzIWdhMmPZACVEMUdzL2MNcUXNAUat4jVOITZMElZjokK4ITMtQic1cSaKcCYwYiMSUELZw1bLE1TCAEM4nFbtA0ZRUEUzXiZYolL2kEZwg2ZCYkMnYlbvYGQhQlXxcWaxw1PlMid5sDYKMTZBQFSBQ0UNUjTxIVVJU0JIkWZYQ2XAQiUNIWSqLGS4vFcToFVAEyJwDkQoUDZyLCTsoGRjoFU2TTRYIkQp0DdkQ0bUA0PKUGMXUmUUcGY4omTMwTPO8TLOAmcqAmKMgCRuglbUYCaEgzPigmSmMiQwL1XEQidA0DLKgUbm8DRxM0c4kGQWcjU3o0RXEyPtoTbqD1Zy0VVtglVCE0auUVNC4TXtMia4LVNvszLs4xXqISZswFctEGQtPSaTQFUtLGaWoja3AGS2PiLmglXzECNYczTRcjdvszJUkEQqUDNKcWZzUVPBMzQQkiPtXGNsUFV4AycTYkMAYWZuAid5kyUKIVMHYEVx.Wd23xaVAkXy8DM1kzMHIycFwDdlkibQUma3rhcQgGaYUSMwb1MtEDLAA0SFgVaqcSPTMGNxwTapkFTK4hbGUiVVMkUTUWVLQzUU4VYwcWYScUXz4TcQIkXmUlZAgDavEFcynVawnzXQo0Z0EGM3jiKMEyYTwlL2.mcPkkZwc0cZQWb1TGcSklXBoVP3P2MHcEL3zjPy3zbwX1aV8FZEM2RCIzSSczZVwVZmYldJ8Vb1I2MYw1TqnWbtIEYQkST1cSdt.kQysBMIwjUvnzTDojYp4BQYImTBMUUCQycFgEUCsTTp41U3z1YWAGbFMWXIASdQACNMcDU43TNxPkZrcjaUYUVIkkTRcjPuElPMUlXIUFaEU1YD0TbVAkQqozc3jTV2rBcyL1PzsTXqXTLQIySyHlYFkmavUENowTSkUkKvrFT3M1bpUkLZImKBIjPtIyZJcDZX0lLQUFcU8zTM0zMHs1J4PUcgkELSU0XWojSFk0aqIlVxjCaNwFQUgUU37Ta2c0SxT0JHgjZCUTTGo1UjQmLDkkdYkkKIY2Tq4FTVwlSvj2RocSUjMTTAUlQEA2cx7TXQIWTnomZwbiKDETc5cjdt7jRDACLmMmY0jzRqnkRTUDawAkblQkLIcGczfGVxDGYrImSzkCc1wjb40jMMwzRoQVQlgzLiMGR2bkQxQ2MoECaG0FcMckYPICY0clMzQyLgM1TsclKF8lS3s1bIcWUJISbvPUSo4hZqX2X4LyPIgzb0fFLpgGM5MyQoM2bu4RZCwjQrkiZFIjK3nGT3YTRq4zMnsBaWUUVEQUZoQCQvXmZAAEZuQWX38VTtkTUygGMG4FS37DZSslb1TldPUmXTEGY3HyPCgzYzv1aBMDa18jZqHldtX1YKQCVVMjLwkFc5o0LygCSzbDarsVVzIyLQgWaUcFYyY1axbkS0gDQ4UESjAyRvjyYGIzLrcUS4TWdJYmakgyP3ojVSgid5UCRZoWVxX0S0j1SwMGVzUEN5kzZ4.SdIwTbhkVSxEES1AWSyrRdXIVUUIGUQIUVHgTRqkCRPs1bHUEU0ckXpszUNgkRr4hTYk0Q0oTSBkGcOczJ37jcGEzMx81ZgcWcDQmavjFQZQGSzbSdGIiUUMGcikVYHQVSKcCSKM0YxQVQq8FZYkiXEMWPSsjRxHycTA0cuoDdsETNVUmYmMFSrQjZAk1b5IlQ0MCVKM2bmkEayHUV4TWSpMUQXgVb2biMJICcyMiayMzP3.UM3.WMsYybsETVB4FSnYGZ3bVa1wFM4rBZVYCcow1PVAUZxMTXTMFVqLiUCEjRNUiLVsFQyUWNRQlVV81b1kTdvoDdnQiQiYFUN41Sps1TDECa5ICLCAybDkWMIMTXwnVXtvlXtgGTyACNMEUVwTkY2ojYxQGMIozJv.GQKUjPMMlawQzcPshQwU1SlwlUxPGYC0zMN4zX1sTa3sBdF4DSHAUaOUlY0YVcn4DVyPFTGIWdLEmVwP2XNAWSDUTYUkmU5cDV04zatnETCE0RRMVXxT0SHMFUGYjZhMmT1sRXVIGaoA0QqT1YVkjc2jCYxPkXloENNQCRjc1YmklVyLUVqTDbp4laH0lRxHlVCwFYAMictPzR5AkMBcGMwolPQEUcDQibyIVZCEzZukVRpclTUwFTqHUQtQiRz7VMpkzZqEmKiUSYtoVTynzcuEkUNQ1MZACTzjkR4IybVcSVCUTPEgDV0YDY101YroGbsclaFIlQAMiYlMEY44VTokCN0MVXmckRpYETPMyJHg0b3TFSkUWX1bDNKolVIEyRwHmZtnmMFMjKZE2Y371UVgDc1MyP3gTMloFbF81bwgjcgYWQSoDLuUWTwEiMvnUNlUkcPciX4.yTDcGaQQWNYIDbPAySpYyYGQiURkVPxc2Z4QSSio1RBczQVgTaEM0PWYVaJMSdO4lbxYEVVsRdU4jbwrFRybSXM4RU43VQxjiV2LDR4TlTTgENMojVGwjLXMyavYGZoAUNGUEcz3zLKshaNUja5EVXKIyTso2Y4LjTL4xJU8DSGYlXScGUo4FRWIlZ2EUZLIVXJokPLw1Ry3jRNYiRUYDa2.yUnsTUJUDNUcEaP0lXDEFRXolPYoWbnASUIgGVjMjSKAGYoczZ2LiTy.0UzQzbUo1LhgiZFgyMuYlcA4TVjASPikUYYMFQociMLUmUs8jVpYjdOIjREA2TKoFLCMDd1wTYHgUNOsxPZ4BVJEiXTUSR4EVLpcDYNQjb5QzZJczPxoUMwXjSFkUVygkS1wVTtbENMM1YysBVzsxYQkkM1PGVCwVQwEzPm8jaQMWcZg2R03VTFwlXB4xMFc0UJ8TXxH1M3IlLAomM5EVbj41TDI0PIYEV4vlUVoEVtckdi8VRLkVSpEybHUmZy3RdyDEVJ4BZlI0UwrTLZsxJtXDYRQFUH0VNmIjdzQUXtMlUYoFLyHkcLkCRmIDNqT2JEYDTAk2c4EmR00DdI4RTCgjPp0lSrQyJPYDb4Lmcv31Mq3DcCMyMv0TTH4xPS4xU3bVdNk2Qw4DVV4zcpklLl4FRTYzPvQmU2gCM5I1blshZPk1LsAkLqYiaqDWV4LDTsUWP2fSUTcTLRkSPE8lPwcCTAUGLvY0QFMTLqEWRX81ckYVQqbiZFgWPigCQJIjKLMUPmMjaybGLykjR1kUN3YjVBElR0DkSzE0RxQmVjYUUF0VN5wTZvPGcxXDduYkcZEGSIc0ZwHCUysVcvcSX4AmRJQjUhMUZBA2YYQzRHQmLAIyRgsTazgFSiMSVushKDwzLEISUKUzXLkjZ2EkYWMzLvPCNsEzZ0U1biQid2IDcZcUZiQTN1jjR3wDcSo1M0rDQ3bEdBgmLigjcmE1JyM0QvcTYB4xXQ8DcusFMIcict4zRtgkMXciTgAGas4DMIwjR2IVVsUVRhMzUyEmQs4VVN4jQMUmd2.0QZ8Vdq7FLPc1QCUkQx0TczbFSvEVMGYWb3cDTvUTLyTiLBASZgImbnkCcvoVLmklUO0TT3nzUL4jTtElKqT0ZMESYncCUgQ0T44jQsk0YYYDYmUSVtUibqcySkI0U3XFbsQDayXVbMgkViMiPqDDNqP2P0nWaHsDNqbkQ0Pka4sFUlc0LBAmXvszZDMWQSwDbD4hc1T1ZlkWdq7DUO4DNGIURw.UTswlQWoGdvzVNPEGL2vzUZkELioDR5YGQqcWdJEWMIMVd0vFSBsDcT4BQIIzayASUGEiXqUGRWgDQIYUQBIEdmYicX8jLGUEaN4hLxsTawv1YiwVLvTSayjkTwQGaznWdWYScFQldhozJqbCamcmU2wVdq.yLVIlVSYzSiE0azU1XBYWbPo1a54TXB4FaLsRSqgCbNkjaVoDVZMmLGs1Y1EmdikjUN0lXznlcpQjSyfDMjkjctDURtnkRUoFctzVaQEmLj81XkcmRYsTaqfmU4HiREgjXHYTTDgWMIcVUgMlZoEUV40lMTQjXSsjdgsDT2XlbyTkKoYSZJ4BZEQFdHIVMLE0QkcELOMFTqHWa3DGVFEVXksVcFI0YvDSaNYTZzQyTn4FYDkCV0YGV14xQTYySjYmUAAiLvElX4bzXWQ1MPEUZhkDavnzZQMEb0LUbVYkMoESQwXiRPYla5ESQxHzSvA0MOIyLS4BQFQidXwlaqPld1vDMiECQp4VXGA0bRgkTjAUdF4BYxLGQYwDMkcSRUESMJkDSWkSVYkTcGMzMOMzbXQTLHQ0R1EEZAU0QyAyX1nTMNsjYAczTY4VPzDEYDsRY4ECcgEUUSM2PqUmQZI2LF0zLPYDVrEGZDo1SAEkVzPVTxHibmYWPoc2QkI1PNIVRz0VLKEmZWkUQnklKY0zMREkPlMUaSUmcL4TPigkRT4RXtYzRiM2L1EVdvcSbsEWT2XCN2QUa4giMDUEZNMFcmoFSjA0cQEjPUklcAUCZ2UVVBczYxjGUwEFY5MSQ4QVYUUjcioFQCIiTtASdXQ0J1T1JSElSTM1czjUcK4TRk41cVQUVCcGNh4zMn4VcvIVMmQCZJcTQPYGd5cFTqIUYu4BZwHDbyXCZkgmclg1XogyPFkFQxrRd1U0Zl8FcKQFVPsjQhkESuUGT2A0c2gWZgEkcqIGVkwVa4.0bxICdPIGYm0jS3kWRVwlSNEmaAYiQWYjVW4hYsMDczDlZoQlSH0jZFw1XGIVVhsxUWMVct7VM23DaoolbFQTN4wlUnAmUEYyQu8Fc0MzU3EGUygSYOMUQHYzPggGRy8FYRUGSQU1Ywj0Rtbic4HGYzYCaTMjbpI1U1jWYSMSS1jUSkUiM4UVTKwjUN4BU1Q2RyLDcEY2X3j2PsEkYFsxLAEmUQEWUZMWaHYiVZUybwHUcjMDTWUTMVYWbYgWYlgyJDIkTuwTSsIVR0UjYscCcWMlKMESRgkjKRE0LTklVsgTUlQSQJAENRMTcZk0J2LVZO0zPVY2LJMiQtD0PVIyaJIDRtHlZ1gFbXI2JvEEVnQWQNI0PsgWPw4VZPAWctvjYiI1PqLFaoMSdLY2TvTjPpciS5cTULg1SZIUMU0DUVMWNJ0DYVQiXoMVcybTTnMWL0ASaCgSMg4FTAYTVz4jaiAiUrkVVBIESZIlMSciYVc0LNkWaFgTaXgUdVsxL4TGTPc1TsESMNsDUwTzYG8lU43Vb3YGLwAmaQASNkkUVJQSME01S34FLDQmKSo2aTMGStEWPAoldAoWZig1U0H2MY0TSHcWTrkUaq4VaxrTR3PWZpEUQwXTaLUFb1cCU2czazEEZyUmXmglV1bjUFETbvfGauYGUxLkdukWdAcTPVozLjgzYkomKynmcnslKP0DZOUERHY0LNQ0XvnEaRk2UrE0Lwk1ZzUDcCMybDUlRtPiQmc2JJMmZCE2PUkTM2jGa2PVYJkkXHUSPvzzUvsRUJsRROUVPEISc4AETxg2YFgDTwvjc1ckdUcyaUI0QkcTbPIjRvfySSomX5gCcqQ0PEo2LJgDdisBZy0jXLMycqwTavDjZ5sRaRUTaUUlUB4xST4zSSEWdvfSVswVb0AGUNwzLSIzRu4lXLIWM5cmRYcSajomdJI0RswlKrwldDkCay81LDgVMxLFbwr1XHo2YsUWbqrlTnUVaXEmUtoWS4oWNyYGczY0MqgSaBczYwgyU20VUtXDdGsTZOwVaSEDVBomU2HUXY4xYjQCQrU1cYEUdyHTNnkWXOgiT2HCUxYkT0EWdtE2Lqk0Y1EGaHgiaUUkMYkGbUQkPHgGM0UGdkolZUgCURM1bRkVdvLjTzcSa5IFY2sRaRshRsIDU4LEbwkERybyT4DEVvkDVsACLFIkUCcmRPMmSGYENMACcKgUZnETPPolT0EjYXw1JUwlRwYlZpMyMRMiUx.kQPckV1jWPSUFS4j1JkIiY2LWMVcWSwD0JTY1bZM2QtjVPNEWbyb2MrICMUwzbvklczz1LvvVRkEjTRgDSJE1QokERsY2avfyQS0lXVYSbxfScwkSXlgzPQcjR2DCL1bUY1wzQo8jS4fUczoER34RN2.mSHgyXoglLqIFL14lV28VNrc0ZUszbZ0zJtXzYXMlbIECTxHCU0IScZIFcOclShc0MDI0Xyb1JogycBgSZ2QmKEIlPPYmS5ETXqslMXIjdBIFawoVT0k0MtzVPxHUPrMVV4bDa1kEaDIWMzUVVskUPsUUa1UCLKQjUsI1PNYDbskyLoUSbncjZtgjSEIGbWUTQw.2Zw7DdCAiMAMkVQQyQ14VazI1JIgjKYwlR2oULEITNFYjUJgVbuIzZDkGQ3MiTGQyXP0zQXQiK4gyLAECNvrhLSUCN4DyYSQ2J0TzLLYyQvIjcUcSZxUFZUMyT1fzUN8jcjUUL5kWQOUTZHsDLoIVVHkyT2UDQR01ZpEUShUWcEYmTyEkLyYGUmoFLxb2XMETXZM2avYTYWUiMk0TRpk2QgoWdzsxUP0TMUcTQPYlP1Y0ZzXGTrMjdgIUMYklK1sxZ3LWQzAUdXglTCMDSlQDdmEmKP8FQU0DdC8TdGk0R4HkLhIWbuESZWQGS4cCRU0DclcmZzLFUTg2M2LSZzMWbT0jTFYERV0lUicWV2E0SsojZQMTbQMlUPEUZlclYxUzaMo1agciL3.yYEc2MOcyUzX0RnUFYxkFa5EESOQTaYkTLo01P2HTPCciLhgSZQAmXpUzJTs1Zso0SwQ1MZQVN0IjUv4xb5o2MKIzTFUWcUUVdg4hdWQTcZ8lKEMmbHI0cpUmMFYWSjciZWomUscEaJQVL4LUMPg1QRImLhsDQAAGUyDCQvETdtUDbLQDdtA2RsUkUxDDaMYiUzE1Js4VSxo2Jjg2ZPkibxP1aDA0aNMWPyXUNQMWMKQSQhMlQKQWTmgldUcVMoMVXwgCSogDMmIlPSMzTKQ1ZE4zZtv1ai81UGMVcgQld23hQPQTXAAGbzjSXyfEcCYkdGYzQIgFVE8VZBslPwDELkAUdxoDMjM2LVoFdogVZ1gjK5A2SZYDY1UGM5AEdycCMvzzZ3MGNwgia3wDdPgCRrA0JssVXTgyUyn1ZCETVtLWTDYTc4flYyYDdhkzat4FS0vFUWkVR1LiUQgyYUAiMHoVUAkjMJgUdNc2XQkEanMUVtIyX0EGLXUVMEkjd4PSV5Y1PNcCV0MTXr0lTlEFVSMFbD4Rb0LjchQCMPQzJ3c2XFM0YHs1PzkmXlQCUJkjYmEmMwH2RMQWUu41Jp8lPW8TTAo0PkcyJwjSLxcCcqICMmMyJQkETgQ2PhkkLDEGRFsxRR8DRsQiU1TEZ4UWQComTiMkQqITSEMEb1XVcXMETFwVYVkkLp8jMFoVTu4RTugEN2EUMSQENgIkQvbyTkASMpUlPqLDRvk1MIwFb1X1SwDjVykzQHIVTh0lVHEFRvIUVKcGS5IVPJUSMw.WaislU3cWTqYzbKMSapcWUvnFU0UmV4DTSDEmMxTCYzg2PCQlR1vVNq8zb1PEU2sRTlMCS4nGNvkWdNYDV3MSPoYkU1PUVrMTbygmU04FbzPkPyUCMFcyTznWPDAkLSojS2kSYS4jSroTYLUmRPcSZqsxbqHWZw3RaZIkPFUVb04xT5QWTy71TGUDS50VYhcVbAQGLQcVVQ4DURgmTNQmQrgEMt41TIgkaJUEYxkiLV4lTVQCTYkTbPYlaPEjPQIyQSg2MFUkd1c1aQICVBE1ZFESXzYTVwshR4A2Z1UlVU4RdjgicwjyLZshKJo2RVAiTtsTZqYGS4wFUGgCZCU2bVokMoEmaN0VVqE2RHgmUtTlcJcTViE2PxrTYhgzX2n2SzvzJH4RSlk2ZDAWYQQULtfFQ1QmYhwFVOElYLoDT2MST0jTNGECRqU1JggUNEUVZEAUP37zTrQFRw01Y04RZDwldQE0U3vDSVQWLlQyJCMkcZcyPKMVL5YCVPYlTyPWbtPUM3QjRAolXTIUbyTjYCY1PqYyQXY1Q0g1btU2RukFRyXVTzjkUgUzTyUDZCYES4bUcmQza2IiTYMVLrMUVZkTLUASLhQiTg4jQUQiKZgCQ2QVLko0UYsxSPozQY0VUZYyXrk2LO4jQMYWPooGZwzFSyLCQ0DmM1EVQ3.iPKkzY54zJqvVTPcEdvsBNNMSNvH1cPA2YZcTMkcFRnU2ShMjP4kGY3glLsYSPAYFQTYFUHMVY0DWdNkSS1TjTxLVUD4xcxkTSv.yS241ZNMzUwIkUygTZRkkSyzzRoQCVRUDMvgURqUUTSEEczsFcokmT2MzRDkkVQgjP38lRz81ZuEWaMUSbloUSnQzalw1PAQlMOMCc2YVdxo1b5EGcuIWLxgUYYYGbvASTJAiSKI2bDMGY3TVLTISUYwjMTQUNnMyQnMUPD0zJqEVUX81JxY0ULsFc0s1L5YUcxsFRHIyLmgSbqkCSAUDM1vjUNojUj4BbWESVBAWMVoEasY2aIk1M2nzLvcGSwcSXvTmPXsBTSslPtrBMvLkUrw1cEUSLEUCVuQUT4wFSWkUa28lRgkkUxkDNUQ2R1slMQozJYo2MzQVaLgEdQ8FSQsVbJIESyIEUTMDbg4DUG0VQtYDR2.GbRUiLm8DdVgSYoUVbOYDRA4lMIMVajY0QuI0MR8jcwsDdWIWZEklQNkCLYYyaGIWVy0TZukCLCcERm4zMCUVdkY0QsQDTVAUTtTkc4bmMFwlZzMyMOgVNCcDUtEyUsgzaRcycqP0Tq4jLi4DaR0lXyQTNxLldvHUSZU0PEA0SS0VY2kWUBozS44BbsYyavsFd0gyQWIWbCQVb5QFR5gSRkQWatcGMuwzYDk0cxL1clISbHcjdqc2SMUWc2fUYCMyU3EiLxwjZNkSZ3szaxcmUDgmQvnGVxrDTGIyXEU2bYo1UZ0VXmYUXIcyaVMEYkgSLSEDbCkEYiUkR0bGVkQidhEGYqH1LxblcGg1ZjkSSToTbXECV5kmK4fETZIGb1bVcYECRE4TaGMybtXCcq7zZmgDTxfEVy3lSRgTMPsDb34jSr4haSMVPoQkT2sRLgcEYjE0ZzgTMqPUMvnVRVQVPusTUScmTKclbtv1JA01Xsg0XhgiMu8DRmAmcrISU2gkZZQmMsIzYHAkLn4RM0vVPWIyTxr1XUU0LoEUVtDSXwEzciAEdDs1UEo2QLU0Sj4jVuUVR0LFQXM2Qo4BRvvDUUIDLH0FL4rVRGsVLG4lRTU2PiE2cgciSyn0JQkUaNQmRGgDMBwVVw8FcJUWbAokQGM2MgIGbso2MEwjd1nkYUMmaqoGb3TUY4oWZq3Td1Q2LBkFMGMlLxjSVzshQuUiR3sTYkE0RWMWVOkCRwojdyf0PgIiRz41aWgEMmo0azUlSrMGYqjCcUEyQscUbQEUNtoEQvzDawQVXFIWXwXlTEUiS4XEZyw1JWMVMCYFMrcGU4n2YwDyXAoDQhIiY0XjQZo1TNIyXgkCVhQkPzvDM1k0XIgzXWUlXwIEb1DEcqkkZBwFM2MjRxLDaocyZ2LmQMEEUjQmLlYVcVslaBUmZqHkaV4RSy0DYqQSROoFRRA2UxDzXQIFcIMGdjYybK81Q2YTcTYSTkkzTJAUYPECVtcDdssDT4YUQSYGdvPkcQkUQggEUHszX4P2TCo0TCUFZzEUczXDdxo0Tw3zUIszZSIzRhM0ZAY1UznTaqz1XL4jd4jSdwbiaw0jbKIEZZozYqYiPxTTXocGRZ8ldmM0UXIiUwEiYFMUSmISaDMkYVg2QwDTbGM1UjszJgcyL2bkXM4BVAc0bTk1c5Q1YqMFT3X1RjQEZsIVV1ckURMDQyjjSMg2RRESZTMWZYsTdAc1cYECYqI0YlEScvn1JQYkUtcmRuImMqEVNEETcHIlVIUkLzY2a3TiVtTiRswjdkojSB0TXvsxZFUCQv.GY3kUbCQzMgM2PxsBbS0jKWMjUVQyQqHTdQQyXwPSdNE1LNMTNOYyZqfyY4nDSKEEdSEjMAcUZhMid5sBdhkkdUU2REUWNOQ1YPsjaHEiLQIURoIzRrQGYIsRLIk2JUckQ3.SNKo2RSsDbTEjb3cDUyTlc4HiQX8DY3oWdvYmXwMjKuIyQ3jVb40lYl4TakElYuolRvMEQ0njX3XTTXQVSJMVa3LEZqjEcAQjSiczXZY2Y0cjTXUyXKgTd0DmVk81YvkUP3T2PzMlLpUUUroDUncWXSU0Q2fiU3jWNGwjS1QzPngVaCIFMjQVQKYyY3LFcwnUMH0zY3MVPiQic5gmUmMTaFAURhYzUxXVZpUjUL81ayEkPCMjRyQiaLsDbMgFavL1cvoWdCEyR2vVMtAUcgYmQvvlKXoFdjYiQXcUTpMkVmMUdqLWS1njK1XTXQUSQmMzY1XCS4bSNPIFdk4VSx.iRSESUrgCQzLjYUoWZQYFUgQmKl81JxcFdJYiY1TDL4jTMZMGRtvTQUkCYoslMxHVXgsjYxo0Qp4FQvg2Pj8jcwoTdGklX2DTLQIWTwMEQsUDZUEmbJYkPog2JL0TS0I2ZUQGQy31aTMFMnUCc1H2UpEDQUESUwH2cMc2cQQFStEzczH0XkomRvj0QDwTRC0TNXgmK3UjM4ImXvfTbgACYVMGMqESdw4zYpAET2TzatXlVts1U2.WUzXmYoo2c14DSs0TXNoUaHoFd0T0UjkGVvUSXvclSHQSP0YDTuIEaLIGYngCSXQ0UGYETlIGQh4jTNk1RLkjMv4DUyHUPyoGQk01JiUSaYcFZN0zXociTCUkKOUyc3Yja0flahEjKtIjPFYFbqHiTvU2J5QUctUVU3YDN2I2TJgTYkwVSxkWLlIGa2TWV2X1PtPGT4DUS4kVYWQSMh8DMBg2X3fzcvjSP4DjUuIjUHIDMw8zXJsRZRcjUKI2JDYUYnMGckE2TTsDNIgmYEMybhM1aMglUos1YUUjRY4BMuoUVPMUQJYCNO4Rbx0FNokSawnUcNYULOYyJGQ0JOIjdnU2TSYCVwE1biMDUzbUPsYkaDcWcmokVznkLBg1QyLiRzoFY1b2bUwTQOIjQIQ1T04zZxUDd3UFSVciakkCYvAiLGgzUQYzR3w1Rio1Xmk1RmokMzf2JUUzPw0lXxgCL1kiKQEEUmoVMxoWXzIWcvcid4.yUiAEUwTTUNEjXmoVTtHWd0fiR0jiLlcjR2TTQqolcQUETnQDayYkLL0DMXEmZW8TTucjUXk0LVMVdnQEdMQUUmkzUWEWSxjSPtH0bkQzUyDVbZYEcvoGTScSU2gSXis1a3rxLpkWaCsVMBAmYgQkdtcDbrUkcDUmaQM2ZZE1Mt.0cPcTcr4TTuQyUvkmdFoWZxwTXCAGdQojMp8zZwYSTwvFc14jbPUyRWIjdjAEVkYkYQ4VQxTjTjIlSvDiKlklYznDSFMGZnQ0bjIWN0.2L3TiYq81TqIzXz4BQ2M0PvnVUkg1auYmM5gDTxM0TskFQRQkLxTWZIECQn4zUHE0MPwFRCEiL3Y0UqnEZYMWbDIEZsQUPTgWby.CREciTSMGQwkSZ271RHEjdqTCbqsDLjcUYr0lbznUV1HTYQkUQRoVTigGL5oVYwbCcqI0aCoFRPc0PIgmTY0TY5E1XJQzZQclXsQibz8VQlwDLJ4BLVo2PAokZtLlSQYFVtsVa2sjazMDYvTTZtsVRDglaoQ2ZuI2ZtDESyfkdvHzMUQSYBkibsoVQAcmZxTWRCASZFIiSoQETTkWdUMDUx7jPhw1PwzjZyXWVFcyJmUzX2bWTq.CcqElVXgmaSImSSEGQFgWdwIEZkclcqQ0L3gDN5IiZ0HTMs8jVok2P3XDZ0LDQSUjX2bmPyMlSwY2PzHjQRQWNjUmZvM2Xw.WPScVSqL2c0gWU2UjKyAiZjoDM3TGT5w1L3MmLH4hZvLCRoMlZ1fDSHgTd5QkbKgjMB0VMyYTcs41LTQ1aisRMXEmXtTkRNMjTJQUYNE0LyUTQ38lanEDMOUDdUIWbBU1T3X2avXyZ4XSR3MUdAwTZkEyLKo1bZEyUwjmXBUkSQE1bwrhYkEWSJciSFYGdDYWNFomVzIFcIgyLwQyRqcGNgESTtDUUyHWan4FcD8TX1cTNqYmS1IidjIFcP0jZgMiaxTFc5UEYVkELnUCat8zJBUTYZU0TD8lZKACML41agk1MtXzQwPUXXsjXZMVTAIEdFMULWE1QMEVLFMzRH4lVykFbYoFUEgzQyEUL2gEU03lXwgVUyM1PFQEL5ITQqoVd0TDUisTcFo0S1k1T1jkStUiVlQCQ2ETY4oULNgCMosTT23jSvnjXx4zZsQGcpQkdkokZCY0Qz0jULQDNEYVL4nVQnkiSPcVZtHzP2YkPPsldgkFcBoUN4cETQokdBUkb3n0YYkCbiEENWQVVxjmbXUiUqYlPmY1T2k2MJwDMjc2XXQCVGEjVqsBUqnzXzPSQDcCZsY1LxjlUokiZ1EmMvEVazblbowzYpUDLkgyMNYVTxozc1Y2XhYlZXI0LuoWTqsDRZIVZyMid2AyPSoTMyoDNSgVNHYVcDYmYlcES5ckKrcVRC8jTYMDTPUUSxnjXAEVSxcVMkk0LDcicyUETZckTrk2PokVUmMEMAkCcngCTynDLkszQuoWTRQ2PTYkT1T0MqYVTxXUUmYUa3bDUKclR1kSVwz1Qt.SMyfWZW4hdDcSPv41P2HSVSEFYDMyQYAGaRoDMmYCVFgDTrAWazIVYwUmMz7DcXYWSWs1U33RUNgUc2nGLBkmZu8VMNYVd3wlR0HjPrYmTvrxQ33zSvgSPAciULYmMvsTZhASc4jVcxklYNUlaZMmTDcTLDQkc3bSUIM2RgImR2s1cLMWVNEGSRs1SycDSygDSKEDQqkVdRcjLt4BLM0zcgQSRpEUUxE0XKkmTWM0SrY0YvHzZngDYgc2TXMWdOgCV0v1Tmk0atQWXnMlSIsFLwH2a4PzQ0wzboQGaXQ1QEUTMkQzUDoTcycSXzjDYpkTVAslTjcyUUQUR0bTaPgWLlUVLxslcxgkYV0DThI2MqQVNgMGVvElcy4ha3gmdo4hcNMjMAE2Sr8jKF4hMHcTQmkWcnUjYNkUVCEEdpgVaWAELWYFdTgUdtUERPwDcRQ2aIMVYIQUU2XDNTEmSMIFbgIiRFgSZ3I0LzvDcsQVdwUyc3IGZXQlQM4xPqUURAcyURElU0fWM3MmdsMUSNUSSt3hYzHjXGEELZYjY1XWRBAkXS4jbBQTUN8FcPMlQHUGMSYzUgAmTnMWYCcTNwQiYz3DTyj1YJYlUjEUNGEVPzwldy7FQQYmLXshbNITVAMULYEiMiUWNNM1Mz.ycMszSKYiassjaXMmRvoUPJIVcvPiaC4FYkUlcJoma5o0bIcjZ2jkQyYWRS0DUBQWUs4lQS8VRGAidtsxU0nUNhEDdoQCTEgEbFsjPxHzZNkWL3Ijagk1QzAWVgMGNtYjKJEVQkEDM3Pkd0jzcXcGdVEzX5slYp81TosBRA4hRmcTbzYkLmwlPLMjdMgmTscCUWomLwUkL4sBV2gFU3bUQEAiUxHlZmkUQpAWct7lclkFSnQiaqTyQJM2UnckbxokKn0TLwYFctAEVR0TSqQjQIISLwXichQkPwQTYZQWcxHyUJ8TTIEGbCoUQWEjaNU2R1vTT0wVXg4DTYglSB8FZNoTPwrhLVYGUqwVUyYkZEM0RNc2TPcmL2EkS40Faz8jPhUjRL01Qxj0LDojKDgkKVYCNTEWcxsBbRsjYgcEQQsRYzQyTzjmY0EySY8VbwPWTu0javkjPUUELxgUNSQjPEokYFo2P2v1U3UFcUEzbiolM1AUSvYjZuI2cSw1QngiMIciRGY1QTIkZzoTZl4VR2.kRNQUYYMlRTE0b2kUP0rFQW0Vd2P2LsImbtXDbMUVZE0DYw8TQCgGYCcDNDozMTMCVpMmLKgmaDI1UygSYtDFd2YCdRUzJWcUSpI1JZMiZU41YAQWQAI2XOUlX2.0UGMjV2TyUyXkVTwzJpgGN5g1YAQST17VX1YzTxXlLzcDN5ASYMY0Lt0jcCgDY1ESQznVawnTamElbFkGZhYVdAkSYEEiRnsRNtc2TB4RSqQGMsQGYyPVUnEidNYjMlsDTJwDMHcmSYMUaF0jQCI2RwgScI0zbucWZq8DdAcGUREWYJUFTpg0RIIyPogmYzTyQtEGQvPiXwoEL2Ikcrg2MkckdnMid2g0SMIUcBkyPHgibH4TPs0TcFYWXk8FSLgTXRsRaWozb1QWZwUyYwcTV1kGZsoESXkTPDcmUvTlXLEUVrgiTqc1ZzfWZwjkVmUURC8lQIcVQiojPhgUc2HUTK4jdRITbWY1PygUMHIWXlMyMHEVRQIiZxbUbFM2PiY1XNQWb3MkSWUyJpkSVFwDbsI1bColMwkyL13lc2slVWczT3o1JoIlZDgEQtXUdBEGT1.0RGkFZ4cVb23RNtMGR2cCa2HSZQI0bYYUYhYjL0HDT1gyL1fGQCgVNLIiL1DGdjQkalckXREyYLIDLVcGThcCSA4Fc2cFYuMkLpoGdRU1SociVyDSSVkkQxfGYVUVN3DjSI0jZ0A0Qp4hXTc0b2sRTIgzJr8jT23VZhkSb0PFUygUdvIyPIg0Lk4xM1DVZQYERzX1SvciV1QVNIYGbVYiMLgFVuoEN0PGbynjRmIjKSc2JAEGMLkDd0o2SL8TN0gzYzQlKWo2PRkCNSMVXVgFbpkyYxM0cVUGbyXSVvfCdJMmTLIGLt4BZgUyMznVPzLyQPgWM1QDMuIWXMoVTqkjM5IGRkU1MkMEM3MyRYMyUnYzL2U1LPMFUu8VXYgkXQsjR4M0SIYiTCoVY0LCNIsla1zFUTgmRoc0X1DUV4LVM5IzQ1UCdAoUMIc0J3IGaQkTTuUWPqjkVGQmL1QWYgU2P03jLMIGVGIicwwzbqfmZEcycZMkdBACSpgzJJcGQv.2aqLSM2YVUrcFSv.iMOYmP3MzYNg0MiYURHUGL3QTVjsVQGY2b10TQJkjZKcFcnACa0TldwclM4PFM3vjcRAEUPUUcnI2RvcTdGMjY0Y2Ml0DR4bzcxfmYZkUUUMmZp4RSY4DY0njS0DCTtczXsA0U1c0PNM2MVEzJKQlU23ja4YVcAU0TKwFS2TjSxQibRkUd0nlUOQyRrYDbLozcJgkKRMyJQkiYDkEUW0DcukmatYDRtgSVVIFMxHkXucGMjIGcUgFYDcmdykUdVsFalomVXkDVKcGS00zTZAmM4f2b0HlcsEFRhYmVpgUaQ8Da3jmYqHUbSMVTmglPuwVZzbSUtfScQUVcqXGcysTQwLSVg4VdzgTdEcCM0TWRqcSdJQmMBwlVG41QAECQ2DUc5YzQD4hStAmPRklTFYkKz3zLGUkKSETLnQ0UG4xStXVaNQjKQcURMglRlgzZPI0MpsBYyokakUTTzcFTAcmcqwlVAIlZrEUQiYTatDUbrEULtgkMCQDaFk1agMlYnYGSyTySnAmQ0cFTOEVSy3xRgUSah4jQpcUPLkkZkIVRTYzLyg1QOgkZtslL3gSMvQiZZQ1ajkTdLY1bWgTZ3fGbBkyTvLidKQjaGUEQLgTXuYENqDWUCIiMyTFQPYyLYcVLxQ1bQMmT3TiLoIjbpwDZzIiKqgVQmcWNnM1aV8VTyMkP4szZpolbM4FNHMUaIMVcHU0X0zjQswDVkkUXoUFQ4kyZrk0LV4ja3LST4AWUmU2RzXlbYYkVS4DYIsjVQQlZ0cEbk0zXGYTQQElaEMETwMFZh4jLmIUSEMzSsglU3LiUlIEbvUiRxs1UxTmXxgFSOokZ3jySXMmYtU0U3rFQDozcXYybnIEdFgSVEQkQDkkUzMFVPwjdTMzcmMjaEoTVkQEN1jVbrMidQ8zJCAUMkQ0TJQ0JDUUR4jzbkcibgYEM14jX0YzRqDDSNoUYmgUPYsFRnEjczkELBcFYM41M5EjXwMVZqcFT3klT5gDbr41XDwFcBgVdpEkXvcWRowDTNcTPUM0XPsVM2cFZ5Q0S331c0IGMEUkSvf2Sq.SU2XySjU1Z50VbzHUV2DlLgY2b1HzZCIkQDsRRSAScigVZ0P1XNUkKPIkLqHSLWETb5YzbCI2ShMySDslMDYSRQoUV2k2TAQlTxI2U3jzP2AiLZEyJQUTNtQUX3UUYPglLHYlMYklKzsVV5IWPLk0aF8lQ4EmTAshM40FaOMVNnkEY4YTVKQjP2HTayDlQkkUdYYVS3fjb0nWSyU0Mp0jc1bTYv4jLtjyTy.maisjS1XiTn4TStMFaYgiX1ImMv0lLLAkXpAEbsQiMmUlcUM2Mu01J54jZtIWahY0XAcEavQUVpAWRtQ1Lx8jQGcSR3T0LScFaOQiXzACdvEkYhoVU0.CQp0jcYklcTcVYBMEQNYDRkQSUkYiRYYEZ3PWaWgkUwAkVvMzPxrVUgQTNRgWPVAiYkIDU14jYmUkZxHWatzlYuMiRpQlMicTSxv1UxkyXgkkb3DzUzXGVt8TX3I0b2fGUvciUI4FVhMiSBUUYSU1aMEjXmoGczgDLXwzPHMGaSkjRsAEQLAkYgMUdoI0RHAWRYgVVGECNYYTdMkFTB8TLlgDLHk0LzsVdJQiL3TWNzEjPOkVT4rDb2PiY3QTVv.kdxvVaCYUdTokYGw1QpESLqPkbigjavTDMHkyMYAWQ3.kYBUlPmgmPWYjXJI2cvLVcnE2ZJUWSxUSaroTVIISY4Q0QxoUV2LGc0H1UyjTcmkSNs4RMrEVS28TLxDWPKc0U1.SUykVYKM0UjEWTqkkLXgVP2cmPGUSX3MDRXEGbRACQz4BTQkmaWA0UDUmawsBSn0zaToUXuY0ZYoDQ43hM2.SdSITPzkkZPEmQjIiLiQzcYwFQJEGN4QVax7lV0LlYG8FdnEicSQWR54TNwHSPTMSUgwFLDk2Y23zTvsBNWQSYA0DclEUdlk1ZG4hK3j0PHAyZ2ACRhIjMiY1PrMUZBsDa28zcNEmSrc2MvjkVq0jbZkEUkojTZ8jbBEmXnAUTIc0bOEkY5wFc2XGQxPWYw3jbt0DRq0zZjoGVmYVVoIlRv3RSFsDM1EmdSoWXuAiLicUVKUkVqfEd0oTL0gERwHkdXgzJU8lZIshTTcjSXkmPrYSV1UWUAIVc4XULgUSZpsjZvUTVBsRXEsTZkcWc2wFL2XlVDASNHY2cjI2bqL0Ry7TSPYlcGoFZygyTQUiX38jMmkERzcWXTgTMh0zZpcjUNgGQpkyTrkVdtQTTkkERCIiPybWUwfjcWwTQNUEN1YjTpE0JpQWLz0TQVQSLrgWZHEDLzPVUiE2UuUlKyMzZzLCYDk1R0rzczDTQ3olPvIVSLEWPJ4FYIglavYSUrAiKqYUSUcEZQUGcMEiZUkWLocCViYFVN4FMyEiKpolPgwTXFEzPs4xagUUaQgjUQczJloUdww1Myvjbx8jLtcGRqMzRVgUTYUiaXk0MqfWN1DGUq.GLyoGMjYjSwwlXpcyYV8DTDAETyjGSlsRaV4TSAklPxUlaDMDLYsVS1DTbSEmMNUUQPMiMBoWUCQ1PWESNUczMwU0YLcSZxTyLNIid2PSMDYyQAgSMY4RbScUTPAiPUokVW0zcQoTYTUUXyMzcwblcpkDL3XFTHkycq4BQQkjYAIDNuQmK5MCYxTWZPkCYAIjV1MzQSgUY5EUUPg1UqrjVGACTKIkY4.SMwAGZ3P1RU0jLxvjPUkkYoISdIIUc3kTdPEFQ3kiPU4FcJszMWImQmkSSSAUPLgzUh0TTAkEZuwDMpkzZiUmRW4jY3HkQVg0Uyg1cmMUMqcCSqIFaVQ2RBYmTvkVXqnzL5cDRzYVVqMDdoQjR1jENso1RwP0JnEmKnQjc0bFamokMz71X4b1JxEVSFI0bhUkMnYDa2HFMjoWQzjyP20lTMQWc37lcMk1YiI1JRoTcroUT3EGQrI0aUoDNHAmVEU0JpMiM3jiXUkTS58FYCQGSsAmVREFb4gkMwf2UnIlZwXDSIIEMtIGbMASSVc2Y3fTbq7VZYo0LH8VLLYTcV01SXE1Jz4zS3Dic03zSyUFSZYFMP4zaFgCTmYTY33hXYUEM3zVQiM1XLc0bOgzMxkFUks1MxX0Z00TS34jciglXy7VaREEMtHTROkTZMgDSksVZ1QjMykjKOIiblckT2DiasEGN5kjPjETTEgUTAQ1QWMSYIEjdIkDLBMyZlIWUSwFSqDmYxYjSpgjUN4jPREjQwkDdlsBUyI2PJcVdXMzJiE2TAIzTl0TLq4Ba0bGNg0zJwUyajEmLuAUXwHCZG0zMUslYtUiRGoTRHUiRgYUN3vjMzjSTyA2UYgzYDEzPK0FZxLiXUkSYXkmPUUFb2jmP2gFbmUEVZETS38DT1shaJcUNKgyc1DSMA4BVlYDUkgkSUMkdJ8jRiQGNmgGLFIiX1jkRNMTXysFMkwDTVUkawbGR4MCUUMzXWEkZDMDSxTTRKE1P3cVbykyPisVRVIjcAUzMpUlPIMSLuYyUtIiPjokYvLSY0YUdKICM1YEcPgyJqXTUHMSNDUEZwclTFMSLtEkR4j0JNIWbYIyZg0lSNozatgGN43RXJ4DUqYWc2vTY3DULJ8jV5cUc1MDMzoFZMUmVCoEZpYmbzo0JwIyMnYlbmQjTJE2Ytj0T27lUzjUZHslbVQ1RZIFaCgUQSYGRRkVUnQUQRIjZK4DZ0IVQwcWTGQSRQYTNUEWRo4VREUFUvPCUgUVZOQTNzPWLyb0TGkWVy4hUCc0P3bDbw.SYxIVciYmYxTSViYVaT4FbwjFNyXidgsjaWYEVCEmc3cDM0f1aA4jRzXWSM0DZBAUMvIFRU0TUGAmdVY1PQYicIsDYIYzazYTMPgSaxgScwDmKi8FaUUlQtrhYwDiMAA2Z2ESSlQSdv01YVEkcpAyZkACQUc2Zt0DRZAEZsE1PPs1LWYScRoDYTE2a0zjQhMjMQ0FS3wVd10jQkESUAkELzLmYUkCQUISLQUSRqkiSBYSUP8lVlgiTRo0UScDUv0lU4j0MyYlR4IkMFoDMGcScMIVNQkDSM0zLRsFV48zToQmQJMCLEEmZ4PmS0QSMYojTPYDQKYWbqkDdJszUwrVLgI2XtzTS0MCLAQidkYiY171Lx7jVuYjSTU1MLY0ZLcDTEE1bnoUQtIyS5EWXQkyZRk1bBIEVyrDV0s1a0rDRwoVLCIDZJIVVPgSRPEDR2AkPqcGMtLlQ0HEaJQ2PBkTTo4zLv7DY0LVbP0FNskSaQM1a1LScpUlSmQCMCsVR2.UXIkSTU4BancTNPQzZRQSMpQzT1IlP5QjXtPCTBQFc5c1X4n2Z0bFTUYkUwjEQIszasklQsETNNU2Y1bUYMMSNxnGUA4RYIk2Z3oTRGAWP4QVczIicPoVdPgWV0ozahISY0fiaEcySro2YKYDYtfDUAU2SnI1bSUCUOcFTwLkaPEjdj0VMncyUkY0YvbFclMURTczTyLEQt8jSMgWLCokdQQ1SKkkQmEiTzc0P2jEMWUkXWECbqM1cwf0LQMSTLgDNQ0TLAsTZvUkKwEmP3.kUrUlZlIiSRYkVwnmYqM2YqL2aEIENS41b3QyTUQmKjk0PmE2SPQ1JOs1StsRStrlS4LiVuMTRmISYvMlalQVZ3jyYkEzTt3hRoICLP0jbvIFbrYUS0kFMvwjdQkmYCUTQ3UiSvTkbE41R2gzUromMyLELDQWNqPkUwczYQ4FZokkZNYVcyYzaWITbvn2cx0VX2LSTgczJsUyQyfkSDkmMvfST1EVUsISS0T2PJQSTNIiK3A2YVsVNMczM4sDVUsRYRcVY4TGb4rBQKoFdzTSYsUTP4H1Z1EFR0EVSXI2MhMCYUgldE0FTskWYHkFboQDRqjDbockMHQlL0rFM0sTNyfmQsI0PyYlMPMlZHUiPOYmM0gmXCAiYBslSncyc0jWRz0TRvMVVL4RZEMWUqsTdNklXtPVP3fyXx3zYiE0SVclPWMFMwLjbi4hSugla2jiVuEmaLMlLuIUZOo2RtglSGEVNPEUXiUmTNcicN4zZy.2PMc1TCACNhYUTsYUaoUjKzTmdUcDY1zDMxkzZm4jSYITNNAWbjUmbUkjK0c1ZEwjdEQWLqHVUEsDM2nkSsQidmU0Y0fGc2jFcBomX58FNoMiUJYmL3EkL5ckSEYDbD0lMVUmQVYUdOojSPoWYDMGZOImVtQySAslbgcWMpQ1LzDGSrEmLgcyc3HzUzwVSuYVdEwlLmwTTM4DViQld0UWNPgTTzUkVlkWVZgkPOkVNrwVdUU1SyjGLYICTxA2S1kFLxHkMVAGR1fVSQIFYH4lR3rTbxQVcmEkX4IEaxYkSmQ1YM4zTyozQlcGL2g2XxUzansjV3jETzImSAUWRgkiPYgScCgkZRoFZzcTV0cTPngCTUMTLXQVPMkWb0P0RyXjViAmRksTVB41MLciLBEVNNwFVEgWcFUDQyclZUIyXp8jdWEUdtvjdvblPAkUPzbyQjEmTAQSVlMDLyDkSsAEMgUjR2EFasMlRLk2P3IFU30lQsM2PWwVMiYzc2QWXrcyYQgkPikmbTYENv3zTTcjckIiKYIVTyrBSx4VMBkWaBsRUiAUTIAWQ1.2YQgDcNAEM3P1PogiazU1LnMWZ4bid0jUU3gld1LScvoGYw.ibCckYxwjSCkCSjcSbtk2JHEFMMkmcTIlVScGcQgiKFMValU0cTgVVYIkR4okPvgDLxDlStgWL3DVbqMjb1HiSoEVLEIDYycCRkojPuEiUZUULqgDQqLiULk1PWUDdvb2YRImTPczZAA2LUEyJA0lZ1s1XGQzRCEUZvPmUqI0Px.yRqz1ZOcyMlIyPqMDNIM2Y3f1Q1kDZyzlYNIyUlU2agkiMvM0UvQUNwHlXTk0QPI0PwfiK4HCcNQGSQU2aQoGStj0ck8TcyXUa0b1JznWVxXDaz4BLto0bJoWMxjSZ3QDd1TDSzsjMK0jbigSN2TEbXQ0SXYzSvMTROEldOEWYgIFRMoUN4X2Q38DUxYkTn0VMo8Vc3M1JxjDaTIUU3QiRpQGRXMGStvTRwbDakUjXqwDRsQWbp0DM4HESnoDMTomYhEjSUo0bt.2TiEWdWAUR5U0ajYTU0czboAkTC4jQxQiUzXTNTwlSJsDU1fDdoclMlwFN1jTbxI0JxQUayYFcTgmZ4.GbLkTZG0DZ0b2a2ciMyombtPkZHQTQVwjRzoERTEScssRVv.yYtrhcGg0b2IVLzXSZiMkbLwlRUUzPTcGYlQEdYYjU3.SZ2UUUBw1LNcyPhQWQDUmbYc0ZUYyJvIlcngVQzIUQyPGQqs1bxrFZlk2LqM1TyYCbIIFdMcELDkGcvPWNJE0XN4jL3Q0RjUlKAczb3vlQvPWSpkkc10TMuYURy.iVK4hamoEcEYDcSgSTtPFSHcSbTYiPnAET4wjanU1RQkWYTolVVMFaxjSa4EyJ2fiUWUSaRQ2Q1bUR4QDcTYmPxc2R4EELxA0JJ0lRuIzYznDLA8DZwfmdRM1TjA0SUgDRlMzSwfCVD8FLP01JpAEUYUCRwnGU2oGVWQELJYVY0HmPF4FZhwTaZYEZ3YFbSYkZDYycZkVbKQjPyfVcxXGZsoFQQQlZIIkY4PVdVczTwojXEAUViQkUNcVPvHEM0wzL0QVVJYUUjcmV4jickc0LzMUVlcEd3YGRZACaSclUZgzStXkdPUWX5ACUG0lbjM0JKoFaZETdS4ldY4DYGMEYAUFNEAUUuITLwPjSgAWbRshLjUVT5UGUvPDNEAmVNYiQ03TXgMGbYUFbvESYEsjMiYzclkUYqMkZ1cGYzPDQsoTQZMCZRwFRjIFLLY0YnEUREESbHg1JLkFMvYkTwLyb1UGQLgCcxn0Q0MGaJEzUAYVTYcTb3rhYVY1ZzDGSmozZ23FQjUjRgQlc5oVb3kzLsIUXJ0FaGECVqMCMKYmdNIUZ33lbv.SagUWZZsBNSkjanMGazDTNKMlYOAkKAMkZIo2UrgFVrkGVMYzLnUTZAkWUw8FT4TVM3EDQtcja4H2PvLiX27jP4LCNwIkcQE0P5YGa4UWXwLjbNE2QYMCaBoGZ2IzL2YFYykicjQ0UJg0XWMCbqMFbyzlMosVNOslU3IDUlcjP1PFSYIWdDg1LK4hVqbUalkUVio0PpcSTqU2SLElQPMCUwHGU2rRNHAyLUIlYzHTY3UyZgYzbEokVEIlQvLSatnzPHYCU0EkRNIzU3YVPDozUyXCbqYWU1YjSKkVVvc2aEcTavbFU5kUQDcVbocGV1XTLwUUTGQ2RxbTMj4RSiYSS3YWcscjK1jGY5IkcT01XJkyMMAkatYjdvo0Z1fGZkMlKFAEYlo0TEsRQvgjKLMWcogkVUEVU4okQPMTQF0zL1kjL3DVP3zjPsIWPXw1ctQzRwgmSQsTZrYjRLUCNwjWNtDFdKMELtk2Q1TUPrEFTDMTbuUFcNI1U1MTVLgGQSIidqAGStU0J0jWL2olakwjRPklRGcWMkEWLyPjdswjZEUTZLcGVKciKyUVVjYVZYcFNPAUdnMWayfSar0DSOQ1SX8TNzzjLrsjQAcSbzTWN4o0MD0lXCYSMvIkRyjUPWgGUSQyUjgVN5QDLxQycSY2bx.0RtrTT4wVX3.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.GZnMVZ3byS2XzJ3QmKAMVbEQiPZsRUI4zRCkjQs0zRvYWc0XGQ2zFd0LiTmcTTtjjUQ4RYoQVNPUCQwgiSwMSbk4Rd4D0SoIDM0HEb3o2JNUyPAAWT1b2XQIVbXMybAA2UxkmR1TmYi01ZxIlYtjmX3LDTLEzPTMEThYDQkUmUUsBMN41YwgWRHUSRWEGaBU2ZmMTbJc0UigFQxgDNWQ0J3DkT5M0PV4jZ2bjdzg0L1TkPkUSQ2YCYZYyZr4hTEIjaJUjY14DVQ4RMAIzPB0TYrsDT0Pma1kDdKwjM3ICaKcWa2cURyjES0L0PrYkay.ULYM1RiEER2fTcAQzXBkEUvIWNPklPFkTNjMjRq8zQRkVbZIjXzYEQvrjczkjKJA2RyIyPSISb0ozP1DmKp0DNs0TZTEmctMFRvHWRgkmd4jlbJ4hSDMWdY4VLzvFQSAGcGImcy4zc3PyTgIzYoMUdxP2aV0TT2LyXzU2SIMjPqkVdkgjK4jTaRwFTJsBS1TFYZQGYoUmaPESLCMWPvTjVCgEbq3DQpoDdhElK1fmRnQGSR0DRhYkKY0VSCAkVl0jTXUSUh8TatLWZlQ2JJElLvoUagUjXqc2TzfkKUg2JmQWPzfGTSgWVqnzJnEmZ0slQi0lQtT1Rw0javwTTt.0QiAyX3MFZO4ha2LCVtg2cqoEcBMjV2sDZuczJukDY0jibXQFR4MGcz7zcTkVY4gVRB0TbEYVLncDQs0lTDojUxb1bVMEa031SKEGaRQ1QKQFZCAiZlkVNLQyMSUFLwnjUxE2M1bGU4EEc5IiMMAWMzszMVEGVvI2YqfDMuUkPwklcwTlYwXjKvnkQiMUTwolX4XSSyzTMVgWaVklY2gzZzzTUxT1QiY0JyYUQybzY2o1JWUURAUFT5ckMUwzSNUmY4gVdKgURxU1bPYCbvgUZFITM47TLKcVQqsjQOolc28VLHYld0fDdVUTYTAWYlw1PA4xLDQSRyMlTFUyJIAkZ1HkTwPyR2YkX4.CcwoGRTszPkY0bQ0DLgw1bpgGb3cWS0s1ZNM0UrciRXg1LHk2PWY2RwDiLikGLwjVXKYlKZIVLioFTSQGcoMjdyE1LMMzalAiaR0DdjQiLQUFLsMmPlgmbmcjVs4TQIQlYxMFUXgTao4TLkgmXj4hcWcjbY4FMk4BaBUTUwAEUHsBUuoVXXAmVzI0PNEWYkAkYHYFSJsDQpolMvDGa3vTMWE2YuIEaDc1StXSTqPCSwYFSLwTaL0ldicmLzEGZAUmYmwjPqfVaEczUznVQA8Fb1.GaZESMxTjLBE1U20jZz.2avIjPwPkPAI1Zv8jR3c0bQUmQtTlZDIyJ4cEa3jGYzE0PgMGTRMTaMgyXSgCUuYULMUzb30VTRITMDolZ1L2ZuQlMpUGcwcjUng0XMUjaOgTNDcEYkgkVMgyMQQlb1AkVPwVMgIiYgoDSMg1TgY2U4gmV2j1L2MkYvTSQPI1PAkCMkYjYWolZAshMCsDZtQ1TYM0LO4FazbkSxYjZUkGLhkkYucmTjEWLrs1PtX1QsMENmk0aq8FY0HGazkDVOI2bJgyYowjZYUFT0r1QDkDMMgzYxrxQ2bWTMUWS3jkU2wVa2jDYKoGS0s1czAUSmoENMglLxImVJUlYVEWTSQSd2TkVs0lQHokbQEzRzYGdMMiStgTVqEVUyTEdQIiaH4FSqL0Q2sTXMEURYAmVpkkL3YkbxPFaQYFaMkia1LWcoEEaSkTaDEDUB4lQQslcE8lc17DNOcyLvUTQjQSPSw1M3HSdwkET3T2RGgVPsMiYskFY1MWXy7lUt7TQsQEU1PUTwElawDWLUEUZDgmXig2PJkTV2nzRJIDSFQVSuQySZ8FVJESNqEVMoMTRiQ0JMUzXWMmZEgVQXU0JjUWPUc1U2cWZoQDYqM1YFYUXko1UOkSYyj0JjcSPlMWZjsRSvfjZ4jiVrkjTKEVRDkEanUiU3IlcYoGQvDzRwgCLxQ1cPkSZ03VXXoEQW0zQuUULDshUmA0bPg2TBsDMvclaRMyMiwFNCQjZwEWVwPiZDMiRQIFYQUyQOUkMqcmRDciTP0FQHUDQWkTPwQEZxMURzUGNSMWcYAWNiQTLmI1R0X2ZgwFdwcWRzkkUyojSYQzSlgUP4MTXTgia2PSYnk2Slg2coIUTMkEa0QyRxAyXEAGQCkzc4jjL2HFYSYGNxDiSDEUYwg0LLgGUukzRxzzbYI1Z5YGM04BSZQFdynGay8lSZcmQ3n2Jx4hKLwjQXMCc3DFMosBcOcSQ37VclIlZZ4zZDIEbq8lYGU1Sl4lV48Daq8TTiYTQhEUXnMjQtbGLuwFRsM1UwkjbqgUU3jkVNYScqYmVBkWY33Bd0gzayciXLsRZvf0avYjclkWSUAGLLkiLYM0L3QGa5EWTiwFSgQ1QSQ2bxjjQOcUaPACUv3RapgmViIjVycSMtrlcSAUNIk1L13TanoDMyk1UzwDbwbDYkg0SwU1XPomQ4wlaBEWbvYCRikFctDGc4gjapMGV43jSHUVMqczckczPDEEQSIzJtPCazc1bvAyM2IiLqY2Pio0bxTlQtTTaWcjPjcWR4jFdHAUT3EVbuAWcFMDUqk2QZIUa1PCZZQmTOEjYzD2Y5EWYqITLGciK3nzcx8zPvLEckU2btAWT4UzavYETCkERTASTq0DSo4xXKQ0JiEWcwokRiAWcsACUucCV17VPkclSZI0PJkjU2.UNBUFMRUGbZUSS3zjX3LmdJMUMykzbPUiZEMidWMmMxTiUDsVMBsRSFYFU5UjRWYDZZYCaMEiKMkjZRMCRR8zR0QVRwPyLOQlSEokLDImTnglavvVXrYEcjMCZI41UJc1b13FTLMTNr4hQUAiQxkDdGMlRBICSNA0PssxUHEUTMEjYsQ2bjgiX3fTSrgzT5kUXwTFa1bFYwgEUN4VQk4DYZciRkEzcEI1Z3YiTiImTwb0QzoUanU1P37VSHsxSx8zS1E0cgYmalojK3DCT4QlKtHTSyDSVUg0T2rDc2slYyYlRTA2Znw1USkmP2nGZMgES4vDQxU0ZYQka0MVTPomLjE2L4jEL43hSyvlXw8zXyAWPtgkVrAmLBsVRSk0S0HjYVcGR1LVXocyc0QSX4ECbVEDZtA0Sz8jbgcEMUgiVqMldyDTPvLGNy0lPqTGVgUUMtXVNYIzYvj0UTASSBMybxHCciUEbzAUUwA0UvfGYVsRSWQjRQEWXiczbqXzaSUiL0LSag4BQmMVL2clVyElbqHzJ4vVVsgkMLYjVOgVMO81UzcUQPkWZ4.iXqPSdSoTcpQUZhoFVQcUcu8FVtgTN2XVPSslbwIiVNY0TFIVY4.CMpgTXxkzJtj0JPcCVp8DZIQSNCMFLAkTVjkVcXQFdZkERTk2T3DESPkyMN8DYzTyM4UWT4clVFg0TzjmVtUlaoQ1RyfVXxjSPIUWLtf0JLkFQOgyb0bCUwrBYyHWPLEGM3XiUqn0RYAmVKkSY4b2MNsRZ2LFTiYlTDgmdjElMscjSosBUUkVXukEVrU1TkgkR24RUqTFLXoWZtL2LxvjdkwjVxUWSwImQhclMyASPzIjYMkCVjcyTMUVPEgVZvYSQ0gyckMzUxDkbYUGRGIiV1LUL5czb4.0L1AUcXczPl0lYtIjdFsVbsE2UUQVZGE2PXslZOEVZhkCYKcVX0PDazsxJzImcvL2YBgDamImbucjd1jyLzkTdWITM44xQI0ldwHEM3ojQ1UWYpI2S4DkaGQURVgTdTQGNzYCZpclajYkb4wjL1IjdrwzaOUVayozYVUiXOwVPqTDR1fSV4gzJUMWdBcUTzcDRVkCVkE2UggyTZokRiIUVwHiZ4bjbHsFZ4DlVHsRb0wjKpcWLDsxL4ojMqbyMKoDRWYiXS8zT4Y2bTQCdWQjUDsBYq8jUNQlTDUkdq3FRyf0a54FaJE2LXY2Qz4BVtPVLtzFQyrTZ1cSL5o1c5MUVTozbJE2ZzwFStjTXvTCSJAWMK4DaGACMMYFcgM1Slk0M1jkKg81SZkGaCEmaqXSZWYzJFUiYHgSa2UURUYidCICNTY1SCg1JpMlZPEjLQYTVzIiX1Y1b5sTNU0zLQMVb3bTMtXFTXcjQ3H1XUk0JuY2TzIFQnMCSCk2c30jTiUCbtjCRFgyLqXDa1rjY3XSV3giaLkkY3ISbjMSaEgiLmcUaL4VQAMUTzoGTBAGVJshM2D1bLEFQzP1XOsRPRw1LHEyYUc1JnoGcOcUd1s1LxbFRwMlTznVdNczXMU1LWc1MGoUSZMTL1bWQREzchIiXIMiZ0X1bvTWYsc0QpkiYPkjMEszTL8zTYcTUpQSaxQCNvwzaC01RUYyPL4zcxHjXUcjVFI1JZY0bmsjPuc2MugELuQGNPMiTv4FSq3zcAQjZvzFSOUUNWcCU0jUdyn1cW81Z2gybiYyXko2LYoWTog2agwFUXQFcYkUPqEGQqLkcKA2UrAyMowTRGgWS0XGauMVTP0VM4gkKEU2JsUDMAcSUXc0YTslK54VN1UGa2AUP2MkdWUGchIUavMTdSgTaCUFdqfWNPUUROglSmsFZz4FdMkTaywjc1vjXRMjS3fENjgjPUUzawHkTyIySwwDTNslLBI0StkCTMMlR3klPpkUTAQTUEA0P0sFMCIGUv.2SyXDQVI1UJM0aCMSQtPTP1XEbrIkcAEFcY81Ugs1L4slZUMmXvAUZzPiT18FVjIjUEgibDgGRKsDUyEEL3DjPRMmVu8zJw7zcEcUVBMjRCMSdiw1MO8FbIITSuEEdV8FREszPqQiUhE2XIEGYDQFcQMiQiIVLoMiYxgWPKkiR47zSXk1Q00VR3fWTDcSRmAWQzg1ZygETvXST1UGcqTSVNkmLyLlbuIkRRQWT1MzMlkSbjo0Z2LmSWcldFgSP5sRZv81Uv3RYzQiTQMUbzoGQ2sxToYCVZgCQF0TdKE1LNcTbEgWbDYCMA4TP0bCLQ4TXTc1SkYTS3jCQkUEcJMFTu0VZ2IlXpMjSE8TLlITXsASUGI0TA0FZynmXOQGTNIlVvnESHAWZUc0btMkaXkSYAkVbPEVc0QmYJgFSO0VZt0FUykFUq4xJGY0XhQiL1TTdqQzPOMWRJ4DNrUGU2kjUrYkXwoUXwYTR4olaDoVSEcTcI4FatTzQEMTarUlUhQ2RF8TUpgkXgkiYIUTXtkGdwYERxQVb4EzMSQFRWkGLOwTaUcWZsYFYq.mKS8zaDIGSoIDcjQ1RKklUnoTS1cSaBE2PtHkcWkyPB8lQZIVa1UFbO4BTLEyQiUUL1Q0TzEiQXwFMwrDMwYzTHgyYNYmSxczZZ4xSWAWXzXkZ0wTQSImT2LETzcWPIElcNUDZTYUayUWbHQDRt4VQL4TUWoWR5kSNqXUPtcmdzPWMyUDcvIENGMyXXQDazTFYg81MuIFRw0TTyzjX1L0XSYFakc1bZMFZRkTaBkyLg8lSHYCM3rzYyjkS3XFRyDWTQcVSGMkb58zL1vFZ0DSTyImMJkCbQQWVGgVYKUVTlETamUGc0cjTkEVNSYkSqPWQkU1UHwzbKckV0fjcPIDN1jmLmE0PxDUNRMWVzXjcpgDTkE0YWUjQx.UcQ4VM0EUTxgidjgiTwkGbPMjblMDdA0lLlMWPw4RZy0jKSgmb2jDcSolTxz1PIQmPMQFR2UUTpIUTl4VbsM1Q4bWQTQyT1jVQyE0b0.yXmMVcvXGU5w1Z2XDQzclVYYyM0cGZqg2UGUSZzLyc3cibyojVVImbAojUVoWPPYmQk4lQvD1PRQ0JpwjZOY1QhQlPiI0LZ81b1EkQ3cjMI0laR4FYREmPoojSLcSXD4BbVsRRmckUnUESYETZ0Dycq8jV4QTXYMiR2TDU1bkMz4FL0EVNicUNQsjQpIjPvUUdNIUTLkSarI1Ys01U0wTXH8jYXIScwH0cRk0XIQyUtbiP0TzXHcUSUgzRVUlUIshQmUFdnISNtMmXzLUNqUmdjYzYL4DbGIVTg0FVt4jXtPFZ5AyUxbkTmUDc0bkdKcSdxoFaK4VRIM1PIEjdqQDTJI1Z3rRNvvTbyTVX2b0UtsDZSIjZzcVQ3ESMLAWR5szL3TVa2bSUrAEMPgVaLQzJgMESO0TQGMTdCkmZqjyPwrlLGQ2QmkmThcEYVsFLA4zTqHSZqcWPmYkVKISbGojZuYWbwTiY0jCdGAmKrwTX2DiLgUENHwVcZElYKEzY5IUMtcCRAEEcv0lP0HWagUzbHgiVJEEc2LjUUQCSQQVXToEcuMlYCYVSqP0QXETP2YCdJEUVHY0UrYmPhoVZu8FYNkDR20VctQkTukjR48TVhYiSPcSSMkkbhA0LxHGRrIGZCcSYisTbPYUUhASTYcjc17lYzkkXPIiK2gmM17FNgcCMCojKvbjK181LyzlKOc1aXYzMqb0QJUlcIUVVKgUc44FdmYSN0MCYxPjbUQjXXgUVno2aIUmKUomXScFQx3DdFMTUxoGYtXkVvMlY4cjLtDma0Pya1XVcwslM2fUcNkEMEQ0PmgyPyLiXGAyTrgGdM01LMc0ctshYqvVbyj0JrIiTpYyUyHlSPMDcCY2UCQ1bzPzYyPyZxESYWcVYZMTY3wFb5kGbJc1bzHmKmkUPybVcEcDcYozTKklZTAibHM0ZEUVY0n2MoMDaRYVVGkERyEUcvPjPyM0MVgmaHUDMMwjZ4M1PFEVPuU1bvkyPGQmVlAELU0ldncVQmQWVqoTa2UWRL4xJSc0TAkSYkcSTK4xZwPlQXIiLosFYzYWNTMDQ5wFZRYTM4cjK04latMiXy3jXm0DVxLmKLMlLpwzTJcGcQwFayHSR13lQFIjRNUWMwg0Zy8lbQciKNg0R0UlSL4hRhQTSYUlKqolQYIiTxj0cmAkLrQUQrElM4omQJgTcyQzL0MUdvDzRgAybrYic5UmcYc0a4HDduEFSzPkMCITbSIWLSg0UQokRhczc5okQY81cskDbXQDTuI1LWojPiQ2aXgkSFElSRo0Zj8VXDoTMqPWMUImSIwTbM4BRXwFMk8FTME2SWsRUtIFSvUlKDEEY5EVNMomQjs1ZQsTakcldB8lKtDWNHImSzEUbmsDVUI1Z2UDRWITP2c0P3PkP1g0L4vzT18lPvYUXZgTYYgVdqzVchYGMzzjQgUldy7jS1szc4MCNwbFaLIjM4rxSIYWRTE1UwzzRGImS3gVcjImSyfDZyIFaOE2bqbTcZkVLXIUb3Pmbx7zaj4xa4clSM01J1UVYUkScucUSo81aO0TVYkyay4BLYcmXwDTNp41M141cyI0RPUVRYQTZAgSP1sjPogTcoUict3zXZE0YpolRNEmSQE1Uq7lV1UVT1U2Uu4jbLA0UiciZFglZPAGTY0VascGLhgTSvo2TDEyLqElPzjyLh8jX0jCNu4RZvg2c4.ya1bybSIDYmwjPtszYAg0Qxk2QYQjbxgzaR8jKNUFcqEmUqkWLqUTYZ4zYD8VNHczPgckczfjaZYybzoVaXgmclMGcYIUbRgFMQc1TmYSdHkGdMo1UZMFQIEGaTUjMv.CRJITNi4BS2XDNn4BbEgjd4YVNHsFTQgTTMkDSxIFSPIUPzcjQyk0UIsDS2Hyb1YmTxcjRYE1UiYkMAQSdugGciUmY0MWPWcidrU2ctnGQycSPigGNMMmT0MzYgAEdRojVq7FVwU1TWsVLLU2cDISa0UlPRolTq4hMxcCMoQSdrwzTYgTPqnjXS4BUBkTNJ4xPoY1TKsxSBszTtQUNBoFTGwTbxAUSm4DV5kUaOImXwoUbykkTAMybXAEYOUDMzQmcmQlRqrTUro0ZgM1ZzHkRwUkYNY1J3DDcDo1Yyo2ajo1SGEUd44xS5kEU1EVMHYibn0zYsUERmcGaU0jSsciRD4RXXk0MRsVY5YkUiEDU1cmMzImMtbVXnASQy3FYnc2SvM2czkjTXUiTJUmLVkyQn4hXSAUQB0FYJESMyvDVSoVPrcCLucTMIkGYBYDMAMiZVshXxLWP4YWXFo1TnkyQqYyaj0FNZcmaOQGU4f1Uv0VSJEzJGUVSNA0RJIjVVsxYV81QrklMlYVc0Y1LikTQxQWZzwVTz81U5ozLRAWXSo1XUEUZiYjT1DTd3HjcYUCQ2.UY3YyQtzVTBEmV3ElREAUQ2zFQyXUVwHGZAU2ZIgmMlAkZTo0J5MlMhIUNtkiS1YVZnIVM4TDS2YiKtMmYPEWcYcFQioUQowFauAmb4TjPWk1MJg1aP4zPxLEcGwzaQwVZzbSZ0MEMAkVZ2rRchw1XRU1bKIjUQMlbTQ2UJkyZWgEZMcSaA0VQJAUZRY1UMEzQTIzaWkWYyY2JWYjK47FatYjSNMTX2Y0XyrBVEESaWIySuIyTqP1asMTXhwlQxkmciUCUYgSdwrBLYsFbEgDUxHWdnQCRsUSRXESSUkSUQ4hSsYyJSUiRkgiPQQGbTsRRMUiMYkldzYDT4XSXCETaNI2aAYGVxUmaqcmdU4Vaz4lQLwTXVA0PSkSajM2U2fCZGcSTJYVY1rVcTECSMICNhUmYOoTMLolLzk0cVEichM1LMoDd1b2UA81MWA0T5QDT2H2My3TbjwFRHEicZ0zLCwVXJgjaBUiZQACLoczYtUiZmMkUhgyS5kzT28VXSACQybDaB8DQAo0cJ4zUsEWM50VcU8jStEjLxQ2bukSMukDdMolKisVRqjlLqIUZHcGNu4RMIgCNN0DcOgzMHYkZWQjawkVdqnVNgYiXmMiPE0VPzIGb5okTWoFVLwlXy31PpomK5sjc1HVY4UUUygEcCgiZ1DiRC0zY4MFTJQkZjk2SVcyXnMjLIYkcs4hLv4DaIICLyITXzojUxgWS5k2J1jSNvgmaxXiYwYjK0zFQtIUQzw1QrYzPGI2bC4Tazk2RvPmMN01ctvzb3QmQwgTbxY1P3rVVSsFRiUGb1DyUtglMFolTJcCTJUFRL41P4fSdMQ0JQoWd2ckXyTmaRElQ14ld2zjdu4jbi8TXZAkYoYFcyPyUvTCaH8jQqIjbuQGMOYDYYYlZLklQ3ASbFUidPMibCwjUEUmaYg1YqUSPsgFSLY1TPYFRkkWZtvTbtjlSqXjUiQ0ZO4TavMyL4olPYsRUu4lTmYCNBYTVwLiZZUDSZASTVAmKwojYoo1MkckdIIzYtoWPUIkL0E1X2cVNtDjR3UVZBEkargjUwMjblAEUUAWMLQzZuwTU0X1MXQWRDgUa44lMqrTUMYUL5kyXEciPTomZIIiXNcFM1UlY2DSMpI2aHsxYLYVaCYjdMEVTUM1PuY0JwTSaU0FZvwzStHFT4A0J4AyLzQEaPkVMDgybxQmclgiPKEyRDU2ZGMGUxYELkgTPMUzbowFLY0VMqTlavoWL4ETcLQzMB8VdmMlSvI1YgUjbLkWTvMGTLwTMtzFL2PTahEFTWM2SLYmSqgmPt3jLwkVNq4xLrQiX4vDS2jySSYSP0gST3UkYYIDMt7jbYgjZy0TTkQUQwrxQDMETFcjM1sFYDoGS4fkUJI0QJA2SIomM1QGZV8VT2.2bWoDQBoEa5QjVgIla34VUzT1bIQWL0TyJM0VQIUyL4M1JRkDaIICbvQlcD8DZ1.EYXYEQLUyZ0giVHgiKQQkc4c1SRcTcEQDMpElQIEmML0Taz81XY4Tbz7TZFIVcBMDNOwTVjMFcSMFbQsRSrUWNHYFMuMmS2shVnkFYskDUvnmVvX0MtY0aFQUMNUUZnQ1SwfSYFMVUscjX5gDSJYkMgYjPXU1XvTyaVImTmoESTsjVCEEaqEFQuQEa4IyPMMmTJgTXBIzYKUibNk1XZYlU3jSZmI0TI4BU3rlTZomcuM1LvkzbDYyL38FdzjyT2jmM3IlbA8lR3UyYqbEcCQkdDElbzQlT4PWRvLjcEAmRLIVZycWSiwDNMg2Mw3FNqbzcEolarICcOkWaj4VLLM0cZMCTXMiV14DLhs1LYcUat3BRyEVRpQUZqzzL5YSUt3jcSg2PtA2bXkmSYIiXGAkSKkENwoUPHQ1X4jTdykmLnkVRi81ZXIyS4rRSxoVV2.mbJEyLIoTYGI0MrIyLloWaJUlQUACQgI1axLEVBMDaqTSTJsTVysRdPQEZxwFM2fWb4flKFITV2EmTJEkSqrVM1LDU5k0J3TjPNkyUzgjRJAmUxUVVV4RMiAESCQST2DyQhMzbAclaqT2XQ4xS0jWa40zcAglZIEjboMVZJcUQ0jkKqzzXpMDR2T2Mw4VMjIGSME2QCMibhcTNUEiPIYla0TkLtYmMwHiU0rlQNgWLnkDMN41bRQjXzXkPCY1SQ4TcqLFNNUCZzDmUxkFYS4zTJkkSIoWd1b1JJM2JZAUcOYlQKgFZ3XlVGkGRKQSPPQzcDgGSGwTTFc0Mx8Da34xYVojRL4lP2D2Yk81YK0FTKcyXy.SSHAmTwISQLsDSvsDd3TmctECLsgyRtjiRmgyb3sjM1IzXzLlUFkVYlsBLNcEYF8DVqkDbXcyMGYjdwnTMlAWVkwVLwTSPyLiczQSaXQGRQEDV0kzcEEmZGglYBIzPiYTRUQzUpQjSPQVP2DFUZMkYHESVhgSZAU1Q5Y0MrIDS5ICd3vTVScSSnsjTgMUPyX0PXIER1oDMR8zQhYDbAkzLQMiVyUCUn81cWo1YuUiUBoDNhQjQ10VPlcTaJQEdwLSZmQkKQokPqomaMsFazglZxgyUNYjZtXmRmslYNg0XMgWP34BUq3hYoI0UtTlKFciaogySvsxZqbyLwA2XqQmch41Q5E1UQoDbyzFN5gVMiMFcgMmdxMiX1EUR4UmXuQSVTcSZvYUbKUiXWgFRwfmV3kjSxQCQ5gFTtTGaY0lStXUavcib1nkLzrxTCMFbus1UKoUatMCTDwFVts1ZlwDRAQ0S0MyXhEmaWcEMrMjX5UVQIYjMVU1ZXoTUvP1QFoDLI4jbEkDYOslKpQSTTMzJUE1RXUiLS0VZWEzZnYUPzfWYPk2QWQUYYUyTm4TRSM2P4LSRHklY5MmTnQ0UrYmbrMWQYoFdsEjc5QTZ2DiXrElbxD1RxkiLwjkVBQiREUUVWMjQEklZywlRzcCa24RPEA0ZVYVPzkiK0MjSiclanomaxE1QxUETYo1bJAiPtUSaosRNwjVS1bENDgyXYU0PY0lRTIjbJYSL1XDdSQEM58lTSkFQQUGSAwDLg0zZ4XVPmAWQN8jTRIDajIlXVsVS28jZM4jU1AyRH8jawf2ZqEiU3vTN4rRcJICdiY0LV4VQDQWL08jaUAUMXkSPwIVd3f2cyU0Q3nEZuEVLKIibyjSXK4zY0.WZoQiS0LkTQcFb58zQpoGRtTVPxMiUUASQ54BUF4FMGETZkUzcTk0P4LGRVUjbB0jYvUlPtsRU1XCRg4TQFMjYhsxQQc0cqEkPW0ldQgjUIoGYKQlRjo1Q4vzYQUjQk4VRp4RbYkzRwQ0bMEGdhYmXoYEazs1T0fmKmwFZxzTT5g1P33DdmozbtUWV1HyUwLTN4vjYn0lZKwjYHglTCQlYTMlMGQmULEUQIgzMkYUbmcSavUjQw0laBQCdKslZ3sjRRM1TJYWLtjzMLAUQOQyQCEDQ5AiPxYDU3HWZt7VMQciVzXFNzbScvXFbkkDRqo2QyPGZHkkXuIUXFkFbHITNFoGQK4lQxjlaXQ1J3sTd5cSVXQ0LSk2PVgELMYibkI0cmkDT331YggWRWolV0n0QB4jLwbmMnMzPTwzTxgCUCoWPmMkVzgSZuoVXxbUcIkVXznzPOMzLvUCdWszUZY0RLkTZysRX4jUTI4lbVUmQxUjTiU2Z3kzPH4TY0METvUWVHQFMAgmZ0D0SoIGTzIiMwkVNU0FRZokchMUXNIyap0jdwsVTAECZMkiP2fzJtcVTX0Tdn0FZ0o1bxI1U0HjV0ckMVkCZZYzXQU0cVAEZu8TRBMFMs0FVwPSPxIzMzAEcGsxTzj1M3U0SWMVX00zSnEjbukkVpkWMUkGS0TyLXgESic2LKISStsTdYMGbgwjU4fTLkIjboYyXvcVUN4RPLIkbtnDSj0lMhUFY4sRY2w1YWIWUxQVbt.mYqTVa4bFdL4hVpgDbQIDbzszargkRu4VdWkEQx.0PUASVtESMPE2MVYyPxPUNoElR1LkPO4RUjQFVhQVZTEUYUECbYIWS0AUTtgFdZk0UPQFN3oGStTiMCIVc3.UcDIFYKYSQos1SnsxUp0FajIDdSwlMjAmXXECTZkkamM0Jhk1a4jDd1UCV3wFU0TSMtPEL2X1QCozb3g2Qhwjc1zFMCcSS4UiLscjdhMUXiMWSE0TM24RdkM0Q4HCNEgCQLUELBEUXYgjURIWdBImQrYTLk8DMkAmctjUNscyZ2kDcv0lPsg2ZtHUNEomSSEFQnEWU1nlKK0DQxA0JxbCZWc2TA8jT2ESZIE0aroEa3HScEkmSEImdqb0P5AWNxkmKxj2X3oFRXEmRtQTMVkDUyLFR0MEMXEiMlEDQWslcsAyQ0D0an0VawgjYVgESs81ZWMzM5YiQXgUaFgFV3IDLwIDS1YjdQQzULs1axQVbxoVd1jVPRkSQNQiLKQTLgoFRqTWXrYUXQElPTMlMt3xU3o2JJcyJ2oUUt71axYyQKcCS4LUUAgCTLIGYwA0Ql4TLR41JwEEV1ECds8VdEMycQo1PvjSUBoGLZEVUKACVvAiZZACR4Mycg8VPwL1cPMlbzDDM4ACY3U1atTCYvLCVEQyJT4zY2fTTUMGQvQkd5UUNRQ2S0ImVZkUYKgEUSQSU4v1TXQUVvDGdgkjLzISbyYEUqHzROg1PsASXHEkdmETbusjKzU0bTIzciM0J0MSXOMUMzXyJXo2SWUDZ43BTYwFTxTlPT0Vam4lSzzFTqf1TnQmbMszZLczYxcWSDgmdr0jZUUVXPgGNDkGaKAmKikVSvjEd0Q2csEyS1EDZOE2S2USbtsxQ2LlQrU1SyXFdyPVXskVdwjGYZ4lPgI2RPg0bybCdBk0J171TpElaqrlYkQEVNUidBQDT1TSNrMzQI4jYikiVxYTXxHiVwfGLnoFNZQ2bnIEaS4zSvv1aM4jPr8Vbwc2JsEVTp0lcXoma1nzUxQiZyUVUyn0av3RRHEVdxH1YUkET2AGa131TxrBYKESQpslLwMkbog2PEQ0LZQmMHYVbtYUZBglKHckZ3IWPjoGaxbDYHUiTBwFNtgmSWQ0SxXEdOwTMx.WdiQSZ0UGRUYVPWEVZHYkLUUjRtMkQqv1YRcFaykmKTo1S1kjY4j2c2DiUNQSL0LkYxcldKQVTCYCNOsxTZEyZ1byMCAyQjESdwgjc0HEd0gybIkzJ3cSMyDES1TSQ1olMGQFV3gSXWMlc1sTbhYCLMUFYQczYycCRi0VPJ8TZz7VazMmMIE0QvkFbrwzawbDZ1DDTigEZroFSJkkZos1JzvTM2cDToUlTtAUL2nGNSgFcr0VN48VcmM1cvUCZ2M1QtwjbSEFTr01Y3D0aQsjKzAiZtkyJ0MyPYQ1Y5AUUWsjcpMFN04VYVICZkQCU2gWM4MVL58jbJclKXAmMXUTUokicwciSiY1X1TlVTo1Mrc1M04jPw.CZT4VNQMCM1gELqTkXFMSM38lPxjiMSUFMkgiS0jUSJgCNybScFoFSwTldMIkLpMWR1UiUAQFNlokPSIWVxkVYzIVdToWSZQ1YMIjaA4lbYEFRR41SQcSYAoESxDDVl0lT0ozQrclSlkGMXkWP4fVVnIjZoQTNIICSxbTUwIlR5E1Mxf0c4EkUgsRPnwVaAkDMEI0bQgjMyYTRUsDN20VcAs1ZAolM3bES4XEZO4TSwXjYPQyXmAyStgDaGQTQV4BUpMEdtQUSjYGZVEictQiKvgkPCICQqITLMciXyIzcXUDYNkTZEkCV0cUYykWNTgyLno2SkUVY2Q1StQlMkU0YxgSL2MmUrcUV5sTVZczYDoWZt3VMnYUaxkTaQQFbybycGIzLpwDVqX1R2zzbjoTRzc2RAQUViwlLIESUwPTaEACTxX1S0EWQzbib3HmMzkSYFk0RqUTdOIVZ3fSLsQTXLgzZw.2XHYTV4MFQCkTNsoVMhc1P131clsTSiEyX0EGMgszYAwjK5EWYRQGQS8VYnkSbRMWSxPTPFUGNgclbtsRPnQmM5sVSWUUUTYjPyjlUJElV2DCdoQUYi8jVYgiQCkUYYEyUDESdyEjQtcCaNEzMSQiT0gmXDUFRyvlcHAyUIIDZxLDQxY0Z1XSM4f1RSgTZgUUUYMERoQTXZsVV4sRP0.mZUE1MCEmanESYLYTROoVb2PGZ2g2PmMDcqLCdvHjPLc2Q4UzPmQ2Q0XFL0zjP1PUNvHzYpAWYxMmah4FUD8FYuQWUscDLNoUUhwzJB0Fd2YlQUkGT1HFMJQ1aiAEVZMSPwM1QoEiatoFbqDUaMcVb4oWPGg0QZ4TcAk1QLIlK3HTUR0TbJoGQmU1QgYCZyDyU3sRb13zJqkVRzMkPqDCLPMiT5UFTPMWS3IzaSU0Uh0TThk1Jv3lbZQmY0cyRx.CLxkTc4XCVwPDU4o2JyTDMIEiMUYCMpo2PQ4FaFszbyk1X3IjVyAUP3U2ZDMSMBQmY4oFVYkzYK4TMqHyJ4ACSEY0JucGL14FcQkyMCcyasYFMZIlPwkjcmEzLOEVP33DcqDiQLkzLtQScmQUZvjEbxXzU4sDStXiVVIGSko2MTcjU0UWN0fmYzI0Qt7jRwcWc1IUaZgUY18VQgcjKX0FbzoUc0gESMw1Jz0jLpwVNGIWQQACZTAkQVYVZuEmXxPSSPomSk0DTYQSMukmaVQjKtAyMsEFYKUVY3ElZYEmSGAUND4VZzjDNFkGRSMmLAMjbMo1QTEDUGUiU3fmU2sxX0TyZtP1XO4VRkgyUFgCR18jRZYiZQoVY5Y1XxQSdFczUBsRU2UWXJISax8VXxHiaOISYOIEYUASdxDTUrMlVJoGRnkDdHUTcYASXkkVawfiZjQGbjYjUFgSQ3gjXxUGTLUjahECULMGdoM0RSEUP4HyMLEFRgcSN3ojZJQkYz31bOYGQs8DQQgEMRMFRtckRyn1Lg4lV1TFcZEWMZcyPmE1Ynk0TzbUT28Tczb1Myk0QpEjQJMWLi0jYH4jagMTREQUMFoWSVIyLVgkb14Fb47FVvb1JIcUaNwzQqfkRPojbjUDMRMVQlQiVTY0U2wzbYcidpQUUT4BMiE1MLQ1YVQUXPYGLRUSLzjWQz0TP0IWR2gkd3rVZzLEcBEiVvMDVLEma0HDUgIDLEYTRTICZlkCMuYlL1E2P0ETTFEDR0LzLXoVXD01XikSZNUyY5oFTTojZSYlaIMCZLgkR2PWapsRbiUUYmYTMtLkM1gWUEokKy7FLYY1LiMGLwoFZyoWZCI0b4Y2TxEVT3MVVZI2ThQjT50zZq81S0YELHomKhshU0MjXlg1L2IiaXUyYioEU4QERrYELt81PgUSY5QiYYgzMkQ0M1AiaHMUVpETRHIyURIWMEo2Yxolcwn0Q0jDRUE2bYIUazfELnACStXmQXkSNAkmYIMiaVIjMBIScIUSQ2QmSBACTEsDSiYVP4Q0TRM0LVkkQtE0UhgTZvPVQxTkVFYGUMQ2XU4zbgkGNkUlXxYFdUYGQrsVRPMTcvQmLZYjUY0VZLs1UrQEYv7TcIMSMEglMyrRTtYSUJMiZII0T3AicJgVPjgERVgzXXIjTvc0PLUmRsIkP04RSZQ2ZFIyQUYEagEDdw.ULUAkUwzTNQwFaiASVWQSV5EUSsgzcJsFVxMWMpUCYyYDYTklT2j1TkAiZxfGRogEbpMkYYY2Jh4lc27VPSQlS2TUQLE1ZRsTMg0DUs4lK0IDc1vlQEglV3oFU3XzRnsTUDgkKDQ1bPcTLUgjQNEDMGY1Y0UlYSoGcPkFLlQVUwEmb3ETZTUkYIgmcNE2Yow1TVkzJgQjavjFY541T4LGTZ0zbVEkVtTmT5oFYMYyXz4lY3DkRtgVbwc1cBYEVxXTLLkVT0jzMmUlYFoTMx7lLK8DS2gzL1XmaWU0atclQ5AULjAkLtf1JxrTdY8zTIQmTBEjUVkSN3XDa3oTSVklPg4VYoImRtITQLA0X4fUcUIVdV0FbKshRqIWLFEGYRglVwPkdEMUMEklUOslP4kVNNgVTnkFMOkFQn8jZCozZZYlY0PUcEI1QVcSaLYWS2c0XzAGL08jP08TNS4jdZISVD8lKLM1YtcDZhIlVTcSM0IlY3bGbqflZtnlV3kSX2XUVYwVRC4TcAQTaIcDVM8FTR4FTjciVzEDTxXjTCkiLtXDdwjyTqUiLhI0JvAyM2EEMhMlcno2T4fFbvPUMtjUZucyZKM1JZISNYYVSxEUZiMVbDETMK8TPEAUQyITLQAmLHEEd2cWN2bUQHk0SvjTa1fDNkc0X0PiUnIzRycjQzcicg8lUugDd5Y0RKUScNoWcBgzR1EUTD4TXzg1UGAybzgiXAIUMyfmYzjkMXo0MvbUUkc2YynjRtzjMlY2QwLVargWQwUCToYGRzHEb3QmbhUTNLk1LSMyZrwDb54xJIMiLt8Td0cVb0LlL3EFRyQWXMsjXHYVcpoVRN8DZv0VYXwlXs81JqbmSsY2atHDdBoGShU2UwbWMTMiRtQFR2ciRYMGZlYWaUI1aHclMVslcV8jUGQWYyACRrMUPlkiTTcGRq8lKrQzZ2o0ZDklTwHCV2bUMxojRYU2XvwFZvf1XqkmdyIkdRMlR4fGavHlYjUDLk4Ta4PzLGICLB8VQwPiXHM1MIkmRhwFVZkyaLsFYwL2ZYoEU4IictnTX2MFSFkGMsE1cBgUbzfzMrclavX2Q2MlaXUFRJolXTklcSciM2okSYkkTycSNyjVUMITZycmV40TUJsFbIgGM2g1SP0VQBY0SxrhYBcGZE8VbqcycUEGQ0bTLHgkSq8FREgVSYoVav3xLVozU1LCYzQiYq8jVhQCSyjTaWsBLAgjXIkGRv0Va2AiXKEVY0H1aXc1bvDCZ14TQSkCNSMkbMQWasEWS1U2Xq.CcqcFTyLCaFQVTyA0SqDUM2AkLREzXV4VdxLiXIUVV4gldjEmYroGb0A0YroUSJUWLAUiS2HUQBkyZt0jbyoVcCg1Png1ZQkGcEw1TngkMqzFMiwTXxMWPkcjcyDTSvQCdyrhPhQ0JP0jMDcGTy7jKvQ2PAoTSwvVSZYCU4IkQSkGY3U2bq7jc0Y0XRQVMyIWa1MCcqbVY4LCZTUSbKIFLDc0XvUTLxAET3vTaIc2aZkidp8FSOQyQjc0YkEyQAMmLVYiPNoVM0UzMqvlKJYkbngETqTCTiQlVrIjbKAUSwnmX3HDNEAUb2TGQTojQ34jYnwzYvQkTs8DQnICN5k1Jt.2b07FdKgDQmQGUmQVN4nmT3QjQuc2L1UjZpMyM37VZNgWQ33TRlk2RPIDMgcTa0T0Z3UFULUma2kGLDIEQUMSXwQib4H1RL0FYAMDQ54DcVMEa2ISLTIUPEQjKt4DVF4lRqgkUyUjZOMEZ1AGMTckbqjETgEDTwkFaG0DYFIFMZ0FNNQDZqEDcFYkcPI1Qjw1PzEEV0PyYBc1JtUDap8zQV8zMCAyZoQyRHgjRDkyZqczUvnWaSs1TtvlcWMUMXIURJIzMzkmRr8TYykFUn01QUg2MEcUUy.yRBMzXtYkMWAULPkWRmkzcZgmMDUUdl41UJU1R3YDVqgzayfjStgGasMFLMQFa0oFQxIVRTImMlYCayD2TvUDTRoGYHojdHM2RqXEbiI0cK0VNqAmSogmZjg2RPMESOA2My3BRzjDYNYiQEslMCkzY1IVMoE0XwkiZJMCRBcVSRoVNCoFaZMzM1bySt3hM3DUPHo2RzclThQyaIc0cHUUMVMlT0rjXwcWY2sVSWoURUUFNqbGU2QEQz41MoUFM4HmSGMGV2MWYWwTSPYSVUsxQ4v1LAsBQzLVdCgWc27jT4E2SncEYzrhLYU2Pg0DV4.WR4j0REgFYJcTSgAkXyAmUz.EQ0cDaDQVbWgEZk0lcqM1Z3TVRAoETGQmaoYTbzMjZUcCQKAUMQs1bq0lTCQkaiojQjgSMRQlVpQlbOE0PG8FLX4jXTYURMciPWsVMwfDNvs1RqciP241PysFUQc2Z1njLj8DaFslYw7lSBolMuoESOM0JkQjd0MyPL0jSCQGYZomdBsjbtnzSqHzUPomXvYkcSUkSz.WbjIGLQwVdlYySgM1YD4hcFgUdUMmcjACZWYzaZISUpgVLZMSYT4TLwomMlYSL2.UNng1LlcScKYEUZEESxDzXgQ1bnE1cvbEQOc1UAAWQuw1LAYlKMkTc3QiVookMm4VSHk1RuEEViMCbQYGT3HzPIsjSOokVnMERzkUNmgTZF4jdhMjZDgmPwnVQ1kkLyjEVrESUXEldWAmMYkWVtbEasc0a1kFMkI2atzzQ0k1Y2QELvbFVkklQj8lLM4DZVgiKvrRS3ozPQwlUzIFVJcCdvTSYzzFYv3lb0ESYBICNyIVLkUzUlYDMp4xPqE0QN4xQzD1X4shPiEGSWEFMsY1T1EEUGImXzLzRIYyRzMVaOQyJvQibLQWcy3jMzM1a2Imchg0ZCk1MYg0UJ4TX1HVat7DT2kVdXojdiUkM3.CMN4zLxMkY4zTcNEDVtjlKxYGcGUEZukmKg0VMJo2Tzs1cK4TY0LkUC8VSZoDQtQCT0LlcqXTSoACYwMiLxXzcEsTUPE1b0MlQWkCTsUGT0rDLVsFQlMkSEk0JHQiMQkTQGo1cyIVM0jETNQkP0H1cmsxJRQDLBMUUkMiQxvDTmQ2cPQFQ1QyJuEkMrYSQIoEULkjRrYlM1P2Xr4hKnMVYVM2UkEkS4Lib04jYCEjaGwFLw4FM2UiZmg1Pzz1U1QzbkU0aqb0M4XUPLUkZ3QyLIcSUFAEaWkiMO0lMYY2LLoUSx.ibIwFbzT2Lj8FZukEQ0kUXsYmXQ41Z5shZqAmdKQ1JNMTbjE1ZkUiVpMSPZcyRuE2JPczJZYiLsUkMXEjdz3VS3Xld4kkYjoGLqACYqrVMqESaSUicrY2T581X2szQ1jFUskTP4I2QzjyaRIFaGUTY4vlbvjlQoI2bwTzJAITXAQENOIlMG4zc2HTbvQSXmwzQxUGRLISdzAGZKEzcMoESR8FNQAUZys1TtPGQkM2Jzo1Q4UEN0LVZGsTdJcWYnUkcUg2MXoDU2jVajUybm8zTxXWYvMiS0EWMgYTVho0Z3EEV0QjRskWbZc2bZQicGklRlgEUF4TZIUkPo8TXTQEZrgDV0H1L4szb2XUN5YyXLgGbHc1SyUzLikkZLIFNmUkdUk0ZYUyYKQSTwjmdOkyU4YVVyYmbIUyRX01MJ4xZKgiXCgkR1jFcpITVvcDYJk0YvXzYwDjV3gVUtLmQ2kVN1wzcro1YoImbjIkdMk1ZqL2RNASVkoGYNwDT1PkUqQDZv4RR2EmSqACbMoTRUUjbP8VRi0TRqjjLLUTYV0lbznzMEkTQvsTSmg2c0IUXqg1axsxR4fkKx3laZ4DVzU0LxEWMishXTEGQYETXQoUU2o1XPojcYc0RnkVSg4xPsYVb4MEUgUEd0j1QQc1aEYCZPEiVWIFYXEGUOkyTqc1Prckby3jQLgyRPQld2kDVTIGdjcTarMzcpsVLlkib5sjSQ4hXwkTSSckMK0TMjcCZ4YSYsczZ1IFYCoTV4cjUwPkSrszQQsFMpYyJ3okYTIzSx.GcjYjSyPWVHc0XJgGctUUUAIEZXcEZFIzSIcjU4vFauQWaLkiUHs1PnAiZyoTcvjUYq.0b2fDcFECcsklaGMkLKsTVzkSY0fEdgclcVMUNA4jbUMyZp8VMKIzTqkzUiAkLRQCdw8DVX8lMnEmcxXidpMUQnIiV3MjdvI1MlAiZJQUPhIzTnc1Q2gVauUkPYUTTvXUcPoUawMyT5EyTzUiRBESQk0FR101RZoTcYUkVr0FatsBSIkiVNIEY1kETlYzXQMmKL4zZisBMK4Fa4YkUlIySzHmb0kVLrgTYyIiP3kFMMI0ZUMzUYcGRTsRNyTkQPIyXSI1LjgDbYQSPxTmPuoTLsQSXyISQzXVUGEjUoo2RzgzLt.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.UMRszPTcjduMWNUIWS1MkLKsFUhY0JmcSdtfmVTQ1PFIVdQgUX20VVFUCQkgWPycCTAcFd3cyYUQSS37VUUclbwAyawUDVYQGYl8jQoUlQ0HSQBgDStz1aLokdukCNI0DLCciL2.Ect71cAcidhUVTWoUb5kSXJcVRwgSLpMjX4nWMWgjbAYzXrQWdEUUNq0jK03jQlUCaIgmL3MyPzEULtEycm4jcoI1TioWQ0HmMvvVTI01J3k1QHgmQxEzaTQCSvY1XtrzT5kkZ4PEUPMWUKwzLFI1YtAyYroGYNQjc2DWbgYULugWaRcmK4U2b1QjTsE0Pk4la4DkQvrTVZoTU2cFRoAWctL2PPQiUAQDM28zRskiYXEkSzYSUvrTPAgFRzk2MwMkMKkkcrE0L17jczQUPhIlPjo1MxjjcX8jZXgyazLWazXSPqb0Q0ISVKUVNKwzS4nEQTYUUAQkd4UiTxLSQYkSNSQlVvzzbJg0Q3UUcFMyQtISYzHETP8TR5MFRYMSUlkiYzHzZ0n1QDYGVKYFb4ESZSMmdzYEdv0FUEkjKiQzajMkckklKC0FNHAWPUUkR1kmSZIVN1sFV5ASYyESc4olKmgVUmEzSpk0MqEiK0QVT1YTQPoTTwwzcgg2ZpoFMgEjLIolPWQGN3v1c4T0SzbDbzASYIU1Qg8TN13xZvjDZwQEZxMjLY0DY0w1bKszalkTRxg0TzfybAUUYRkyQK4TQBYUMLUiUM0DT33RZicEVsEkL2zlcCc2SN4DZ2HTQUgVakUkKBgmTGEUVAgGU2DCNv3RdggVVwQSMpgUTKgTZ0L0QhcVUT8lMD4hM2EUY1ozJsIkPgkTQxXVLpAGTAcjQuUFa0TyMvblRAciQ1AWSxU2RzYWSjYibOMFVWkWTxM1TEk1XBcTQh4RPuUVRPAiQxvTUmgyJzISR0bCNFUmL4TVYTQGVkcmPzXCbSQCLTYlbjUFcpMlcCQlUFEyUHcFZKoUQLcFLKIUdWgjQZgER0vzUXYkTZYSd4HkSCEjMiYyJjQWR4bGcjwjb2LUdOAGUqkyaFA2JzQDcO8jLzA0bwbVcvUiMRkTRwTTSzrzav7zYDszR2gkVQkyTBQTX5ImRvjSbu4FMUcVaXY2ROAiKoQzQz4hP4EFb3X2YyLkcicVZRsjZ0jCcEEGUgQyJv8FcQAkZ3szJt.yTAIzX2kWaCUlbqYUSpAUN2X2SsoFVuYFR23lLCMDZ2oTLtP0ZxoDYuszUIkDQZ0lMpkFNQs1JmwVQyoVbWIWZYQEUjYiU0oVY1YVMGUlZkEiSwUzamgkP4PGTuwVa2A0R1ckTIYCQpIGdlgDL071MyLkTYMmY2U0QE8lRFIWNkU0PgQCTigzJybWM4YFcEYFMuQFZFYlPkE1XxzTUDY1J2M1cnU0QyblaScjXugTRxTWUKsBQGYkTsEkSKc2RYcmblYWTVgCVlAic0MEbtL2Z1fESu4TXPgDSigkdOEkcPEWSusTdwMmV2ICaTUicDImb4bkaZkTLzoDayMWU0g0JCcUY5sVNlk1P03lK4n0Sug2cr4DV3oGcEM0ZPQCMgw1cx3lLOolV2g2UTACS4DWPDEFTI8DUZIzRzLUQiQSLyciSxkiMpMycvM2QjEiUVckYwkCdgAmKp0jbtkiM1YibAYSVrsBMBIWPyEmVFIFYyMWMBc1Zg0VUwLGZVEVV0wlKpEFQyD1SvrBYm8VVKwjP0olXlImY13TMPE0Zn4hUqHVYSQEcvclVIklM0cjKr0TPw8zXqLCcXQEQxc1STciQvjiLDolRHshSvoDMN4lUBEVY2cVTNoTVqfzb5k1QOEEbRIGQqHGZgEzYMczRCM1Xq7zbTQjSx31cUMGbtTmVMgGbPwlXJECUVMDdFEER1IEc2MSMzfiaDMFNqvjS2L2U3D2X0wVb2nEZjU1PwIyXjIWPPkmPiIEcmUkLvQkbgozUE4hZvXlSWsxYKkCQ0cCZMU2JXYVVzDzRu4VMzTyJnQDUhMlPlIlVwYlMmUGclIFRLwzQM8FTIETRJgUNA4BR1bjVUk2bQU1XKQWNTgkKqomR1fCSz.GQZQzLUk0Y3QmLJkkYIo2SRIzLx.iQNgGdgETTEI2c2gSQQglPmUSXGITMtAGbSoDbMI1XikFVQgmR0k0MhM1JlIkSKYCaRMzYnomQpgSa2DWZr41YZgSbtzjMyf1JXgkYvoWQ2ImV3LVTxYGaCgjLx7TVFsFc4HCc0PGVLImU5oTQyIWVyDzSp0jMnshURUjRvclPzDjVCc2PBgzLtXidRgyTSIlXgQzSUA2aHkUdzk0UGs1YGwDYXgkYzwzcL8VTAMVTVY0T0.CMQQ1ZCoGZTkkXUIkRjMSd4cicqHTLQEjPr8lY5shRZUSM4AUbWISaxEWStUVSoASMZIFdV41cV0FcWE0UtE0YkAST0XGSZUkUIUjclUkQQw1YDYkarU1cjQVXx3jaiQ0ZxTEZEEiKWUDR1XFMvo0ZksxZwEFLHEWUtImUkcUPUk2byQSLtzTRCkUUNwzZBcTdRUiYtQEctY1aEsVd04FUUEmVJE2P5E0bMsFQHMlQJQicgk1ULMEYv4jdCg1XEE1MrcWZZYkajQUPE0jXDI1RE0lQ3.ycUkTLrQlSWc2XpoldloDZ4A0JRkyaQEGTJckTjMEShcUS2jmP1sTb2MWaEUVYwnVdLgGLSU1PtjVTBITduEWbNIDRA4BSjEmMpIycFkDLsA0ZqfTUZgCMSkkdsgWNyvjYkg0XqYUUgcEcYIldhcWPxIiUWQFVYokXRM1PqkyLDkUavgWRtnjd0MVbxkWZJkDV4j0JBsRXssjawrzQyXyQXsjcRQyby4Fb0H1atP0JRozZ4X2Tqn1LHQSSS0zapcFUvfkd1Pibl8lT5USV2DjSFcDaVcWR3YyYvrVbgYGU5EGNmE1coMSTt7DUX8zXqnUUq.SR081SzfibCEkP3U2aD8TSCUSZ2LSLsM1a2sBUxHWXtIVUtHUczQ0Y2.WYvglakgEbXMmTE4ja2rxcLg0YFoFV0IzJvY1JF4VSEQzZzAiSlcEbxXkdlQVdvLkbqXyRoAmRNkFSyImaRsxMtcDazoDQ4YSVvQjdzDFaEQTT1TiZ3.ycPMGcyn1a4QDTkkmVKQzUqjWdpQ1P1EEa4HmQngyP2sVX1nGUUASRh4TLyTkPOU0aVI0YjMkSHM1c4ACTxT2aqDGaCUlVHkCZxIVbCoGNyHkXtPkTRMSM1sBNQkULUciRB4jbIwlPUomQyPyYEoUUtH0MgcEdXgkYQ01LEoFdxHUN0cSXM4xMsQGNy4TLFU1R2M1Q4vjZGQkUYAkRr0DbPoEU2AGN4PyLIkzUwHjTZUlVhI1L28zM2DSRqcyTEsTPxslPyXCLNITYNMCZ3oWPqEicxnWSIMjMDkDNJUDQBoTXPMEY3QGczIiRn81LOszLwjEc1AGdh4RavE0QX4RVEoGTsQidokEV3kEYNcFLWE2YSAyJI4TVKQyJK8FYsEyTjEDYNElP2QWTyXTdmMkLjgDMrkTUAcmRkMlKWozT3cCUVUGUIUGTygFTBY2R20jdXo2MCcCcKIDb1bUblg1ZicGQvcCYBI0crcWLjcFYyQCNEgVSYE1L0QmbwYFQwUVcxwzPYcSSx3Tc3rRNZEmSQcUdvYDS1fDd3ciLkYUdsMlbCM0SwszZUokX0MzRAsFVXsjMnEmShEEbSUVLuglKMYkaQkCZJAUayDlUrMSNrolUU4BdGclZmIjbCo0STUGZBoVRo0TSngUSMokYJc2YDAiQ08zbkciazIWMPoVQxfENqIjbtM0MxjESwgFatbyZYMyLlcDap8DYRc1bUYCM5UUamIGRNIUNwfCcgwzMMQURyXTa3M1YGQUV2DSQ0oUQyXiU3PTQ4bWSvfkXZolRj4lUyQ0SKs1JUcUXYgzLgczPmgiUKUlXpQCcKUWR2oERn8VMqMWcQ8DYqojQZIjaAEkR13lcKI1LDojQjUDT3zVcxwzZAITcCcTVR4TTVEzLxfDMzsjTok0YxQzaVQGZUgDUlQWLkcCRpQiLWgEdDcSUkYTSXsFRNcyQqsRSPUVMMojXvgVNqb2Z1IyUQcFchMlRnc2YNkWLHESN0f0RqXVVOshRlYDVZQkTVQGZAsjZiIDUxPWaUgSSGUGM0EyR001R54hPNEDSLgWQrsRYqQjY0LkaZcUSDMmZDcmaqTkKH0jS1LmbwvjQQkSV2D2JgMUQQg1PY8FUwjSTxbGcxg0QOUET3TyJJUSXIoUPVgWP3v1SrIWYXk2PVoEYzgVaXIlYJESV5sDLyMScxPCTVAGdqMkdrYTbXUjM2XCT2vVaRQGasUTNoczLtElTsMEM3PGZqDmdLgyQwPCTksjU1zjcQU1PvETZMMkLHgDL30zLsIkPmgSZWMmQNY2JqY2RnMiQqIGdrEkP2XzQ48TP43FVUMFM2MWbl8zL2w1XhMmMvUyZoYlYoUWTX4haqoGT3UzROQGb1blVYYkLLkkY3cCTvYSZ5AyaVgCa2EidCEzZvDjbqYjaNA2P4gFbtXUcBICNLIjK0DjY33xRz7TS44VLvj2ZVMGNJYkRnoTbUslKVQGZMAUZqY2ZxX1RFsRVVcjMIckQNoDZ40TTSMyMWkDaHgkKssRU0LmXwPSU2XCVCcWT3YUXPEibiUVPjk1UZwFNlMTaTcmM2YzStPDdJ0zbPckcNgSYxIlM1b1SBQ1JwUES0PVQN4BToECctLmcAMiKOEUPTgDYkYiSUglavMkTEwFRWA2L3IlP1nVStT0QpIyQ5EiV1bzayQCTCEmdyczMtQURicFc0LzZ3LkMRMWXLUCaxTiazX2Y0U0buomTrQjPGoFQzv1PmUyaSUSbPoFNhQlUW0FNEECMPElKM0VZuIFaU4BYnY0SOoFQkcjVLACLrolaxTyU3kjSyTGbosTS1.UN1oUMq0DNUMjPNcmQ3szbKAkR4YDdRQiSwEUQykjMT0zQjUkXS41MFsjSXslPvUUV1MzTOcTdm4jVxjmXloTdQwjdkQiQv4RMw4RPJgzRjokYBc2QlolRtMyaTkGc58DMAEULVQiLjYlKvMDS0c1UwfyLko2ZsoVZosFdvDkbt4lakg1aYEmTqTTdtbFcOQycOMDY4HSPZMDd3Lmc5YkTq41ZsgjRYMCb40lXUUyRjombYgERrElaoMWYqwjYyECamIEYZUDVvDSazb1b3jzJRc2TZgyczczRMIVTxUCaNckYGUUNxgyYFEEMWckdO0TPNM1M1M1ZpQmKFwVNAMyUQ0lLMkiRBg1aRYVbNgEUZETcG4lZ1QVc1nDLpgkMqDVc1nmaoQlPMU0TWwjSBQWMIcCbj8zRzLSdFcGd4LUUjAkXIoEUhomaOQiZwLTZEkWP4E0J0rTYtPVd1XVazgEMggWcYgCLFMVPkc0J4XjVMg0QSgTU34FN37jPGk2Pz01aJkULnQlLRElQhoTTq01TvYyZS8lMhMCSJ4DaQwjRznTdR01PAsVPDgkZ5QEZOckcwTic5ESTzDUSzY2S2w1MscGMXUiXv4zZTckb0E1JqrVXwzDT1kiRJASQRwVYL0VQCQmYUUDZDUlMVwjLzvTchU1M0QmKHoFNAkmQ4AySzTEUDk0cggDVOs1T4HGZLYUPvvlbzHTNX4jbvzla2PkS2HjSWQEQ1jiUyQ0Mg4xXHQkTTESLqAkdMg2RgQiR3bSUKUWYRMmX3fkLFcEbOYSYYMlcvoFMUIVa3n1Z5ciRxnzZpASLlUUN3IEbgAkRkETLrsRdxYEVXoFUyPzJrc2QpMzbHwDNRUmSyMSXvg1Y0TzUuYyPLQkcpsxYRUCRBk2SC81b1LDQB0jdosxaJ0jYpIkPjUSahoWaVQVP4AmY5cWbsoFVXglMp8DdxXjPtHjYRMCawHibCkVSyDmRvQWVjM0P0A0XNUmckIjMWIlcyAyJqDkU00VVYEUNw0TYzrxTyn2ZwTyR3vTRPkUcoAkU54VXMkzZyETdyckRvYyL4MlZ14jVZA2ayIWVkoFN5wzT0XCLro1SiMlLQY1c2TUNwflSwXjXBwjPzfzSGszXzDERwUVdxbkKwA0Z4kiU2DlaMIUMvA2ZkE1Y4XFUPkVZysFNJA2PAc0M34FSRQSU1YidukiSzkSP1E2ZIIjTUsFV18jPSMVN2fDLkg1PzY2LyDDUv7DSEA0QqLEZqj1UPcyTxojZyrhYMc1UNwTVWY1Sxf2X3cTdtQUbn4VcKciUQcGboESZ0XCQDYCMoU2XucWTtLTMUUFU5QlTDMja0YSXxwTcQwjLDMiUTU1coUkd4YiawMFZ4LGNVYmPxDUSKgEZwDWNCEWZnshKj0TMtb1U0PTdMQmP5YDMGQTSq0TQzT1T2M0SWkGMNwFcQQTdNMURVElU3ozUxH2QhYzRxPjRIY1bvMzSoMGYrUGT2ECYVEmYtfCM4TTNBIiMnMGU0T2TZMVcIgya4vzPQwzXYM1YxUFUZgSL4Y1byMDMrYiVRAmXAYELxflbCIWRKkEUSU1MT4FbyfUQFMSRiYmPRQWYnYmdrcWQSUjayXkTtASUzgWaNcWMOoGUHsTXwjTcIYkMZMycDIFMB4zQqDyMqjkRqTWU0gEMmICcRUGbE8lbTElUZU2aJ0lSxDCZDUlKyIlct8DaxUSSCoTZZEma2PyJZUSNyMyTpojX2gjKvT1MxHzP1gkbJUzXmICRXY1JCEyY4TUNGEzXuo2Y4YjYUUVX2bjaAEEalEzY1vlSm8TLqnWQlQ2Lxn1Szj0QPsxUjE2QpI1c0sjQzjCTjYFLgwVXEgDLSs1aoIlatHSZqgFctMkaQMmcyLWV0.GLsoTU2.SY2jiQBU0YAEGbIg2aU0DRVYyQloVXwolQxMzbgciZGMVMPUVaTYTZWESbpcSUnEyawg0a2I2QloTV0o2PHU2MrQzYVY0MrICbqb0JjckUpsRR4UTLzrTXkYWNCo0TQEWLyshdNsTZUcVRvQVaDAGZLIyMpo2PisDNkoUVyglZZcyYYg0ZTo2cKUSUlkicwLDQQ81STYWQwoVQogSN4gyMSQlM2bVQNMEdlIjMoU1MCcmPJkjRB4lQz4hLPE2ROozMxMyZKEjbgMiVKUmMvHWX27za5cTR0UjaGcVLEc2JOYmagESLU4RVhgiPEUzSBkENlA0JBE0Xhc0a4kkP20zJuk0MDomYHY2QZYmPFAWNtDVdBY0ToQiTOokTxDkRRkTaykUY3bVLwIUUzDWRRIkdxEVNFoGY3D1YYkESNMUVwIDNLo0c2n1blAEMFQEQqgVQiElZKcScyjSNqbyRkMVcuo0RhsjKr8zcNYGTNkiTP0lSx8VZ1Y2btfmaqU1cgYFUkYSaRUyMnAGb0PSMwPzRXoET4XWQnYEdqzDdiQjaLQ0XDYGd3nWSQIDLFs1a0UkLDcWNNQybkQlYYIyJYcFRDMTQ5EkTFkVU1.EbQ4VLMU1aosRPXYCN2XCYtYEQEgmU2bGNHk1RZUDMjQjXoQEQiE1bxc2avkjQMMyX4nUNNYkLxEGU1DiTyDDTIcWPHYzU1IFRNshZqAiSM0TMOwTUxshRIUzZAUWXiUzU0n0UtgjTH8zTHcSVSUya3jzQhoDb4XiZt3VXs81atAENwMEUvnUbYYzYRwTP2PmQjUUN3fDdWM1YyHyJKkiPqXGTvj2ZSkycyXUUDkkSR4Bd371Qr8lKHUTX24lawvDMzczRso2UuEyJm8FaRwFNsYlKXQ2JL81LvHGaDUCM4IEbiEmdQMmZxYSdyozSigFd1UGZ3gzQ4fmV3LkdZAWLNszMCUTPvrzRlIWXRoWSvPSNJUFMt0TNYwVLjoDRqI0RvbVa3szM4fWVJIycP4DVz7jZkISYTgmRqnUL2gVLBAGLNYza1XzcKMyUYAEQzcETKMjRZkmcFIVajw1J1ckdk4Fd3nGVIQWRuEWZTkTV3r1J5wlMWg0YlUTRuEWLXYSRxUVaUQkLqn0b34DSvgkTqnTdyU2SSUidpIWdPY1Qjc0bkYyazcyZvUUSvI2YkYUMtLFSQcEaJckS3nWRJQiTSciRksRLsQzc2TDZsEmPvUmTAw1MZAWa3vjKYcEagMkcyHjVwDiaGgSPWkyUw7FQOUCLyozQnU2bhkmT5USVDsFbwTmLJomaMQzTigWYxcVZHECRRUyTWoFRHQ1QtYTRJgVR1fSLsQiUrUERk0DZWITQ1AicPMiV2HFcNMFaGYyJ0sTdzI0coETbX4lR14RL2cSXj8zQLE2MzQjVlElcZshZpMzXOEWLKUSTLgjatcESxj1MmkzczfjY1jidygEUNgGM03BSNQEVisjRO4RZtTlL1QFVIgmSvQGaPYlTkIWQLcDNyn2XWEkMWQGZNgVTow1S4f1by4laZwlahsRUDMjU3bld14FMFoELxIlSvHzZ03VR3YkVCYyMDkTYjwlPAkEVoQDZzgkdR4xQyHUa3DSbYQWdTkEd0H1X3MyYlk2SHcWQNYTUTECTqMSQ0YiaWoUL1M0ZlsDU43lUygDLvnmMBQUVIwjdT4zY5c0QNUSc2MjaMUGT0PSQNcyRqIja3slXxU2cyPmVtbDTzjkTp8DVsMSNH4hZCgUYJMUNBcGbZckYO4lc1LUY03lZSQVQmQ0P0oVT24VMLoWMjgGUsc0R13lcNQCLvLFUtISd4gSRpgCajw1Pr8zbGgDZ1g0XScyMqkyTAYGZhc2SuM0T1ElUHc2QqHWY1UzU3YlTv4lY3nTT0DybLE1ZicjQ0wlLNolV3sjQ1k1J3HmQWkmQGcldK0TLl0lV1Q1TE0TMWEERNcUZmcSVrckRqQzX2MGZ4LkZK4DcrIkQgoDY5kCN4EEdhQET1HiQSk0XTQiLt.CUW0VNpYELPgVaBIjZYQCTEglb2g2JvMSav3RVh0VQEojPlEUQuoVZXgyPQ0TbzTjbzgCLFkmULYiV0ozU2bFcJIFQLoTQhwDTx4TNOcCUqkGULQDbyUSXSAmQrIVUWYkRYQCVxn2P3rDNvPCMmECLGkyJwMSUBgGTVAkXxHCTvECSgkia3cCa3jUQWQSaYoUZzvDdznWc0UkdJozQhMWdXwVRhE1RkE2ZzLkV4ESagwjbikGS0nmVQA2QuA2ayHGUlUzcPY1amslcWYCdSkGTJITNCwTXDI0cpETMFYiZBcEa2g0ZTIEcSkDV4YELAA2XzIzTBQDRxP0JIUWSiYlM0giVtfVNyjicg81Y0EzMHMCLqnlbQE0YAcCUXYkMZQWR4IGTwHmc2DVLgUiVy.yRrAUQU8zaxUySHQ0Jr0zPUQiZSk0QOUGN4fyU07lTpoWLPoVQIclL2LSZFcSS2EUZV4hMZoWVxDWLBUyMkkDQE4VUzTiXtLkUH8FdPgGUQomLZojdgckTCoka5MVS5o0aq4hXEACd2nEa4blbXgzRAUESiIDUEsjLXo0X3M1QkgzcEUkUqk1cAc1TJM0XssjM2LUMyTiT1TVUM8jSWoGQzUSdAISZEcmcBgmcyA0ZtHFTp8TX0YFVDkic5gjblQkUUslZ4cmTxUkaHkyR5k2MHUVd1wVdI0VatU1RI4jLOMzPQITRRolcyYVZvrRbJclRCEjRCQzY2jza4ojSQ4BTVshKt3xc0UCVs0VTPUyUBo1XuM0bLcCMCEmToIDL28lV3Q2b2UjSWkiUg4RS1zjS3IUb5UmYr8TSFkjXTcSMKo0Yw8VNj8zbVUlcSoETybzLF8FdqfVQYgUaVgGMnQyLxkDQtojcz8VTggFbtQkPAM1JQwFNvgSVDkFU0YCdo0TMhAiY3o1aU8DbzjjbxslLTkGNvkCL0.0RNMjLvLFaxPGQEgCR2XVUQ41Zz4zbxrjQBY2L0f1PnomYtDlcugWXggTNOoEUGsVVWQCczjzTGkmUP8DMMQEZJMWatHSaVcEbt8TMIQGaQwTX2XjVBo1QZckLAgiStYCaQMSZRMScqckT5MENQYCR3AESHAWSyLSU1vTdy7FZZ4BLhQ2aLMkQLkjUrcSQlYyL0Y2aGcDLDYzXqAWMRo0SDgFSJISa0jyJtg1MRI0LkcyXjUSTzkSRy0lRNMkTyXCUvUVRTIzcxoGdD41aPszRAMkMOk0bLoGdVEWRFE2c0DUYNkWYHcTN4TjPogUSCgiPuEiZZYmZIkmTOYyUAQmX2MCNvczbLMyJvU2XowjTLk2R2U2ctHlRXcER4oUdwbiYx4xPs8Dd1glXlUGQwTEQqkCZ2cjSjk0R3jTZsACdqcETVUSQUYSSyLFSybUMJIEVyIjRu4lQt3TdVE2PCU1S2XlSq41T2jkahYiR1bWaVwjStU1PmYTZ5ojU2zFVNMmTWwTbFYybiQ2YpEWN5sDQkcTLOQiK4.SQyD2TukSb3ASM5QUZow1Rww1YXgkaW0VcTQDQSIiZG8DQBkGaCc2U3zDdDMEdyUiRrI0SZMCQvzTX0H2LqUFbx3RXBg0UvbzRQ4xbVUGUKUkZGkTZQk0ThMUVN8lXlMTSlUiatHSSLgDLCYlU2fWRhkjQlEkKJgUaJQCYvrzUl8DSkQGTr8VMqHDSms1b2.SQZYiSBIGb2DyT1fTSuoTPNIDbJcjT3cEVzPDal0VYr4VYYQzZxY1SmcVQhIDY0f0ULQSZIYzJD81ajUjdTYTZ2PUdjMEY3QTRMMUQYsTdXQmdwL2LwnDRpc0UHUTPkkVbZg0X0fWPK8lRV8VcHomUtglaxYlRBczSCckYwb1aPQVSXcmP3gSNHwjPKEiXXUmMmkDQqDCYvI2ZYMEQqw1LOgkayTDb43lQNESNBcmLHcTQggSbxg1MUsVXzMjVRcGY2UES20jTtP1YQ4FY0YDY2cWMjAkctXTXm4TTQYmVJcGb1XiMoYEaJkzPWQjMDoTNGEyc371XzLmVDIyQgcCdiQSPYIWRwTVaUwzZ3QyYUsxYtsBdxgELq01UlImSFUUbs0jR4EWTIAkK0AiUlczQi4jQxPkL2HEZBszQqbCNtIGSWYUdGMDd1YDdVwFMxjycFUFNvYFT1LiKxzTUYM2aqfEQgslXTolTqoUdkETLF0VVToUdFkzbMI1XAckUGkjKPckKhYiK4MWPVgWayDGSHMmXnwlKhUTMwciU0MyL1bjT3LlUN81P08VTtHlKGIjUAIDQTgTUtISMF8lcj4jX1YSMCAyQs4FLMImLVASPwYTXkUTTYYSPQg2SzXGZP0lKiE0Y2IjbIY0U2wDTwT0TiI2YzLidFI2cogUTJgSMv7jUwECMgw1cFUkYzTkcWQSM2oUSzYFdHAyYHIla4DGQQkFNsEWQuQWZ0XyTzgGcHA0UOMVQGQDT3gTS4PmTU4jUIcWZSYlM1HDVqfEaWMGMCQlQsQlRpIWP0j0ZiAEQwcTQrsFVkMGSRkSR1kjSp0zP5QEaqYzM3o1bMgEMDoFMJ4xPVETbrIzUksVVoEWa4Q1byQURGgFVMEmM0vzPpcjZmgTVso0PRshTuQ2c0gCYlUjMxshZVYFVqI1UxfkXTEyTFkzU1YzX2vFQqbSNVkmXSoWTtD2aXYmb1H0QDYlXZgzZMsFbwEyP2DmZIglUxk2Qyo2P2shcDg2Y0g1XOM0ZLUiTgYEMSwDMuYjKIUESlYVdwfTLscjbsgzTC8jPMYzSv8DS4fmKzMzcBYWQ3bCVNYGMuQidYkjP3XTPNIkR4LWLqH0MLkWVpAWaWsRZvozazsjKIsTTV8TL0g0b3bEaxQCS07lbxPTT0EjLOY2LVgyYTQ1c33DRjUzXKYCYqgzXSkUXrklKKMyYyzzZBoDVrgza4X2SyP2UmMEZB0FQWk0JiUjYlMjcJwzTwMGNBkGMzbmdRsBZ4HDc0HGavfkSoIkRLE0JjcmKV0jShg2PpkCZh4TZtTmKp8TQ0MEZSYyXAYTUNgDQIwlMAYmZUElT2LmPCUSZ2njcSEVbocUUlM2QMszbjkSSQwDbVsFVDQ2Lx.ESiI1ZqbkVWQWXJMjQFMVYu8DRHQmbzvjc0bWVw4jKlckSL0VLNozZFA0Q1j1L5IzP0oWUSUDNx4BbmkVUOQWMqD2UJgiaSIVN1XyTD0TZKMUXgEDZqElPwImM2cCdDMCbIwjQ4wDTMgDZv7lbjUDVIcUSFolPDs1SsQiYyP2RFEDMYI1M3nVPMMCU5UjKSc1SjwjYRQVcEQER2ckMho1M0LkLukSQyQlUTQWcwECRkkDRKYkZSsjKLMERX4lLUYETnoVPGwTaGAmQpI1Ry.ScBQTLnkyaHAibS01Q3HURog1ZDgzbIgTNSEjKt3hKDAkKt3hKt3hKt3hKpkiKt3hKMszZpMEQt3hKt31Tt3hKt3hKt3hKA4hKt3hYwH1azXkKt3hKt3hKt3hKtM2TJcDa2QWVpg2PJM2RsoVVNUybyITPt3hKt3hKt3BT4IURzPTPt3hKtDjKt3hKlEjKt3hKt3hKt3BQMUkTNUjKt3hKP4hKt3hKA4hKt3BRAola4bjKt3hKt.EQlYTZikVMt3hcq3hZ1EjLyDSXK8FZxYWVF4hKt3hKt3hKt3BQt3hKt3hKt3hKt3hKt3hKpYWPt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hK1UCckgTPp4hKt3hapkVd3AmSW4FSNgCbOEScVciczPzPt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKtPjKt3hKt3hKt3hKA4hKt3BRt3hKtXWPt3hKtHiKlsjKpMjKz4hKL4xLB4hct.kKt3hKt3hKt3hKtvyKIMzasA2atUlaz4COIUDYoQ2Pu4Fcx8FarUlb9.iK77RREQVZzMzatQmbuwFakImO77hUSQ0LPwVcmklaSQWXzUlO.."
						}
,
						"snapshotlist" : 						{
							"current_snapshot" : 0,
							"entries" : [ 								{
									"filetype" : "C74Snapshot",
									"version" : 2,
									"minorversion" : 0,
									"name" : "LABS",
									"origin" : "Kontakt 7.vst3info",
									"type" : "VST3",
									"subtype" : "Instrument",
									"embed" : 0,
									"snapshot" : 									{
										"pluginname" : "Kontakt 7.vst3info",
										"plugindisplayname" : "Kontakt 7",
										"pluginsavedname" : "C74_VST3:/Kontakt 7",
										"pluginsaveduniqueid" : 2116049625,
										"version" : 1,
										"isbank" : 0,
										"isbase64" : 1,
										"sliderorder" : [  ],
										"slidervisibility
										"blob" : "343918.VMjLgT1OE..O+fWarAhckI2bo8la8HRLt.iHfTlai8FYo41Y8HRUTYTK3HxO9.BOVMEUy.Ea0cVZtMEcgQWY9vSRC8Vav8lak4Fc9HSM2fiLz3hY2jiKt3hKt3hKP4hKt3hKt0zUZQWQt3hKt3hKt3hKtD1cssTPMQmbKEURyEGQzM0QzYSSgkURt3hKt3hKt3hKD0TUR4TVG4hKt.kKt3hKtfTPt3hKt3hKt3hKQM0ZpMEbA4hKtPjKt3hKtXjKt3hKt3hKt3BT5QURzPkKt3hKtDjKt3hKD4hKt3BTt3hKt3RPt3hKtPjKt3hKt3hKt3hKt3hKt3hKt3hKt.0PnUkUmEjKt3hKy3hXP4hKt3hKt3RPt3hKtPjKt3hKt3hKt3hKt3hKt3hKt3hKtXmKt3hKtXmKtvjKtLjKt3hKt3hKt3hKt3hKt3hKt3hKt3hKD4hKt3BTt3hKt3hKt3hKt.kdTkDMTMlKt3hKNQSNt3hKt3hKt.kKt3hKt3VSWoEcE4hKt3hKt3hKt3BS13jcxbERIMTUr0lZ2P1UwnVbkcWMmYyPt3hKt3hKtPTSUIkSUcjKt3BTt3hKt3hcxjiKt3hKt3hKtD0Tqo1T4EjKt3BQt3hKt3hQt3hKt3hKt3hKPoGUIQCUt3hKt3RPt3hKtPjKt3hKP4hKt3hKtbSX1LjKt3hKt3hKA4hKt3hYwH1azXkKt3hKt3hKt3hKHcmMtESc1QCZ5sDZFo2U3.ySZQlREYjKt3hKt3hKt3BT5QURzPkKt3hKtDjKt3hKD4hKt3BTt3hKt3RPt3hKt3hKt3hKtzzRqo1TC4hKt3hbVYyPt3hKt3hKtDjKt3hKlEiXuQiUt3hKt3hKt3hKt.URygEd4fSYEo2LDokZSMGaSojPCMCat3hKt3hKt3hKPkmTIQidt3hKt3RPt3hKtPERt3hKt3hKt3hKD0TUR4TUF4hKt.kKt3hKtHUPt3hKt3hKt3hKQM0ZpMEbA4hKtPjKt3hKtXjKt3hKt3hKt3BT5QURzPkKt3hKtDjKt3hKD4hKt3BTt3hKt3RPt3hKtPjKt3hKP4hKt3hKC4hKt3BTC4xLtXWSt3hKt3hKt3hKt3hKrUyStECQt3hKt3hKB4hKt3BQt3hKtXWPt3hKtHiKlsjKpMjKz4hKL4xLB4hct3hKtPjKt3hKtDjKt3hKt3hKt3BT5QURzPTXt3hKt3xQt3hKt3hKt3BTt3hKt3haMckVzUjKt3hKt3hKt3hKxTzMIUTakomRAgEbqfzby8ldyYSTBkkKt3hKt3hKt3BQMUkTNcmQt3hKP4hKt3hKX4hKt3hKt3hKt3RTSslZSEjKt3hKD4hKt3BTt3hKt3RPt3hKtfjKt3hKP4hKt3hKt3hKt3hdt3hKtX1TtPkQtHSPtfjKlIjKpEDTY4BVF4xYAA0XtXmQtnWPPojKt3hKt3hKt3hKt3hKt3hKt3hKt3hK1sxJqrxJqrxJqrxPt3hKt3hKt3hKt3hKt3hKt3hKt3BTt3hKt3RPt3hKtfjKt3hK1EjKt3hKKEjcg4xLF4hdAAEVtHmQtnWPlEjKt3hKMEDTi4hcF4hdAAkVtvzQt3hKt3hKt3hKt3hcA4hKt3xQt3hKtXWQt3RP1gkK2XjKxEjcg4BRG4RPt3hKt3xPtDkKt3hK1UjKtDjKY4BUF4RLAAkVtvjQtrVPtLlKpcjK1EDTY4BVF4hbAAEVtHlQtjWPP4hKt3hK24hcB4hKt3hXA4BTtvzQtTWPPMlKyXjKpEjKi4hZG4hcAAUVtPjKt3hKtvjKh4hKt3hKW4hKD4hdAAUVtnmQtXWP1ElKD4hKt3hKL4BVt3hKt3xUt3BQtDSPPkkKHcjKxEjYA4hKt3xctX1RtH1PtPmKPwjKPMjKF4hKt3hcE4hKAY1XtPkQtfWPPElKX4hKt3BTL4xLB4hLtX1RtPzPtnmK1EjKt3hKhEjKP4BVG4xaAYmXtnlQtfVPP4hKt3hK14BTt3hKt3hKt3hKtfjKt3hKtD0Tqo1TzDjKt3hYF4hKt3hKt3hKtDjKt3hKlEiXuQiUt3hKt3hKt3hKtPkY2jkXNkVMnQUQEIzS2cDNjY0P2bjSt3hKt3hKt3hKPoGUIQCUj4hKt3RPt3hKtXVPt3hKt3hKt3hKD0TUR4TQt3hKt.kKt3hKtDjKt3hKD4hKt3BTt3hKt3hKt3hKtPjKt3hKt3hKt3hKA4hKt3BT5QURzPzXt3hKt3jZ43hKt3hKt3BTt3hKt3haMckVzUjKt3hKt3hKt3hKtjyZ2kDd2YVRAkTbQsRPtfEcAYmPyzTMC4hKt3hKt3BQMUkTNE0Qt3hKP4hKt3hKEkVNt3hKt3hKt3RTSslZSkWPt3hKD4hKt3hKF4hKt3hKt3hKt.kdTkDMT4hKt3hKA4hKt3BQt3hKt.kKt3hKtDDT4n1Xt3RZt8jKtzzJPQVULYiSZIDMi0TbFokb2bjbpsVLwEzQPozP1klK3f2ZHMSRQk1QLgyQ3HlR0kSdxAWZ4rzZzQjRngSVy0VNwrFZ44RUJQSR4fDcvMjXRU1MlkDQ3DlL2QzPtD1biYGMmc0aTcDYGYWaTcENJIUcsozXToEMzTCTwvlamk2RQ0DMxDlayg2PXwTM1DFZJYUZxIzQI0VM2oUY13VTL0DLoICYhgFRyEzaOUVNiASdvLyQO0jTXUyJrYVaOQjLtLSamokdqbFdGYTNvHjPCIyRqbUbI4TMEA2Z2fiMvUSTAsVMiUDcTASQLcVS2DUcqvzZLAUM3rlRpgGQOM1JGQSSLolaS8FZ2TjXTI1XYczSm4TP2HyY0PzTwE2S4zFQzjlLE4VMgsDSvTjT4gCURIFYJQUTqElTzgUX5g1MxgmTpU2SzgTSTwTPmc2UFUDLOozPYk2UnESMy3hKyXTPvkiVXUWd3kVPFg1UykCbzMCSqjFdgMlS2MiS2L0T3g1bj4jYP4DaCMiLzMzY5c0bzYmaFIyMMI2YGcSS1TyRG4xbyombks1JpAkVFICYq.kPyjSPw.WaYIjbj0TbtnDSXkSdQQmZ5kzamQSdPIEMAICYGcSZhoDLAMWNyvTLvnEaBI0bqbFTGoTRFMmMGkDapU1SuIUN0UmaXIyJHMFNRs1UiUSdko0UKwTZ4.ybvLDQromblYkVvkVN0ciVgcVX3AUV4IyY4QSa1jVRGgFdvUESq31LxMiSY4TSrwFLoYDQUgzJFQkcgAiVigGRxfFd4fGRJEzSnkTaVQSVWASTnQUdKgCdBsRbGYlYLkSZH4lXYgTSwrldkMFavLjX18zcicVUBQ0S1ICVMEER3j2SoAiMz4jSRgVdIsDLvP2YoQmRjIGdygEQ4oWZWMjKzXjUtfzTOgUZSQEMvHjSIQzboMjc3ImQ1fSVGkyZIYjQ0rVSA8TbxDlQP0VLt4VP2QiQmEyY3.GYvfySnsxJ2ECS0AEbjEFRqETcDQ2SxYWRTAUc3vFV4rhcSk1Tz.kTlcCYtfTN2D0Zv3Fb0k1ai41MJMTXJcGTKAEZuIVNhcSVDIGZBoFVyrjUR4hR2TFNNMUPPQCZncTaIE1SJkzcSoGU3blZloDYxoEaXEGNHoDMoEWTkAkasshV1jzcQYVRJQFLhcVZNMjUzfSP0n2TjA2LPomaoImSnUmPQQ0JxXDSvASPHQ2JxXSVQgScycVMtrlbynVcMgzPRUGbuMmXLMSYXg1XlEmMvckQPciROETbOo0QYcyMic2JwQmL3rBLQkCbPUCcvLycFE2PE8lUk01LicSTsokPhoVL0MyS1MyQyvlVMIUUm8DYmsVR3wDUMgFcNE2TC8la2gDMFQmPZMzS2szTqHWS20FTL8DVk01Q2EEUIMzQUkEYtLka3HVcxAkat7zJAEFdsg2Sx.0avYWdLk0MIYEc3c0RPwjQOoUZ0H1QwfjLynEUWgmQXkiKxjmMrIEb4XWMyzlLRMSYioTQqwzSPYSVncTS4fETDQyS0EyRGsjPJAkUpkFa3ozQKA0aqnTUqTUU3k1M0fycX8lTNEiP4Q0JWYibCgkZ3ECSx01PTcVUjMmUgk2UVsFR3ckVv01aJglMP8jQYQkVYc0bIEVcOQjXlQTQFoFLssjZxXkLzL1bNQyRL4lPwbWdzYmQXgzYDQWcgYEUwU1T1fVcqTCa2IjTybUQ1EEarYiQCE2JBg0UGI0XnY1aGI2R40zcoAyaRAGMKc1Tk4VU1QmTYYTM0UkRiA2ZNwjRy3DTQEzJYIUbi8DUO0lL4jDdSMFLNMlTFUFYTQ2QtDSaHMibCQVUNoEdy4FbzwTLxsDQCgUcs41UycVcYUFcBUGVEIWRSMUSwnTd0IkLRwFS0IkQCYSVYM2bnE2LmslbJYCRjQEbjU0PvnmSu8DMw8TVV8TQx4jPU8FVmwTa0PSVr4jPEcyUkwzJFU1T3DybYQSYCwVLCYlP4fjVkQjS5E0cXwzPGEmQiEUP3MEZqDVQiMiRHUzSj4VTQs1ZgwjTvEmVtEkXiECSIgWNCwDLwbVboYUNMQFUsMFYU4Vd4DCLuIkKEklajEEQywDTZsFYMMDYxgCMyQlc2XCNtH2coY2RtbiZsASR3DUVLcELSkFYIEmSHwzaXIkUyLyX1PWS5c2Ji4lb4blMyIlQNwDdHUiSqnTZxE1YFQTMw4lQqUDTNEyQvIWNIckVCAmYzYyYAQ0XLcEUZUCUCsRaTAyYJ8TYzP0UpoTVH4VN0IWX4AkTwEyJWIWPsciLwbCcNEWXHIlRx0Td4D0Q0LjYYQGdoo1J4DmSNYkaCQjbssxLZYlaAombqHEZ4jTYAMEM3XURwTCYAolR0ElKuQTLwEiRvDiaKMVP2QjZy.UdjEkPyQ1bSkkYzjGSyMDMXcWMWozPs4TNMYmLx8Da0gFdmcUSzsxJkcWZ5YkKpI2Z2YVbmkyTZM0UvoTdzcmP3UmUxPlR2EUcKkVPyPlPA0TN1wVVlYlQCAGZjUlRZQlQu0VbyMjYTMULlcCd2gUVW4DZ2bFdVoVT1AiL3ojZW8TNZQWVNciTJQlL5cjLjc0TJMGSHo2awjUXgY2SBgTUxgGT3UyTwYSaxHVTIIiRwM0L5IFTvzjd5MSbls1MRsFRuAUcuoGLRUlT2I0Sz.iMHo2MscjU1k2ZxQiPxnFLWEmM3jCYRQkc1HUV4wTLt3BLKsRLyEEc3UEaFckbyUTYxU2akM2cgMib4ESV2rhK2bjTuAEdtTEbB8TVgoWTSEzXxnmQy3xRi4xRNYkPskESU4TP4XWUv7DVKElKzXkcNoTTh8FLCc0JkMzTzAyRtQVSxfjbuYTPLY1StL1J3MELk8FShEVMQ0VRp8zR4glPMU0MlITQyflMyfjXGwFTAQEYpgGbOEGRPEzb1PWayHFSnEWQVEULvoWY0D2LgoWSjglb4.ibqQTNRMyQUkyRyUCaBUiMYQjLn8DS3Q2UgEFMwbyJnQWZ0YSUtAUY5gmTCo0JyYVL2UWZKczQMoDVTIlKpYkRo0jas8FQ4UScisDTFEWYHgiTHMmavsTdtYycGMTag8jYREkPFISaNcCUyHTXvAkVDkkbwHTTocFNEQyaxD1SFcCdTgkSHIGUwnzR0f1QK0lPqrBTjkSLwY0RjYCRRUFYAklRKgCRYkGV281ZzDDU3slb2QUNv3laZQlTmUGL0TVMB8TPvQURnM2bNIlXl8VUHQyRWMUTxbEN0EVc1YmTAUlVqnFdvwTPlkSdxTmS0zVYX4lax8DbBk1avwFL2UFU4vVSQkDbZwDY4DVUnETN43TUHsRNB8jVvzVUukTZyzlZjUDZD4BbS8DLHMjY2slajoGLJciVwvVXooGMPs1ToIWb2XTatPEVPYTVyYGVzHGSD4FdCMzLIMkL1fWUig2JT0ldvEVcVczZz4xR5IkMgcVMOQDQgkVctbyLzoGcp4BNvMlY3YCZFYkckI1LXc1YycUQqI0PRU0YroUQCMDLWIyPGIiXK4lXLYlRzQFS2wlLDAGRFomdKk2LjgldwnkRTclVw7Td1XiTiEGaKoDa4XWUUgyZT8FRy0DNqTGbFM2MN0zaDc1YlUmPK8TUBczbGshXEoTZpEzSyLkbyQEayb1YYUWZwYURDgzTugVL2PTXQ8jTtHUUzcWU1ICZ0PSPvfENJMVPKsVXMQGR5klVAQVZ4EmSwnzcEg0SQQjZnckM2AEVEc2ZAElUwISXToFN3jFdokzSvklcOQEc3YWc0AUREIVQpAGYhkkPpYkZnEVZ0LiQ2kScvgUTgQVbiwzJ2AWSE4xbYg0cv.iLgokLGkmPkYSLGcFVPklV4fFcOQ2M0ozJT4BTnsRaVciYz3xRYkTRqYEZnUDdTIEUpsVXqEiKYMjPWgGSIkGSwkmcXYSdpQyZUcDSjo1M2XEZ1XkcwE2ZJgTXQQkboUELHIUcnczU0ciPw.SRy.EM1HEQzTCSpM1XXEGZUkkVAgCaO0TdFkSV2TiMOsDbXQjKj4FdjomKmEFdwo2Z2nzbMYjYyQ1cgIEYyUWbL0lb2LUcNkySvUzLLEEUYQ2YxDCRAYGZ3o2cFcSMyTDRlMzTyECZIcUXH4RPpgEcnI2bsETc3b1YZAUXrUSXXgkPSM0JxcyLqHDZm0DSDk2Mz3jPWUFaOMyTOUjPUAWMrwzXGk1UlQkZHwzMWIjKroVc0gDV1T1U0XGLhIyMFo2Ur0zSqklQgIkbxIGMGACUnA0P3TUZvXzTvcFV5QSchY0Mq31MPQUXSU0TUUSbjkCVEUWUAASV1fET5cVSLI1Mu41MjUjX23DTwYiUx4jdR4TbI4jMgQkSFEDMnoTMpw1YVkSZXQSdlkmKmQUL3TkXsQFchwzaJEzcZcTbFUWP0QDcNI2XooEdkcjPsMGYwPmUIYVL3bkP5oEQyfyPsEiQQkScxjCVrEicJUCR4XzSTQjPSMiYSMULYsxRzf1UwDDUCMWNCgFUSkiSwglZzkUS2bmRMECaybFaC01RQcjSog1TsIiXUMDY5QkLBcici4lbHo1ZukmRYcVdxzVXvgjMt7zazYmKhIlL3gmV0LVYzgGNr8DUJMzcBsFbG8FZz7TNEUVSAUUPwzTU1HzcYkjVLEmTSkUax.ETGMDVKgEMwnjRBQCcA4zLwA2Tzw1cIQWPWUDRtjkP1LUNmYGSF4DNpYVcEIWNMkTS00VS5Y2Q4HjKNgCQDg1LyXmYYgmKqM0XtYTbr8TYDAyX0j0JqsDLo8VYqDlcrkGTGQ2bSIDQ0DDSXISbvjzYqrFdZklLvMzYwISVr4DZw8TZqkCM20TTrQSTTMmKtvFTjolKZEDYxLSM2DDMUcjSzjySogGb4YGLLUjMKokMuY1SwQTaqPVaSgWV0rjXnYTMhIEZrolSAQSRowTLvH2XVYlLvXmbkgTQkACc1AkUpgEYnkzT0QSMwQlXtQiZJUTZMM1PTUlU1.kdvokQlEjVrkzPJU1c3rjb2YzRJI2QyQjTqAyQ0AEb4rjbTQmSCwVd4PmUJEkVZoTTvz1cvYCUOUkTFAWYqr1cLIWa0U0UxXFLSMSVFUEUCIUYMAyQEQySDoGMu4jV1n2M0nzM1Q0LokzYyHGNVolStkGL2UVaxTTQTcEVqrlUoklYA0VdyTScg0VVosVd4oVcFkGSqUkVC0zT1IlUg4haTYmLzcmU1Izct4RRmgySqrjMgwTMGgkaUImUDQUZ1EUahIWQPQVSwLyZnkya28FR0I2UxjjUEkFSgQibBcyc27VVgoTZgkSNFYWV3gVTzjSdZQGSsACa50TarcmMyD0M0XjM3kESyf2XBgUMxTjd3UkLjEGS0gzbykUNL4BMqESdYIzXkMVRPgmX0PEM2cTRwb2UogFVzsFbqQkPi0VZgU2aKQGZxcmLJcCQVcEMyHmahYkQ3cTRQkkc0TCY2E1TEcTRoAUNGkUQr0FNjk1byDzYjMybo0Fay4VcxXTaPAyTYkGMk0FTwrFTSUzRJ0VN1fTM1HkdGg1PRQjTSoTQKQmU5Q2QNYDVCECdKE1PjgkRXEkXTkSZLUkYCE0MDk0PA4BZJEFMFUCawzjKqXCMCk0QwoDLkAiKGQDUrUkMpQEVgQCZzQVbZMGc0X2PWUWMTkkSNYUTzI2cLMWMpIFL3LTVrIlPmUlT101SCUiUYgEbScyJ0kCVugETBMUZlQ1XRgmLoYzaBITLogyMp4DZCYjP3zTdqjWckMUcuQCNBU2bYwlLxjzbEcUSBASLrg0QxjDV3oFQ5wzZqcmPZ4BLMM0ZyYkZhQkXtQjcrsDc0DiYFoTLyHCLYUUM4kGS0nWbVszQ331TTklX1XUSWMzayP1JgcUSHkSNzLWQOsxSqDiTRwDS2.EYlIEUwUCZngjcyokMxXGRtUCSqczT4kkUNg2cBg0XAwVToAyQ2cla4YTdhMzcoAUZXMVbE4VSUE2ZKQkQ1omT2P2SiY1P1wlS00zatvVaWkzRhoEVzHURZk1P4zFVrwFagkCaHkFT1YiayYibwbUMhIUXxgTbqQlMsMGbWYUMH0TRnEFZXUlPuczcOMkaPoVcpckZioFUY4TTzHGT2MVTBkmYnQSNAc1Y5MVQVQEbCQDQzXmRlI2J2PWNSsTUOYTVQYERPo0Qwn0JuMySoozaRcGS0LSdxL2aFkyYh41PJUULEMlZtDlTXwlczPWLTkibw8VNGkzJJczPT4RXFo1QvDTbqcUL40FLzbWZ1YGQpcmYvsBLuEGT4U0Y2DGaO0TY0DDMnIiXvcTUvfzRzLTTQkybrMmM1QjQq3VXZEjbVYkS1giZScTZnITbQIyU0f0T1HSMG8zJyM2U5wTPFE0LuEVUvjiSxDkRmkjZ4rzTTomYvvzbqfiK4A0QqflUYQWcTUVcOoFREUiPuEWa00Fa0PyaQ4TSw0jKuYGc3QGT1c0QHUSUDIGSG4TRw4jZUYWaYMERpc1URYyRC0lcSgmd0Akc4L2ZCsjb0TFRpsTbjI0cyH1ZyE2a4fTQOo0L5c2SPQjXtQ2R0XFNRA0Y4LyJO0jckwjdEcUVNg2TxrhZg4jZP4FUGU1JwDFSMQSNNcmchYmQvrTNFQmRoMWSislSn4DbDQCUBcWZokWN5cUY4fWSRk1ZnA2XBYUdp4xUh0DVpkUM48VaFEST2sDQNg1URYyJqDFa4ITTyTjLvUUNqLEdFoUbIkCRGwTRSYTLiUCS4bTbRcEQAk0UBQDczXGQ3TGSukET0DlQyjSNxcGQLUma04jQqUUN1.EQRYyXRszcw.mYocjdxI0R2TibJYlb4IibhkTd4DWVg0DT4biTmsVQ1UUZyEmYBgUQG4TVtXiQkYjaVgCd4rBcUkzPTkiQmMDRPQGSGgzUDoEMQcWT4MFYVozZ48jbQYmaHshZEITc2PiXKslYA4lMSUUaqQ2cNEjYn0zRSEyL5AEZh4RQQIFTTUDV3YjaDQyLso0UVsFNuY1YVk0Swk2RzA0JLkDdRgzUgUTSyrDVSw1LjIEagUlawQDMuMiPrYjLKgCRRIUYtHWSQIVMRY0SNIic18lPzoUTugTSZQzQNQWatXGU1UyQGMmYjYGZCgSdCEiSyrhLNYFRpclSsQyXxEVYm4BQoAiYtXlZjMCdEYiUDgycV4BVMEUbu4zRNQFcWMlLl4TRyjWPwb0QtY2RzESVFUiStImVNQjagoVMMojX0DWcO4VbCcjZgIidg4zMyEWcEYidVU1QyzjKIEicysDQxPCNlMGcK4jPHczcmUlZloTPynUcmkFb0DWSogFRoUiQkYEYIo1T4YENqM0TiYFaEYlZsIlQIQzaEgVYvsjVxD0JugicGgGQjkCctTSUtIjVxgDUPYDSo4DSQA2YhcjUFMCRPciTEwFNL0TRvn2PG8lcKczXvfzcSs1RRQzTIkiSWQDZtLEb0cUbKUDVNQGMDY1cWsDcr0VL5YGREEiMKsVLtUmRBgGUB41T3nmShY1ZvLlLDQmV3IGNAQTYBszLAwjdYUSMssjLskVTqg1UTgmROITT1cFQB4lRFMmQFIkRKQzSXIDa2QkXFAUT3jGauQDTE8jcNYyZvMmQq7FVTMCbzDDU2DTNrc2PtTmcq4VPyEWcVgCMVUEMTkSZjMjV5sRYzsDdxfFVSkzZYcyYUU1ZZsFYNQ2JOYWc5gzZAsxStYVQ2UyYFM0TwU1PFYyXOcSYmUWdSkVdpoTUocCNZIlSqbzZGojSmImcsgTRyXCVIQCZhkjMns1Rh4FMyDjTFokPDQkSAYyZvDycUk0R1QFUVkkXx8TSwjzaAYVMjAWXnE0MQokP3UzUmgGTC8DVvwFQOk2XyrjRoYSZJYiYFUVMkQzX1ICZ2TUbNsjK1YUajcWXCECRu8lQKQSXDciKvnVLg0lTLUyUwfTQjASTCgWdCYFZhMFcsYCYq3RdKMjUGAWNtTyXtDFZqfSbybmS4rjUtn1bywjPVQjSqYTbZwVREcCTio1MJM1Q1HVcv4zZvUVM1gFa04Rb2LEcqMGTJkkQwESaTshY3LyZqwVcvjzRmMzanYGRDQ2XIsDdMASXlkFZ54FNkUFNhslXhgkMHo0cwTDMOQ0YVkiVyMSPUIWSCASdPUmU0T2PhgVNUUCZ1UDMSITaNgkRq01ZBUCLgQWdzYUNBEiPM0FYyUmQ4czQmAyYIshUXE0ZB8DZ4ICdlUFcsc2LsYVPAUlVGIiQx0lVXYTUoQjaL8zZsszLOcVQJcjavTSVwfjTjIzRColasoETm4lTOECLhsFSvHiLPszJs0FTvc0UOo2PrkTVsAka3.SSD81TmQmSZU0b1jyMW0lQIIFR3T0aBojcRMkQhA0URETVAUFLQUzR4gWQtHVUnMEVUkDSMsxQSQDLXUVPuIUQ4HyPyA2TMIjd2X2JrIFbBUkZvrDMrcSUmM1P1E2PXEiPrgGaVUyUHUWbGwVYqLiRqoFMr0zQ03TZQI0bmElSl8lZtbCNI4DLtwDbNYGdwgjY2LTX1IyQxojdVcyT0gTc2rxb2LUMZgScvwjXFciT4E0Mv4hatTFRmwjYxMDZwX0UPoEMsUWP081L5QDb1HjP4MSLkA2b0HGL5oFUnoWdt7TZWkiVmU2UocCN3nVPtnGNhU0ZoIkU3olVNY0Qrk0PlIGdSQkctMiYuMCYxgmZjo0angCUNkiaFEmSCEkUrECRzc1ZncUXPkmbQEUVOcmUiY1bMMUP0YFamUUQscSd4b1S4nzL5gWXCUCY2cmclszbQQ0YlszSMISXqTzTVkGMxHkQK4xMP0FcxczT48DSoIGQnUmLNgiZEYzZ4kycSMzQvUEbEQSNN4FLW0jQsciPrczb4A2bY41QLYyRyMUPnAUXOglSw0FUM4lROkSdvQiXXQCbGkEZDk2S2DFNVUjZnoFVs8Fb0gyYnsBNwUEcN8VaqEFVjM2aCMlYnAEaDwVYXEkZOYEMzHkRBQEdlklLGkSZPgSNwHEYyjjatcTcQMmS3HlP2kjKQ4DVq4RYF8DSw7VLAQlb37zZ4MWVGkSVwQDMFIid1fWMigGd1A2SEQyTKEDdzPCSAIyM1QUVVMWNLsjZEoUXNwTLSs1LQgSNhshVmMDavHWQVUSdXU2MlsFLvYiQqHWLTolYvgTND81U0Mmbg4hZ3LjMHYScpQDQzclZxM2RvHWYxPzXqrBctDUPwsFYIMmZPg0MkgSaHMlVYIDV1HkZuQmMggiMx3FZroEbggEbBoWaocSdZIlXjg0TXUWNyk1bGgCQDAGQPwTYRYUShYSPPUjXCgmSW4VbKEDM4EDLQYlMCESL4Xic2oWbWwDcoY2UwU2QwjyUtTUZS0lQDQzPr0zYqYWRus1TQMSahQGTrIEStYkZwIScvnWVx.2TuUjT3EkbVk2RrkFcosBVlsVatfCbyrTVKECVOIEZnUEMMojRYE0YrgDRCUUdEciVS8zROo0XwE0buQmZqgDZwIGYRYTYt3lbtc2PzUGS0bmL0HVPVMzLPsRS4TVd2fiLzfSbHclQ4TmRLISaioVdvQkVzvDM2kDUwkidtUlUvoWaYUTdzjiKVYUXyUUTAYlVlkUMvjSbzbCc2zlRogVY0HGRCkzLvYSdocGcrIGZGAGcvsFYZMmMtsFN2U0Umw1Qz3RS4QUavEmbLQFaAMTTw.CaQE1ZOUUa3PUTDwjLsMiLwMSNXsDN3UVZiUiP1PCdzk0QiI1QSszRhsFQnY2ZtEzZZcmTXgSPA4xQjIiQSkkZnsjTKU0YoESNWsxXoEmKFgUcqUyQogSZ4EjKTg1b5o0RtfVSioEMXg0MGQSctcDQt.Ebt41YyIFa1HTaNMDYSIFU0XkZVo2cnQFch4RTyozcqo2aN0TTVMWVl0DZOQlKrkyJyYkMwPyRDgSLtDzcwnTMXwVUtUEQq3FdxLWLwnVTywTN5MidYAmU1UiVMwDcNQ2b2HGZ0wlTw3Rc4oENwjWLuQzTYcTPjgVVrkCYWE2X30jYYoWMqnVPColM2IzRvPDV4IGMyjjMHkTQqIzMGI0Pt4RPkUFb1wFd1fUXxgmM1gVayEzMYYTQJg2QSICYnkSMucCVHEWbvjETAIzS5gTRHIEbwE1TOMURxMTakkELqL1cu81bvYjTqjSVqYERrMiaBEUQIgCaOgSPy7zT0HUXjkkX4gUSQUiKpAmK4gDR4jDQJUCZGkmYlUSVs8VZwQEYW0VUIsjKkY0TTQjRDYjXIoEMxflaIMCTEM2RrE0PKk1ULkzJjkSVzXWbMgjXEIFV0UjKYcUNIYjV33TRyPVSQEDcFk2cFUyZyIVS07lcmEkRW4VYLQCL08FcUUCTTMlSuQUQKYTTowzc1XGb1LFUNUFaWsBRMUFa4IDRAkyTsEURusVd0LTb4b0QPoEYyUEU3wzXnACNu4jTjMGZ3kEQkIDTncSP2P1Qh8jXNIUNkETZRAkZ3bSP14lVEojcKg1ROUVMzDWTzkUM3nVcFkEQwHjRKMCSyMDSzTiVEglQ0YyaCclVMsRdwkmVAkkS44xbRYVVCEGSuU0QqwTVogDQEMDQ1n1Z0bzJOgiQYo2UqX0cCEVc0cDUHQ1JqkUTlYmSkcWXhgzX3LTc0vjbPwVc0oEQIUWdy4RMUIkb4gEcKUWPGsBUWEyPkECYRk0aNo2UXQFSQkmXX4hb5EUUEkVUCMjXxTDMvAmUEsDd3.kLS4VdiUzRqwjTjUEaqkzQFcjTZUWRWsDLzcDTXUlXCkEYzQUdqTlMVEiSI8lSgYTcOkEYIkFbxPkbQQGUtjGRzXCZmcicQA0UjcmKFECcVcSYSYzLAgSQhgiavojLhQiKPkTRMYCQHQUaHcEaKslMFMVc0j2b4kSdtbzJEgzRo4xXL4lUukTNrAiR4o0PHYCLyjCQBUEYhIDQQQVSPYSd1gVdmsDdEMzX1TjTg0lPkkiSZQSYQw1X1YVQ1gzctP0bzECMpMma1ECUCw1L0Y0U1YiQjojQ1TEL0MiUMEyUpoldOYESqI2choVUt4zbEAibDImKFclVvA0PpgzPX8TSznTR4EybFQmZLo2Jx0zUwAiQ3DiZlgVQ0vlPhwVUrIlS0XkdVU1UQkzbEkzQqI1POUESXcFZqf1T3klXMQENwfTaLEyb03hVWc1ZZEkVsIkTBASNyYzPwHCd3PScqfUa3.WZTIFaDcDatDkUYESUBojK03BRmQzXhUTPB8DdGwzQCQla0bzcAEURikFMXEjTJIFNHYScuIUMH0TdNgmSy41Ltb0LXIzcZY0Z4.WVwIlTr0zPqI0STgGdkcVT3QSLE4TZCs1JsESMtIybH4TR23DZ14hRkwjZPUScQYkVZMUazHTL1I2MzTWbvkkT2HST0gld3vVTgkERyfVdxQVNAIGdjYTaFs1RVoFbMMFY1n2brUzTFcCVlg0LzQjTPEFLJIldRszX0rRRkEkU2fDNJcCVhQ1Q50lZKsjVKI0RqnFTOgSc2bmUpMFU4vTTvrjaqgWXNgjLWoDYtLFQEklYkYTchQ2MtACRxXmPyb1bUAUVOslLWglTSw1Uq8lLoQUaPgVSKQVSFMCLvYyMvUTTMIiUqo1TLECSnYEUrMlMr8DRoMSNsQlVyEmLvnGQgI1P5AEZAEVT2kSU2wlXn4DdxnGSMUEbYsTQLclatnDbA8VaZwlVWYld3jSRrMzaskTTvgSSngmVMs1UrEWSuI0JEIFcyUiRwc2ZugTYqDiLW4jTAY1bJM1TEMCbZ4DVpQkbQMyJwfGNM8DY1oVN4fmKQUDYHMWMKwlbXEyZ0H2cXolTwjDQqHFc2cTamk2XnIyPwYkSXUTXRMVVgQTcVEjYkshLtjkUVAWbnEld0fGRZk1RUkkbVUScrUWNN8lUqYDTmMFRqLjUTI0PTIDa0bScoQWdG41P04DUhYzQoQlUwITMmcyPNM0LnQzPzP2YwgkRL4zL1MzXCkCRRkVcHozJpETSEQFQ2DFNqXjczcUbXU1LBQTSq31b4zVcAMyJGMSLsglKxfUboEWXSE0bFQmdwgUY20jK2kWN1DkcNoVdDQkKLk0bq7jKq.kQKEkPXQEYqQzcRASNGIjQsAkSuczY1YyYNAmXkgFY4o0S2PTXkIzQ0zlMncDMwL0LEombDsVMnIVayI1LyIWXyElYgUCQyoGSOITLIUjcvUFMAUGZgYWbLgUZ2TkcYwFVZkCaukybtIWQ1TGRzkGZGoFZNUSPgMlXo0lbLESXn0zLiUCNWQlXTQEMMcWL1HSNp4TcIMEbjEUZyEmQ3f0XyoWYvEzMoEUd14DcVEjK1YTaLgiKZkmbhQkUCkyTTMCclMyYtoTa4PlVqAkZVk2POk0RgsDcG8zMzXWQjA0XIQkQtXiVvQDZOgFRAkGVloTdzcDSY4DYtoUatoFZqfzaxQjQwUTaqTidRQTUyIzMtQ0MkUlPvcVPzoFSuozQ2sjSTECZ0PEcmYmY3YWLMk2JocCZ1PkUiYTZ0DUUx7TaMk1JrckT4H1XTczbPUkcPImYYgTYjomRzLGT38jRpE0RQgCc1UEUREyTRAGMqgWZUQEL1zVUE4Rc1.GLCQmKrozLWEjMzMVVEE0P3oGVzEWYyA2amI2XA8jUMkiKJ4hMvQVcVoWLYk2R1PWSRQCTvYCVQU2aikkZwPCazACVIYWdOkWcgI1TogkTPsVRNc2PWMUdr8zXJ0VZug0argEdmYjKU4DNwH2Sp8jRBICR5EGbFYER50lPiYWSnoVViM0YmIUMyYmYIETZwnGYBcDR0HlRzgFYScCLRcyZZQDciY2SHc2LDkDLFgFZPAEVp4RcLcSXiETNvgCduwFMxzVTCkkQSEWPBY2Pu0zQSIVaAkjZ2kWUHMmPqg2UwHmKkw1J5w1bhgWdlM1JyrzRjsRdvkCbgw1bRMGVUkEdSgkaJEEdAQyQMUia2gkVDYWcgYzM1DSMKomajMTLCIEYMYURIQFTFc0SsczPvMFaFEWTzPkK4.GQwsRavTVcjYVXvLDTHUzQyrFUBYzQiI1QgkjRUEGTIYDQKIkRLYmMkAmQVQkS2HET5IENG4BamQkdCEUYM8DThQEaDYjcFE2QtHCZugSS1Q0ZgUGMooTU2UkZ3.mT0bGMCgESTISUvTUPRUmUg01LsQmZvsVbuIkb3rBYCcWauQVLJYkLYEzTlIFa0jUPLgGdUcUV1LETOQGQ2UkZvIENpc2cToDd0TiYFYEdxQGSDAWXyQlauc1PqolKPIjSXoUSVEkXv8zZvsjazLlaocSUqUVQ0jybGYVZtE1bDEyMIUSQZYGbzkDYCQVPkMWaCIWYV0jUPIlcWshUykSVkEWLyU2X14lPMITdqblUrYFN5IUURg0ZwTVMkwjPwTzXj81QggmVSgEQZYVTogyc2n2aAgFR3rhdBgSZOU0ZV0ldiY1axEmby3jKBkzXiQSSpYVTScDNlISXvDDTncVVPoFN1rlar0TX3wlZXkjaCoVTYMDY5IjVJQWXOY0PxrzZFUERiE1MngWLqfiSlQjKRwFUVY2XDgSbR0zUYciUyzFV2cyTzkTNRcWXxflRFk0cVQDVrwTLYYzbE0lakQCRGMULycFTIgGLYo0Rqj2Qz3FVxjFMmUGVIQmRyLWU5oFMUAmRzbiMy3VNAMWb1szbMYzQsY0Ut.2b2clVjoWM5QVVCojQVMlbSgSPh8DcgYGMIIUSvL1cwIGczkEVAACbHAET27DUhESQNglTRgGUUg1M3nTbnsVQYMiPz31MH4DUyT2LvvVb0.2RrkkQogjVHIiL4j2QrYSStETYq.kXl4xQGkGah0DSxkEMIQTUUYVMyDGU1sDViEVNUAWMgoVV5YGdzfET4k0PQQkavkyMTYmc0.mSyDTZOciMZgSY5cjd0UlQEMTTGYlKkYFNyHlRxkyZyc1a2D0QGcCc0kWRlgzc3P2Mpk1UE4TMgUWN2MFYwIDROUzPxQiTwMUTzACRyUWUlsFN3cSN4I1QxPTSs0DSvUUazz1TtIkQgYEcRsjbrITcPESNxHlQTYSXw01R2UTSjQmVtXzbmASLxc1XygTNMk0YpkkSJshVGUiMY4FMtLkZIo2YEEVb3ckY3DDNz4xbvgyat.UQiYDQZ4FbnUyQpgiVEgzJ0U0TRkiMUcFcDkEN4cGS0nFYPkEaxsRYkgzXL81PuEDT3LVQuMlUzTjQjolY0HDSt.GMWQjQTwjUXwld50zSrUibPoGMjg2b2jiTvT0btQ1cz4hMwDCUOwDUTgWP0o0TLgFQosxJTIVZybCLOckL2UEcUsRczkVZzQEay0FNuAmVlclT5UTcmIjUYcEQvLEc3bCTtTWLWIlUyImLsgyYp0FVMMVLyLUM2DDbg0lSG4hLnYyYBUlYSIiT2kjb3ojZyLGdLUEUHsVQAklRL8lTh81ZygERlsDYnYidUUiXHc2XKclQCQUaXY1LwEEdMomRUciaynza5ETLmIDVY4RXgklM0PkRVkFaKYiKFUTTvIjTEMlLpM2cgcVPUc2PDwTa2YDM0omPvQ0PiwDUyEDQqTyRKIiUzHzJxDUdYITQPMyY3AWbnMzakgGS2LGbwoWXxjUdtbWaUEDdYwFSJEUYQQjc3jCdtjSQTMWQiMiQvDEdPYSVYQia1IENIEzalokbycWc0cVa0kidkE1PvMiUxEiMvMWSpAULDkFQPQVTqH1LwoVZmczUi4VPoMET1j0aBYmaKcVLSYiZpczQWQ1QSEDdvYVRQQSYwTiSsMGVAcVd2n0R3T1QoEUXzclUIszb1sxLlAmUOIVUvYFZgw1a0fkQYMzPsoTdDQFYVMULEYjc4kicQEWcDISTG8jKFAWNGM0ZwrRcukTUAkDcFUFQMgWQRUGb4LTVqHWXzQDNgYWMHglVFwzJ3fDagImSBkyZPolTqPiTOYmX2LlYyz1SU8jVyASavP2XvUldsoTQqkzYY4hYtHDUFIiKCQ1bOgGbkMVZvXmdUkEMEg0SwMWa4bCaREDVMc1XhUDUJMDbjs1TYYGbysBYUYjc4H0YtH1SzEzczD0PXYCaVkDYsYVMJQEULsRbxEUUTkFYC01X2clXts1PYMWbwczYQg1UJs1JUcjKYAEcTETS2U1PjgkMYkWZuQzcOgWMBETMQAUTTUzbRU0UpAETsISbuoEcFEUdmQidhkSNo8FU0PWVPsTMqQkaqAWYzQCYYUkRoMCcqIEVSUSPvvVXGEGTyMCcuIDZSEWU1T0cvIlMuMmTCszPoslT2Aidx7zMDkyJWIyRrAmLCUSSJE0QpIzLTYDQSM0S5UCcyHmZhMiTO4VTK8DVUAUU5Y2XVUmKgEVN4AyRIYCL03VNM01TBoGL4bEb4EET3jWVpACLRI2QnYlcwj2RP8jUmQlUxkmK4HTYqbkQnUTPQoDQVACa5EUQ0XkTsgVZiQUZhgFT2AyUL0zUMs1ZqU2MokjROUlQCg1T2f1PN81a4Y0chsRTqPlKx0jPNkUcyDSYt7DY1PiSWsTSxX1S04hLwn0QM0lMzPCSyE1P1EVcz.yLKkzZ2.GUhYDVvbDLn0DRzPjZvH1TkYCRyXWdjgVNynmUkMjUjsjduomKgE0MtolVS4RU2XTbrwzS1bDUqzTcKshZ1TiLygEYy81Y0MUNmEkXOEyPhwzYyfjaKoFY38VRvojUyETZkg0MqglM5YDYzo0JCk0Ut4TPtsFTpU1U1flbCkSd2QCUmomPUcCNGISZGEDLJYVdw.SLMwVNkoDa4LFMvMDbzXDcJcUdwTlQiokcM4xUtH0THwlaC8DaUUTMtcUXybWUYY2YiQ2cW0VbzE0MzHUTV8VNmQ1XRgyJi4jT3j0PxDES1jGUPwldqAmYGEiZ3b1LysFYyImdqwjQCMldUAGMtz1MpQ1MhM0R5MzaCQ2MWI1aLQCTvXjYZImUnoTQLY1cF8lMhE1cD4FVzjlM0Y2PEUjMnkWQjY2P1oWVKgiXzfVXVEmS0nkV0.UMUUGN3YiXGsFSAYDUlIzP0LmSqrlL3slS4flUpQycAMyJ27zRgYEL5ImLuYiTQIiMpoGbxvjL4cCLngDboUjMQ8lMlMUcpIkbBc2QxQzZgMzJWcCVpQCYzkEaJoGVnsTYnYTShszMO0zcsgkSrMWX4PkZJAmQD0FalI2QVgyRWoTRvEEMIIzYpsVVYIWRSgSSyUFV4DCctzTQ44lX0LEYmM2cVEyb2cEc3nTQtcWUwUTRgkGLxfVYvASNgYCVrAGT43hZqslTxQ1SybVPrY0ajcWa4czZOgGSskyatfFVqEzPkEFcTozJmc1JggyYvcGdSsxSqEmdt8DbpkFS0QmZxE0SYoEaZk0SlAGaZcWM0MSMoUiMxDSS2PGbEE0JJkzPvQCMlMFZG4xQ0kGZyo1XQoEdIIiY24RdZgiPmUFYqLmYIQyb24TQAo0Jsg1T2jGboAmLEQyP3MWaZQkROQ0LBsRcOkGMNgESPo2R4A0bCEkQpMlPZcVXtbCN2giX3vFTC0jL0TmR0E0UzkUNoUSSDcCdkEELxIzUNclTvkWMvgDLnEyZ3zjalU1Z3g1L37lQZwTNxjUNHIjKxUFcqzVNHcVVpY1Q3L0LVsBZmECRXImL4HEYqfid2gzc4X1bzjCYhcVPWIiQnMmd2PEYM0jRRISTvLibhElZlcWYxf2bYAEbyokcgcGMHE2aX41MrMEMy8FRMwFTEoFLjUESWUWaHojX0L0QtozJVI1cqrhQnkScAgGUhMzajoTbIUmcgEycp4jRybmc0f2QKs1L4XUVzIzQAYicjwVQt7zJ3P1SP81S04TNuUWYY81SWIlS1ITasszSz3DbmQkZAQCZqvFUwcGQO4DbAk1SX4zQZAkbkwjLU0jYukDNJ0lXx4xZX4xUk8lVMYER2PUdwQSQsEmSBMSNwvTXPIicxMkLOIiR4HCNxAUc28TPlEldNMyRXQ0ZpsxYR4lbvjlZ4XzQzQjXUESbKkCRMkjbUoETzf0TyDzJnEmVzTmShIUdFUmP2oESRMUQrUGQyIjUPk2SxjjQ0jiXZIEZ3HWP1b1bKYCQKQiVLkFNqshXuMVRUMjdpg1U1IzausVS1DEaVgzT03lVPAScG0lRzU0cgUEVso1TpolPT4VT0QyPyLkaVUjZ1kVNXIkVlk2YJEDRVUkT1rzU1rFM2UDRwwjRLISN4g2M4U1bMgWXv4hSqPVXqIiTBMFcTcmKrgiXzD0arICcFMUdoI0axTSbgo1RIoDUYUVQrkUQqnVTTgGbX8Fc3QjdHo2L4TDbwfSRqnzMWkDR2o1JyoVThgmdrY2YPgSP14FLvojSh4BTVk0QvMUYuokbuo0JwMTT3.kX0TDbpoFQVUUZ1T2S3n2QN81QVIFQtkDQIo0PIgGRCQSZvMCTTYkX5cmKPUmSFUEUxzzUqDjMzUjYWciXAwza0P2c2D1MHsBQ1XUVFQEVZcjY0L1Qwb0cyfiTLIDVucjTwUUPJklaRw1YqcCZwLkMx.mPwnURrYCSqQ1MrMSStUmK1jjP3jmZ2s1MJgWd2EzRZUSTVMTTzUFdMsVcZEySoc2ZPI0LNIyPuQzQsMFa5UlQGgSQWsVU4YiU3nGS4jyRlclYVI2QLYmbBkUMggkPwYUNVAWMG4VS1o1JBYiLBIiYVUSYhECLzHkQDUkbLoUalY1bgElSI01Z5QiVkY0Pl8VNq.0c4YEQBAUXmkyShQWcxQTUYgkdoIkQvojPOMjT2IELWcidVMWdvkjSzbzSgsxRXY1JMYSZDoDVNA2Zys1XOsFbyXTP3b1P4.yavI1U0EFZmo2TK41azbib44jaKESTCQmLj01ZugWSk4jPPQFU5sTUqbTNiQzcQsjYCgFNkoDRh0VbrolXHcEakYFanUVcn8zTP41MicTTw.kP3nGQXQEUvYyZx8DawszShIWY3M1c2MFQ4bkXpQkbHM0awDkbvczQ0w1Z3QWYDIiKSM2U0.WUtQCa5gTT44VLyYlYYESTqcmYvLGNwflU2USYsoGVTMVYzo0LIs1YRcDVNI2T28zYv0DbtkyQSUTaQUWNmQ2Pw7VTnMTQAAGSLsVY1gmYhMCU2LFRCgiVBQSPvwVU0gzP3b0JvXCVmAkU2DjR3XGR131YqIGcCUjLkcGa4EUX3kVVrAWUyjkYQgyasETLrYFdukUX2czLSkyZ03FUyEzZlUyLwk2LyjDYHoUNTkmTqfSSjElQqfSNFcFYZYiaEQlXLgySIgkanwldRQUTxTyJiYmVzQ1Z4kyTs4FbTUEUUIENIciVzDSQEgTaqcFQwkVSlEzRpAyPBMkZ1jTMFIDRTUlZVMiR2TTbEgWUBczXTcjPAU0aOUCMVcUbVglSj8jY2XCLjo1YYE1bKMicGECZ4fEdwbVU4MFSzEDdGckM2XFbMklUFMGVqLGdsUUPNoWQQgTbAMiKLUiYkYmLzXGTVY1TynGdoETNFUlKtLkYo8zLxXjdGAiSyLyLzcyUDwzJ3TTQZcTPEAiSY8DV3bFT4EDbiISUBUSQGAWdIQkUngyPMkybYQmSzAWXoMkRDgzZVUSLyEmZzomQ33lZ4ojROsRdlIjLDgDS5YEVUMmY40FNnMmPOQjXFQTLAcmSCIUUggzUgQSdqUFaZQWPq0DVhI1YxDmSxEGa2LiUAMEaPEGQ1bGMjUSYG8TZTUjMoMFczHVRtP1J2L0JvgiVYU2MxETLzY0XMQEcNIjdLkWZ1ITQ2nUTPsjQsYzSTEWayslY4DzMg8jcgUDa1PDLsAid34hR4PmMSIWXCAEQqklak8FQRQSNwEzY3zFdKQjYBclKSEGcOQmLTcibtQUXIUSVBcDNpYCc1PUQzAkbFYEMqPDNvrxa3QCQpoER4LGd1LTSKUFb2MzXFIVTS4DMM8VYpQlVxnURrMUN4HmYlcldrkmbWEWV1LTcqbTTgo2aCQGUKECVUEzb54RQ4P2XDolSyQkUIolRD01JYYzXLQmZXgmU0DjLqMjYvDjXHYDd3TWbVkDMxHjKxnmYy7VX0cWR3DGQ1.SYmcmQhQ1Z3I1Y5cEc5QVUoUGTwcmSQg2PvITNhQ1LxMTZ1nmcvn2XrszXyXlXNYmcFQ0cigDM0gGaGk2akoWSqPGY5oWRIcjdSICNyAUQxckXUIjdp0TZGYmbsYWNYYWVDQ0LS4DTUAUblkUR5EjMXkUYX41SQ0TUQMFaFgzRvXDV2DWPrsDdyXUa3QWSoEDNo8DZNMUbsQkKpIFZBY0T4gWcMUmYP8la2rhTuMzZFIjPzbDTPIiUWcCZ3kVLugFZOMkY1HVSqo2cDIkd5A0PhAmVi4xRwkDSP8zbJMWUIM2RiUFbME0R0gEZUcEcGE1aUIEVvb0M04VLvHDYys1PlYFbEQSSkcybWcmSw.WMD8DUS4RLh0TUyv1XzgiRw.WbZkDcGQmQHsTMlgWUNQVYLYkSnkzYvI0XEgGQUUmRmITaHAiXVgTd4IFb5QFNWsjTDQTRPEzbAQ1PWsBdUMCSnUjbncULlYEcqMWL18VYxj2PyXEaZ0FRXAyYjEVZL81M33DNOUWZ1ojdCYjMBQDYYI2RR8jbZsFNAACVEYmbvUmRHUmUTcCMJQiUsUjUJMSNBokPyLTd2olVpICV3PFQZczLmcjZiMkPyEzS0.0RmkDSUA2YiAUbuAUMtjTPHkiTmA0ZIQCb1fjcx4DZtXyQxXUaPgmPugzZuIVMmoUXAImLOcGTMciaJglbX8jMvIyUlASUGMlVCUWMkMDRscVcLQVTyjzTjoESwEzTqTkYz3TUo01UFM0ZJgTUgsFZpgkSZ4FcJg1XOM2JRgSQLEEMyQTVZwlPkEWNP41bwYWQ2k2ZPgSRwc1ZSgCUAcGbWclSDImViUUNvwzMTEVMDEzTRojQ4glatgDY2HTPP0zTUQFN1glb0Yya3XScTclTXA2UZkDc3z1QxHDdRkEMzHGdOgEa50TXvMWR2PiSokVPoczQo0lQsEDL0IWMqTzJjkjPUcSUPgkMtTSVCgiY3XVYiYTMtEWYIY1P3LUQNUFNXMyb2kzQVo2RwPSaIIDVwnUXHQmZk8jR201TTMGa4omU2YjKq.CaFk0MAAyMy8Td0f2L2c2TrQ0MAkzTVMGZsMSMVwVL3QWTosjbwwjZ1YFRT0zbO4VQok0Pz.ULKwFcmcGLEE0ZBkmKz.yUsUFSzk1LYgiTBUGLgg1bjgjMnEjX3UUaI4lY4XkbnQWZUYzYxk0PFUCSogyQAglKncmP1DVaJcTRVMWPQYjdz0lVvcFT3rxJqM2J0LyLUEWaIAyY58lPNkmcvDjQBwVLJcWQmE1RXQSczHyQR4hb33RVvDTTxszcWEUX3ECLmQWVUkjZF8FawklK4IyMK8TbhcyPiIkaCcEaPg0MncmXycjbIMGbI41Mq.EbMMFdQASdSshcHcSUxEVTz3hRFECa1zTcQEUVkYjby31QtIlTxjWY1jVMTIWdyQyc0PjZUEiVgECRHIUPuUWcu8VYtMCLvgVSyUyXHo2bD0DS5YWbxo2ZxYFN1PVbKYTMqfySLgibBYyXFEWbNokYPc0QJIjUHEFLlcVQGE2PqIkVvTGVKU1bnozLSISY3YCNmgDUCMyQ2TGSV4BQisjRVA0ZvfkRMYkUgQ2P3gSPJomQYgyRqvzS1jzJ3zVPoomS3UmUjM1UYkCYRYlbzshQVYkagsxajgTZoE1PtUkYicVVpsVTRIFQVo0XBozLq01TyPTTwgla0UVVocWVJUWVCI1RYcjbwszQ2f1ZiYyX2QSUg4VMNgEQugUMHMzYNYyavD0P3k0YNUEUHszckQmdkEDZlUUN2.SMJkkbtbVZWY0J2M1R1EldCkDUSwDbk4hYRgEZvTySIIjTooVXIw1brMFcNI2U0UiR0MTSvoFYiQjZLciPQ4lSHomRFs1XHcETUgVd2kVSvMzLJE2cnElKtLiMEkyPKk1QAISYVkzctgUMlEFaqz1UhQiZNYkayMGM4Iib3QUXQ4zX4ElMAYiSRUjLs01RzPSZ2bEQ1omRqojdxkCYF0VM5glRwQ2RAM2ciACNIc1X4Y1RBUSNQYSQyHzSuMjXWIUYvTUZTU1ZAYFNzL1cjIyXiUFcscSVOIUUFMVN3IkSGszJOYmL5QjR0YjVrQyXKQWcxAyYzEEM2sRSqEDTRIGVJ81LwwVZMUGS0bDL4PVN1vlUYUCYiMUT3sFNgI1RhYDLzMCLLkyPPMjLqQybBoVdrA2Rn0lVtrBMgYTL4M1LvwjSxLFQGUlV34Rc30Ta231bAImXBUjQHsTSi0jTTo2bz.2QrgSR50VRtEkdvPjP4LjPz3RcZ8DNtzzL2DUcCQUPBslX4TVQ4bVbSkWLwUWQYMWdWoWcwcDYvASToAycgsRcKQUSDglQWcFY4IGVWkDN5wzRHclKjk2MqAEUrI1QoozRKoGZ441SNIWYo4hQwLCaVQVTZI2ULMictb1Z1rxaxAmKoEGSroTY0UScUUzZ1slLHEWZPAURNkmZhsRMhcyUSoFcyTUQzkDdUQjSggkMqPlQ3ImYgQ2JIcWZjo0btozThkkQoEjVjAmZMIWcEE1cuAWXYoGMJYjcDc1QMgjSGQmXyHWXzw1Pkc2YqbSTtDSLRQCcDI1PTQTc3Q2Slo1YFEyPYMDZMUyX1QjarYGUtQ1YzTiTwoDb1kGZwDVViYjSqUEZQsjPhEVZvzjV2klVhI2LYMCMCgSUHkzM54zY0bjYOMCM4MUM1XyPHEidOESbTU2QK4lcyfiZzXGUQEWVDAyLHQWNM41RZcUYlo1ZtsjMtXjLKgWS1jGUxjVLkIyMybTX4k0Z2HzZ1n1SzUFSEkkbZMjKDEmTyHTbxLlVEwFVtTTcMMGRwLyMAkyYpgmcqImVZ0VTtnTTHIyPTYCSTAUTlgVavTid1k0MmIDZ3Q0JzjFaCEFYQElYugVUXEDb1MEQwYmbhM0aKsVbNMlXQkyUMgFVDgySMglUCYUSZUkPyn0aqfESnojMgMkPSklYDUlKEUTSwQVTwXFN2jlVTsTSE81aRU1Tu01YAACSzQGdxDDZqMzQ4TCTpIDY4k1apYidYEESWYlXHUkSLEjYHgiPYsRbjQWP4gGSqbEUhISLBszQroUbvUiX1PlYwMFbWgzZMcSL1TlT4bCV2sRb4YjUTUSSz.2SIUGLMIkV2YCQyvjTJQVaFoGawTkapIUUMETVFwlTAEGYzIVTiIFZIcUMwcldWEiTuEjbvEGSvTkV1cGNpMlLCkzM3cUUvzlKp0lYZslcvQUXKgjcSUFaMkSXZUmZxwTZGcVd2ESMZciRXwlZVUGVzzzLGE0Y1wjR3IjT2PUdzDmX1LDVkMSNu4jKtI0XxrjPCshUtY1ZSwldgcyYwTEaDw1czDGUoUySUU2LxbiTTcGU4vlKXoVVM8jPOEkK4M1RLwjQB01U5ACTHUWTiclbiUEQvrjMnYzc1Q2LZQzcK4TLxzTaKYWLEs1XBojZ2DTQzjVcO81S2DiXzEGa5YGYjoUSAMmLqLVZTM0MmMEaVYzXmUVc5gzSicWS3HDaPsRV0TiMSYWVEEkRzPCTsASNXk2aq4TbwgkR4bzTWIGNkwDTuMlQ4MURW4VaPESQxLkS0cVP1HjVnQidTklXicUZhU2L1XCdDUTQSImcyg0RtXycUUSZ4bmVEcDSvE0RtgkRqgmKtnmRxDiVqfESGQyZ3LSd0k2bVUEYCYUZDwVRrk2YzjlT2YlXwDEd1P2aQgDM2Y2Rz8VZMQVUEAGV5M0RUc2R4MDUXg2PgQVQqjWQUczUVAWbtbjSrAic0TlXkQzPnslSHEWMvLlcxf2SHEENGcGMt41Z0jiQi0jT4.0TqnES0HiZwPTSvLTMBkCNlAkQ0fyR33lT27jarIVRyHmZSQTRFIyUUo2LgYVYQQ2ZuEyRUoFSpY2UyUWd1bmYMcVUP0DUyXzZqj0J3jDYz.GdRYyRJAicXojUSYEN0MWa1HDUuo0Xvf2XwL1RMYFRVEjYQESdhkVTvcGMC4TVgg0LYQFRJI0ctkkKQolbtfzX3nWSLkmXIImPqsBL1ACbwQFYwb1Y0njXVg0ZVQiaKcjbv41Y2ciQnE2aDgmMGEzL1PVcSE1XtIVQOkkPHcVcYY2aIQ1ah01UvfWR4YFTqMEa1jkPMs1JtTiPtf0Yz3hYgIyLmUDQ1ojR3LiVUk0YjsjVm8VPIcVazomS0omQxnmZyLWSsUWNio2cyjCSLkUbrQiQlk1PCEVQ5clRBQER5gUZzbGSGk0ZOEDVZomb2LTLIMCbuQiRqwzaHISZqDiXtMGN5kFQlcFTnACRYwTSyY2U2kkRzcUZv.WaWkkbLUkQJIiU1kiXAoGbDUiXmQEYycGMmgCQyk1M2UUT2YST0gFdgIkKJMSVvQCQ0jFUNUiU54jRZkmX0QlSIIScgEzPUI1R0bzZybTT3MmS3gTTt3jQ17DYLkWbGQWRCsDRRcESwTWZ4.CR5AkUY81aH0FdFASYqLzZxnTM4QlbqHScvMVcRgSTrUVM4o0UIA2SYIkRqDWZk4lVDQidLUTNIQ1PDACQQAUSv.UMsU2aTMyZKokbrwzb2LEdSQGLQcmS3klPHg0RsQDTUMyMo81Zw.kV0oUYLUkKrESbhEDa5QjawnTTFg0Pt.EQyIGLOgCdMcGLE8DbtoUXGQSMmwzPOETYxgmVyfyahMjbs8TYrUCVxgCThEmUtUkM1bWbWQVP4IiTNkmd4QGLVojdJcmbXMVVmg0P2IFY3jWVhgTPWIWLyfCMVgldNYmTjg2UVo2UlshRPYSRSYzUgM0YxL1RMokSg0jPWYlMlQWP2QEMyfFbhsDY1L0X17DYQgTZqXVcrgGUJs1LGUCMXISbEYFYnIWQwokTv0VPzHEV5QjZgIzLUQkZCUEMkYSQLQlYrkFNhYkXg4jXkQFR5cGVYgyTGYiUlQ1MqDWUtEDTyDWRSQEcu4BQLUkPSIFawoERDojVyjjdDASdwEGZ4YUayYlR2I1ZJQTL4ISMtDFLqIFdZACdqnGRqL1RvrhVw4hSmoVY141QIYWX2IkSwfjZGUEUnITMCUSURcTcP8TcogFNLUzbyMSQ5ECRRImV0.SQOoUdHMSZDkEQxTlcUg0XWE0Q2.GLzLVY1bEYDoTV4PEN5oFTTEDN3AUPCIWYQQzMzklPSQGd0.0UNgiUOEkauESbAEFQLoVTXIUbNAGQtXWMOgzcJMmbhwjbvcGQrslSyUTPLg2YH01bAwVa0jVMkYCYDgWLEQ1c2vzbIIjRFsVcoUFSKMjXJQzZFY1PjUzZCMlVzQSVp0FZn4DQTU1XHshdw.yQqE0bpcTdpM0LCYESzb2ZWEVTrgzLCU2JoYzSIYDME4zPAoVVSUVXgcCaqUFShIiTtwVVSoFai8VSGQTcnkFMN4jLKYjU2MGYxPmKGc0byTVQ1wjLZ41TwQUNM8VSrsFc58DZpsRc1sTVvTWPlIFUEYGTy3jZO0DSzU2TsMTROgjS4n2bpMVbXYGavoFSrQDLxk1LBQEUpIVMqzDdnkVPHcjd2omVXUlPQYSYFE2Z1YUdlQlZRwVT38VQgIDVjUDTWgmdnk2UFUSSg01RKEWYhwzR581cFslc08VRA0jYhMVYxjSbuYSNNYCU1E0ctHiVtkkTjM1QY4xRhQkSZMCcCsVTqTFTxTkU0UCbXUjdFsxQhkCLxLlLmI1YuYyJVQGMN0jPvTCV4.iRAcGMrcjTSYicHkjKusjXv7VaBUyRv4VZgITNlYiZOkCR5AWYDIENwsFc1rjKqQSMFwjPtjGSDYkTyjkL2UkRGgTTRkia2UEMCEERFAUQxQEYXsVZQIUXxDGVHIiK1cUMk01aSkCb1DTMysVRqI0RigSTPQlYtokUyUUZkcVT2flaIQ0alMTPj0zJGIFYW8DZvDzbiIzZXkWNNsTSvQTXqwDb3k1b3MCUZYmQtUSUJsBZyYiaZkWc1D0S0AENM4hPycUY0LTXO0zP4L2JVc0Q081PCQjUtrzSlUCRrYSNU81b18FSBYSVVgzcz3BMUgzQ0bCY0bjU1PlVogyZrE0aLYSL3rhTV8lYyTESpQULBYWZFokKyYmXu4TQ2zTa20lRUMiZzMTNzEmQS8DQKUUbYwTPx4lKTQycBcEaHgyZtfiTsM2RVE2P3biawHWbCY0b2ITXyfkQ4LENW0lKkQ2M4c1XJYGZgkGTYUTZWsBYhgzYq0VXtnEapk0MMIFLt4jMpgjb0EWLMIUZv.mRqP1SxPTcikycuomUPsDcu4lKzUFQKEyTgczPlQyP3oESAw1PHkFYEEicAEiMEcVR0jWYsEiZzckKq7jQG0jQTEWRPshcFUjUmEmSFkFN5gmdMM1LZYlTsQ2TQU2PE4jPIEkRJAyTlkDQFozJZcDNzvza4XWTHEESCc1PTEWNTACaTMWSmIlSnYlYGckXEUDMG4FQpkDcOQ1ZPACaOYSQPUUYUcmTn0VP0UiMXIFZn4DMoUzX1U1YzTSYuI0LSYWNTgCT1MESXcWQFwDc54BStXWZREUTKUkYtAWRTshahwDLjsDbSoVQyMjXqY0YSkjTCYma1QmPQA0bzrlUYYUXiIVSDcWc2PmbS0jLtnkMqf0Zpw1L0XjM0YScLo0aWIzZzkidUgVZVEGZmM1P4bmPgsldRQmQk0lLJgTcxjiLxElQRMGcmc0M2TWa3bTUh01XnshXyHFS3QGQHozQTMDZtgjLrIid4QUQVYTcrUWTtQkKQImYUcGZmEGRP0jasYjbSkGNQ8FaD4lXLAmQRkCbpkkKXQkL2cTdmo2b0MCNC4DN0MjdJEDVM0TXHUjPgo1SKgFUVMjYEkUZqQiQQMmS3njUwX1Z3bkSyPWQ4.2ahkSb1ImPXAGMR8lbE4DYOg0XTM1LtUSVOQ0U2UVdUcEUiU1LPgDN3cGYBcCc1.GSkAELxDiMWIDMxYlLyQ0LFYlZyIVStnUPWETUK81TtUyPwQETtgTb48zXPklbQYkdE8zTtgkPPUybWkmPkcCQyDEbjcmbyQlSqkWPzYWLokkKrwjVZYFc3UUd0AiXT8lX0ISazIScjkjK1cCRxzzTmUSYHImLUACbtLka2AWXxECYU4TUs4zaAcUajI0URQmXDQDQxg2UugFTzH0XY4xM1gTXXIUX5gUVC8VRIglTrgUYSIUbrkTdn4Dd1DjQyzVYZgjKSQySAAGVvUUP1UjdMYEa5Q0X241aD4zQjE1Uu4DTAkFRJ41M3EjTvomb2cyU3LycPUCdNsDZMgGYwfiVBASMFgya2DWY3f0LqrRVHEDM3rRQVkEdsQCdLQ0TUsTMqfjKtnkZzgTR2UWYCUGRHYTc471LDsFUUIVVQMEaYEURYMVdw.0LWElPwHEVAkiMOgVaqUVLv4TZAo2RvzjdyoUc2zTLqYicQkCcWkmZUcSa0ASNEAWMq3zQioWcyPlMLYScmY2J3LjRzYjMv81XS0FYTI2LAIVZxbiX4PzYvQWb4QVZVMCYWUWVCEDZBwDb1UVa3gyRvnzJPIkTpUkYAUyUUAGVRslMhMzYoA0UxQTcrIjTxX0bVgCY0DFaWshdLkSYNc1LTsBYGglcUgWPrQGRVgkRTEUPVYiSzkGc5QlRgkUc1nVNjUVTMUTSokmax0lMYUjaVEmZgYEZRklRPMVXJUmVxMGR0jCSkUTctkEQ2fDawLlKuQma1QlKUIlKnESNxAyYNEFMQgWLNcSbmsFSwbkVGETQiUWLWAWVI0zYzcVY2XFRTE0YzMzX4XEU4fmUJMGMB8jXEkTLWYmcyfWRO4DYlYENqUSVikkaTUFU2sBd4EzUX4RdSY0PhAGbqUyUzbWbjoTRFoGThciXocTLwDFY1IkXk4VRtMyXF4RLpcUVtQEa4fiS0jzYEUmakM0byfDL3PSPRshY34jSIkEZq4FTOYkMiMkMkc2axD1ZxcEbwQ0RWkDLOQ2L3IVbHgjSOACYPcUdWsxY4rBbJ4TYFMkYNEEQOYTQtMkVxs1cFEUdqMFSrIkP3XjZDAiasgCMzrDckM2RzTlZTMlYXE0YVIENo4VV33RbngiZQYjdOglVL81bZsFVkQiKNUmZwIDNYYWLsIVVSQWYIcDRBYUV3fEcRcSX3jVX0fEQpkCcgoETwH2amgWQOgVPREzPpcVNHgzQsc2QNc0U4fkQAIETWAEbuQDcXsVSHA0a3UVTGQWPzLUYwPTRhw1UWQENFAmQ4Uzbwv1Mjc0XiQjMygjQVEGU0zTPug0P00zaTkWLuQTbJ4xR4EUQyo2TkU0TAkVXW8FST4xPP0DMiEkT0MUUQI0aZcCNv4jLCQybEo2YQUVQpg0TyPWax3DU0Xldj4TUtflbPQiakwlQVEEbNMzYEcVd2jCbz.GbxgGcJMDTxHjQtImdjElbqc2cpIya1fGLH81JDshZrQmXOAiV43xL4IyZsczMjMWcrkldqclT07VLSklSrcDV3nUNGUkKpklM08lRxclYLkjaEwDb2IGQggDdvUUVg4TXTIDLzImRNU0XZIWZPwFVocia5ESQMwjQ4TSZUAWSq71P2Y1JJU1PhY0LUgkR37FZmgzRrYUQvLGRvQUcUk2ZAYjQxLWbUoVbXk2bxMWayX2UxIjSSsjXAMmcXgCQ1fWUiUWcF8jcTkDTIUFY3YkaQ0TXOczJRgkTwEmYzcFLyfzXsQVaDEiMCIlUvElcJMjaTIFMSkjQZgCUY4hcVg0Y0UCTmglQAk0Q0.iRmECTqbUVo0TNkAWZyjyTC8DNVsjMtE2ZkM1XxYEL3jGZgA2czAmSRYjPE0zLoo0U4vVQBkyQ0YicFIDNxMUNMg0YPUVPCo2PUwFalMkL4YUUYQ2cUczbtPlMv3DMosTXxHGTwDGYBgFdCoEMvAWZYM1MKQCSwo1LqAyXtETb03VVRIFb5YEbxbSRFUUc5gkRUkSMAcUcqDSZqE1QvwlUPokdqkFUiQSM3QjV2TyMJkCR3o0aQQ1Ukg1LD4RPznzXDwFbKkmLvUFdWwjZpYiLwc0UDcyXCIkQTYlXVAkcCsDRpQSXLojQwcCMZcDVzfWYqPGNoU1TKUjQMk1SSkkTmg0XxQ1XqQUVoIjTBUmQwn0MLkFLQY1TX8TcyIVP1XzJSMlMuE1b0k1XTMCROkCS2Y2c5M0ZRcUV4LyRl0FcYkFNV4DZGcjVwnDYzTiVBgVcYsRX4DUXpcVYEA2YB4VUjUzM5Q1YxbyRw.2ZIk0arQSNk0FVwfDRwU1Z17DNzjETTsTYzLSQPUFb1kDdSM1aogCZykGdlE2ZwXSdsEWXio2S2DzUvAiMQIlUJUCLuwDcwgzLzjkMZU2ZTgUTjQyQWgWbhYGQQQmQXACajYTSCMGbrgCcVUDaMgERpUyQYYUXq3BatHUTLgSLkIVdvLmPmIEYxwjKuwlbtvFZ4Emcq.mcZcVLvoDR3b0UScEV2LyJGMTaxnEQoU2SisTNnEmaKYjT0nEMhMjMxYjVnIDQA4RcXM1UhkERwfDZAY2X1kzQ0PCVnoFNwv1PwDUdyQiSvDmYOYlaCQGLqQUVNsFZyIGVUMmaAg1XlAGQh8FQqsTa1LkVqYiU3AUNtkEL0sFTvI2bOY2bVoEbQEjZAA0XIgTPzYWaPgldz.2Y0j0LIgyLDozRAsTNwPjMCwjXEc2azAmbw7laznEYy3hbGQGQocjKrMWTjITMv4BM3PESPcTToI0LjUTTzMlP0YFZzgSaP81Jyc1XtjWPRckYQIkKXwTXw3jUwvVTxn2MmsFY1LURzDmLvsTX4MzM03jKKcmL4nVdEUia5MUZXEDTqHyYoMVNGEWNRECYBomdSEDdrM1RjgSTNg2YrQERuMFULoFUtXULvkDNlACLxLDNAgVLqETQmITXVE1T1D2QJs1JHIVPqbmQScFd1H2RPIkZHcicwXUQigyctcmaLIUYzACYXQyRRY2Yx8laUQEUU4BQIUkVVQVcBIUcpI0PWkTbDkjVtMDRVMkVMcVLrQSSMk2J1.iKqHiTTESV4YUT3DCTCQSPPYSU0fDTCACThclY1MCN4fWLRMTNTwTYxDiQFomTvjWbRQ1ZW4xLScFMNUEdJIkarQ0TwckctzDSCQ0MOYFZ1flTLsTNtgSQKM1TzUSTtICdwrjLqUUSjIGZPgzYQQDNqY2bTYyJDgkcP8DTg4RNxAiTZQDYlETb0D0TNwjTEYVL5cyYqPCZvjGcnIyTxc2TtUjPqzVMXIEbpITc1MkXUA2LIcSbAMiUZEkStojL4I0Z1UDUGkDcREWdUcjQEszTqbWX23VTqn0SWoEdVMUSLozc3XmQwslRJQSaNcFRxXGNjc1clsVU3nTXqIGdqvlUREmaG4Fcqo0R2UFR3vzbxIyLYgUdD01LNkVdkQlSmEmcmMVNOUiY1nlcv3jSkgTUzIVLJA2YKIjLvX0ZKIENXM1TWA0SigjQEQkQJk2bKwTQRozJC0DMyTTR3kDSBMGbyTVLPQmS0cicKkTRZ4BNCQTR3YmVUQFaXMUcwIzbmw1TLslYigidjETd1DWVCg2c2b0TZojYVEiY4rTXF4jaQAyMzrhPn8lboMUYJcCSJE0cWoFMPMSRz4BLxQ0ZQ8Tc0MSTrQCTswDUQMlUho2PGkjaxESb4cWbwgSPx0jTmczLFMTa2MTYLUGNIYzavXUP2IjVwnVQD4FdtgFbVc1J08DMHojZmgUQuY2aUYSX4zzZL0TLvcDLTwTNx81bqUGMuoGavnzczk0PTYGUBIWNgYGMqQWSkQUdxXEYqYlTOASVmwDVYYWXBg1UlQ2X3EUcL41ZBUlMukWNvb1LjI0XDMjdMYSNNkCd2EST3AyPWo1T0YyZvYCSKElcF4DQ1cmSCQUMgoWMWEyM4oUV1P2PlcUbvbmaGgGU4ECUhsVPDYzJFEjb1fUN0kFUukWLpQDM4fmRmMzZXASLiAEZ3IkcZUVT1j1QUoGU0PkSgMjStc2RrozYKQUX4PiLikSdqITcRk0X54jRjUUQsY2XycSN4QTY3szY0kkXnslV3k0J2LWU5M0StH1MtsDQTUVLFUUVOUkM0bjQqHEZrMTdDAmcvPCVtfETnEUSLg2b1j0UYolXQcFdE0DNGMVbZEVMTgSTkETdBgFduo1M1DCSWYVdhwzLYo1RIY2PKMmStgDQvvlVKQEROEFMV8jPqIkV2rDMgwlSIIzYgwVNGIjL0g0QII1P2MWYNQDU4fzM5oza2zlQVYlLoEjVJciK4YUcVYjUiIjZicmcy81TxH1PgoFTLk1RZgWNBU2ZAQFL3ITYVsxSyP2PUoERK8FbxMiPnQGRscUdvkiQlIDMGUGYwc1aFEVPwDSX0DlZCEWSzkGcxjFZV41S48lT3MVXgcmQzbkVrYDR5QzLAUTRSQkUmgTbTM1YpMlSNsBM4LWQwX0ZmITP4oFd1MmMtE0US8zctEDS4IySqXWNT0DLDkDYogEcWUyPYEiMKEERwbDdLo2bw4zP5UlSOImVQUkRzoWZzYmQCojM1shZwPFYHAyUIUCTAcmTpAEdlIETyEUSIAyLUwVbvDENh4zL2AUaZI1ZVU1LS8FazPVX2nUYKsxUD4lYZcES2rhQWIicAU0MGoDTQkTQTQmXLYFR441MgYFTmEiQzPWM0DlXHw1Y2UidT4RU2PUXso0PjwzUDESSqDDN18FLTs1Myk1SzDTPsE0S1bmd0QiMyPWSCIycmIlRsgidFM2czXDa13BMVIGU2YERyQGZukjd0.0LqLCTX0TMgciXvs1XnQkKpICQp0lazQWVZomQGYTT3sjYlMDYNU0Uzb2cl41Xickd5cVcq3zZvIiK4TjQtYCLBMWNIACZ1EVdwQkc2A0SrokPYwjTpYyQHkTRxjSNQ0jQOIkPjIEUggWSJQVY2rjcw8zZZo2UvEkczkldBQlVtMyawvFL3XULvXGNTIzLlAGUtjSLvDWaI0DVQcGS2wlavETVw4xPs8zJCMmb5c2PzDlZX81Z4PzXj8VMyYzLCE0StLDNhITdvoFQN4lc0A0YwQGSvfEVnkjTpoEdMYmd3AUT18TNTcmUoglYtXlSvLCRq4zRAcyc1LESGUSd1TDYv81S3c0TxnlUxPWXBozJzfTNK0zJYIzPh4lUGY1clglRKwVPlYld1T1bt8DQXkWVgI1MnITcOcDSjkiQhkGLIIlVwHkUSwDVHImbq3zJ2QicFUFLiUELHgzTuEWQvj2Lx3hT4bmaq7DNSgEN0P1QCYzROcCRzjVQpMyUvYjSy8Dd1XmQmQ1UyzzRVo2MP4zMtjFaOEzMsgSM1EmZgUEbOMlbLImbjshdpYmX1kSTpoWdZUzQ2UjK4k0RnMjaRkCQMo0PlYUQt4TTxUERYIiY2YUNFsjKyj0UtQia0Xicj4FLrAGdxTyQ0kkMjcDNtvzaIciSRU0RJoGcLsBQskiZikWM2c0Q2glUuY2PnMUa3ITLWcGVZQVX0U2Py0DbTk0RI4TMLAGUF0DUj8TT3DjSZEzT1YiUTkkUE8zYW4xU4gFaYo1TzDUNh0zbSgyc2clLYkFQ2TiUwEmQtEmMxbiY1.EMHsVb4ACcKAULh8zT2YmSr4jKtoFb3wTPPM1ZhUyZSgSSBYWVlMlbQoVM5MiUKAyUJQjbxkVTyzFbQ0VVMQmZgk2PXQzL2gGS3jiXmAGZukEVzczYGsTNGEyYYsFawsFUiIETHAGR3QyZkgycFE0SvolU2EmXhkTYxX2ZZwjR1cDNCMiYSkUTDMTVsAUVrQWLoUjS2E0Xx.mRpYGZBgVR4zTQUMUQzX1UoYlLyU0MFACVmsFQuQWcjc2UhASYNoTSPkyaxfjT1.2XwcDR2zVXWUiPOsDYPEWaGw1Zh8lURQ1LSQSVzs1RjcCLQwTQwX2ZGM0UxcCTOI0U0I1LVEESqjVVEg2XVkGbLEmaYsxYMIzQNcTUj4jSmMkavomZXUSUEoFbmEWY5olPzoVTpgGQtTEZEQDcLcicyrVPVEiMSYmQMMFTlIULskTTqLlM1MEVP4zJG4hUvISSqTGYkISdlICZAUFa0QlbIQyY231UvDVZ2jCTgwVdlUmRTgTSMEGdP8TcIkycVMzR2sRQDUkMuslbBIGcvH0MYgyZu4VXjQTbhM0SKM2TqbkdzPSUoUCczE0MAECaUkFSoIVRVcFZZMFVqc0RLgzZRI1RKUVcn8DQ5IzcRU1Qu4RbYMybtYjZXQGRv0FamsTaTo2ULUjb4oUPJEDSxLSVZo1M1w1c3EWYH4xXyP0PWICL08VaHEWZSEmaSkFQsUldqfCVz4hVxQTNuE2bsoDY3TTU1YDSwUDLvQzazLWbiEWLsASd27jcmsDarEFNkEjLwQ1YuUEUkgjaOMTM0LGR441cL8DNyMDdWshQX4zPQUTUhUDLgkFVYQEdrwzQG0lXl8jPm4hdwDTMJYWSk0VLUoGYvX0SCojTyXEMKslTKgCdE0VR1LVXyXSRXwjQiEyZ2TENRUkUVQzQ0rzJQcjQv.WcPsjLrcmZQQFd1TmShUlXKYWShIya5w1JjkicLkWP0.CY14BNr0Dco0lQEMDTkQEQqA0aqbCVggVXrkCczfmaYsRViECZXECQzjDZOMUXnMjTwPmKp4DQPgTc3zVZBQ2cX4lSAQyTRQySyUzcYEyMrM2Jm0TRZkmUsgEc1o1PtsRUscEbOMiYTMEahUCNvPWRrkFLqEiTMUGNoMUNpwFV4cSPSQGbhA0LCYyZzMmaycCRFQWVqjyTvPiMmo2X2QjVsAGahIUNmcjRCA0LEciLzfzcCUGQvYEZwL2avYjQz8jRFYDa2T1QHEjMykiVGEFQhgEVkcGUsASQRQUTtPTPo4hZ0cWVqU1atfUXxEES1PTPLU0aQcDRJcWSpY2R1gUZociKpY0RMc2cmYDSIo0ahICbzYDLsQ2MAYiXm4RQgcDQ3wDUMUmXJ41Zuo2SKkTcZUkPyTldYgyRjcGRNgEb1EWSJQzXIImbCEzTvXzbTkiKuoFSz.EVk8lZVc2LuEmVxkFdUQzbSUTZrMkLOQmQyLzLlEDcq0zaCgWQiIzR3flMssDQiMmdiMDVrsxXvUFb3HSNO8FSjkFYrAUc1H0UvokS1AmdpYEa0b0QqzVNVUGTog1ZDolUuIiLwHUYpozQxQUX1XSbZ8zTv0lPpsVa0TmbhoUXZwTdzPkavoDYWcCNoUUT1HTUqfzLkkCVzTlakMUZ0gGRtcmLEQFNsQ0MBUlM3MDctj1SZYDS3D1TRkFaWESRvQiTmQjPj41LyQCTGMSQo4TYBQyXSgSVx8FZvXDNWIlYz.mKBkmZLEDaUg2Ukc0PN4RP0nVNPU0L5IiVxjUQygCY0MTQ0M2R00Fc3kmXBQUNP81LigVVFkSZPoVdqgkPMYFdzolPocEaOMySP8FQvE1aEwjPmUCNh0VS2kjKro1MZEGaSMURwg2XtblLvzlPoU1UQQCbkImL3U0aq.UcGYiMJgjYtPSbxUjUVEzPjckagIyM1ESN0gCLW8FbyM1S0QyMgcSTWgiaO0FbBIjdW81UBUlb2LWY0gFamY2PwHzYtrTN0DkXzASVoMiSHU2aicTbhYyMkMCVu4RQD8FV3f2axXjX3.CSE4lSZUkQQszSOUzLtHEZzXVRtTzZHAiSXgjLickS2gmR08latIVUro2JkU1YZAUQ0gWLl4Bd3okZwHUZpclKxPmVVc0LQYzUQkiL47VdLgEd3YmVRslVzcjci4RcvIzY2w1J2gkR4UFVCUlXUETTyciLhgTXxn0RSg0YsYlV24VNHkiRQwDcogGRtT2Jl0jPqoVQvrFMz4hM2cDUlgjZw3TdBMGRVshVxQmamUVVxPSbmISY5UlZTAES3bzMXEmK3Y0PCcFbp4RbhklSDglYGMUU4okbzXWUvMiVYEya1gCa27DNoImUIAWQVgGSq3DY4zlLhQmUkASNqA0JhIWL4zTNt0jZQAkKxjzPqjCUp4xaWkzM3PUbiASb0AEV4cSSnwFbn4zZJclVA8VR2gFU2gVdhclLZ4zTl8TUmQELZcGVjETbywDU2c0MvolPDYUbPQCb48TVHkmVnE0QHUFLQkmKtI2bGYkdzU1atzVYOEENQkmRK4DUtI0JQ4VQKgTTVojLSoVZ4jCSm0TcrQFbLQjMEYFY3PSMFcTcNMURqQSTGgyclMiPQcVStvlLhYWav0zbyEEbUAWRpcWVGgSbRo0YsQGQ2EDS3oDazjCLKIFSo0DL58lRKcCc4DlSnoUXtkDSqT1ZwQVL5QkXLUUTxgEc1c1TwjFN04lc0njYwnjSxb0SskUVXkFbAQET0AURNoUd5EzPQY1QusVX0klXqHCMyLFcBQUZKkCTtPkcvsjYO8VQGoEaoEiZngiQTYFb2XSd0Yyc3TkSQ0jdqoUXlUiaxkzJlMTMGEUaUMDTnEiZPYyZtLULrQVYZg0PIEmdrglRlIEdCkDcFY1PtTULNckLhE0ah8jYpYUVtHSRI4TRpQSRWcyXM8DSxbUT1PiaRwzJlgEYCslb2gUYvM2Q5U1RV4VUqXFUvrlLnUkSQYyJvLiMTcFUiYGN13hZzICaqgiaN8DcAYzRXI2R1HTd13DUJYCVVc1QDYjMPIDa2HGQB01TgEzZokjTxnmdTEFcKsTPQwzJrwjd44DLwokbhkjboASTqcmXzTTRTcCYlcEc1AkaoQzagYSV1YzMrg2Xy.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.GTYMldL4VNFsVd37DLWQiKUMWSxDSd5kycCkCcLUCUCYiduYmLWgCQpw1SmEiSz71JzUWSggTQToVZRAUMvLTUGQjRIUFbpc2XuMmMPwlTNQldgkDSiElXzUDVNUDSVMGQygFb2PiXzzFNxQ2JVI0M0nlRHkyaN4FTjEScCglYHYkKKc0ZMASMHgVQigiXpEiVPgCct4FdgYTUtUkX3kDUBcyUtnkK4bESJ8zXUUFZwL1cUAGSM4VSDQSVBYUVnEiQvQDV0YWdAMzSTQUYuUDLF81PV41Xl0FaLUiYkgGTIciPE0FRZMmct8TbyICUG4hUEYyUJEFbqjjagYWahEWQzDiVW8FMt0TYLImStkmTPYyR4.STFkldKcGREkjU4fjQ2MUdlk0ZzblXKQVYJgkQhUVRFIWMSETT2g0MRUDZkE2U1gmQB8VU3A0QooVNvjVPqjWPrk0c4TzMxL1U1QTa2LiZHo0bz3zUqQkMxzFLVklbxkUUEImaXgEdQE0U2nVUhkibiIEcQYSdlgCQEEyQPAEa2wVaHoERRIyYqYVY2M0aYU2JRYycXI2b0wlcvrVUq0DdvwzPsMTVmkFUZgVMxjGLTcjaAMENpgjV2YySVgGVvMmMEgFTTkGdYECVYkmQoMGL40VcFQkY401cqEmQMQUc3bFMsgSdiQmRTIiQJsVZxHmP4k0cRoUQq.id3YjUt.ic2cicMMjcuYDUDMUa1vTVMgTRkAyPOgVdS4xSYUCRiMlRGMjahETQ0QkaMkEcwT0ROM2ciA0SQk2YqI0TkwFa3XDNwA2SF4VcAA2SzAmUoEWVzfmUhQSLyfGV2H0TokzaAIDQgQ0XAklcyj2aTcULwwDdjszTl4FUvgFaGoWbRk2ajcGTL4hSyckMXciRSkVPvH1bL8zQ2IzX5cWd2EGVPQSMKECRwTWLrUSQikiM0Mybmk0XvUjKqXFML4RTjsjZFM2atIiKmoFQGwFURECajQENsUWLwcjVSETVHEVLLA0LyQCZw4xQQYCa5k2QrIlb5MmV4cFVGMEbvcWbOoEMs01LrIiYxjCaoAWPIcUbZ0DMZEGNgAkYDcWNwsxMBgGNUcSZ5MWQ4jkYh4FYQ41SvITZ3sFSpkDcrcFUokiXFIFN3PGbWEDNDIVN33hL4jFSpUCQ4kCRxgTdg8DdFwVY1XSLKgyPhE2UlgyaqP0Y2LSUNoTYDcVYCo1cKAic5A2UoIVQqjlboMmUU0ldLgyTYgWbLQ0X3wVczMUcBo2atACZvDSLQE0MsQGcGoFdrsRMYEyahYmdqvzUXYkMv4hUw3FY4nUX4PDbLgUQqkWQg4DN3zFdy8VdGEkP1jGN2A0YkEELXMlR3gjPVokPyfSSrEUctkSNTQzZscyZnokPZ4DSPk1Xx3zR2UlM3ElKEwDaKQUahgkVGkEbPAmM1jzUScCZ4P1btnVUrcGbIUkSgIlSHoDdJ0TSAMDQAY2byPyPRQlP0gVQlslbr0zPtEEVocTS4jkM4IySLMzcSwjRXEERtsTRXcUL0YiYjQ2Qq0DUtIDQOIDaxESMlkSPqEkaJYlYZsRZogyMIcjVwwVaWMjZJA2aEgDSAsDRnIzTVQjQYUzUtU0JwjFdRcDbBUSZLklUMQ1QRs1TOcyXpEkbxnWS0LEMzkUQ1QmXywlLGYSdzT1M4cUMwIjLmc0X5QGctDzUuAkLzkVVyUyX0L2UmojMtcyPOgkdWgjXzjWdio0LmM1Zgglb1gGa4DTRtPidToVRj0FRXIkbsUma3DyZBcyQkgGQ2QFQlgUSG8TUzPyMrAEZzwTbYYjd1TySKgCQq7lXIMiQxPzaZgTM1ElS5YDdGUyM4TVd4DFV4.mbxHTaqjyaCoUMMwVUtXlcmkVMxoVSPEWZrk0YOM1aZU1TFE0bMISbEcyTwk0PxUjPAUiP2cGROE2bwP2coo2TQI1YHg0PpYDRMIlaBMUMxY0QV4xP5gDQLgTbWgCRqQlbxMkSxvFVqLkaRUkblUCYzPSYUUEdYsDZU4zQY8TXxHjT1LVcTwzPwMGc2.CYwrRZEQiS3jVSlAUPqoTYCAETDEFUmEFcVEDZ2kFUigmb2XCN2EETGMlXz.CMk0jcxHEMzDVXSYTaX4FY1gFVMUlV0bkVtICR3fWRqECMqrzMSkWcY8ldJ0VXSclPxDWXq3RN18zTykVNKwjXComZiUGZVIULuUia5kjUXIUUZMyUxISQNUUZ0IFUHozQyYjVxQ0cwokKmAkPSEDNZ0VbXkFQG8zSXIWPXsVRBokRCo2XYkUV2cWM3L2JGQTQRgUM3fDcu41JQ0jSWgzSCYCLTQ2ZoEUYAk0RkIzYkciQkMyTBISLJsjLiM0QYc1bq41PwYVXgUyZQMTLC8jXvI1LhgGUkAUaoM1RTMTbJQTcCASS4biaqY0XyEjS5gUPyXSV3UTXKEVPM8FYQESUucWLFgSPBgycyYDd0cUNvvDQ1UmaGkzXyjycZQTLOETVFcCYjAEVZY1TME1XJw1b4ozTUUzYAQlQUEFY1IlU4kGRgUlZocySx0jTyL2LCcESp8zb2oUUqMSLnYyaSgkPsUSXBYSb0IkUZ8VSR4hdRk2TvImM3bFdHgzJJg2Y0zDLAIGdtQlVqXlVwwlTGgiakQkYTAkZwgERTcFdSY0Z4c2StfWUOUDNGcWYGMUNsojXuMGNHszLkoERGwlQjA2U5QCclsxPVkVaXUUcX4jSVIWb04DRLUmRYI1YVEUd3MVN2IWcu01aSklKFgTY1LSMK01SgoEdg0lZtvlRsglUmkldqMmQEQDYxkCYQESMtwldxglQ14FZ2rFMQEzT5szPsMkcgACU1M1UUUTNOYlTEgmPH4BVqvja4MkaCESRYoTS1ImU1g2PkQ0YSIVZ1nkY0PkMVAmaUQSSzDGbPUDRE0DQZwlLI4VPmECTHYWcAYDQkY0Y28FTRMmYCQSLOIWUVQjVMYkbmMSZ04zMno2QKM0Z2cSdiEzXsQiXkombTA0REQmURYmdIMVRnEibgkSUrUkQUojMOkDLKgFTPESRk4xTiEGRIITXiI2ZsIEd1ITUMISPjEDZqT1ZvL0RT0FbGEzL3vDRh4DU0XiQH4BQzwVL4zFLvLSTq4xM1slXxb2YwbTP5ECQUUVRiciYBIkbQclRqslVJMmamYib5oFQlsFLFgyQi4TN3gVRyc1aRg1X5AWTNsxTpcGU4bmPJolcCkmYzX2cvETPv4jLCI1blshR4sVQlcCbwLjPxQWRQkmLVcVVWcjaPkGSkcSS4UScSUmS5wlbXojPiMVLEQjPzPUa2YUXqMlYnoTaR8zJVcGYPEFM2UCRgcDcwrTNBMTMskUUCAkdGM2UwzlcroGZisVakQDNLUlUBY1aJYDUgUUayH0PhoWb1PEMtHySUAERUslLwomQyDVZq7FLBIWXzI2U3MmPAACTlIkb4LjSEgiaMszJ5YVT5MybvQ1SuIlUnYCc2ACYlY1cEQyTYw1c24jRQcEYtrTNrgyTgk0MUMkTYEGRkE0UHUjLGQkSXkEVsgkSxDVbZMTdX0FbEgyR2jGSRMTZoETU4.GZIUVQuESaxXFSUEmVYMFb2MVbhg1LwzFU4HCRMIWdzIFStPSd2jFYPYTYCU0XQQUVKYSVTc2QxTiPlImUTcSavjWatrVVjgSbAsFVIEmLqESdxzVdD01LiYmdgwDbFwDZtbGUOUzPDgmatHkXNQVT2PTQjEjLxYELpsjP4HFcAEGdPElPp4DdxAmLRgzUGoVassTXnY2bVYUUq7jV1MUXl0jb2PSZI8VY4UDZWwTXyMGNtH2aFYENBcUZFQ1YhclUVYEN2XSYRUjT2k0T2AyQmcENywVcxnmRGk0RtwzXTc1SWomX3k2RwfSXwP1RzU0TAMjbXIGdvDjRMkmTTQjTrU0SqLyQzvlcBMWbXYUbwLVXIcFMjIFLnAkTHY0MI8TPukEMnQiXLEVTqsRZtEjQ14Da2QmPqfzT5UkLn8jKyDEMVUCZkcmZzckTmU2aJE0X2HCSycVc2X1TqkVTwTEQoI0T1kUchwTb1USP2r1MjUkT3MVRggicoQTRyLjdicSU2n0YzQmSy8lUhYFbxUkM0kFV54VcSgka1bTQCoEbXUSdqj1TmU2MzPlQ0MzZxQkPNgSayPSQVkyS1gkYiomK0Q0RSM1Y3IycRUiRxEiQQUzPtAST1n2RsIiSqLSZDgCSWkzXEsBUX8jatg1TAkyL0cCd4DmcIIjSwXTXTICLyHldh4FcKIjK3k2Q1MVbqflbso0avH1cvvlMyXCN2QlMQUVY1clVHYDTiUDQtIlTvgycJk2YLQFQO4VaLIEa4U1RvLFM5oDM2f2axgWRxA2PvLSdmM1RgszTWAUQ4sVbtUEYFM1byXDN3kWRzQSYKMCVJgVYhwzTBU1JTcGciU0cZUCdGczUIE2RFgDSzDWbH0TdGEWZyLyRokyRS41P1ImQCUmTqIjSwXFawwjbgIlKnUGTKglbmkzPiklV1PmXlYkUxbzSnEDVVcTU1PGawckRzXFNTcSYsEDVBkjZOI1QqbSaLMlcBEmTB8VYCc0MmkSXXs1XYYGT2IGLrk1P1gUcpkWRCYlUp8DdMoFcRoGSsYmZTIVV0X1POs1QuM2YZsVd1YSROUSXZMmUVMTP0UUStoUasgCdCMGazkUSnQzQoYlaYQCMXc0UkshKw8TLsAUViEmcDACUvL2bDElPyY1UFkScj8zZ4s1JCU2LHMyPUQjY13TaokGRK0zQVMzPIwzbpQFZZEWM4.CQGMScvfjTkkSXqMjPYwVVZkTSKEjRFMlamUFYrgEczzDZAoVROYUM5MGMGMDTVAkU3HVP0ICR3USUqAkLMcUaAcUaJcDVgASTgcDM3MCdpMiUlEjLyIWQRkSX2TTXPkUagkCRKQkXFEELtkzYX81R2.WM1E0PoYmK4TESAsjZHUiKtXFLkgSQ5kFNjkzXEETM2MjKX4TcqfTdAY1RyfVYtYUdH8TQsoEMUYkTJ4xXig2azM0M2cWPqHjcishamUkcXYSYLo0X5UVRWY0RV0lTxrxUYEWYXgWaocCai8DUBcEMG0jLOU0QWY1S0rzTX0TR0c1TssFZQUTZWECLY4TSrAmKmgGVHkSVicVMyY2JhsjRk4FRzU1bZgycXs1QmIjVZYkSP4xXsIyS0g1SugzQAYjX0YEdsg1SDQ2MwTzQzjGZ4ciKYU0PwcGSRkUb2XEbQUFSIwVMZgVPxjFUzPCV1MSTE0FUpUUXPEFYIYCVK8zcWQla1kSQWUGLqrhaw.SY2QicwozMko1SIklUjwFTUIlRQciVqQTMjgybBMzTtYTMpgCdWESZggCczE0U2YDLjcULuwzTlU0XEYWNpUVNiMCc1USSxclV1D0cHAUMQUic3cmPtc0LnsxREUjbXsVY3PTSmgEQ5ETQv0jPxcUNyXyYEQ2cmMSNLEGbVUWaPcULncGN2MSX3AUTIUkXOEyX5gFNzI0XIsDTqg2MSkjRyrTRn4lYGUUTJQ0XJgSMsMUYlokSHgjLvkiLtDFMzrVa2clUNk1Zqv1Xz3TYsAURuIUVxXlZqYWa3jWSLAkUrEkdtP0Q1nVMJoERvPCQt.WMvPGb1LUdgold1.kXTElMicVbuUFVtIWbzjUSwbiPw.kX1ECSRkDUrElUsETSl0lVFICMHAUVw.2JW0FTxUySw4DbBEUN1UFbVAiLCE0XjUkTHEDRzMkTHI2XLshUHAmZlE2MBc0YnQlM581X4DkLzI1JGMEQHAUUYokZXwzLUUUViwjZSI1YykFagMTLPUCRSEEdIYWU4fEMRYCUrQyMqHUM0AUTvfiLFgFQhkyb3kCLBM2RUslQzUyJ0QVVmUWZtbiavHmZ3v1JqoWcwYjSpglUzsDa0IWPv3DNmMVSzPiZY4jPKgSd0szQ34xYvMiajg1P3jkSxASN1HESzACTv7TcIEEYTcmP2ACY23TYxvjSG0DY1gGc4L0bFMSYucWcwfWMSYmS2gTUjgzQ3M1QwUSbsEiKhoUcZo1UnkTX43lYBYFV3IDMGMETZMTSEsjQZQyLQg2Tt.WR0nkcjQDUxgTYqomMZsRXXojaX4hPxjyUqYmSE0lZXACaEsBaqg2TjQlUkgTZvgERlkFbYcVbxgyb30VdhIGdrczZ4olcCgmRxEWaSw1bxYWX3HWYmQVQKwTXpwVL0P0J4MWZ1zVRlYTXEElZCYDSzIUNLwDbXc0YTg2csomTHYFRCkVRjYlM1b2LV4Fa0gUYgEVVwXSVvHmZpgFV4gDLAQmcMQ1SSsjMvwDdzE0UscUQwAmLtQzctHUMDoUZrQUYkQyU5EFU3EiX2v1b1gkbOQTPVg1UH4zMwjWSOgGQysTLwbiRIwzRvwTPHUCVZMETQIVbmITT4MzTtPCU4HTaXAUQi4Fd3IkMw3xZ2DTTE0DTUYGNwzVQtLFYVkmXXoUb4LSQvfSarcFaZM0cLMkdyDGRFwFRTUSPqzTNMokZyjmPTcWSEMTYVcSL3kUdDEjSmISQA0TV4EFZjsRYpkUd4EzUB4FRw3BQ1QzYSUFMY4xX3nWTgo0TYcyJooTYwgVQDAWTtojPGgWV4PzZDAybEISbtHycqjEQAACQrcyLFMDLOc2R4YiL5oFd5MTdvMGc1jSXzUWT3ImS2DlZpYTbmgkPoQ0UTU0U5kSaxjzTYE0X4oGVoYETI0DZyMEU0UldjEmSHkVNqYjQ34lLDkyQYI0YokSSW81Jvj2U4X0L0EGduQUZ1ElcrUEa001LqYSLVgSMoMkKTQCazDVNkYFVuEyPtUFRt.iLwLicw4BTZMlL0XjXVglPjkUTNw1aTQFRqPUQEEjVTshTXwzRiYCMRQDbZA2chQmR3UVMnsDcRciS2sDVVQSN3jCL4vjPwDSdEgTY1QzXhsjRmI2SxLkdVEjTYgmZ5kGaJUFMyEVPHIybxISZtfWSI0TVEIkUJk1J2A0SDcCYJ4zSSojYtnGNPE1bNkkaxEULW4ja2UjXPoTLCgicIMjYoMWQBoUbXEzaBYVTnE2ZkozXvPSUP4xTEMGN10lKhUDaxM1YF4lU5c0ZRcjViQSX0g1TQY1PmUySBECLtbza1gzaHYjUFMmRRYDV0jzRqbDQQUSR14xayLmcHQicrkmSSsTaQ4zQIoEYz8DNLI0Xk0VMIU1XmkDLAgzak0DaCE2Lt.WR2gEd5IGaTU0b1TTaF0lRYklKDkCN34VdXo1a3cDRCcWUKgVVxTDNtg1RTs1ahUUSmAWdWcScwkmd4UFaVUTUT0jXqoVbHQTRDMEQqszQzU2LZwjb3PlM4kDYL01MtHzb0wDLwTVLSklR1f1U1v1ctD2aTUkYsI2LjglUGQGMgwlK0MiUtLlVgIGVmoWa1rRchoTVHESMRgWYEEVVkUzZTslXkI1MLQmTmE0Q3jDTG4DT0rBSycVUuIjMlgTSF4jL0MzJFEjViwVS3z1QSclU4EUNMEmbGYWM1XVc3UTMpE0Zk8zJZUmS4kUdVk1R5EldrszUsEyPvjWRRUlP2X0TukWaVEjVvMkaLcWS2k0S2TEREI2RJkzJQwVbFMUM0clKLslSyozJVcjaTo0J4TUcOk1UyLUZXsBQksBZzDDQ1j1RUoVMD81ZWYldRQkdvMEcYEiQiwDUWcFLq7jTT4DcCQDTPMjU14TNrkDcpAWbqAmPjIFQj0zZMYmZiI0ctkSXxjWbOAGQMUVdYYVXCQSYwcmblwVN4YjL4D1YnEyY3YSYLc1cvTGV0giTGQCVjkyc071YFU1Zl01PUITM0LVLJQiYuAyM0c2UqHGMSEjURIjXIEWTtTDSxjCZqTVXwMWdYwVN4biczPibHU1bC8jPigjK4slL4szTksRLW4BVGgULQoVSwPWPoQGcpYWLygiMWgFNSoja4MTVJ0VMjEmYCQUQGshMtzFQkQiRjkVUr0FMOESZzrDdzASYIYyaUAkcpcWV2IkYGcWXzszQmQCL1gGQx0jczfGR4gkSyAiLYUicLYWXyHEQpQWPKYiQwDmQ5QkcSQlLoUCNlgETtQyM0TyQNkFcy0Da17zMvciZ5QFTLcVROQkbMYlZYQycwQmMm4xY4EySyYFMqsBRVI2cyAycPEFbIgyPOEEciIVdwHEQlQ0Ywgka4wDYm4BU4bicSYEZSkkKHYSdFc0buwDT4TiQv.0Mq41PXUlXVMEaLokbvTWdqDzPq4TUw4hchoETwb0ZikiZlMVMRE0PMUVS3ICbBcmdQcjLWolMqcUUGICToYlbFM2UYEjc4sTY1kzYjQFROoGY1LkPhk1JHYiXmcGascTdtMUX4g1PRElSgcjXjYWLKkzRiUUS0LDQzoWaIIWMqLjRPMyQLYiKzXDdis1YIQVVqXEMwc0X0HkSqXlTUQCZ2bVTMglTJA2bU0zbLIzY0c2SEclVYg2LqfSXXo2UrMVQuQ2bv3xURk2MFgWVY4Rb0DjZTcGQEAGZEACU1n0PrszJAkSNHY2XZQFUs4BbKc2XxojSxbiM3HVXRQSUZMVXqcEdHMWPGsVMoY0cu0TcE8FZgEkPX0jbxPUbHk2QCEyMRgUaTszaE4BTuwTT4XUM4jGctomUOQ1R3rBQRQFaPYiY3YyUEMyaGMDUPISY1XDRvLkLroFRR4DS5ciQwTTcsIDSrkDaSMlTM4VRsMFVqD0UD4jUjAGS1M1RJgzcjIVbtk2YIYyXiM2QJwzZ18jY0cET2fGSiYybEYVaucTZ4cySkkyJZsVXKAGVCQWMq.WMXQFZxAyQ3DSZTcUMsojZCM1YFc2a3AyLvEjc1bTS5k1P3EULnUSXSgGSXQERwnEZ1YCaKcCNqj0Y3X2TQ0lTF8TRhYSY4UiYQUGZyPjT54VZ3DUcqvlKFoERqTTUMwzUMMiKYgGUxrTMHEUY0HkZY8DVtXDbLEzbXclP5UzUwsFYK0zXTUENMMTUlIkdl0DMtciVkwVVw7FSG0TSwjTSM4ldvEERMITUybmUOclRqb1ZEMidBsxaXcGRi8jLz4Fb5ETXtjSb2DEMkI0ZtY2TX0TXFESUvTTNlcTU5IyRvrBQz.mdHUDSPkUXBkyTp0jSpMkUxk0MN81PtsTXnMDNpUjUVI1T0oGRm41ZygjQwclYCkja5MzUwoEYFMDSmolPU0TcvEUM0fVTCECcickVRMWYTACLlE2LSISbVIGQpkESyLWaZEUZH0zM0PSLvXVXKAGV2LVPQc1YW4BTKIUYU4VVpUzYEIWMJQWS1r1SYkGVvXjcPw1UlMyJocVPPokYx3RQlw1PsoFa1gTNnMVSkgGRlkka0zDQqLVL27lSv8FYxAGSYIiTnEibMUEZv.2UMYlc2XlUtMWNhoTSuEWQHgjUigCT2nmUDkFZQgCQYEVYIEiLJo0ZYAGdG4VQBo2J3.WSz4TV1cmPlwDcPU2JEgELyDzXYkictkjbKYSQMA0S3oUUzcmTr8jPnEiaFkFNtoEYrQzJ1fzJRYVaxUkcz0Dd3gFa1XUYLYiRsgmMxfzRoQlRVg2YSQFciISUkY2QFQmcQYzcYIjZ5klUk4VT4PGLzj2Ml4FLD4zXznWSCsFSngSaqLGYlk0L3rVdUMTVgM1UxYkP3ECTqPSYmwlL0bySgk1TVcDSXoTUrImV4rzJ2cSbqEyaKITX2oVaw8jMmYiPVojXrkiPzrRd4EidPYEdzHzb4rxMCAiSMQmahMyPtzzQtPTcuIVbqnkLsoDYvoUbKYmU4QWNzjCL4YETz3BRqIVYtYWPrQyaZcVZt3hYl4RTS4BYTkSQq.mT1nUV3sVLtvDTBEEdBQlUnE1amsxPYwFd1nmXTojTn4lTyTUNLI1bv3VR1TWZEcyP3okSM81X1AWPCUiZvP1Ri0FZAQEMxLGLlkDa2.UM5ACVVMFNiIibJAWQvISbIEGdMIGZl81J5clZ3flLMQSclYjRtMmdRAkUEITZJIEcyPiYQMkQKMGR2.2MykyauYWTq3zTXg2btPWXv.yaWcESq7Fdm41JnoFQG8ldxPkLwcya1fWbH4xXvL0UEMibSIGYKYyPxE1QzLWQWYSaMojdOQCSqQ0ME4jM2k1YkwVPzkSMZ8jQWoWNtkVPFIlXCwzUpISUpwFTm81J2vzPyUiSiYmcqIiVIMSPpQiU3HyJMIiLzfTbyglUFckQlYiKPMlMYcDMv4VbFkDYhsDdDcSPoElc5gjLrU0UI4lQnoFdikCNqkFTjUEYrciKiYUTKIkXQMEb0shSPQjQjcCUmgDZrYWY2cUPzvlMqbTdQ8lLoIVRRkWVhYiTUcSVuc0ZkUVdZYDQKM0UHIjUgoUa1AidmAmKkc0PF81P1.WTH8VYTIDYzLTUHUmPD8zLwbTYUo0aiwFavfCNqkULDkGdSMDcvITbvrDTTkkRzEzRwTlY3.STZImMoMldI8zbxgSS3jDbL4TZwzTQtfmLl4BZrAiavQkK4HEbt8lb5kSRno0S18FVDQVZRciL1rhSDYzczTWZM0VVBgiRxgWdhElSxLSSqQ1T5MGQwPVZ1AELxMTd3gidOcmb4PlV3gyJg0Fan4VQoI2c2IlM4USNGMVTFUlKYAUXkg0YWslKhIUSt4zSOIkbHglSxLGMiglcoQUSG0TXDYlY2vlb44jQMACcIYFNuQUTh8DQKQTTMASSBkGdwImckk0P2oWZwkFSJoGboIVRJMmQZgDTvbkYNsTRzk1UZMEaZEkRuczamgSM1kla2LDZhcjTJkjVvQmVuUFQDw1UTcmY2EFVjsFdC4zXnU1U3oGS5EWP1zjKYszZ4D1RLMTP13lMDkGL0HUPYQCNL8zLYklcLQlbvIELVshRHo2arMWVtHkbtgkZK4RRr4jRZYFYqfka2EjRJETa5sVQ0s1QNAWX3AWP5gmPkgyUycicFQSLtAkKxEESvsRQ0w1PyDmV4cmRuwlStQlZOcUXBIjdjISR3jlKHY2Qk4ja4.UXscFa5kmU24xcWk0S3fmQCY0UUkkMUYTXj41PSElVTIkKsMScqnkStrRR1LFdLsTbBEGVpQCbs4RYU4zQZY0LJoTcwLTSzkGTGgzcrIFTRYUPmkEUzEmSQMyQp4BUKckaIg1bHMzbqrFQzbjbVQyU0QFUuIVdXECYLYDNtD0Z3HzYxfUM0HlQHQlYuUDTHklM5cSPjc1RvHDVtIUMyYkcwESY2P2Z1H0XT4RbzYyLK0jXkYSSzITdzoUd08VZOEFY13DaPsjVNYCYskkRHE2R4kmSKQSPHojbAQjbRM1X3L0MHUiYrkGawcSSMYDYLciboYDd4f1TtPWZK81TJcmbwHlXCIyMoIGTZkyYXslc3bDR3biQtzTMjMUP2H2QhYiLMACLA4VSH41UFETXXISbMomakECSqckVOkjRqEDQk4Ddqn2U0TyL5cUZnYEQUYjRtHVQsYjbuM0YX0zS3Y0QvAGcEcSYtzDY0QUaq8DSHAmaB4jLiImV2QEYkQUaEACSjkER1jSSyMETxcSaUAiZ04RajIFNvP0RFYjPPYSSx4xQRwFNoYyLEk2Mv3xRsEmZEoVcxn2cSEUPgcibtImURkENLoEYzbWbWQlQNola4glPZYVRJc2X2PTd33BSkomPzcza3DzL24zYjYyTtr1LRo2QGY2Z1YTP3oUQlo0RiIlMMQjbroGdVQCToQVMyLzRxTkSVolMEo1PAsRSGQVbqfzaoAmRHkTX1ISbQ4VdNcSNvXVZngiKmczQ3fULQ4RSToUY1ITMZIUSgM1QkMGMDckKTIkRM8zb0bCU2MTcwjDR1zFaQQTdYEEb38DLSomTNkCMJoVNXs1aoolSAwFUMIlY0bzLA8DTkwDZIQjdTsxXCokYuUETzPVSvcFTVMTTWcFYDc2PvczYmgSP3ckaXkUXCQkMGMmMtMDVnEiXxDycv.kYy3hLsMUPvEjbOM2PkI0ZDcVX0rFctDzJ4ozXJ4lVqjTZn0TTtAkX4slSVckRAIGSLshagciT3oEdEsBLlkGcgw1YToEZtUCaqgSc1QUdW4DRvLiR1YVM10DVvv1YpUjU3nFavHza4.URUEGTyXDQVMldzjkLRokQgsxb4f1X4ACVrg1UwPjaqcVNvn1bIcDbF8lXlcVXzrFcPIlPBISRGk1MRo2PzY1YpQUP5kycwM2J0UCUggWZqbjQjgjRpYTULQWUFkFdCc2L1ESayn0MDQTXNUzcMgCMScSZw8DdtPyQ0c1YU4jLGkDT0LDLXYFN0cWMUshPMgjMUIlKNQWVWUCaXcyJtUiMXI2TYkTPWITVSMlVLIEV04zREI0XvQGTCEmSGICNSU0JsMkVzQzb0AiVUECYvklQ5gSVvYVRqnjR3Hya4wVQoshPxDCTTcSUXYUbtcjVsQTbso2aNYFM2LWdEQkdDoWQmg2LqzjcS4DZmwDSNEEcHAWRpAEdVASS4Xkbv3jKJQFbsYkX1rTS3glSR8TUPASYBYGYOMFb4zlbPQlVnMlXl0VZlMWMGEVag41ayQDcXE2RIMjRMgyMqn2X2DzQ0PmdoIUUnYjQxk2btw1QqoWRJACVLgVT0gjRiU1L2fSbxLiTTMjUQIySSgmRvMzJIcTUhAWd4EkZqETa2nGUjk2YpAmKGAmRqgiYpkDcsEySOshU5gDRpwjb5MDbwQUcNoUXocENFIjdjszQDEEaoE2RAYSV2fCU2X2ZTASSTQVbqDSRpcERqLyLLQCMRcTX3oUcsYkaUQ0TtHTPpUzLzHUQxXmLLQiM4v1J1D2cvM2a3LGT5UDdUMyJuUlLugCajMyRZwFZLo0a3gEdtMkUOUycWckLJYSZzTFaXolbok0JLMVQTgUM3PTPQoDbKYEZzYFV3XmcFA0X1.CL4DySQYSTWUGZLgkXvj1QwE1PBc1UTw1LioER0cyJWQ1YtfjVOIzJ00zJqzVUTcDQtHmLCkCRTkTSMACSF8jLwwTTTACcJs1RioWMCQVYqQzUtXiaHIDdtHDM3U1ZyQjVwjETisld3sjdXQSYI0jX5wlPNMkLogFYXQ0P03TboESTwHWdy4DSwHySrg0ZDgFUJIkYt4jK03hZKglYmkiX2b2MCEkLwIjMW0jcp0zYLkVMRIyTI4lTqTkMikkTgMWLukzcxU2Q0MFL3LzQIU1YUYlaHgEMEUlUrokLYcFb3XCQykTXIkkSLwVbqglTNE1ZxUSRBEzckIScDozLEI0S1YVU1TDZiI0SXczcyjkQEc2LZsVLvPSR2Y1SqsRMQEjXLsFcAI1cEUDY1nWYo4jLBwDawgWU4I0M0czMqjSLVUkLvszQlolT1giXUgWSM4TLpMkK4IDUY01TOoDZxU0QvgVX3jUawnTZ3IGMCwzUIE1QgAiYxLVc4n0JgoTV3QTMZMmKqLGMikWMBUTargDMNYDLA41PNETYxMUVvIjQAYlaSYTQRUFaKsxQGQFNpE2QzwlSXgGbN0DbvTCcoEmYBkzU1LDbiUTRqrhcMkEbvomRgkCQUISMzPjVAYUSqsVQ0vTS5QFYVckdPEVa5gWX17FNggSRqomYEcVbw7TZto1R0.yJWcjcEgVM2XiPyUjKZoTNvYCMmYVSlg1XVsxXUUTZL8jYHYiMHYCSBgGbuIWaMwDcUU0YosTNukGVIQCZ3.yU3gWU0fia3oUZ0AmPEEmctEVLoYlcmEGQE0jVxUVQZYSVA81LgkyPqvlZDEGUxgSd0XGawbkd1kzUVkENEIEVuIDZlEDQ0vlS2blX5sVcE4FbDIiQy8DMCo2ZsQ1Q3f2PnQjKJ8TbDcEN1TESwjTTGslM4k2LkkkVBkSPRQmZ4IzQtUVPVYkZYY1aDwVM4cGcIolV5gjMq.WbEEWL0oGYvEUSlkWUhUyXyElLqPzMMYkP3DmbLMDUv4zZ2ICV1gDMpQCcT0DaUQjbQsVbugWT2jVNwrzM20FLEcEcIYETrYURvvzUpElQ5IVbTkkckI1cNoUbl4FQwIScp8lSEA0PNgTbOAUP2M2QPMzXkYGZrkSN1XmRR0lcyXVZtQFdB4Vavfid2LkQwT1QZcyaxUyYB8jTxXlVJAGYwgTNAI1REwlPvIiYQIUdLgVc3jCUwPldloUMr8jczwDVyAGa24TcwP2agYya2XkcG8Dav8lY1HkRPkUMr4xUKcDMpISZNgmVYsxJIUCQm8DZFcVYWUkSJgmKosRdNcWLoolKx0TPmYTXIMTSjQ1Q2cScqg2PQYyYJQEbtP2bUwzTvkCbNMScRI1ZoQmQRshXlkjalUUZqgySxM2UD4TN0YUYqUCbsQUU3AybF8jbHMkPmwlTE8ja1IyPgEzXikjVYUmQzTGLtTjVDIGRwXFangGTLkWVWYUbRshT37FcqD2XTEkPiUCLLYCa43BaLgDaDUFLukTSkU0PCQDT24VYpsjTsQTYR8TNZo0a5YWZHIlQh4VSDQmUrIGYtbFdsUyZlEzMtMiTPMzZqsVdyPEQscWVOoVbyEDM2shRjkET3c1REEzJBoGUgAEc4kUPQg0M2EFM2LEMpE0LEgkZmE0P30lQrMmS3fWdqHEa3QjXNsBNngjZMQzStkWXZwTcP4lQFUiUFkzbyfyXWYjaqfiRn0DQnISakQ0bN4TPjAGMqPjVUUjRromavnFSz7VNBg2LxE1XTYFMqEkPqAmbscFSmMyRgszbxP1XKUiZkwVYqcyZnEDcy3DZMUGcNcFUj8lQtUWMuY2LLoUPIAkMYQVapElc3olcYUDR0LkY4UyRYUmamYmLvcEZJcUYOQjKBojRA0lU4cSPOElaXUTRRQTV1nkXz.CSM8TNxn0Yw0zRSQyYRoUYRETSCwjZBMTdCgCdTkEcyjGSQgEcnQSNxTjUyMGdoYiSyLVdvTkXvbVV0nUPZcTUxIzSgMjQgIiSnkCMyjDayckVH8TcuAGQJY0UyYlcQIlRsgEU2UlS3MyLG8jRtblQX8lazfialQjLD8TQns1X5kDLxk0PLgDZYkCQLMGbzYTVZQEa2UmTz.SZTgSS1Umar8lMkIjatQzSiUmcn4RVqLFQnQmU1fmUv4xcjU2YAgjPNIzcvoDRGgjUxrBLmcjYy4TYtTmYvgTQtXSY4QVblwzZ0oEbXECLtnTcJgDUy.2JBU2J3YFNhkWd3EjKEcyTv7TdNY1SAAiSqcGavk1LZUSbBITbvI2Sxf2SCQWPwjDdzTzMWkzUFg0St31Tq4VZoQScPoGQAMjd0IlZtcjZHoDcJ4BYDUlQAoEYpMlP1nWNwv1JyIlKVs1J2LWYykkVvDGcDkELjMiKBgUdqzDZFASMUImaj4TbnETMpk1SkgSZXUmR1M1X0MkMpUWNtjlKrUjLhsVXnIFYpIDUDA0Z081X4UWR1YjbgU2UxbSZRQicsckb3X1UyoWNHshZ2AyPCMGLKcCRiYDd4f1LjcGRrMCQlUVYvYCdjAUR3gjPSIFRZ0FQrUjYwAWMpMGLxnjLCgyU1UCalQjZwYjMgMldmshMEM1cuozTVkUUJMWav3jb43TPz8TakM1c10VaqA2YGUmMs4BN1USRlMmbDQENQwTPV0jUDckRAACL4rBLAoUaxMTYqXTMNUjcyTiRH41THEibiI2LkUyJz4DdXwVbhUmTwMVLRkUS3fiKu0VZmgGbwfGTsoGUL8zTosRLqsxa0EGdQgmRiUSMhk1YtUGVRETYqXCQ4v1QAsRdHEGRQoVa0ciPVgzQBo2SAo1bTYlZPIlQt.UdNQmMr4jMiQmKGomKLA0cQwFZ1QkZ5wDS1UzcE4zYCUkQVA2MLckavHkZKAyZUcGUAAUUokzSv7TPF8TUuQTPuMDL1r1b3HGLNcVd50jdwcVMG4RZpcCToUFYCoVLJITZtslaWk2arwDcBgVUl4DSqT2UHsDcAISMBYkPmsjaX01aukVdjEiKZIlaxHCawsxP1wFdwcGdv4zPGglbiwzc5UGZDEGdWMiRi8VNuszaAQUPLQmSRo2TBgVSBszXuMkSHU1cB4xQTc2L2IUaUYkdPYDdLcGSRYmLzrzT4XGQOgGaSQTXMIzM5cUbR0VZzwzRpYCajQEc2E1cuIzXyYSPFczPt8DMRgTNwoFUtEWYn41ZBEidMIjYiUyQ3rRN1TzTWQESMYSMQgmXRwDMMMkStckcJ4VVxoWZKk0PPYSZTsjUSUmRyASMwACSXITSHgzLMclcTESVBMGSuU1SnsjZxDFQio1avciSyDkXkMUTq71a1g1P43BbnAkaBgUN2IjSBUVSu4hK5sDZxY0JHA0TjQlKyslRVElatM0Mys1SwYyQgshcP4xJ3ImR1ICU13lTg4VTscUZLMzQsQ0RzE2UQckZYkETF0ja23BVxPVVnolYTsFcio1cocjU2jEMGoELOkVcvYkXxEmVrgFQIEkU3sFNsQjRpoUQPAWd4AGYUUUcs4BLrUzcGkUQuUFNBIyUJcEaFIWdwHCSJQCYWM1XosTTwTjMh8DaiQyRosDVNMlSZUzSF0DUkkmLAIiL40VQ0LDZU4VQj8jd3PDdAIldyEmKy4lSVUicMcybvTWPDAiaybGMUQlaDUTPwPSNL8zZSckShA0Xng1JQsDTJUSSoo1JZcmPSkjaBY0Qs01JHoGYIQFYt.mZIYTLuESPlwDSZgGb3wjX3oUbJYTRynTUHU2bugEd5oUcZ01PSozctf0M2YVQvP1bWEja04jX0c0YDEEVwfyYzbUPjIWNAkDZrUTZAYWXiUlLGomXXg2SNw1ZwcFd3wFVwjlZsEWQyjiXQQlSWYSY0LGVrgCMGU0Z23FUvIUVwYGSOcmPDE0aB4zU3TyQrQSS1kiMhQjKU81XvYWYQMmcjojYyLGaFISTxAUcHYiPsE1XGojQ4cyLzjEVLw1cYkSRuIlLxcFM0UyPhYlTsQVYX0FdRIDZRElbU4FbyYUYAQmUMEULxc2bqMVSpgVSxLTY1f1XwP0cqsVdCkCNv8VUjUkMkoEY5I2bKoEd4EiZnE0XL4DLJMidmkSVVQEdI8VNnsBT5YCRMYzJSQCTRsjbtXVMncGdzPSavkEYYgzY1oFLsIzLT8jb2sVQW4zYmQCY2AWMF8VZzDTc37FZQU2bvLDSh4RUuUyShgFZRkWbkYkZ0M1XA01bxPGTMYkYwflThMSQqHCaZYGM1AiR34BMpMCLwX0XGMkX2EmZAQSXTMGY0UDSDI0ZXASZ4QjKxMjLTElKGIVXwMjM3c1UqoFTqH2JzjzY43lcNozXxk2Rw4VLlQVXRwFbgEFT4Lkd3D2awDGbFwTV4QWU0XULnAiPvjSb1vlVEAmSLYFaWYzcZU1Yx.0T1oTbA8DQsoWQXkWL4slSkcycVkUSCMVNtUVRyLzcvAEbUUEcwQiPyTCNuMFYKkCdGcjZUA0cwQTakUDRIISQuQTbjwldTgmcEcmMKUyJtsxXqXkL5EUaoQkUhgVYNUiLSg0bC4za2LTRT8VdgAkcEwTQpgGbNEEYxUlURgEaqQ2bqnFM1fFQXY1c4PEUkg0UA0Tc0n1JwDzPzoFUnkWM3XCcEU0TkkCRQgERmIVYtjkRmg2XikkYJ4TSHcmPvQyc5oFQ3IjMSEVSIIEYwTzTzgUYnMlbXslXXAUdvAmSHozMzbSQlEUQYIWbtMyJAMVT2jSdGoEdykGc17TNvD0J2oFRKYVPUUWPiAmTNIzLPUmMSQiR4UTZ3.EQTgiUCEEcrgkTxkDaWElVKI0YyrjbxLkV1IDcIclYsACLswVR3T1RMkUXnsTaLomUyTkZskSavYzQT4RNFsxUPQiKgoWaU4jc5w1a1gGTTUzTpYScT0jUJQTPyczX0DTXI0jc4oUXKgiQSUUNvgSbvLEcB0lZ0fiawD0Q2YiK0MzbmYmTRckYTQCSxPCVPYiPw.ERHI0ZqQGQngiSDcVSmMzJDEUdp0zQrEmQWoVQZgGUwgWZxIkZNo0bY0lUqXyaxQFcoUkQ08zYCclRjcSatMScWQ1MGY1YlIUdl4xJQQUUyTmMikUV08FNAkUZAYGayEzQ5Q1XoI2ZnMVbLUiKIQDb2nlRT4TMM4DdSgibRcUPGg1cpgmc0XEaIgDMBACU08DZp4hbvEFbYAGcIQUbxoWPKomUxjyZw0DUxcSPrEyZtMVbTIUUZUmU3ACUlAUPCUkMnsDUC8lZJcTSic2UjkEQwUCcTEEcKUjV2PVNgY1a1bjPXMCMx8VX4nkUnEyTSYmQIcVa2T2YuoEQZcDMzQDT2gjYRc0TyXyczfSLVoGTDkFMw7DNZAEZ4.CZvbULNoUb1QESvMSNJwjKZEybW01UtXjMAgWRFgVMRQ2X1cUYYslK1cyMncSdz8jR5c2ajYVZG8FMwf1R3TVPHE0coImc3wjRqoWZ3kyUrgWZxjjdzzjXNwDVq4RQhQmcHICdPYlXyAkciEScRMUMEslKQc0UlkGYUMiLJIyYtXEbT4VYybDQmcGSEgkSwMkZSISQwgWXpElVokiRU0VS2DzJmYGUKMUPDg0bsE2UHsBT1n2aY0jbZshLIYGZEgWQpg1QuU1RvI2MScyXtjiZ1DTMTcTdhEia2zFYD0DaU41azn2awMjSuYmT2UjboYERPolQ2.Gb00VRxrDVSgla44BN0ImYTQSMvX1MFUDVgEzXrgWNqfyUwUFdTcGLY4DM4AyTsYUZTc1PTUGNVQmbocyUToFd4sDa5YlM2Q2Z2kFUv.Wd3cGLybkPKcmdAwDbzjCYwMiR1MSMRgELJEEcQYEb5IiLxnTQmElPCcCStbyZgAmPu0jSX4DTN0Ddxb1aoc2QHECMVA2PoI0Uy8lUTMzLScyMPMGcxLyL0E2PHkiSwXGaK4DdwHTb14BcqQmLvfWbtMyJi4japgWTYc1UCAyRRASTvXzZKokcVQGaGkUZZMFMjQUSnkDLuYUbIc2YC4BbpslR1Q2UGomYAolSGQWazPjUFYWV3MyJm8FL1MkSqnVXwPSPugjZ0YGdlolPzfiSSIEMngCYh8DLikjPScSMvAEc1jla5kSawM0Rjk0SPU1PxbjUosVR28laCEmMQgSar4xSvAUNgQVXVQCb3YjbJ4TPyf0Z2LzUSYicvs1MRYEd0MVT37Fd1QTPosDd2YUbRkEUJkVdmYlUmoVZ2UFR03DNUIGSvMUZHYkYNkCMrMiajMjR5IlRPkkSzYzJycULgIEcpgSZQ8jRIshMBIzc1n0XznTTDMEUFMjPtUyXHQiQs81PLI2RqAGTFgGcRYkcMkDcyomKqTib3XUQXwzPykUNSUjVGkGLzQjSRgVSZ4xRLYWNjMkaxwzJxnVRWUFMIUSZ2ICYTkSM4T0SsMDUuMzbFcDTBYGLzXVXOwzLq3BQSQTXIIjcxjGMlg1Qj8lK1cmdzA2aNIGbpYWbPIFMG8jQOESbzU0auQics0TcZUDThoka4kEL0bmQWs1X17VcY4lcKg2b3gFTLEFarIFSDkCRvEkUDUFSXMlZqbkRroWV1XSSREkdJgjL5cDSCM1bUUkR1QWMtQiZ3DTYwPEQ3YjK4QjTvr1ZXQGRIkGNqQWQwfjR5E0cxjmXrMyPQoFUKcDLLE0QsIjXW8TNvIzRzT0Us8DcLwFYXAyPjsDdSMUbBcGYXEGaN4TPrIFbm4jQi01b381RqQzUsECYZEUbzbDVR4DQHYWXtX2MKk1LRcTU33jVsEVYhkVTxHjV1k0aOIFboUEZtAkSWEFRRkTZzolYqUzZMAyM3E0XSAkUM01UkQVZxIWT3UTPTsVPPkkLDs1SwnFYQw1YYojaOoUR3QmQlASUZUyTPACdFo2LS0FZuomb4blQ43DaO4FSrQUbUY0Z1TEa0ITVNQDUHciU5QUQSISPu0FclUjP3gUd171cDgVNCUFRVIFS5Y1bWgmaxETcVcWY03VU0s1Lo0lVTUya3cjaUoTUJU1UjEjdOIkL34zMkM1aEwFU4XmdVYDM0YUcogFMGgSU1n0aVQzQYQ2MCQSQHgWVwTzU5k2axLmQzTSXlM0XGMUcn0lUBImVtLFMvPmYjIUZ0YEcEECaTgEU4IDdhkyPD01bnMDaAglPhI2RyMEa0bUbIwVNJoDT5cjVqMVcjQyL0wDSGYyY4IVUiESbockZyXkRHoWbogTdwYyPtHWYQUGajgmK03RRDY2L2E1cnklLigVYDQFRCEDZCIkQAITaIMERW0zXgcWPVEEVIQiZVg0bmwFalkmaMcGQwoEUMsVYvLCYKMkKCkGdygTT5I1QvD1c5klT1cSQkQiV3bkPz.WPzblasIiVH0FcrICTx.SLyP2QyIWR2HWbsUiVMQmdhMUXt0TPzkVX4YiTjYGUBg0PxIWMo81aj41XJU0bvzjTGolLRIzc1HEUxIFSqkzUrwjcZQGY2zDSKgDT2HDSn4jPPkTdzHmTs4ld1Q0R0rFS0jWNXMjU3.iMMYTPVkWdDwTaHgyPTYlLso2R3f1QycmR0kUUWEjZFIjLAoGUysFcEczMNQmSFcFMyMUMZcTQHAEQYIVdDUlaJsDZyzFUjkGQwDyQqPjbSMlMjcjalICQpM2JCY1U5Y2QNQUPAQSPOMEYvjjP0sTZtDDZz3Tcyb0bt.UXw3VVwXGcRQyPlwzJznkYwcWYlQ0cQQTMMAiYso0RuYibQkELCUUaB4TPWUDNwL2MhUTRS0VX4b1TC4hKGgDL4IFUZQCYockUVc1aYoUYMcDViMCQ131Q1MjXLYzRw.mRUciKqbSQhsRVjo2ZZAiclIVQLQ1bDMjL1XlbvMDTYwVSSU1LwUTNZ4BRhkUQ3HjYkk0PUsBUmUTL3jCNBgmLr4RPtQWbFEGTyoTUOkkQ1HlcLAWb4fkYwcCTvIWL1c0SM4VPlUGVz3RXTgEaLAiQrAETmw1SY0VUuYmRz8zMPUyaNEiTNEWcnAWMGsxPOE0Y4vjcxcmUnk0UVMlKT8lXJYiYnEDRz8TUznldhokPhYkLQkmM1sjcRQTTzX2cigVdPgycDszYnIGYGACcUoWS1Ukcl8zPyElS30FbNkySvTFMiQjUtUDQNQ0RncDYxrFNkg0ZMEGcrUiVJcDSJY0XzUFdqXjQhMicLICQK4TbTojLrUCcZ41JxIzUyPWLwA0XAkVQEMWLo4TbAYjdz7jLtQiRq.CR3fEY3g2SosVTDYCMI8jVyAURRUmPGU1MzkCTXQVZ2METtUTcPsFQlUSU5cFVMoUXnYiYIgCY2bkYzAWThYyUGsVMM8TQuI2b1PFZ4jEMCkFT27TSyzVPicVcow1JMEyULYFajQFcv3BaWI1XDYiPuk0TwwlblolM43jcQ4BSWYzJSMGRL4jL0wjM1fDZqozajg0PWUiX0kkUlMmXUA0b2cSYEECcSITTpkUbN4lXxgEYmckQvMyU5MCaTcSSwcGcDY1X4XSUMwjL1w1aKc0MYUkXB0FZ3QWdA4jXhIjMAkzRWgCY10jQ2Y1RGYlcJsTPholLGYyM3IGbuQUQ0g2J2PCVjoGNjcCYEAGMzAiXEgFVkImSzrVVqXTLwf2b0rTag4xS14Da0fTXqMFSpEzPCI1cxXTPMASLokzc1wTXycyTV0VMpI2L3vlZQkjY0nTQh4RXUYlPAkiKtfWP4TFYnwVXBkDL4MDdP8TdYcDUIMEdAoWPy.2ZvjFahwlVzYkURUWV5E0RuIVTuclc4gUMvICSCkSYGICat71SIkEVLgSU4HiP0AUXxwTUykEVKM0b4IzToMkc1XVVtQWMkIDR2nVcHUiM2PybzXVdg0TTmEmPi4xLHITdvoERiM1LyjjU1n1MwTzS1omcWwDQDc2ZPwVZg0DQTQCYhIjSHA0Qt0TcQESLwwFL0bCMLI0QGcCVFwVcX8TbUgWcz0Va3bSQZoEcUUiL1glaVcyS2U2R0nlXqA0cWACRp0Va2oDSKIWdn8FQywlLzHWQA8FM0EFbIQSLKoFZE4RTzcSZscVLNsFbwgCSZUibyXEZxozXEwzLCImSjczbh4VazokUE41Q0fkKFMkX24VQ1U1cLETP5YmLmk0RXMTQWokbrgyMNETUNEjQmEUcBMTUKUGVhcUX1fyXEUSYxnEctT2PpIEMNEiTDYVRjMiZkglUjk1ZzUyM1f2JXcUNIYFb0PlaBkVdXETVi0DNUIzaooVcM0jd0zzZ4zDTxYlLqAyYn8FV1TiRogDQZ0jMSQSXIMVdHIlVskSNxsTPyD2Swk0cpcCZYI2blYSUiw1MAc0JUUUQP8DUw0zayE1YZsxYTcmMr4TNK4TaBoDRzrBVTgVZAciTW4zYVs1U1fSV1fVQ4giSyzTXvAER2LDTpUSL1TjL1Dlc2.0Mm8lKPMVYRcGSwcTT4DlTR0FS0A0bmUTRYgSN4QEbXg0S1XEQ2EWLqYVMynGQ5UEYhIlRRIjYwsDYXIWaynVaSk1cE4zT0rjV3UVXzDTL3YCQrElbAQESDkzJng2QHMCbEYmb3kycYACczUlVxHSMnwzZBQjdGUkUzXVbLU2M2gyRrM2Z2HkL4PSN5E1Y0zDMucDY3czYwIiP0bya1k2apA0RzPyLwwTXx4xJyHmbZEVNPQiK4DTbw.2ZgYTV34RSkQDaD8zQ5cSQMQybBg2RmwjMJkzYpo0aqbiXusTXtImLsUjQTYycmYWcyn2YqUTQiMTXREyY4PVVZEidW4zTykDT5c1LUAGNqXjQGgjRhc2MwgVNjkiKx4zcqoTVDojcEkjbWQUPiIVZrIkbkYEMt41bCMlZxLUU0LGSNczP4T2ctbVQI4FM4sRQjUjdAoTM1TjdKImT1kVTzMjcnYUPyPTSmQ2alcDUybWXKg2UkQGY0UERwkCcZkDTVQlaiMjR1XjQpASdIw1bJkDcKkiRuwVaqwDLQoUXyDSMw8jQBYWPlQ0J3cVPMEiXwIzTXIlYqsFYYI0YmcUSTQWM2kTc5IFUlwDQuMCUpUzRhgDbHczSZEENjUTdvjzTAEzToUGU5I2btslUHUmRQcFUO0TUR8lXMUjQWYkd3XSVwDWT5QzYp4DQhkjZso1cFwVNOcTN4oDLlciL1fWdNwFYMkmYmkjPAkmb2IjY4oUTRsVaHUTYgU0Jw3FSRwDaxczcmUzZqnWYYQjY4gESJgzcpMzJvXTZzbVd1TmU5MCVy7TU0wFRW0FajU2M1omRwkGaA4haMQ1JIEzQP4VUwbERPIDRX01YWA0TwDTYtYyauUmd0gFa0TFNyU0b0LSPvrDZlU1avgSSr0zU0MyLNIidqDDTzPFLLoDR20VaKgSV3fFcn4FVZ4jVSUSYtDGSEQlTrElLzYDaMMmXiQmTTsjR1kTb0U2cssVNDsFNIQUREgTRqX2bPUiSrQSZMoWd3U0J1n0X5kCMlgzP3X1Mt8FUGM0U3rBUncTUEQyYFw1TC4lZKMyMxPlSsgWPpclYg81LAETYvv1Yt3lLtEDVCoTPJQVXhcVdJEkRz0Td4jkSscVLUgWcu4TL2oGdqQ1MYkDbRsDL5EWb4EzLW4jLXI1XUkCUCQyRKYyTtDFcQcjX2zVb0slcwUUdtsBTkcCYDgiU03BN1EUdLQyR3XSTScFT1YFaRgTQGAWZVoUTKoEV44lLWokYyUzSKkCNZkzSIUDTZ41RCEUSsETdmISLNo2YtQidvfjZjQ0Zp0DaWMFSAEENlklZCoFMhQFZPE0Jk0DQzYFZhEVUnYjZJcSQFMiZHIjRPEVPyfkdzgWS3QTbUUzQzDCZK4VXNsBdZkDR1YTR3cjMqDVT2.SRXYiPmsBcgkkLrMSYsA0RDYWUt0DUWMEVswFQHIVNGImbtYScYkUdHAiSvIjZxkjYMkVT1XCMzkUZWgVczI2bEIEMXkTQoYiaKElRsIkMzHGYoAkTtTzQEwDaBsxJzPFUrEjTKUmV0wDbxcWMjYWXtXkU2nUdp8zPhYlTZc2SxIVcrQ0RtHTQz3hZ20Db1kVNtkyXCgzUtMFULkSMRAyYRUiUZE1Q2vFQxfWQpk2PCMVbL0zXI0TTt3hMHgEMyTSclEkLpMkUyDmPtH0Ywj2M1n2aLgDZ5omXFUGR10DLpYVSpEjPvACTYQWN0UjZ0MjaFgUSncia0cCRkUiTvQmQxrVbKQic4UFQXYidMojXskVUxMlPD0TL1HDTREFN2Q1b4kCQxc0buwlUxUmSO4xT3k2bsUjUwAUUAsBVkITT2QjTkwlSlgjbtEkUiYFT5AmVkEWRFgiKhEFLMkkSAcVdTUib4cmbCcFSgkTdnQ0UQU2TQkkcSkjQ1HlUNcSNTYUXtXFZ2rhVBIEN1YCZZMEdPIjMlsBavcmdHsRcynkMSwjPh0DbYcyTxDzMvTjMvk0Mp0lVIMyQM8jak0VYIA2YC0jbOY1JDQyPPIiSJMUStDyZtQDT1ElcWEUPtnWQVIjPQM0XoITQD4TbvQyZ0HlUnczY4k1QtMkYXUzJo4FQKQUdS4xXqYWYmEkMGcETLwjcrI0cI0VM3flXhUFQQkmUzDkV4nFM2Y0aqcyLzPlMwMTRpsBVG0jVxI1MtTURqL0PLYmTtXGTAclXLgUMEEkaxfyRLoDbJUkVx81TGsxMkoWTvn1JzoDTZMEZ3QSZU8VNQ4VZhk1QWQCLEM2LSw1UtQiS3jVPksxJo4RQtbGTQoUVL8TPMYlakkSQtPFRy3VciElPvvFNsc0MToFVDcEaY0DLvgiU5oza2UiZqfzb2gWUKYSTw.USDcEYyPkZBUmRvjCNqTmTLs1QKgiMvrzMWg1TSI0Q14TbSIjSNwDTuM1Znw1JCIVNNMDYwnURM4jZMAScMAmRyo0XCM1ZyE1ZAomS2jibggTL3TiYtQWU5QTa4E2LjsTPvbWdEgVY4TGSvD0XTQFblEEM5MENnszY4DTcDY1XLklPrEiKywVXIQTUzEURtwFcKYUQ0T0S3PVYPEGbRAyUgYFZQUjPPkGQ3E1Yy3zYIwVQgEDc1glTxQUQ4rza3gkVO8FYx0lVz.ESqnGL1z1aqUkXYI2R5EESSkzMUQ2PtHybMc1XskSNu4RaR8zL4EiYIoGalQmdgUyPJYyLLYzZlo0YTcFd4TDNmsFcPkFZUkTQxQzUXUSXzXyMikkZ0ozatfCdTsxM0D2QOM0SjwjS0AGVZsRM2ESQwvTQSwFSGI1aMAmauk0SLkjXHgUSyjCQ1YSRynUUqglRhU2ZOoERgkGZjUWRywFRJI1QEICUyICancEZEsDNOUVZokUZVoEZTUDcIMETqbkXgUlRtnEaNY1PsQld0EEVrEyTvEzczU1UC4lLuIGNxDTUPclRLQiYPIVaPg2PFUSNtMzJnklcRoVaLAkZuAWYZkyb4AyLKoTSKQEVyLFLwA0bNE1cxITcxnFVxQkPRISdmAUat7jUvvjdEg1UqQWVTgycME2byMGQXQFVYkUNyEGLGQicHUFV2UmU13hT2jSaXEiLGQ0ZwnlT0HTN2jVU1n0RDojT2D0QvHSSw3TZMU1QW4VLDIkV0X1TzIicGcySC8zQWUVVqo2LyYELm0FYyTUYxbGLpMWSzTibksRcrkCdPQ1QwrTYjsRY2zVcPk0MlsjMvo2MZY2RJojKNUTaz4VVJYES5slQ2Y2XCQiTZQiPsQERhgWXz3TXRslbvwlbyYCYKQWdzf1ZucVX3cVPGUCSKMzY1AyUmYiQzPkLDEkZHMWRXAmPZYVbXozQyfSbDoTSJ01UMglMQEzPPMWRlEGawrBahIVNVkVRtY2J23TTsgzanclPHQ0cJQTaxH2XvvjPkglLiUzQMQzUhUEVqH0YRQTLhsRaGkSPosFb1flPG8VYYcCcxgTXYkEdkgVTLQDS2U0PEkVMUEWdjQGYvozYpYWZ0XTUJAWcjQTLMkzUMc2bN0lTzU0Pvc0RqcDTwfiV4UEQtHCSTMyaAIWR0j0atslXv7lKxPkUzX0JBwlPvo2YpMFRqvDZNMyXvrFLxoTR2A0ZSMSQTkWMIwjSsgyQnIUVV4xUPEEMz7DM2.kQyjmKwHGdFIVMHgjPOIFRDwjT5oldEETZmgDbXolMwgGTzoVcHQEbXUDRCoFMJkkMtgCdIImSiUjT1UmVEcjTosTLYAWUBUldYwlVUIDLig2QZISRzMUZxTEMBQyaoECdrQ2UwT0YKUyQ2HVVholP1IzaqYTPr81cuolTogzSBYlMFU1MXs1RtkTRwb1QjIlYxPVYqMERwIiUEwFLjo0UyTkaKMDLWIlKWshPzM1b0QFcKwjTSkjZZkjTOsRZyPWPEESV3bGboEmQsgjKvLCZmcjVNY0bUcSPxYGaiISVQIGLSo1UNgEUXYEVoYGVNECVos1ZKUEV4L2YMYWP4EDdmUkS5wTbvLSMwUETgIDN1LmSIcEUHETaxI2JMEWQ0YCSzQSSjo2P1Q2Ux3RchU0Rw4hRHsDUyLFRDU2PAolQgclQ4XUMUgCQqnUUM0VNZ0TL4ElVVw1XwEVXpUjQxH2LPIjbToDYuUTSZImdkIlcQIiQNI2PQwDQigUYM4jKukSRAoTSj0jMucyM4QVZEsVMlA0UoEGdmgkYpYlcqbjUJI2SO4DLMMSZPI0QNgzRPIyLicTYNsVQCMSSwoDdWQ2QEsjTwIWNRI0QAgla5UCQ4sBSTQCN5EVRwLCZ5g1RVUGLYkzcSkyJrsBYsUzJFcmKxUjVqbGTwUFT3rTdF0VMAImXkoEMuIjPzI2SHokLSQGVwDVc1jzLs4FTpQ1cTcUUgoVSpITV5I0LUY1P5wzLKEmM3nkZpUyX3gSRF8zaGgjKlQjQIMUaSUibnMySAMFa1EEMt3lKBMWM40VMxnkYroFTpMUbUEScEUFTjM2S3IEcwESdEsTNLIUNJshP5UUN0cTb1o0UWcSRjMFQwkjcXAiawjjMpYGYYEEUtXCUy7jQwoUZso1J0DkUkQmSDYUaHcTS2TFUzMSdDYUXKQ1byPDa3zVXhUUQxozTPUTaKgjR0LGcRokcR8jZnYzbpIiUjEDU2gjLw7zcIo1azQ1ZzwlcGEVaKcCVvDFc2fEdOQ0M2IEN3E1QtHSRxQzbpwDUNQzJsgFZ40jKkUDbL8zQs4FMy8jc37zJRkTVscTY4X0Qyj2Qxv1MtQDTKgUU4XEc1rVc3AWR24xcSsBcBgmUQQkKsUFRIEVZxfCZpQSXyPCSqLmdQc2MHgzJJ4DZqkTYmoGa10VRPM1XBIVQ3c2S4EzUwXmLvHiKSUzcngCVNIEb2QELqIlMY4DY3jmMzEyLSgGT1HzStIScWYUPX4TPnYTQpomPmEUcmUWTkUmTOoTdqXEZmAyazDWclUVZJIDUWEzPIMTRi4TPHAmSi0ValsTNxPmZUUGNLE2R3olaZIDYywzMMsVdAoDawzTQREWMYwTURISZrMiUpwVb3nFZOcCY1o1bCYDL2PmSkklbD8TcoITM4PWQgQFc4XkdNc2TBY1M23DZHg2QxTyPwnTXuMUNJgiZJMzUOAmLRUSPlUWQUkFZ5gUcuczM44Da4UUbrI1JFYkPJgzaDwDLuYjVP8VXxcFV0X0SWozbrE1TqkmYrMjahslXZAWPyMVd0XETpMFQ40DaQImY5QlMTcDN5QGQNcTU2EWYmokTlc2YyDFapYFaIYkKNYCR0HmUKYUZJcULxM1JI0FQ4kUduYzc5oFMJIURnwFYoshYEc2cII0Tyc1XDACM2kEQvbDVS8FL0gCY0cmaF4jQHAmYWcCayfmbSEUVt.2MoETR3UCblcTMLI2XKA0TvI2SRo0Sq3jQEAmck0lMnEGYYgzMyXERhYkbUgFUNMyXVgUQuEFdWUSSRYTS0gmZooTYNglLC8jXsc2c0AiU1XCRI8TaUQzR4XTVjk1PyjlPQQFR1fTcXIGUGciZ0rBS3MkKzLETqzVcjoUVIYUX2ESUvHia5YmYqjEdBElQukUclAkLnwFMuwTVEU1L2UDNsUmURIERJEWUtT0LlUDQksBRPsBcncDdZIzQiUUZ2PENVMTQxEWcpIkUZ4DTLckMBwDNpAWLAkjZAcGLFYiY4jyTUsxZM0VUmkWVvACMIsza0klYZUFdswTRSciTAkCdwrlXBMlZoMFQ1EkblgzcwP2PVA0XxwzYRUkLEciLnIjQo4jUzHUQ3IWVK81SKIjUwD2buAUUsI2MlsTYLYGNU4BS2kDd20VXXIUYOcmS2sBQpcSXZgTSpwjQ0nlK2.ES1jTcL4VLK4Bd5cyRjASY1T0TuUCVAMiUM4Fao8TXkUUUPsRR3IDUKwFS1MzclUSSKIjQGEUcAMlbFkzYv.WXVkUbRQUb33BU3P0cooVNqfUXzXzaWIyQUo0RwUUT3I1UtDmTw4FauYkckUUaNYSbXkWatkiQ3g1MVcWZ47DV0YzY4LVRzbETjojKKQiM4.2aYckM2DmLzL0aqoTMWQ0a2gFNHIWdMsFRZkyX4LychsFNzPSavMmZrcjZ5MUPCg0JGgySTcVR4fUYB8TNhsFNWYUbEIWXQQkLIYFQrw1YvD0JEcSP0EGVzIVQQgSc2fkLVIGVYYWM18jVtQSSvvjUt.SU2r1bokTPpkjTOU0PvLzRiUiY1IjTIQVXCo1cUoTdF0lPUAUVwUlRQMiU1EmXNAyTywlTYcVNToFY5ozMqbzSxQmSLQGMXg1RJMibkUlLOsjMMwzUxUzZUUiazLSaJwVXlozXBIFRjolLFIEUzbFQXoUVpUCTAglLqAyQgwzb2EmSMIzYYcyZzszMSo0XNgjd2g0U1Tkc3PVNEcWSKs1crgiQxgyYqgWYBASRQshYOgUbJoVZkMWY3TCdR0zSKE0S5UDQR8zLEIFVx3hTxb1JBsBarQFMFMyPwjEUZESRgUEL08zLvIyZt4Fapg2Mg0zZtMWMP0lUZAiL2kyMNgyQm4zYSolLIYlajEGLSM1Xk4jV1MicuUGZw3BMGUUMEIjVSsRShYFdDMWcCg0UC8lQQEDaBwjcDoTPGoUUIMjYYIGUCclQoAkUKMFdCM2UgQSLRQ2b2r1Ugc2QLUmSO0Ta1TWdWMCQ00TdogjVWwTcTgWSK01M4b2Qpg1ZpoGatEmS0TVVIYGSMgCLMMicSIEdDcVN3PEbIoUNnAUQn0zJPgiUsITVqYzczbyJ0M0cjQiXIcVRZ4hVsEFTPIWRSk2TnkyRnYkLHIkVhkSMvcCRvE2T4QDNC8jbyoVQucmZAklRUY1QqUTM1cSZvHFaNMUZO4BaIciMsEmc5A0cnAWS0HFUyPGNxflaGsFTl4BV1cidqYCc5QkMjgzX3g1YyHlLwU1RDokLUkUVyDyUjYmLwrRTV8FTXgCLKITa3HGLDcma3nULuEGNikDZyvDYEcUSKEkM4XWSGc0PGYlP5AmVxDkMvYlcHokMRcVVvoGNzHmPvDUPEgTNhciPBolPW8lMJoDL4LkURUCbMwVUwbUQ3cSLPwFL5kVPEg2bYwlXrUVRQIDQmIGTZoGa4TzRXkzMxXENkU2ZUMEdvgyJz.EQFImTY8FcysjSWUVdyfiUgwzcYQlSVcSZkYDLrcFdhYybQkzQoQTZsIEZ2gzTxcDMiETTA4hdwfjUvwVcwr1L4sBMUUTXwYyT4EjUFsRZ0.mRwnlQ041ROMVTq7DbwE0RQEWSRAWTqrTXWQDdLozcMMlViMmVlY0bU0FVKQSYXojYQkDVLMVMu4BUnoWS3slL2QWLyQmXI4zM1LkdDsBUUESahAWbxwVQPkGTv7VRjMSYhkTPjASYAQiQ4jVP2k0T3ACchAkRzbVPlUlUU4DSqo2USoEd0HzcHIGTGgzTJACZGgWX2bzZRUTLyPiMzQmXxfyJzIGVhkCUGMmLpcUbsYmdxElMoE0TPIEd4UkV0LDaz8lQy8TNyzFdQ4hZzPDchwDQmk2a44Bb0szPj81JkQGRzTEMrM1MBEDLh8VUZsVZVgiXuozUgMSP3YkZpMVZWokSAQFL4AGbyLWXkU0TCMlUYUTVzYSZqMUT5kiLzDlRlQjKIE0aRcyRxjGQjACLwTUdAslYvkEd2ITZoECS4gVShQDUCwlROwVYZUzUwYFbSY2YmkjVRkWR2HETLM0Y1MWLpQjVxEiaMQ1a40VdSIlUUQjKHg2YrkWV3w1ZT0lS1LFQPU1cHQkZEYjY3jSLWY2PwTGd4HDM441SqnzZyXSRlcyUHQzQ0YzRgYyQuU2PDAiS4USaYEUSpkCYxHldoQETuYSQ2DETsMFawYUbIgWb3MDY2DUbEYySSIFZXMTa07jQDYDRAcVUYM2cwXTNqLFT4QVaJY0JQMzQNEURmMUUsEFdLomdLoDMwjDNikTawIESAY2JnUCYykTRu81JzgzbAY2QyUiQZcCTMgmKtvTNvjmTEwTXSYEUtomPLMGS4.EVigkQGEUNFMGM5c0MvDCaDYSYB8jUDUDLGYVbWgjXXs1LuMzctTGMrgSMvckVPYiQEcEaKQVNl8TQ1QiYgY1XIIjaso0SIcjM3fiUyP0PDE0bwM0YxgUYOEUQh4VMAglUkcTLwIVUZk0PNgCcIY0LtgUbqf1Qw8VQQcCaLUTQK4lYw.2Z3oVZrMSXjM2JSUjSjkyatzVPYg1TUsDczM0a47jT3gFQ3E0RX4TStcTcREmdgQjaBYFQtMFTMgSdxn0XtISSq.UY4YCbFgWVnYEV2QSd2UGNTQ0LIITaxUjZj8jVJwDV1IkYRgkU5MEUI8jT3nkR1vVcgAicpA0ZWMiSVICR5Q1YUkFbgYFVRIVaygySFoWavXTdwMDSKs1J2E2aNoULAEWL1LiKwA2cJoGMtT0RQMCSKcEa3omcqMyRNUWTtMzXwEkPsEjaR8FY3PWZ5IiXvQTX0PDNVIVLqQFdIcmUggiYxDlXHQCdwgzLnEFaVEjdzLERZIDSmEmQvISUqkVUjYEc1MGbwcSdgQlXxoUMDgScwgGdMsDN1zVSyb2P1EScyfGbnESTPYkX1TiPDoUXzg1RCE1MwUSLpMWaY4BNoM1PvESX0UiRscUUHkzbNQ1T1rhZyvDN4ESNUc1JMcWXC0TX2HSXmkFcBYEYvYWSCEkYsEWNyTkUroGLwslQYgkRmYWUho0JnQjVu8FUzTGVrwVaJkFSxPTd5IlLFE2YTIENgYTSQICNAYWPXMySx0jU2nTdYMDRmomaSICS5IWNCMkY1LDVA41anM1YwnUQhUTa3DzYhIWLpsFUC8jP1f0UMIidzQEd0LWZ4QmK4kDZvH0btYmVlAmQ34zUHE2asgyS2M0LvHUbHclRTECREA2PMsjSgUTZmYWUvbTbvzjMGUULYYGNZEWdZETZzfEUYEiRgcjPP4BNP4VXqwDa1METq4jZiUCbWU1Q1nkZrUCVUk2Y4QkTkUWNQU2R0UiSNUTMxciZBM2Y0L2Tx4hS2fyXqvlYAgyYuwlcgASaIMjYG8DMzoWM30TbxQVZ4zlTwAmcsMlVGg0XhMUXqEDQkYVQLM2SSIDQJYmTKkWM2HCSLk2PlIWY3rTXjkFVwAWZ2o2YZ8FSsUDayDDU2jmKjQ0P2XmMVUTb1U2bHwlLTImVs0FL1PSQwQGUyH0c1QyQ2MSV3U0XEAWS0IyS4T0THYEcsgFQiUlU4YjZFY1bUIETiQ2TG0TavfUSKYEcqXUMjIVRhgTdMQldxQkd1jCVswjLFQVdKg0XHokaFE1UtTySTETTmY0c3wjPqE1cQMkTgoVPKsVTo4xLyU2aFI0SwblUQg1ZOU0YW8DS0ImLZIjbxLySEUmM0gkSy8DYUcFVkcyZt.iSwcTaqAScUomdYMSSz3Fc0nkKCMGRM0DTHYzQZE0TBcVcGgmKpUzcwkyRWQkVSY1bBEkdTUCSYgFVyY1LqzjVogUPKEzLGEWY03DbtQEMAYzXAk1c03jPPkUdNICQEY2LWkmcg8lTLYUZWQGL14TMO0TPq4xJ1D0SHYiX2kyaxfGdUIDL2gkZGECLk8lXO4DVuokdnkVanQUT2zDMq.kTUsjUn4zZQ4VPqbiLxU1bNQ0Ry7FLsYUX2bSN1EzS5c2SyUkSKQjaUE2cpUEUznTcqclVHcVc0Lzb2LDavrzSiMUU0EmMBMjcAgkSPIWZ0QWLMokc3UVQzPjducWau01SqnUXq4TMxglbQIzRqLDYXA0M1sTLZEkX2HmZ0IlcRQlXnYCULgUNqICVt4Bd3n1QzgiXEIicpoFbgYkdTAWQJ8FTrMkYR0VXQcCNVszTmgGNugzZS4FSSslSXY1MMcDZHs1UwYEYj8VZ0ElYnIyPREGRmEGUPc1Ywk2aGUSQxgyRwTlS1MiX3IGMAIEb241MzEGdsETYXczL13zXjUENqImTqs1JkcENAI2a1vTQA0lXyMGRpI0MKQEVAg0TjMGZ4UidqvjS2UmP1UzXtkUawPESiAyZDoVNzkWLzzVaSY0S2sxX5klQisTXgEFVv4TapMSayXmQAkkQmcTZNcCNTcTXnwzXqcGU0XTRtoFaskVNxUmS0EiTlomMuMmbn41X2X2YwL2Y2M2PzE2awHGUToDNyEGcVImbYM0TVcGZhUkM1Q1bwUUdVckKwvjcWwTXJomcP4RUHYFQwT0QYcUX2PkYEY1RhIWPrMiUng2cAclbMcCLnQmRtMyZpcDS3fSVtnzc5EFZMUTZ5UyZyQSLkMzX4n1UxolPEMzPPgWTLUyZqrDZJoWR54lKHcSL3MkYh4hMVUyYXsxZMQkTikkLtHyJMQiZUgDRHkiKnsRQiYyb1UCLBQEatHVMrYGVBQUNCU1aqv1MSckVFU0PmIzMF4DVOUkREYTSOcUaRASVmMWShgUaM4xJVQiRSAUNCgSNvoWdA0lRpMTTTsVTJEVLSYiP2blMS4hdSMmaigkM1EUNp41a3.iPOYELgg1Rj8DY2QVZocWVvwFR2MCNJ4RS5sVYqgmdEojbJgCYpsVRlc1Q4cDctjkMiIGbDUDYjUlXPEGMNAkVwIDSGwDMAsFSvHDVrcTYkMWT4U2M2XFYXYEUB8zJjI2LCMVZwv1XsU1XJIWQAUlT5YGL2rBQRYjVjEkPxPiavElUAMkYIMjXvb1RRgCVEcyaCcmQZIzJUMjMtTTdt3lKvMTXJUjSik1azgWXuoWY1XkPkAiXxjVNvEmayb2MMMEcQAiVzrxcxshTRoTRHU1ZXUlTlgkVzMGZ0QSRikDVyYmSq7Fck4BY1QCbmY1b2kDaJY1RXo1bYMEdqkCbwA0XYIlckACYOg0PzwjdDgWU1TUc4Ilc00zLXU0ZOUVdB41YxMGQkQzU2sRQq0VaVgEaqMTQ1oEc04VSzE2bzEiUqD2aCokTzDiP3w1Mv8lXvbTLq8jS1okS44Vdhk0RZIFd0XUSCgTQrMVNuI2YPUUMsYWVDEiQHUGdY0FUhYVP1rBLjwFSZIESFMiLh81Z1jlcywzUCkjcJElU3PiK1U0PO0Va0QjTTMUZmo0J1UTVzE0QI4VZCEUQOU2MlIVUUITd1kVNmYEZUczQZMCN2v1LEMWUKMiUMoWbjgVSoMVRB8zPNojUHgWLJEjbAQkQMgmMNITTyICNqnkYtPCRncDRVckR20lR5oUaWMkYmMmb3cEdXMkQCcyXQUVLHYlXiYUdyDiMJcUQiUmLUUkV1jiZPQyX3cCNskEZyHicmYzYsMiKrEkPmo1POwTb33FTxESRQkzJxjFNuckQzDlXscjS3MCLnACR5olZwzlXxUmRHQzbzfERSsVbXUERDIEZRwVd0bUSokGRTM0T2PTLD4DLsMjP4vTd0XyY3jjaXcCQg0TPjcjT3XiLLgiagcGZREVc2PWSY4FRr4jb0vFT2cyXhUkLPcGVQMCVPEEbtXic2PmV2nmd0jmPvbFZwH0U4QCMqbVPxAkY1w1TmImUusVb0HCTooDVRcVdHcFSqAmXAwTMj8zZlkTYNkidtEULTIGUtAmVGkTT5olYmkkYvTycT8DMwYDN4rBTFwTVrkjTt7FMjE2MKo2XEgFR2rRXoQTTnQmcW8zZxzTS2IlLv4zb4zjdIwzLzg0Ri8FdOkTLVU2YTozQ4cDRUIUSK8FShQVclkEUmYmPHEyck4xQikGN13DaugzcEI0XznlZ1PVLp4BVHEDYkM1Stc0UOwjMUMjK3YVcjYVSCg1JUkDZLMWVxYSdU4RXnYFYl0jdPMTPBc2PVI1TJQiV4LEQCI0PjsBN2EmX4rBSCQzJ0sRcYIkbIc1UWESciYTUmkCdTIzPIgDUAgUSSYVZVYjYiIzRg0VVQUWQMgzL4YWM4gibW8Tb2rzUCYEblojbUUlTzDCQVcyT0X2bpYUcuUSSS0FcQg2M4.mdjEiUHQWUwMySigFL4fkdgc0bSUCS1g2Rn8lS33xbYgmSJ4Vb14zPsIlVyX2cBITRuEFTHYkLHQjKJc2RzH2axrTXloUVOMiYLwjT5kTYVkzbyIFVksDTjESUggGTqTFTrQFTgE0MCkmQysRUDkEYSg1LK4VQ28FYSImbyLiUtnEMpsjUiE1LrQVYgkGdIECct4hR5ckTSQCMSQEQ0A0ax0DMxM2U3E1QnsRdyLCVrAiYtDTXQM2YssjaqT2MqEUZho0cDIjMVc1LI0DLxLSQ4gWNZIlXNMmPK0FT0LSTSQmKDMWaWImXyfkbwnUUqTUR4QTalMTYGcDLlYTb4YUbqoUZDgCZ0LCbFgzQZAkdWgyLGQTPCIGM2LTUBUFdzfTU3IENw8VL3MycMEkTHYiTxT1bMQmdwITYicFMtYzbnkidQUmcKclbMYzRx4RVt4zctTVUN0lapQkQBcTMUgzLB8DaPUlXyPGYlolQwkiPYgER1YzMo4TQ0rTc5IkQ30TSsshLqITQuI1Zz0jM3PkarkyM3k2PwHCUQQUbqrhT2YUQqwzZI41JtsTXAcWQTASXtbGUpsxJmU1SmcyPIA0TEAiQSEWMDQWMrYyYOElTx3hQ4njT1c2LwIkTgEGQUoTMynDUmMWVi8jatcFLt7DdoYiYtz1JqfjYKEEVjc1a3MjPwDyJVESYLUWUFoFby3RVicybko1ZznkQTYWaXEGUgokLGUjUX8DUtAyPYI0MF0jQFckX2TCYZI1TtTTNMcFTQkVYCITdTgFLYYDVuQEa1gkStckZO01LsQSMp0FQRQjYpIWQ4TTV2AyaG81XlgFdREUP4XCb4YyZIY1QvcGQzQid2szLyolMyY2S4gmKyTSQPcCL4UCNgoEbx8jVUo1MWEUd2omXN4jMXMVQPElSQAiPKISQtYiTqrBcHEkKFEDd1bzL04BdOEmRwH2TxjzP4LjRA4FUUMWNLYmULEkXRIjPZYDZ44DVBQSXmokTyL2bkImYUklLIc2TGkkViMSaFQjV3LCYnY1b0fWazjid2TjXv4RasEjcSMTZnMWPmc1RvXybyfWcwsFVHcla1M2btTDMkwVNT4zMAUzJlsRQjQUTOUEUJcWV0kzJycEatjUMwX1QPcSTYw1XNoTc4D2MNYDcB4RZwI0aOcCVCAkcqzFd08lKvfUPlgFLhAUY04DVQMVb1nFYMg0TvQmSLshckQFZ3fDSvLULSQmU4nlPIwld08Vc4rjb47FTX8lZ3MjK54VdLM2XiYGRhokY3QmSPw1bxHELO4hSAsVY0.2brYSRHYGbxDTVmwlTxMSQt8ldKIjZvXkUnE0bt4xTLQzUi4FQxHyPEEFT1AUYT8zMWkzPyMVbuMlSsUmSBshTx0DLIcSYOkWMWkjSqASXg4Ba37TQJ0TRgwlTEACcBokXOcWd2wzXtLTNSMiQJ4jXx8VRigSd0MmPyPkPyQWQGIiK2jWXwzDayz1Q1USb3XGRicGVlsRdy3DQY4FRWg0aIsjdJ01TUoTRyQGdLgFZPIEdvbWQNQ2Y4ASdtUlZAkDb2glazbTa3XTS4.CMUk1UKk2J0kzM1HFLjcVQE4RR5MCbqEVMKYla18jQk0zY0I0JL0lX2Iya1cjPnQyMmolTogzJ3PDTxkid10TcCQjS48TR4kjZyTyYM0jXvfmctfjd0PFd4b1THkSUxQlbNkFNFQWaWs1J2MCUYYjKkUjR3QTXtvTQOYGVL4FNTQyQGIzLsYEYRICaMIWV1oDV2jEaPsRYqfFRBUCc3.yU0TWa3gCUHI1QHU1LDE0XZYGLrolcsElbRUjZnUmTvv1UoIFZuolXkEjXwL2P0k1So8TcsUCcD01c2kTZxbWNusRd5YTLVkUX3E2cHwVcwQiUTYjXRI2RvblUMIiTOM2SiU1YPMVZsACTybScIEUVIYzLzcEbmM0bwrzZM8TSJk1XNMmXvMmZ2cmPpcDRII1XiclMKYzchUWdvbWPDoDavEVYxc0TZcDcUcVZ4EmU3HVLNkkVlUybucEawH2bE8TN5YlczvDSmolQ5AkdoojUHU0SOcyZXokRxAUVGkSXkIVcmgFd2DSVQwzLEUzYxwjR07DLE4BcrozXJY2azkkS3ICSxgjXW0zRG0VMjE0b2oDMpASL33VdBcESxEjc5omMLczXxf2JjYDYrkERsAEVkQ0cT8zcu8jbA4zLnIUUx3BYzc2JWEWav8VMAIkQQUSPVkyMnkSdxE1aSQmKvPEUVkiTn4BSJgzPgc1QIkFYvfmXgs1cHsjU2TiSkU1YAM0L3UiQEgUPqYyb1XEVjc1Tsk1RFAmTZ4TVsEkbtbGSMQWa1nWNSQWdJIGdDMGZ1UiVmgCVT0DbTw1ZJAkKGglcmcWYFYzc54DSEgmK07TbqUUaiwzSGoETMESLVUyJvfya3njQnUDTqLCZ1UELFI2PnAkYqIGY5E1TPUUXDoGavYUYtTEbOQWZYgTUtjmPLIiVDc2JDYjLl4TSRETNMUVYscUPFYlTII2SJYlREYUZ4wjbGcjKCkWaukUUmASZXIjLlUzXP0TMRcTdT8VRAMEU0n2Q4fESyP0JNYWSqnVVMAUZWszPFE1JyH2UT0TQxYCc3U0Y0n0ThMVMM4TNgQ2TlkmbqTSUhIVV0P1bMQkSDY0MU0lcYsRPyHFY3IGazoUTCk0ay3xPxLWP4AmalU0LYwlYYIycjM2PZMEbOgUS5UTQFE0SMQjRqkDTyTESsIFdJAiXR4jVZAmahkibxgiMwYUXJ0DbEEESuQVMDEVQKQDdJUmTUgmLwsBYxPjMCMySQk2Umk2S0LVTyn0MKYVRxHEYskyMUMUXu0VYlwFVicWVIwjbjMjRRsDUZ0DQzbFaWI2Tow1T4jWVtsVRvPTZPcWVGAWMzkkdYYmUyDUaC4xJPA0Up0lP3T2L4EGR44DR1.CdRshYrwzUhUSQzrzJNMWaFIlbKcDcKgFdXgFRDgTXGsDZngTRX8TcWU0QhsTZXgUVtHmaVU1c5EWMJQFMikyJBMDTxL0JogzQ1z1c4wjdA4lL1rhMtP0MYA0UUIGLLU0JH0FZ2gFaqciVrEWMnsBMLgmaWcldWM2LV8zUlEFLkUTT1bUXIkiT3TWXrgVMx.UZ4E2Pt7jQMAkUlQSSUgyM1.UXBsDL07VR3IybtDiKqzzTMIGSqPUTvnWXxolZxTGaPQlK5IkQ0sVQvXFQSoGNOYlVsEWRwUSbHUUYvsDY0QjSWQSQY81Jr4TPLEyTynULUYjMIUENyg0JsgVavXmPYMmSAUCNYUmaToUaUcmLvHVZqbGVFIDb2wTZqcmSRk0POkEYtHzatgzZwXVLqkkLBMTQ2YjL0clZFIWTnUjTZkmbtX1alMkTqozUG8lXg4TLsUFQKMWdPgiVyDGNyElR13DZHclT10jMhUSVsUWRYEDZx7TMtkiKVcCRSkkXyX1MloEM4gCNOciKlQjMlImKp8zRMY1cUsFbEEyPqzlQhcmS0QzTmoVdq71cR8TSHIlLEAiV0DlPrAUNWMmMlciSJQjULMmTqUTUXAmcngWdQoDLqbCc1EFShE1PBMGRRkTcMkERjkURBgWRB41ct3VdL4RVZQ1Lhc2L1MyY1oTU44DYQk1QngiK1E1S5QFUS4lTwAWMqnDVyzjawrBczshXuwTQvbDaXQjXD4VbxrRNHgSP5UCRQcmMt3BVLgFTvrDbrMlbqEGYXUVVhgWamIGU0rhZtQVV2D2Z1nUPLczMx4BczY2bkkmdx71J2byZBU0JYgGcTAmQjsjSHIUau4xMscGdroWaHolU0EWPpUFYxPmbkMTb3ETNv3jSmwFZtQlKHQTYhIiaGUzTqIGaJgDMtTlYAQjSVw1QuMGUxckQM4TStQFVuQCZQIlUoY2aAglSCYGUtnVUYUURgUiKPIFVUkmaj4xYC0VP3fVZhACbUk0Zzc0S0klbCk2PWgTYtUDdu4jaJUWQhEiLPITXAsBSFkUaRkjUpYFSzo0cGAST3wTMwsVLvgkT1zjTtrRakckchQWYGE2RVYyPwIGUscCa4EFQQISLC8DRlElLgs1MUgSXIgVYxH1TUQ2UzQlQ3nGYtgzcZAEcUYTLmMUTI4lctc1XFYlM4rVLgQmKMkDTVg0Y1ASN3YSQWUlUh8VYZoFazD1TvgWTZ8VXjI0L3jGcFkTb0oFc0k0aEQzcUASNE8lQnQDNNsFQ3cGZ2sFQp8TLUIFbLM0MV0DVrk2ZGQWQkgybzUmZsQDTtIDNuAmQOkDZjYTVmE0MQ8lXhYEVvoWdCIjUzISZ3ozbFgSL3DERhElSxbFTuMlcEszZRQ1RlA0QSckdrMjcHcFYMEFVDUkTxoGLUYFTVQWSjQzYY0FcjMiZT0lR4nGRXEGLynFRBEjQNcEbooGaTkTXgolRqrzZwUiK2fSX2jzRlIzaOYTP0fTZvcWTvwjdwzjYD8lXsUCU0jUPwjiT1IiTxU2XZUyM4DiYkgyTokTbHolLWAWLG4lVNckKlMVPH4FMoMzPHoDQ3ECbTI2UJgWd371MNI1Zk41SxQGTys1JvPkaWAkPDYiRHcFTzYiQMITchEUQzgEcncDZPsVQ0gFcmMyLxLlYHYSVYQVa4AkZAkCQPcWSxIFVvoUdugzR301brI2Jhc2UhAWNSkDL5wjPgI1cpQkdRgDLlcjRsslL3oWV2UjPhMmTtc1SGUSRuciQzX2Png2UyH1c231T1o0PPQiZHM1aUYmahomd5ISc2jTRPUVQ5YDVtgiRSQ2b47FSQkiXFcTUTsVVsUjRmICLZYEarkWQqYkMBs1UzP0MMI0SVU0JqblRLYGYF4TYpEjRwglVIMibtgELx7DLtUmPZMSSwrBTEoTTDU2a4kDQBY0c3fSYXczPDMTQvICZPcGQ2czJKMWaggTd2IlSYIkMzcyYTIlKAYDTho0ZFkSU0XGZyUmUH8Vaz7TMxg1M3cGS4DkdsYUcuAyXLEVYgIUXzQySvYiKCkmS3MGLI0zX1EFNOkESpo1Y4IUbXQkaxfELKo0QBEVNLcVPkEWQIQjb0.kKwEUXNITXZkCYSESRSAiYZIGQNYDRZYCMxAyUnshXC0zZzECMSMGLNQENuglbJMVL2DWT0TWQMkCTMsVYuQGTjkWXmY1LLcUPJoWRPQELxb2YvcEcwfTcwb0TyUDd3n1XU41JO4RNvPlaJE2RhM2RvIFSUcELG0lSxgTRSMDVT41XpEFZpo2bkY2TMgiVKYiVBUFd0jSV2rFZDUjU4QkPwPzS4EmYHEDUtMFNSEmYEEmRPQjaQoWbrszTLUEbDU2cEgVX0b2alETRWYlKXMiZx.GLKc2LwoUSXwVb1sTQ4ojZkoGYBg0PSgmdSUiawQDMQ4xQr8jc2IUQvrVaJkmUpcGcQQmRDUiZvzzURwjRQkkaWIDZxElQXQiUogWZ4.0JncETssBcRIVUVsFUAE0TNElP2bGRDMVZRE0azrjZMszYwckXTkyUAg1bEQ2T1EiLQMFLEUlXiQjLVkzazzVSRYSS0sFQJQTQwT2ciIVUtYTTQMUaJ0jYBMkdZMSbpokZLc1YrQDToMlUxnFbrEVXVoWQA0VS5I0bwUjQ3QkTWA0SksjTscUPvDzXoU1bsIzSwsTUukmbZIDVMIiS0wzYkcyYEcSXqfiTCsxPCwlcsMVQtkWbqjGRMAUZsMSa3QFMtXFR0rVb4gjVwfzZpUCZY4RNzMkKNsVdrYjauk2Uw7VTN8lR0bldFMzc0kyPXsVL0UGb2U1XNckZlgWL4rRRKAkZF4lc0v1MTMyXZIjLHkUXEoUQZk2PMkkK3wlSzQ2Rzn1bsklbHc0QmMWUNQjc0TyTLomUQcGS2jzQlglLuMGRZYUauwjYushaUMST1DidqMjRjYzaXQCSj8zXRYWdtrBcHgyPiA2b3LzXq8lSkQ2LHQWViIkUGQ1L1D2SvcTTzgmLDIDVh0TUtcjSzDSPPUmRm01RpUWTQcVM2kDQEACaGozMXAmVNQEUUYzMqY2RKYkLwQCLH81bz7zMCUyRDISTxDzLXUEaVEESqEWcrcFVz0TLlgVXqT1ToYDLtsVRUY1SvoFM1H1MCgUMGMUQSImRsIyP0k1MukDZMkUVTU0J0kFNqnzXEIlPDYEa4gjLuITUqnDMVE0aEYGTOQWdhIDYVkWUvAUPCoTaF0lPHQFSgsRamEkYycmZ0ElRTwTN4wzLjUyJHMjcngmPZQ0S3YFT0.SR5wVYKkUQWEWQmIiS1X1RWkGZCgCQyPiXqbjTNASQtQCU0EURKMkdtTicqIWX2.kMtQjUUMCUsMyP0QzXMIGTJUyRvMyTHYVbkIkM3wjSBcmT4TkKLMjZuAELY0Dd4nENqUDQuc1YnMTYXshKhEzUMY1MBcjPsUlLu0jPmE1ZFU2cOcSaY8FLE81RwEyTVUSPMkCSzTFVwkyJqT2TTQ2YOUjXCgibGslM3clQTojVMImUSMkTuUmQtgVX3MlYOYjU2f2RAIzX1AEVwXmPnQSTQczSlk1TsMFN4PUVyzFN3sBYJY1YmcFb4jCNqQzJ3f1JAMTZNUVdTsBVwTkY04FVtj0LOozRoEUMwr1T04FLNkyRH4ldCYGZ3wDVi4zRMsxQZEjKicETpQEdEIyMBolThk0JrgVdH0VLXU1XPkWUwbVNSI0QzY1X1I0Pn8lXxYVR2Uzbsgyap4za1QUNjIkcn8zPlkjYug0SwrFMtElX2DFSn0jKWQjVScULs0TYWwVU0DmRtD2bOkjZxcVZw4BSuYjdykyaKg2aigkXMUVYMMlXOIEL0kVdkkES4nDMF4xQuIlQiIDQzP1Z2fVVQUjP2kjd4wVSi0DN1vDMyT2XrslaJElZyjTTrkDRIcTTAclL28VcN0FUVMTbOcGbO8VdtE2RpQzLx4Vdy7TMKsVV10DLKc1UkgCcmY0Z5AEYRgSTzvFUIEjPyjVX2oFdPkTLvYVU1UUTzTGSWQ0cuQWRqkSPLQiPyf2X1XDLFkjUZYSYBQULxMzYuo2cSkiKkEicVITdWMVZ1DiQwbGN30DLBUmQvPVPw.0a0IzPyf1MZYyLHglStIUaSQjZvICdHgTRFkGd07jPQQkZVQGM3sxXE8lUCYyS1jCRCYSNnE1LykCVHQmayYmUtA0QvEyXYgGTGU1bFIDQSYyJxg1LMUUYvblTrcSb2AmTvHjZPwFLO8FQ3QFVXYFUFIEbqb0ZxYUcV0Fc4o1RnIGLogkR1XkavUCRsokY1PUUvQVVo4TVn0Tb0HWYuUlPQwjTFojTtfTX24DSqHELEo1ZjkmPJcTblciVQkWPqclUlkkXl4TLZU0bscidOsxLqLzbgcUPoYmRgUyRuEWchgldx3xSHYSMvIlK4kiXAYyXEwzQwc2RDAUNMYVbxY0RjQkRBIlQz.kYFYkSgYTQ3wVRIkFd1UVbzMFNPQTX1jUdlYUbDgjS1EWa2gGSW0VRxcSNpojPUcjSoMDNPACLncVNQszL4vVRvcEcqj1XiMCM3YVLGUmdqgFT2YVPzcjUwMFZsETUZEkaU4TNQolPq4lTGI2RoIDb2jTNS4RZX4zU5gmKj81PIMlShwFLVASSWA2aIETb2A0MMMjbqfGTxvVMUsDb2TDSzLDdKMkbUolPGcyX0kmagkzMwwjdtjiZhc1aGMzLsYTM4MCU4kDVqIiczTSYMIVU2HiagMTNVcyaLgzZq3VYBcTb381PwrDLDEkKDsTSXQEQ001btPybMkiVqDCRxQWUW0TdUokMKAEYvLSZ0HmU0cCQxf0RwIFUuElUIU0Z3HjY4U0PzTUNVcSTv41LqY1RxHkMKszPUQVRBoDVyLTZSAmP0j0SYgGbyTVZBkzQ4wjcgckdOoVRL8TNp0jQk4hdI4xLzTjREgDMqbkZNkmRrEyc3nTQxXEbD8VNlISLqnkcJIVTTsFdRQVTqDUYGMlQLg2Jo0DUP8FamYSazAWcznDR1n1bOMmXSk2aKgmRs0lbrUmXgUEV5IlSRczazgzaHYib3A2atHmRpoDbxsFb2UFQYsxbWMmaSQja3rVbM0TPZ0FVjkUPzkER07jK1UFcJM2SVsRXtXUUwjWR1E0SHIkTlkCSQIlUPYkbkcFLtvlcz8FaUcDSY4DMVQ1MOQTaQkFNHAkY5U1JUETbssjZ27lRPAmLtPlVvcSLH4VMjQEdxQ1XXUUclsDYKEkbucUP1w1LsQlcjQCZ38TcCEjSz3VLZYVVDgGMhE0Xx4jMg0zL3sVQBQGaHACTZ8TQEcGTVclKXcFSAsBThQkdhsVYqAkd44VbPgzZRwzQ13lLnwzJmEEV0b0T1LyLNcGctEVUEEEbqITXyL0XxfGdqbjaPoELuAWbqHTR3PkRzLkKAMkMKo2XTYjTzEDYokEMqshY1kGa3jkatQDRKcGSOw1QXA2SqojYYMWX0oVa4MTbII0MEYmdwXzPGISRxcGMtn2QBA0YNoEUqPzasckaPMkY3PzPL4TYtIETz4VVwglSF4TYwjlK0T0T2zFZtTUblMzchkTX0jDaKkkKPASQQEyZjMlYmMlXUElS0ASXzX2R4HFLsYzMVMjPxgST4vTXtgDT3bkbMkCZ0TlQ2kVN0MUTiI2RBYlLqESaPsRcxbzRDQVUJgFSM8jVMUUX0PGZ3kVLGYlLos1L0oWSIEUaUkiMCoEY2LlcGQiSNAmLPs1P1oDd4fzbE0FQYszcwnzJQcWcsMiSlwjS0bGZ2ozMNgiVoMWYNkmMMEFTZUkTZAUVnkzRDQ2c3HFYBklYKgCUuwFakMiQRIyQwXVX5IDVyUVLsojXZU1bXgCMqnEaFszSPMkYg4xPzMTbYQjKIA0bnMEMqEmcz81bT4TcyMEayUldwEyUNEWU2AmcAwFQ1QzcPEVZVglUAEVbrs1bXYGchUlQxfSXWUWYvg0PHYCU5MWZXEFbSQEZZcjQYsxb4HCRRkkQWQkVowVSLw1SM8TXhcTUNQTUznEUwjGdnMTMlAkalMlQwolY34lLVYjTVACUUcFN4jDR1QiMH4FStc2PZQUMU81YZEjM0XjangCTiETdzsRYyE1RAUmUJETMgYSMmg1bDQlVCEFT0gGbv.UNggGTukVX3wTT4I0LLQjQXAUVSYzLv7lYQgjYYsDcpMSc2H2c0ElTO8lZxUVUrc1blgEa54DdWICZ2.kRnIGbFwDaIQjSxHiM1QlUmEyTXYEdgE0JyfGMh4DTOwzRsshSwHjaJAWbAMVQv7lQEokYNkUQpEFaPACYAcGSu4DVxjkXxXiMmgFYnkWXvj2RB8lMn4BUBIGVvL0UIQlQjcEczcSYwbEM2.yYtLFSYYyPoImMXYmUR0zXRo2bj4RQpIzRBgzXX4jR4.2QAwlXtfiRwDlSo4laVkjb0kSPkwFNrkWTi4FNw7FZBACL1EWQC81blg1Tr0FS3HkQ1wDS5IiL4rlQ1YiRTUEcFcFdCIjTFQUR1AyR5kFMhITcGISS4UmMBMybEElP2TiQxPSbggiLTwVcVk1cvHGdtPWRIkmVREmKzLiKFE0TvrjXugCLGMVRBIyQwk1aiwDYwQyTrIGUEQkKxkVNMEUTrgSYF4FU1o1J1bCNl4RMrYESiYWLxQWRmISMrYUPLEldxfmZ3LzXR41QQYFbnEmc3ciRSM1P0HmQiojSHICUIQkKAYjQB8zLv.kcocDd34BaZMWSGgEdUgTSFQlb0kFRMMFNmkGYJUVMMASUnQzS3ckZXw1XzHGZ0X2bBcWdIkzXZUGa2QSLxjESXMSNicyX0UicXkCZkEiayHERFUyTFsFStMFQ3bDcQEjKNcmbAIkSHgGRTYSSyo1SqbGNBwTaw.kTjgVQt8FSkYFNyDGbsAES10DSuQWd1sxM4g1LrsDTCgTTFEGaAQyT2kEdLIiYAUmZg81Tw71ZVkiS24TLEIVSOoWQHc2YikDaZ4xJznjQiEDMvUSbPkiLnIma2olPoMyQIUUL03xcwoENS8VRg81Z4wTTM8TQ0szXCojUogkT4slVkMzT2I0SnYDL041UBMkaNciYyg2RTE0JxzzblMzJhUDRxbELEcGRq4xa5MWahMiKm4VTsMEVJAiStb1RHEmdWQiSYQFZ0LkTlkENh4xTBk0LpUCcUEENOo2Sv8Fd5kkKhgiZmEjY1.EYpwTLQ4TPtcmQq.0TV4hMjI1bhoFbh8TQGwFYM4FShQCNzHSPM8VVSQlRvL2Y2rzQWIVPlclSSYTY2DGQssDSv0FNwomQNECQvciKZ8FVtIGLhciKOomZAAiVDQzZyHmMiECMBE0UwLja2vjXtE2LzTUV4X0XtjUYMoja2TkQpkETOgTT4rBSYU0ZyTkS0gTRqXDRFsFUHYWSNsBT0cSZ4UiStPSNTIUaTI1SKQSVXUiUVQ0bDkzcPYjLOMmQTIVUkMVaqQVRXgkZ3ckYBkFYtD2cYMySwsFaCMFdQMEQvkjZkYCbmEkbTQFcqczcAoGTD8DTPwFd0AUa2PiXvDlMKczUtnUSngmYgEmdnAidzHGMyXSY3gUTycmS2LCQFUmT0w1TUMSRDYDUtbWR3gDdw8zcEkSaswDURsjZqMVNtAGb5IFMUYySq.mZHsxczbDcVkzaNs1QR0FZtI0TYcFZZQiU2PETuQUPwX0cBYjUUQzSwXlV0AkQ03RN4P0XDcCZ4UjYZcTRoslc0jUVZkmakMlUGA2TwMCMybkbQ4zUFkCYmEGLHUybOACQpQjK5cSUZIWcvYyJrcGNtH2XSk1Tu0VU1jEdrgiTFoWZDUjQQMVMhoVNOQVT2QUZRozQnElPxIGM4XERDESMxnUPEUWbZwFQEIDR0PGTVg2RikzcvvFViQjRgs1RhAUVrU2QGcWd3jTLoMyPAsDZRgiX4sxcnszZjUEay4jRwrlb0YyaIsFcrM0X4jDREU0PDsRRUkmKSI1aH4TUHEkLtY1YXoEbscUXOAmUogFRhg1cWgGL2.0R48lbyICargiQAcWNWAUSNElVv8Vd3ISYmsjSNQlQA4xPYUDYg4xYr4RSpI1SugVR2AkUTUzLOclVAMWUCIzTpsTQUImRH8VR3jCQxX1L1nkZjISQnIjPV8lSDgFQRUSTlIjLtnGYyr1QvsDbDcDbBUiPzrzbMYGNz.GMOEGZwbzXIEGNHMzLLgkMIg1MygGcZwDUzX2U34VcOg1TBMSPwb2cFAUMAwjMyMla0EWS54VTvbUMYcUXok1LLQmVNIVSHgmUK4xbxwDMW4zPwImK1TWPuQ0UIk0Q1wzbnkjbTcDR4cDczUWVTQDLvHUMwLlSycET5sRcMQ2URgjaCkkX1TGTqYDR3EDaxjWLXg2bGAiRxfFQGAUNWM1TwQyU2jjbg4FdLk2LnsFbzgEVVQVVyPCSMQUMmkyL2kiMpcVUgAmLyMTdqHlPhQWbZojMC0DRtXGVmoWYOA0PsEyX3XichQERg4BSUIVTO4DZ0AicJcTTGMVXB0jVHkCMMMERxwzMZEmdxn2QGIEStjDRwA0M3MFVqMVaAElS4LkRPMWQR0jZMc0aWQkRqjWMTICL0kSLRMUcR0zQ4sxUz0VUzPFbsEjL2jyaHIWMIMyYyrlM4HTNPoldKc0QqQEYlUDMMomQrU1LVQjTBUmLGkzY2HWPuM1RRIjMmoFdv3xUr4DQ5QTQQ8FMFkVdy3jYuIlVkwVUTMDavPmPKIlT4H2XlomY2HkMmcGNwgmMZEzaLEyYxD1bxojd4IVSzQDaEgWUvbESBYTStHlZx3FTw0lcxXyMqE2SqQFYpIzJvLjZ14BQHcGc5cDaxvzJPMEU4kCQlEEMxbVcwU1JJAES0MjcrACNzD1bKEVQCc2XhgDLSslYPA0UOMUNlYET2TDNlQVTSczcqozPxMWR3YSQpsBNB0TYMcVciElPgITamQ0TVklKU8TcXEEaWMVaQYGMxjjXi4BRzgCTggWbloESz8VVG81TyLUUhMEUnUyU4AyM5ojT3UiX3vzRNojaEImc1MDcnolZQkiQ2YzY3UVT5wVbvM2Xx0lPYoDMLQ2XDkjQxUGRP8VPjcDZkcEMlIzYTYjSIkiaBI0aMMFczEFaZsDSUMVURgmTGgWYqQUcLgST28VdoIyY0QVdwMDZgICVZUmKBIlTzQCctzjYJEWS3IWQVU1Zq.ENJE0cuQTdpUDbXAyLtfDLwLGVr8DN3oDbiECaB4hPQcVTBMSXZQmPMQ0URg2c1szSyYSQ2LDdtrRZMQkbtnEd2UEbqQTTlYVYEoELtMCVt3DdwrlLYYyRscjTKkmbNoULCI1JHMmK3MyJtkWcgcCR1MyL0MCawsDMvnDdlgULScmKxAGbFw1aW8DVvUkMnElKtTCdmwTYskCYYIjcyTDUtvjYrszXgYDNkMCLt4zTvPTMGo2YYMkKJ0jSO0DaFkUMkQTdK8lK1nTSScyJ5IFYZsBYDczZI01azk2X3TCd2MSZiY2ao4hLMgFbt.EQPEmLlsBV4HkXQklSrECSoQjcNcjX1XDSEMiR4EGZAQmLvICYysTP1AGTnc0TiozcIYVNWAUN0L1bxrRYOEkUNEzUXg1cZEjRI4jSOslKroFVGgSLUUUY33lSJsBR101UlMyJ2Q2LqgiPt71ZHsjayvjaYAkdxASc2LFQlQybTQjKUcEVLYmRAEjcDshQJ4hM4DmYnMWcKc1SVc0RwsVVPkyUvY1RtE0aXMEQzEWZvv1LvHGUzPGbM4xS3YlaBMWaDAWXJgjTvDTc2gkUKgGTBYWN3UVNu01XJshbNEiarACZSYCVKcWLKQEZGIjMm4xRPEDTxs1JssTaEIEMAEEQMEWL0njS1kEQPYiLZ4xUxLDZqnGYAEWdz4TMoQEN2HWRzoDdLIGdzkmPjMmRnY2LSMmMKsFLs8lXPIFQr0VLQQVTWkzZiIkMqMkRjojQr4lPnozPZgTaIUUTMIGLEMVPkI2RwYCd0DkKrIkTpI2UtvlSvAGbLESU0kzavHFTRokQ1T2aNYUVVQWN1wDVGo2cysBYvwldogmbr4BUBUCZtjTY4rjXPgUQvnVS2IzQ0XUNEYWVI4xbLkVLhkjctDiXzbGURszbqQDLMoza0ISR0b0aCUjVGoVLYQSQvTGZzjkdYEFSpQSYGIETTIzMogkP3TVY3USVH4Tb2XjP4bVcC41MNMlZyclcgQmbJojKAsxTu8jVpYjcqQUcrcjK4zTZFQlKvsjSjg0aJclLYEFcTk1PWQmLqTEStkmQvE2bn0zT1fTZX0FQrUCbWYERRwVMW4DbtICaUkCZFcTMOI1QOA0MxMWUDc0MJoTUMo0PKkESMUjLRQmRzslY1kWXIQEUr4RUwTVd3wzMNM1ZwUiRi81RRYTN3DVd2oDN5wzb1MCU4XWU4.SYIAiTtLmPqYWSxTkR4czQwHCcV4RdKIUN2PCY07lZRo0QYQSYPgUaVkScXETVSEFc17TdXkiYTIWXuAiPlUURD0jXC81ZtXDVyESLZYTLNkGNG8jcZYkTTkjSRwDYZMUXEgkSxUVN3Mlc0HUXxUWYIU0T3slbvb1XTwTaj0TV2rjcDcyMOcEa0n1Jg4DMWAyQn4DTZMiZKoEcnQCZ1gjXKMCMkoTbIEmSqITNBMGbx3zTGAyP0HkTzrVaZkVYOoVXM4jQqMlMx.ySj01Lyb1PCkGdXAWaZU1YD4RSLcWdwPmZlEiRsIlViMULsI0Q0rjSnY0PPgGVz3hUWsDVJYiTHUVUNUCbZIzZ3XWXwkkUNkTXtDmPzMDb3oWPJMVaFkET3rlKxcUcJolTT81ZZoFN0YzPjMzZrA0PWEFcqEVUHg1PngWL4DiT4cSdQ8VXhMGLzH2SyPGMz3hTFQFLB4zMZkyU3IDMgk1T1jyQYcTRRoTQlgDdtfiZlglQwMzYJUTPNAEViMESznzR1vVRAwjQTI2MCc1QOkkMxz1POcUUuA2UDUDRkc1PVIiczAiUyPyYoQTTvbiRkUWYlEzZqMUckgyPgsRV27Vc4DCUVUiZkEGUqMDLCkUZCM0bik0JgsRLQkCRrokX0PSa3oTQYYmQEAkaVYUaxD0Q3Q1aYAET3HGZggiS04Dax4lUoYVakkWXoQGU3jiLwjFRlYGazkCauQlctwTQLYiVt8jK0sVRpwTUzEGZxLzR1IVViYGRtLSMhUFb0PFLSYTRFgSZZE0PT4RdNIkL4QWV2sla37zQhYURpkycPoERmMETXgDYgUGag8zZ2T0QPQUVi0zMLUiZqrhcQk0T5wzYNQUVOQCc5ojV03zLOEVatcDZBk1TsgEbukFTCkyZXMFZLUVUx3VZtsjMpo2TTcGUvYGaHo1Y3gFV2c1JgwlTKE1ZzPFbkQTZ4XTaosBYKImXq.0SKgCUwDUNJkCTmYWMv4TR1E0UmgGSxICR4nWVvHUXvACYyYCR301UGMGU0HCbQMlZtAibr0zTwQDNgMUatH1aXMjPnQmTwIzSPUFczUVU4s1J2fUasYkc2E2ZqoVVkAmV2jkVGQmX58lTY4lTMAyXTUzQvYUNv4TUSUiKkIVV0YSPPkmP0flKkQmUOkCMrMEdJg2YSoEcJcTapIFVDIyM3IGZy4DZxLDYZYiYxwzUy0lZGQUbQo2Xs8ld2LlTMsFLTo1J2rBZ2XVdN8VbyMTUZQ1cOoFLMEVPvrTXZglQZQjUVwTYWcyXvMVRjEDaNUmcqDWcTQTL2b0QUoFdy8jXWcFMWgEL3EVYB8DT0EWNxojYpYVdIgjbOAEMQcCTHQTaZQiaiMUYAAEULsjcoUkayPjPUUGQy4zRToDZkQFa3LVX1DTb2giVJwTcvo0Yr8zLRQVR5QFbWE1c2bkdEsBVykUP4gyYAgkXLcEMDYVXJ4FQYcjUucmKg0VL3fycVMkYXkEbO8zai8TPRk0YBQTVgciZgkjVPk0PPAmLWMGc4nTRzD1bJ81aRAyLBEkK4zzcZoFQ1ozXuEEMwkTb3PFVUEWagcicYUkbGo0U4szXFsFQIMmZPUEaAIVTyMUS3cWQ4.ybskFQIUDMpoTNyP2cYASbYIjKJg1MKIUcFk2RPAkaRIEQyPCZnMWPXEGZqMDMMECaZ4FczTVRlIDYjMFRAMWT3Xja1jDM2PkT1slTyjyR2.ULLIzayHzZybEVwDSYsYiQl4TTxclQxgEb071SDgjTv4Tb2PVXwD0LvzFdTEkVxPWbOwlPRcVSLwTbRIGQWk0SUkEVscyTJETLEMzZWUjUzISYOIiQ1cCdmICQBokPw71JNwzMFEFS1fzXxnGVA4lV0bzQroVUooVXkIkStETR3LERzP2YQwFMwUVaOoGYNQEZtIkPQgyXm4BbSIid3QTLLkzMrAWU4bTMqLkbnQTPtMWZ0X0TPgVSyH1PLEFL4jDRDUjSm4FZhIUcXICY0ESXMUWdZMCaAsTX00FZ0b1M4TEUjoEVZgkU3E0YSkWdwYlSI0jMiM1JDgjUgESREUCUtT1XvAScybyUzPlVXsxXmEib4QzUyQFVOgmbA01Y3ckVEAyRtc2Q3DiV48jMsUlMzcTPNUWdtE0TnESavszXhMUV5gyZrEUazLzJxE2Q0IWXnslXk8DayIiY2QSYSglMvjWXkESS3YUdBMTbMUFZQQlbhkTcCMzQwLGbhA2S4fDUTYVaTgzSR41XzXVSy4hLwzzQxUlRKkSPzMlVzPGav.ENz8FQ5cFaVISUFoUd0rlSxYzXWczLYkVPYIlTygEZIA0RvjSQ4ASXV4DZ1czROglKQcUQSYlajUDQ0DyJkAEYxYzTTciTw0zRrIkawkUTYMmQ2MGSUUmaQcCQJklZPkWN1XWVzg2PAkkL4MiaBIzUyDiVnMGSrMjKrITLX4VSLojVg81azwzZisxcJQGMOYyZ0IFZCIESv7zYWMDQqDSMGQFNgo0bFMFQHcmd5MVPssBVtcFT1DFbHgVZwvzPIQlM0TESmslZowFT2TVY5QSSiAyJGwVVDQzMzjDatkGQVImZmgGdvIkcjYCLpwlQgwFQZc0QMI1PBomYwo1ROMGZM4DZRMzZvTFSu4TUmEFStszcq.SayIVSrwjVpMGaSYFbHcFZZcWbzQ0ZgY0Q2fibhQyPjIjaBAkT0nETtkUTwEyTNokVzLyb4gzUjsxUWUVVUQCNzTyUjQjb2TzbkEUUW4TdxMiM3nTVvT2aJEmVIUWYAUDYxAkX2gVLpgTYtoVXKU2LmUiZtPDUzIzYj4DVKAWXYczRrkkQoIjQ3UjQz.mTOA0Qkg0bFMEYgITYyc0PyUFaQ01MqLCVBIkVjo0SRImPSYkStfTNpYkZZgmVxX1aoYWXA81SzIVR1LFZO4xMgUWPxfTUKQyMLojXzbkUuUTQnMmQLMFbhgzSyAicYgWdO4jYWYiMDAUVPQFYEIkaOwDbhglPYEjQQ0zQH4xPyLCRvQWLBIETwT2PuITZB8zX0cCN2cmT2IVZLoGZ4fWMxMEMAIzbOEiVMIVZ2Tzcwg0PHUzcOUCLPoWQGIGNwflTjslMr8DRmMWc441YYElbAUza4TmPVQidy7TbK4haBEmQEwlLzPUb5cGRngUSk0jXUE0REYjQHwDSHUldUYSS1I0ZYoGdNEVU4.SNwUjQBgTUjw1QvPWc0XVT2jSd4jWYBQES4jkXDsRYpYzcu4lLncjSvfTQ1cGShAkPsIEULsRSxjCNlM1UxASN33zS5YGNkYDL4AGQybkRNMUV3gFSoU1XDkDLF0FR2g0QDIGZpg0Rw4VM1v1czzzYYcSLDkVQwcycrwVTvTWM2bSXsAWbPEmcg0ja03zX18TNp4VMxzlZmgFUwz1YVUFagkTTvjCNynGb1o2Lv7lUWcmXzMWZvIEVXA0Mx.iVXwDLqUTSJcFQrEjaCkESvHGVwP2SWkSVSI2PggFURI2TSYUYjAWNRYScvLDdlgGbRozRSoELvbEZRw1QlcUUKsjVWoTQkgGczzVR18DYvnWLYYmXhIiYyPzS0HCRtwjVRgFM1QEbzHzRrgUP1flYAkjZvIFbtgjXSMVN4oTRGIkSZYlTig2JBU0QYI1T1LDNCozUq.Sd1wTTvgCR1LkUCEWamsVQzMGSAI0YEIFUzokZAszZgM2SUcyLTgSPZMFQrMUcZEGSgozR4USbyEUaoAUczEyYx7jXVYyLqjybPIkbQkzRxbTSwYlUgQmcmYEY47FVJwjLOwFZzLVSWkmcXYCZAITdW4jLSYSaGEmaqsRbvLiUwzjQVsTNpkCZF4lLynFNCMWNpc1bzQTS3LGZA0DaLojYuYEVHQmcgMkQXkTTDIiYzjiRx8VQzsDZ3DUPGozL4HEbvbUN4oDS1zlPzg0TJUUYUsjP5QDawD1cq7TNQ0Db3giVR8TSVIyUGIFZ3rBNtHGRQgEMTIySkY0MKcSR2vjMjoWatTVNM4jQWkzZ2MTVtQmVsk2PucVQlMVQ0HTLnUTMI0zMU4hQJgVdPoGSAsjKwUDMrkVcyHjMU81M2IDV3MEQBQUaig1X3fkczQWVlkSNLIVc5UjKUISQ5IlVzfiPRkzMys1Q4UUa2EjaGAWMqgCN2vDcFI1LlkicxMVUlomQmYTdwckMtcVdy4hdyLCLVsFdtsxYMwFS1E2RZkDS2TyUuoVX5E2XUA0Z1cjYtkFToMGZjIjMFoDLvAWckIEa1nEcXQkM4IEV1sRZYk1Y3P1LWEVMBUkZEEkaSUWbIgFSUg1LzMzcBozRUgTZAUiPBEjSjYlTrYFbrwzQCEjXWQkLwU0SZYUaFYSQwU0bME0aKMySGETZP0TS4.EYVACMFgEY5gGMyUUN3QCdxMjYTUVTlIkdRkSN2kkd1gmTQUVXlwVZYc0TmEyazDScUE1ctnWUEAkajcTSBE1JCo2MNIVRtLycI8TdWQ1cJUSc171QVUWT0PGV3HGQxbVQFMDVuwVR2YEcM4DSHI2ZwEjXCcGMBMjalASZRo2MT0TYowFZqPVPw3RUyc2a5ICL0nlVYkCVqTVQ1fUdMciRm0DTTAWZKIiPzXCcJkiZ2c2JQY1b30TQ23xXqcTLUo2SZEVTFwFRNMSUWITYYsFbok0bIE0by.kUBkGYwDSbMAmKBkDNiYEagUyJBkzc1klViMSdzQ1QpUzSoMyRSUSNhElb4bkSnMDVqj2QEIVMBM2ShczPxPkarcka1PTP0DUNg4Ta17zTD8zU2biLWQCLwQSd4UEQUkmaIQ2UsYWd2zVRLIUUQoVSvYCLq4DLBQCTxcFb4LEako2chUSdBczTBsDUmEiSEgjaVYzc5kzU2gDNggUPJYDd3QTalolYgMETVcyUT8DM4rDbxgidqXTakcTUgUWMCgiXLIUXQAUaP8jRtzlSwA0TmYCdi8TN03VMz4DV0LlYZAicvMmdx7FQhASLZwTRBIySt.iPxQGN2oWZ1gCc18DRBsRRtEzQyg1apo1ZwcCb3XUchgSYP4xaGIyTjsFaRsFTsUUZvDVN4nlMEMCMww1LxXUchE2PmYTU2YTVKY2XiMkR2UUXTMUZzXWNtLVP2IjXuYyaKomZFM2YrYmPVEkYksRNGwDLHITcVQTMqnmUVYWaj0FYmkWVUcyPJ0DT4kib1.WPJYFLxjVa3T2QzjlMDczMzDVdkolYO8zUI8zaE0Vcj4VPQgmMkQUczIDcTo1UvLWcqE0cEYkcM0VVP0FTVYEdmczLLIkdRc0UYckaqACQSYmLnc0Pyj1R0HUUgI0POYVQgU0TFYDaw3TQgc0UFQ2aCMlKPU0ZZY0QSQlQjMkSZcyRmA2TRQ0ZmQ0X1jDRHg0ay0VNCEEavHVPwTlZR0DTUUVLggSbrc2Tt3FMNcVRIYyLuckVwoFU3PUMjoVcrsjdIQTRt31Z1PlbigWcB0jYkcFcuc1ZrU1QEE1TUkTbTMVUH41buACVpMyLicFSJIUVyL0TUglYhIibtv1RCsVY4LjYqwFajY1aZklVFYGYggDRgQEQyUiZvDUazUTSwIGbhsldxXjVLoEQ2XyctcWUQcGMZkkRSIUbxkiRNUVM54BdkUicnI1b4b1LtEVPSUWdt4hLskyLUQCNX8VYGYGQ4zVPLUWd1bGbzbDVKwlXnUjdtXVNh8jaCo2MTQETL0TShkyYZoUU4fTMyHVZgIFaAoFYoUCLx8FcNgyXrg1SC8zcwMiKMAUYGkTMSIWQL8FQ4EyRTkDbDQiQgUUb43BSh8zPzfiSSETQikVTBkmZz81a4TyL4PGRxY2SzA2bsokK3LWNtgVPQ8lKB4xMzL1MsQFTSMiZSIFYOczSYciTgoEZBUyQ5MDQJgyXtnkXMwjLukza4LWPTcyMPgSSu4FTXgTahgmb3fzMDQTd2TFb1kESNYEV1v1cq31auMTNkQWZQkmRKgiTRkTa3XTXLcmYG4BdSEGaCgmPJoVV1TjMyf2b1gCUGkES1biYKUlMpEUVPEVXQojQgkWdkU2R3X1TSgUSIEzZ0wVSybTcKAmcnkyTMszXhkSTtYVXsAkKzslcTIjLxIzZmIyRqgjTuMGcjc0a4flX1kGTzYkRyfEUpA2QvT0PmQTPsgzYTckSqfCZTgCMqMFMtYCYFgyLWkzJHAiL3MkTMsTcBomZwXyQnAkXAIzX4rjMKsxZGAyTSQDUkcVML4zYQIWZl0TNwnGdwoDZSgSLvEUVM8FV1PCSrA0Zv.Ebx8TanEERvPFaQEEbiomcJoUZwUUaiYFMRUSb2QSbqM0YwTlMTwVPog2U3XjTiQVZp0jTmwVcvYSLBcUaJ4hTAQDcJIDLIM1MwolQtQSUIcSXDYzLTICdjkCbWUmTgU1axn0XNASVuA0ZOITYz3RNKoWcOYjTxnUdzIUNiUCUgciSDIiZ5YmKUslTvsjXVI0UX4TVKoEaVQmMg8VSJ0VT5UGQmAEQxEWVFYULDgUbDcCL5UmdvYWV5sjZRkEZ4U0U3biYkAULzPTStk1c04BNvcVbig2Y2w1SCMEMEMyUQoEMDMSZIMCRSQUTR8DRkkWaPo1SvXlUtAUUBoGLw.WbCslZU8VSYw1X3bWaybUTDg2QWc2bGkzTCkGSKAkdXcUaHUEdTcTQZMCQKk2TXshQpQ1YtwzLvjkZ54RPWMWXlw1b1LiTJMzUzPkYjUyQI8DQ44TSwgFRvYlUDQTPvnkVUYjMuUzZEYWar0lcVIyUN41SSg2PmgiSAMSdmclX0A0LykURzwTVvYzLhYjcEUUR4EiLXk1ZgUTS0UWRLEiVi4jbBsjRPomUqbSL0PzagIFc1bkPw.0U3IlPTYiYY4xZYIVUT8Vds4VX3vTdtrRYOomdzL1UsslVQIVV1TUY5IEShUGdzQCSvEzTiwjPhoValUEUPcjXNYiaIIjXMYEL0ACUjEkRSIybo4xLGkUaiU0PF0TQRg1QlEiKRYCZ0nEUtQlUu8zbDQEbpQSX2YUdxMCMzUkL1cDUlgmZNoWc4HzSoUCUZQjRSslTH8DMkIGTYojXPUzSPMiRHw1bMozbRgzaqbCQ501XzbmR3QVT4bSc4DGa2HjZ1MUSWUjd1.SZOslSiMSLJAEaBETLIYVc1sjVIIFR2jSM2HmSZsxJ04xL0jmMl4RVpU0TvblYKkDLksRatomVF4TVtjidH4jSzLyUKYEVNc2T4biXUYDQ5YjZCQDQwciMt8zMhIjVi4VdRIVZPEGSgAEUFEiYxQkdZsjYxXCUqLzR2oTNgwFdN4jLzQiX48VNVgWazLzUqf0S1DSa10zSP0FMvLGUi41QLQzcvHjLyDjQUYlbqjkV3A2JQo0bFwTPKozcsUFdCEkdzbma5gDShIjbPszaT4xYig0ZuYTUXMyJDoDUpoTVvciPTQTbqoFb141XqwzPiISNJsFRvYlYlwFUsQ2ZPEkVAEUazMTRukmbqXSVHsjTEoTURQTL2IGZFgVU2EjZxXVNyHEcrU2aGMCTroUYnoUb2HDc1LFSQ4jMzXzXpoVapEEUTg1Q3.iSvoUVm4BdHYGcu8zTzHETFYSU5kkKZYESvflX4jFS4cjQxfjbhcyTTUCLgcTdnQjU0LzMvYSZwYmL2EWL08jbBcyXqfGUZM0UGcib3MULzQ2TqICaME0MRY1UFglROQmdIsFNHMGMzHWStgjYz8lM2PjTpsVd5UyRQ4xRXkTQ0Djb3L2S4wzYZIUL0A0LmQmTmEGbMEiX3kVaxAEMYwlXpM1cn0VNwITLHgFRRoUatkWcqnVL0w1cgczZukEQZMlbqPGbgMmLDkzSAAWT4AkKkUTZFYUNTkyXQgGRGkzQPo1QsEUaxc2R0X2LnUCcZwlP4fCNvISLMICRqQVYhokKSoUU2YCNvAEY1czUiciUYQmL0HkLEUjLGIEdoM0JOYFZyXlalIGcs4TVNozXE0zbUQVLzkmLx0VbzLybAkVYwQTd3EScxYjbMYyLvU0M1w1SoQlKBgSdqE1ZIc1PCEzLvP2bFMDYXUicg0DLGMUYmYyZiUycrkyLmYDZsomYiAUUKoUNVQTbtYSM0QFbrUCbmshYzcjdOU0S13lVZcVNMkmXKkVY0UidjITTZoVMhY0cwAmLIoELqIGMqMDLW8VaEQ0bznlakU0XFEUXlQidEMzXVQlbPcicznzTBkSUJICVSMTQ1cCUxYzLgo2MKMVUAkDbhsVZDcSNOIUTTgUaPcVM1YSaM8jXPMWX3kFQIcCMg0TMKQEUDYCTv3DV4PmQjQDLC41TucDdIsjXDkDUTM0YOACYuUmMoUmK1rVM3oTNJ0DQSsVVYUFVwsRd0UyLPgiR4PmYos1axUkSF41MXcWPBcmLt3BRRICTyAmKwDSVtMmTDckYYYWLWY0P3.mZVc0P04jYxkEVEgmcOECbRASSMESLBwjVrYyawDUL2slYyU2aOEWUDMlPwwDMFIUQxsDQqEGcq8Ta4oTbSk2bZoDLswDSTkVZZMiVnAybLcTUu8jd3DjRAkETYwVU2EFSHM2RzvFZmAUarQDMDEycxUSMLgWbBkjMIk2MJcSSmQDcAUUYyEVYGgVQIYzczTCLT0TalkTaIA2cKkUZOMTPzMWa1PDQvQkTDYyXlIWP4HSc4H1SGMGLpAibyICYMYFLhMmZV4VLLkCczjiZxglQkwzYWMkUQwDNOkkL1zlYDUUSZg1MDQ1M0E1XqUVaBokX2LDYgYDL4AGZtIGcLcySQMGdzPkSGklRxLkXoIUL2Y2SQMCQUIVdzbUQx4BaLwVQR8lcSoVSYQWRYkyPZcSSHsxPpMVQpIEU3jlLqbVZp0lTGQUXqX1JCc2Q4IEZ3bkP2D2SYEjaxDSaZMkMQcTdDcCakcGLSoFNjg2M2Xmat8TNzc2MjUCMjQ1RtcWYwEUMo4RQUshKWUCRZg2RwshV2H1cxszMHcTN1g2J5gTTYoVLHo2Q1QySpcWSkoWYvcFN2oUdzfDZhc2UTACdpglZtc2asIiUiUlLWIUakQkU3TmdFYDNzQTXCMEYjcSMp0jSMwTUZsDV0EkdXYlVtY2RvEDYzH1ZvjiKEsVdO8zc4DjaAUDVZcSTvvlaH4hMT81Qmc0SS4zUnwTaHMSTvjyRmglUrw1MvnDYybzJJ4BNFUzcm0zRrkiVI81RkU1SMIlbVgFLTwDRGQzJsIGbEUEUYgDdUc2YKAiXjUSTMcySVACci4TaRUkUGUSayckSyzDMp4DZxfyUvI2UqUjUkQmU0QVNXAyPDMCby3VPNQiXvjEMGkyTkEkbAkVcIYkQqHlTrQzbvgkU2gkKxPWPJkybxDibYclLN0VbjgidAE0MxcyaV0zQMYDUC0lQ1YEdicES2TzJgkCS5QjZso1QrUFduYVT2fUXwEkTlAUV1YFYKsxcYQCN0g2XlAUX4cjMNAyRnI1JvYTcNIyMSgEU1UiTqbyJp0jMi8zXxg0S58zTnkSNkEWdUUDUOAUYuIza3EUM2nDc3HzQwbFUNMDRncCYwD2Soc0JTsFMvY0SQM0Zyo1Yxg1JEMyPFYTQSIDcvPUUScmRBI1RSMzUiMVU0ICN2TyZEszcicjZjs1PC0zUzU1M2DWRq3VY1jUM2zVYmgSMwDiZX4xJiMSRZoFNRAWNF0lT2USQu4jMhs1Yp8DZFIDS4cjTAkkKYoTbwfCNKkDYtoWRjIUYKUiSw8TXv01XAEVYucENo4xZ2kFQAIySAoTXZMFVRASU2ESS5cyZtXFSs8zUx0FRzP2LVgDMxHlTqb1JGIzUxwDaP8TUkETSzLWZIkWamsjdRcEYgwjZkQTLzUGTp4FQ2n2XtTzR1cFcqfEYigyTzsFMPE2TZclPw81a3glU37jRro2TiUSbXImTFEyPQoEZZAiaMA0JBgjV0jEQgAWNtrDRFMVcZY1cAcEUVg1a5g1UTkyPqblQ4ciZ1bzR3nFdYQEd5MWcv3TN4XSaKcDZxPUbMYENh4TdhEyYk8VcngSUZkDUso2YBckVDkDLqISUqbmTXsBMycyRnc1PVshMAoVUUEGbJIyXyXzYqwTVXIzYCUkQZM1JLElP4AkMYgjVO41YmcGL0EkMnAkR5I0ZEYGQzHUMycCS5sVPqbSciEmbVgGVqc1PBojVjQ0XNozav4RMSIkRFUlXJAUM34laDojVII1UEoTYPQTVvc2Mpc2cRMkUuwjU4sRd0kFNAkzYDUVQYokXD0TYFUTR0X0QXoTSzbyT2gjaSE2Y4kyZl4hU2bDaZYmdUMUYMkkUPgELyHGb5EmMv0jKSshKmM1LNgkYwfCRs4jb1kWYYgkU1cla5EjXXcDU2.GN17FNzDyJ0TmXAYSZPEDaQgyLIwzXyDUVWQCROMTL1cGNuMUSyvTRnc1TWEScSIFdIkVLxjUTpMibtvVbWMCZ1LzQFciQDgSVvcGMlkzPqY0XqT0Shs1UvMVRtfkMz0zb0b1MKs1R17Td1QULjczayITc37zc47jM4fVcvT0cg8TV0MFVxoTUqfmZgk2QQsTMrUlViEVUB0TL38lZrg0X3UlVm4lS0QCMnQUc4PSbGo1alkic0IzPkETQlQFbT81U3HWMtnVYAIGZ0AkRtAGVTYSYFklYFgVY2HSQVoGYSg1MA0jVBIiTg0VXTgkKC4DbYM0b34ValkWMVoTbFAyakYEZwvVap4RNTQFNM0TZEImVyjlL4Ekb2E1PtUCQz01SBkDbJESRYgjUM8TPG4TUz.WVWQmMybTVXYScTU0Z4HFT2MmSMsFT1USZ1QVdqfURQIkPyLGQ2QDNOcmSmQUMlYUaxbEQrMiS5kzbWgWUNc2JvMFdBgyTWcGUho2XOciaLQVbnwFdzI2byDmVwAWUybmaToFZBE2PxXDRyPWaTgVRkUiZHIybjAGNw8TdqHSXIkESSc1Zi8TY4A2XVg1SCkWLy.EdEQ1Z04zX34BRX4Bb5MlZzPFTNgja4PiTKwDQHI1PFsRXJMCVgMkRoEFLngjK3QVQyQyRpEDMJIlMlMkMBYiPlsVbtgkM43jbZEjbZYjbV81QqM0TvfTdBITU1kzSFM2JL4xSpcGUAQyPwnVRGAESw71ZgU1YqEDMxLjYEk1c5UVVQQlbmkUcPkmRGIEMrIDcmYDLS8lUvslbxLVSUQ1axz1ZBgTdlw1ZkEiLQUTR4UCY50jQnYlY0okX1HjdkQDZvsBMTQWZWc2X5glSKYiUyn1PyUWPhQDVPIEZ1gDSRokR4jUYRkiPAITaIA0LCszY3XWR3LTNmMUSrcGLokCRYIFTNEyS2H1Mr4VMjoDLCUCSpM0TxcycKISdyPCUqkWU4TCaLg2UXcyZ0XjdokkatYzMOsBNVklX2AyLXACMUkEZXAUUNUUT0Xmdy.WPyo0LLMFciETLLcFMhQyMyL0PtACVhUzUqMmYBYETQc1UTgDcK0lPmsFcvomKxfGQrQlYjQya3vlKYslK0LUdwDURWQjZwYVYzPiZholPXgVdZQ2RWI0LjA0cmQlPhEDZvk2Y3I2SXEybybla5oTZwnmSGQSakUUMmUTNtcVYxjWcEMiLqgzcNY2aqHiYNwTSt3FaMwDbUISc3jkcCEVLwLEM1PyT5ciUTYybTojKT4RZNUEZWwTNxfzLxkFcxbkLz4DdVIWNxomKIclMoEiQ1cUS0TDLy3zTQgiSvb2UqYFROsjVBgWNngWbx81MjUmMVgzZJcGbmAWcvbmboAyYHYGdgQCa2gmXWIzPjEEYDA0UwUVbjcSUqwzc3LiZyQyUHgDYHEiczomY3YyTUAGStDSSRcycxLVZVoWN4EFNEcUaxLVVlgidKYSbmAkTLQVLyjDSzglQ3HCLI81ZjczaTolPqPkbOwDcYI2ZGYCRxHFVyo1M0XVXDAyPNUzbwbTNJIkYIQCdHUCLQ0FNU0DSXETatclMEg0XrQEQlIicVUFcwY1TvsTQtDkTsA2aUECQzrFbqPmPLolP2f1YnYlTSYSMSMUa4LWN1TycmgjcqITVVgmS2LWRB81POcUUZM1T03jcU0DMqXzTLYFdLUGRAEESOsFalE0bpYlaBYkcJMyJ4kWNWsjdIkmQR4hTwQmYPsRPXkGb0HSYyH0cRIGV33hXLg1L2.UbHYkPxnGTVoGQIgULTk0RvAEMKMzMhICTtzFQtP0SwgSNRoGL2wFVJI1aEgTPUYidwbVPtczcyUiZ3UUaIcSLxAEZKoGLpozSuM2QE41aoITNoUWTTgFbsIWUEEmcnMSTMUTaG4hbEIycybSNh0lYIgSLGUmSBojQVQCZDcCcVg2UIUkMLsVa0oGQusDYCoVUXIlMjEiSoY2QvHzcLEWNSkVbXcEaBMlaDomRIUCQvjkaqUiZ0j0S23xQ3YWMznmQ2YGVw.UTtkDUBYGNFYkVlUyJ2jFdoYkYSgjSiEib5IjK2shTtoUb4jjUyM1YXIUdMUkPx3TcGkWQ5Y1JycmbDsTShg1bCQEUPgyUGUSZ03jL5A0ZQkEaQAUXMImXTMTYLg0PqMTZYgGUIcUVqAEULUTax.WPmgmdgQSNv0jMNASYs8jKvPld2bidtT1MlYlbzU2TqUESXAmLM81YSYycCsTPD0FVRkWR1glTAkUdwPDRrkjbz3DTpcGTYolbKM0LNgGV1shZqElPncScwTid3YWbMwzZggkbQgiMtHGLNwjSwEjMDglRKUGb2HEY4gjKyszYR8FbzEjMyMTb2QUNBAmVxUCTMw1Sw8zLDojTxEGM3fVQMk0angzUvLlYOUFa5c0JKokQookXxX0cPMlchUDRw7lYhgWVvblKWYFY4z1cDk1chgUYLUmT131cCoVUqrVSQ8FYrs1XwbTXDYySx3zLPkzcEAmVSg2JCMETxr1YygCUtUWM3XSarIja3cTQSAGVUoTXtLlb4UyLQkkdH0jdxjyJG4zYMkmVy0FUFsTarg0YSE1QTUSdC81TTYESSQzZJgVY4MFS0XUMBUGbhUDbSkWLGMCVicTdhgmdxglVMoTLRM0SpcTbK4zTnUmRgkyR3fWYXMVZPolP4IUXlUTQk4FdZIWP2DTNjQkaqECRyEDUBAScS0FTQUVbYQ1aMUUbrYUPvwjbwIVV0M1cnIVLjAEdWUGMvIWcL0jSM4FSMYEUyEGNkgzRScFUFEUSn0DMVsjK2U0UYMFcDcUYvUCQOczST0DNHwTMnklbLsTUH8DMJYibAEzXLgCTgAkbRECQDsRZwwlajQmSqQGa1UDcXolYVYmZ2LVXtnVQyHSSwoVZynlaIY0MxQUYSUCcYIERiImcFEzM3EVd1XjbgYyQ1gEMZk0T27FZkU1ZtLiaL4RbAQ2SxESaCc0U3gzcyfWb4XFMEcFNloWTRkDSDgDdWomTqMkaZQkUTI2JTc1Mqf0QzoVQWkTbUk1PtrzS1LyYPk0avTTUXIiTxwTUXgEL2PWZnYUYwkUQgQFZnU1PrMVSzUGNjkVLUg0P3PWXkkFc0slRzbSZrEySyzDSBkyXmk1cOIzYggGYnY0cvzlKjUSaVITQEMkPJAmSZUGQCkyYTQCLJsjL5QDcDEjXmEDUtI0UDEFQOkjLPMGbNQiPgMkPuYiSWQCLRojQ2IGYTM1TTQDbDcGbVUETIYTL1MTXy7FTiYGYngDYLgldQ0jPycDLLU2QVc2QCA0RAkiSicTaUIiY3XmQwzzbRg0cZkEcio1LYIDUh4xYCYzawMCNO4TNUUFLEwjX4HzXhkEQMQiQnUiSxzjTSsjd4UmV1vzQZACYwnjSmo2ZwoUSDMWbLYEdSMlasUyTZQUXKQlXX0lZ3QDdhEGL0jicI0lZAcFT4sjRWA0TE0VMv8Fa3EiTsIzJlAiTWMTY2M2UIMGRwMyRHc2Z1D0MogESUsBL2LkQPMFc2kmPLg1SvjWV4AEVwg0a0MST3XDNxHGcrE1QyHCMMYVY0kCNHMWawrDdZIyQ0ACaQIkUEgkY58FbJQ2Lm4DYYEDLqolS4.SXSMyPVE2R4XEbWcSS0jGbwnEbzLiRYsBLQkjRt4xRjc1cjIiV1kCTjITNKMkXKszMtTkMvLFTSo0LqwzbzfjdjsjXOMSPsUiUXcTM0MlPwzzMFIjS3rhXroDQzcGR4L1JlkSPqIkSSgmMGsjSGcEaGQyQqUTa2bGdqYDLWEiRHU1Mro0ZsYVdvPGYxTWb5ElL4kmdtHCNJkWVIYUTTo0L0UEZnY1LLoDQWoDRxcDTWQSTZ4VdxoUbzgVLUMSa2kyQxoWdNMFMM8jTggmdEo0M3wTa2PmPFc2SqXkQ1zzYNEiZMUiV3MGZkIFcVEDbME2Zw.EYhgFS3AUNQYDZY8DduA2ZPojLWoTXqXiYSMEMAozPuoDah8lYjgEZS41ZQgVViY2M0TCaKc2S2PiVyjTNxvlbwkkUqTUMmcmcSkzUFcVRlYyaqv1ZAEja5EUUlITYi41Y24DTGYzQLYkLT8lZr41ctESVZcSPmcTYOAiS4LzbE4BMwjkSYMDZXYULLQkVpQmVqvFSFIjZ17jdHcyc3HWQ1MCU30TT0cCMkMyYTkCTgQmZIglP5IkM4bDd1YjaRszZ4cyMYASXDIUaoUyZxMWNkgGMz.ySMMVPoMkME4TTQYGLsoTVgciV2IDLDEUMPszbI4zSZMkaM0lbwbWP1f1YhMkYlElboMWN4sFTLgFNRQ2bGUFSEIFVHI2M1XzXuQiULETVA8jR58FcxkTMnIiUXwzUPUGdtMFcMEULooGZQ8lRNACRTMlYEcmT44VPBwTSmckZUEGYjgjXRkDdS4jRwDlXmgSc5kFMsAkMkcySiMCdWQmblsRQig2RTgkcvMWTTcSLHgULWQjdEYlQLklSKM0JUciSzMyR3bidzvFLwPFV2QjYJ8VNZkWPMYDbBEUa0oGL0UyM0bmZFoFVZ8lMTEiRp0lMZYkS5QjKtHEZQsVZS01avDUQ1.2ZIokKYQCR4bVclUGQqTjSzAGLz0jXwg0Zuo2SxgESpokVLYVQKsVS1YFbF4lZn81TtPGULAkX1AULCMSUzn1bEACYqLyYCMSVk8VawcSVIUjP1jzPzrzSQIiZBgSL2DiUxf1JZI2Jk4TLkgmMq4hbXc0RMQ0YxHUbIYlS4wVT1olZAoGQV8jSYQmZiYCcMYCVZwzX2fVcSoVMBgSQV0FSPMWMMUzQjwlYRkCZ2jzLs4FZQ0VPYY0U1UzXmg1XxbTcCEFQtDkcicicQUiUxPlLDklXQMlPu4FVmsDZ3L1Pyj2JyfDVA4RX5k0Rxc1Z2.0ThkTYPEkdRUzalMkUAYkT1Ila4E1a1gjYWwFLGY1LMUUU2cjRRYmaGoGdpMFY0D1MOAmXSolVOolTzQyZOglUzszSAkjaRMVUqITQjM0Q581PwjTQ4g1Z1Djb34jTuEUa0bCLoETZToTSlokYtokMXU1RhUGVGgyTpEGQrsDL3gFTOomMNAUaSYFUucmVYY2PAYkPkYFUoYUTscyZMUyLPk0JRgGTZkUYpUVQ1QjZxkzL4jUdyoEclIGZ0rzSxsjXBMjL4LldyPmZwYkSqkFbzXyPAkyRiQUbgYlTUUWP2HDcpkUYzX1ZlECcnYWQggSdwsjcQQUYt4zZGIjZH8jYLgjRAkUazzDRnMVR3YSb5cyZ3QjatDVLLgmS0YSM2HDaZc2PYciYWgzRFkTPzM2Y2DGaucETRYlUuUmS3MlMNczSlESRVsBYoMWaS4RSi4TPYQzck4TM1HjXY4FRpAmZqMkakkSS2.WNqrzYJ4TSt4TXCMSa3jUS2MDUt0Fa2nUREcVaLsTLzk1YN0jbzn0J0IkZsU2UiUjbWUzSrslMRckTt7jSIoDbqnES1E1aic0PwUlQqUmV2DCS0z1bvXmcNQiPRo1UugiLRM0cyfFTGMGNEYmXLc0MRcWXqDUZkojTLcFd001ZiMmSGkyTREzTS4lMScUbqgCLLIDdjkmL3USN3bDcUw1PIYUNyAGN1kzZq4zM2UicIkSSpQiSt3DMkE0UCQDZCk1UyHia4HFR3YkQlIVarkmUX8VPLsRYUYkdsY1T3QjT2njLCwlUv7VbtMmQikGd0TjQJUEZqwjXxMULxkSLxIVRP4RXig2PZ0VblIiK3kCbrYzQ4HiQS0Vc4MTcrASUuQDczgyTQclU3UmMugUR2YyTyTzTzj0JYoWUBACNvXiZOkUXhACTMszLQ8lLtQENCc2PBUlVqklaq3VVU41a2gUcrAGYNkzLlEWVNg1JvcDS1bVNmQTaxHFQQ4lM4QGVlEWaEEjYwAEY3jCYxcWNUkyThgUdIUyUFY0QVEFdhAkV1fSRlIyaPUyZnAWNhIFQ3MTdJkCZqkiS03DNVoVYgwlYCMiQvzVTpY0L4.0JzTyZvPUVKYlb2DmS1XiUNUWNnk2RiojMDEUZvnzM1LkK4IUP1.ia0IWLtUkR5IVUsYGcyw1bUsFZoEyQrkldKUVRV4jQMwVdLEUdJclapICSjkldGM1U4rRR4DjK3fmKBQkLLYSURkzQCMiZzgTTz4lZpAEZPkSP2IDcxjCd2blYhoVVwXUQjMjV5cjVk81PAoWVB4la47DLYMVcV8DN4fFTFQlKQ8DTQY2bqsRVtjESoIicHQ0MyP2SKozQ2XjX5gCUQsVaRUDSvcjd1.UXToVSwPjVtETbrkUMgw1UXciZwDCSq4hXCczThIEThQEN1MFd5cVRQszTzTCSEYFasUTM2D1Qi4laAclVmMCRsw1c0PzUQgUNtb0LRglLw4RbGsRU001bt.iMCEyPtIyQBYjPyA2PFwDT4cEbvXiSTUEcEIUcZoTcGoGUw4VMy.iXv7FQzXzRzjWbqPWbvTzJu4VdvkiX1PiS3gmbuojSrEiVTEESN4zPuYVZ0szShUTbycmUwojYNkTchk2SrkkXkwFYZEUVgMWQukSbyslRCgicxICYwYVUAo2MWYWaRESNFYSRi4hZ2QGMzUUbCIDYqPETgM1MxfiLpw1JlclMznWMvgVYIISbwfWN4.CdIAySEIzRLsldpokcC0TbqrVNnYVPTQCbIcjPyM1X1ACLnYCLvYTZqQCNvQTd4QUbzHjKXAEMpUVMJEDcy41aqUlS4nlZVU0QYQEZvgzP5gyZMwTcsoDUIMDTg0VXnAWbVMSMuQmaq3FN2kSZQEDVCImKzUyY1n0boEDamkyZxAmVzjUPRcTdQI0LrUUcyjUTC4xXIMVcxolZzYlZzgGboUiMQszM4TSaqISL0QmLtwzLMoGLIMjYy4VNVYWRhMGQnslds0DNtUWa2MTdNk2PvomMY4DN0bkXN8jQz.0T1QUX1nGdHITLw3hY2XSVogFYnYFNtbCcEg0c1vlVjI1R4UmRtXkVlwVMV4zTWMUPzvVLHcEdtPVRE0TN3bWR5kzRSoDLWo2L2UDcRM1QwvFNzP1UWgEZrgFbybSV4QkZ2zVRrMGVJcDRscmM04TYZIVYCgkXUMkS1LSVi8DVWcmPws1c2kFQSkVa0.WRA8TXxQGYjM0asYjQrAmbvH0JHI2ZiIDYOUyTFY2P5EWQVwVM4EyMxYzYPEjcw0DdpI1cxQGa1PGU28zSzokSksFS4PUN3k1YjMTVAImTTAmRhEjV3PWRLUDNvXDNBMmT3I2JUUTcMEDNDshaWshSLgFTQ4TSzjidkE1b2j1TQkVTzvDZUk0UyYGSpshTmQDaNQWXKkycpMVLPYySugFc0fzLiEmMm4FQlk1bsQFMOgVUtomXxPmYKc0UyUiQQEkdMgVQmMiStfCdoszZwoGQL4xUhUGNtQCLvrRbAMTPQsTcMQETzgWSSgGTmQWajwVbTASdWg0PrkzcJAkMUI1SIA2bYoVZ54lQTgEdxgVah8DZwsRMmIDRFQFZUcmT4ASXBICa0AWTG41cXMTcyQlTgEyTJoWa2EUZIkFU3olXoU1YHkGRjACTBshLLAidC0zTZ0zcAEySjIUL3D0QHUDVwMVdlASaJU0aWYyPyUWTnY1J4UCNhMjKloGdDAyYHozXgsxSjECYXk0T2zFRZwFLyTlVmoESiAmcSYWSAQzLpkibxUFSVUWcvolRyQzRIsRXxkESFAGS4LUX4TELxTmbCEUQokFZWgUatIlcYQGYyMGLywTShcjPtTlMQYmdoUUN2vDYwHmbwkGdQQjT1nlM3LGYTUVQ5UlXyMFYowjUE4VctjTXLQiQNUkROUWb2DiMlgCVx.2PZ8zX03VZQwDVZYlQQEmQTsFRqUlazLUZyQEUqXDR141QxQiRsISTTIGRicVdqIEZCQ1btbGRJEkXw3xRjYmZOI1YqI2YLkTQlcSVLM1SoYkUiwlXWACZtXzUYITStI1QwLjTDEWNwYGQwA0JRISai4DRnMkbPkyZ1DEbWYjKIQjMzTFQOgELzY0PAEUZukFYzA0R40lV4vjaFgWN0njXz4BNKAGR1DCVzUENJ4xR4PGRYsRUTITPjcTLLIWdJY0PtDCbWckauIWPQYmV3HkS1XjSLsBdMcTNwPkLXEiMA0FQxgyaxgzLRc1XkUGRxclQ2kCVOEGUv.CZ5c0MQMWaS4FTMMmbRUiMUozXTczZ2MCMOISLkkSTTgCVZgFYqkiVvT0UUgEZhYWYZkUY2MjbR4RaC81JPYTV2w1Z5IEQHUUTAYCQzXlVDkTcXUzTzXiVwTkS3YSZXs1XBM2cmUDQgYGQ44TdnszQ1gES5MWVPU2axMTNVICRTAUPtEESrcTbvH2JHEGMqoUcxEzbQsTd2TjTzcSSqfVVJczXDc0UJkDYUozcxM2LtTkL1kVL1nkbqgVYuUkLRQWbBgmMhkSMEwVXp8zbJMySY4zapEGQhEEV3wTYFAkQp4BTWMVcokzZmA2azDDMz4VUyQkc4Ujdq4BNGQjXw.ETIgUNIcER4zDYwo2RZQzT1PUZgMUV1wjVAoWZMAkKMslS5cGMwUyYRYSd3DjbRQmRWwTPTkWQPU0bHIVX0ciSukGUEwDYoUWTyPDLoAWLNgGb3PidJkkcRITP3YFZ3QWTIkyMmETQDMyMoQycCE2aDIDZ0jSX3cEY4AWdhwDbiYEQYMCUiQVRlokMXImX1gVSi8VN1QzZxLjPnAGMrkEVnQTRUsTa4X0JzkTYjI0T4UCZCMkUgQ2cCYWR2wFRq4lZXYmdqICdQACYJIURJk2MQcDLsYjVkslPnUEduojTo41X1DGNVAUThEVLFEDS2YSdBAEV18VVgcjRtgCLPMVavszSRwTQZ0jUEYEaMAiUqLVYRkCcTojUtUFSjw1TNEFMtUERSQCdsQ2M1bFQ3TEVuQ0c3DlVJYmRzYCNQg1M0QzU37lPU4FYJkkMn4zU0nWTRo0JPYFUnwDMMIVMnYSX4QiVW4RXTEjTUcFUvwjMMk1JIUES1XTR0rxRNc1MFQCQ5kmQz.GaPYWNNozUHIWS4IFY3zTdowFN1gzZFIWMwcFROIiSHQ1Yok0bsICZ0EVVn0VMMEiQVUSURQ0QvPjLDU2cNI1QGAiSoUEQkMUU0szQsclU58jaxDFR2TmdnElYpwzascUQxnzYooGUwXEc2YTVuYlL0EmLoIjVqLCbIEWRx0javc2PxzVSYMmcEQkSv4TctTjUtQGRkU0bFEEdvXlQVMGUFQDL0rVYvg0U3HmYxACarUkMpEzLw.SSMglPW8lTPEDQtgSNUkiag8FdWYUTCQlbjQVR00jTp4lMzHjTZ0lKDk0cGIGcAg0TF4zPtPzTRUTMvUSNzjUaisTMvblZrA0PH4zS1jWNw3xSWASatD2MyHycjI1cF4jPFwjLYITYjQyRHwTLTsjSDgDZA8Db4bFQgMSXx31PDsjMqUUVNokYWwVSjIURusxblYGSY4DdFwjK5MSXQgEUFUlS0L0bzA2TNsBaPM0bCY0ZtH2broDNCQVLA4RLvTybQozQugmMRgkTIsjSLQyT2YFMqEyRDs1XAMDLvP0QPgUQ1k1T2UWL3bSYVc1Q4XVLiUjMVoFQgwTbpo2b2ETXBUGTBcDYtY1bAE1aDImd2U1XxEiMlYURpQULl4DQOoVZ2gkTC4xP1DkQvnjUwkkMWcFLyQFYGI2LxIybuo1PPQVaqMUVXE1U0LEZqokdj8zLqgmKBEVLLQkQvLVU0rDLww1QWUFL1nzMGsVMIoVSpgDZ5MENpcmKl0DTwU1Zxc1UY8jcTYURgAUT0T1bWIlZV4FNC4BRn4xXXMFZ4M1ajIVdAk0RCYCMqITRswjSGITLB0TYRkjdiU1R4XCYMg0b2bzLgEmLnIScYYlX4EkLWYiZwj0aqfWQyjzJgUFdiEmLr8zXgE1M58TVqjWLQA2LqjTUy7zTm4hbromZN4xQWYCcvMzLTUmTtrVPNoDRXQFc3UGRRUlYXUjTt4xLBMTdrYUdI4lKTQ2Ms4RYkkVcm0zJCMFcm4FQAElPkQ2ZHkzSVkma4rhcA81MKcTdJYVSVoUPF8TXAgDQw0FN1PUaMshP1zTPEsldPkjZEMkVuckbTYDMVEkMYUybYgiXxojYNQDZvEDdBQVa4DzPDYSQwoEZoMUNgYzb4rlRyjUVKkVUYEmXHM0UWQSTEQTRvvjSxklaB8FRgcmPgsxTE4BU2IDRpEGak8FaLkUTXQmMwT1cKMjMSMWTK41JiwTSxL0Tqg2cW0TcjAyYkQDN2bGaVMEQwflbQ8DbvsDN3U2YwIFZ3jyZ2cUP2nUMmcjXkM0a3UVYTgGYgUjayLUbXMEcV0VVZwjbEsDZ0wVLYYUMvMVQ0sRNXI1P3HDNTgiM1gFViAmYv8lSX0FTQM1XvDUMMY1c1XmbMMUUKAmQ0YVLgs1XqbETvfkPzbzM14TbVIWVwvzaRwjM3f1ZtHiXmkzPIUiRGgVUvoWXKIzYgokKwvFV5IGaQEUdwLTPmESVsMyUnY0PnsxbOozZHkjKW8jUkcmXRkEclEiT3QiZMcGSNIzbis1J1kSYnkyXy0jbt8DViIVVrQySQEDdTYVaPEkYrglZ2XTNkQDd2sRRSQCRmo0XjczRHQiZZQkavbSP3wDZKETV3UCQPw1PtHVZ1YGb1vVYDIERsgzaHo1cw4jUm0jMqvjXwcGc0XUbyASTt4VRDkFLsc0JxEzLZUGNNUDMtgTT1IERHEVbP41csQUbiYFLiozTkYlawLVSoYiXqoWcAgzLuo1bqojSQU0bhMDZLkjXFcjdwgjPJclQtYyRFg1QGgmYtEGM4IzQ0IzYvAGN3AULhMWd1giMwHWVxoFQwXUMtcjL0QWan0jdqQTRwkjMxbSVD4lTZclMMUUMq.2LyfCQRgDLhciQT8FdtjVcioVYvU0R1nVUqT1R1HVY2EmLGEiZE8TLpkkLrMVYukWLU0FbBQSMsYiQGgWYEMCMIo2PMkGZLQiP2YFS0XUSlwzZ2HULDUmKWQ1Uig2bvAmL4ICbDMmd0MWcxMkM0HldZcmYVISQpM2UGszbvoEL2fWY5IyRIwlSM4TZLkWZMo1ZtEUbBIVcKUTVrg0RO8lZEQmb28zPzHlLH8zMWc2MiYyUtklLqolQWEVdJ8TXkcFLqY2cEglPoEEa4Umb0kWNtQmayM0UxEjcVICN401arYlX18jXYkkQFMUYUETPFIES0MiRFESYvPzcFoGMLQ0cqLUL3k0Y3PyM3bCSuQ0QEk1SkoFSxQTSqLjd0X1ZyYTRl0DVTEVXAcmXZQkZvECZtQmZ2jibLI0TYI2QKQlYHQiLw0VcqXDML01JQYWNFoDaqrDVZYGdXoGL43la2bWPy7zXNE2SFISRpcCZSQyMrAUaHsDT0QGbRg1XucicFA0R2LGSGQ1PWo2Ul8Fa4ckSKYzcJgkQUYCTzbTZ04lZWUUboImKBkCLUgGMAYjT2IzRJE1a1TGZmIjcsgFLvQSZIETUMglP0PlM4zlSQMmLm4hStHzaiYTS2AGNXImTHEjQCkTTqoFLm4VY3PGcBkSc3b0MtfUbikyMmkEbpcWNsEmaHoGTqbmY4YibmAyU3EiUzg2SB41c3YjQ1LmP4bUQsUSMj0TcWkSZXokSIEFSA0lS2ckR1EmYKQySq7zZQ8VTOw1QJYWSpYUV1.iaRQGY4XWXUUmd1fSP0gURDEEds4DYSM0Z2TCNzgVNzw1Sv3RR5ITcHgkZWAkc0wTNBISTWcCUwcjc04xU3YTVzkjaRI0JysTa2cFYEsRYTEiMVgCcOcFNZYSdzTFQxgSVCIUQvrRPLEmPQgUdjQTTKETL4YkMvwjY5wFSx.mK00VZ33xUqoEQvYCLWAiSGMlTFIFVDkUPEwzPgYDSp4TdzLzU2gCZVgWXTgiLWomTvXlcpkiXzMmSmMDZC4lV1DVY2cWXDEiLuoFcXkSaycWUKk1XPckTOcFVEEzRlQ2aq7FMYgWaPI1YOUVcmYTcyEzbD4BLgkSTL0zLsojM23RSUgGLqMzT4nFVwQ2XxUmXvkjVvbyMjU0SYYlYzrzcSQla4YSN4PmMQM1Zn4jZxjkKqkjYokCc1MFbG4BZ33xJjEDUv7Tdos1Q4LDcB4FRkIkL3nUY4b0L2jmP14TRZIGQpYTMsQGRxQmL4ESNjsDUwXkSBA2Xy.WSWQ1arojPjMlaAMWPJcES3YEbPICTiEkU03hYyb0SLs1YSc2cVAGNTQCcOQ2JWgVMAs1b1T0JxUia2ElKt0lSzEWRQo2chIEbPQDY2cWRTAWQDYjSUAmaIkVVpACNvPUTmM0aZQFS1fGatHUQGAiVV0TUPM0QrYmKAoFSybFR33xR1DSQUMFQRMkd3oWNwQVTWIVLHolUtDUVzc2MlMyb4PkXgwzULoFZKQ0YNMSPq4zS1vTXXYiPpklPVsFcUQmMwAkdMElK4cUXK4xPTg1Ry.mSogUXJYDZG8VQWolKvckQFc0XsYCUSYDUIMFZTEDM33xbwjlTrYEQvc1bOISahIGaoMDVqjzXP0VLOUzTkcUSkcTXnMWNUEURNAGUiQUQsQWSwnFSGMkRtrjRUMlSWk2TyDjLtISNVgVcWE0LoQlb14lUpkmSqfTXlIlVEMEQ3LlajYDYZAESmAGatYCbVoFUUUWLRElZVUGV3glS4szaLEkcy31P5gFNpkjbvrFbDYCVSYCSpEycAA0YSgWbRE0a3kyQAQVRGMWXugmQioUNvfScSoDMT4zbR8lTPokVCQVbq81L0TWSw4lYO8VQyTEb3sDbRsVNoEkKA8lVxAkUmc2LNEWaIMEQC0VbJ4xLwrRRKQUbqDmc3sBZlckcgMySJUlMDsxSMoTRvXiaiYyY2T0YhozTvQkdIc0c0zzT1TDVi8jUGsVMzfjT0HzPHMVQMQDQukFQxYDQ2rRMUMiMysFMNIVcpQVN0shPRUEaSsDavkDS2b2TIEVaEIia3.GVtbiYQUUUBgVSI0Fbx7DNFk1avjFczfSVG4BdLw1Z4ciaxMWY5QFbgwjVPsBNUUDQIUETKgGdYsVU2DUSnwlb4AUaUsRYJ4BdE4jdo4hMWgTcMUyTtoFa2EFYmMDboIyUrEiRmcWVDkjSII2Ly4BMGoUdpozMsgFTmwDSvPlaMI1P5cUVHc2PtPDSHM2X2MGQ2c0XBoWcDgVZloTSTEGLUYDRvHSXikmYyPFNUgkQOgEUAolLtomZvAkSVI0POYVLWszbMY2bQcUPN0Tc17la0sxMYoGcYsjbPcFZTkGSpcTStzTN0EiQJ4DUH4BdwY1cjQmQVkTSMQUbWUSUqnWdyvDTGEDMNEUTiQWTOkkVUMGNzDWUNMFTDICVNcmPWMWcvPiQAkjLiwldzIWRAYkVKYjRIACVhsxR4QmYxnFMqw1XrkGVjE2L4XiTzkkLtn0YuASVwPUcwYmb0TCbSgSMzQlKyzFU1bEV0cSQugWSOkUL4AGbXEGa5cjawTiRLASbIElYzEmUAckd3MCMTQCSqQTbywDNwomMRQUduESa4zlbwblPFQVa0gEYvMkZVgiP44lUxY0JOQFRvzFYtjzJTIldA4hRKYlbv0DTvf0cFsBQAQFaMITawgiUkU0b2.WT0IFQ4rDQZoEYrYiYpgUQsMCMY4xR001SW4xQmozbzkVYmQTM5AEcOIVPT0lYg8zaEUDRsQ0agQyXLY0JzP1L17lXHITVq4DNtbjZ2QEZyUkLhckQYQiQk8zUD0FMmk1X4PTNBQSPzAEY0YScpA0URETREYkbugGR1MEUEA0cjYyUnQDYu0VQLc2LT4TbnQyMkAGbNoFU1LCT2ImQqEmdScTYSUzUqTDMnYzaOQ2UxnFdoEGck4TRwQCNQomM4Qzc3P2PGcWLGoESUQmL3LTQ1bFdk81SMk0LYEGa2XTNBcTMoUzQyUlTwbVLXA0UzIiUL4FRDoWNnYWaX8zLq4zbM8DUyXiLPsxL4LDUU4FRCoDTXYSPxLjX3HlawgUdVoTN0rxUUIWXuwTYrQmYVYlc5U2Q0DkagsxLBs1SMokUxnkMhQ0S2YmYl8jXyjEYzjlSk4xQWEyMAQkMAsRatgDNxQ0SnYkPscFTO4Rby41JIIjPJk2JyTiXvbTY24lM2DENQU1X0n2Pic2PikSMRgVLNMmLN8FLhkVR2cVTEcSP1fFSNIEMSgjYE0jYIISR4DEdrQCTUkkM0c0TyD0LrMzTr4zYOECRvMDS04DU4nGL03VS4QUTPEiXPgVNK4lT5EUQzL1YWMSc4UDbWMiMw31T4PVXoczcw3BTA4jXxcEdDwTZr4FcGoVZUgmUIQVdRYlSgMTQPkDU54xURI0UOIGa0XGYEIDN4UDTv.UTyDzaiwjS4czJqzDak0TaHI1bAAWTBICYTMERxcTcZACYzcCd4MGaFEWaNo2PMcCZgEkKFIDU2shSU81XmYlMWcWNyEmLOU1aswzYHUVNXUCcrokQpMldHYGMHs1aiIyJIgCRqrTMLcCN2QEQyD1YqgUUDg1P4ckVMckYH0TTrAWLH4jbvP1TFI0S1HWNvk0RrMSUNIyXNIUP00Da5kFaVgjLvLWPWshTVc1MEEiZuQGV0EURq3TdFcFbRokUxIFSksDVLwjPkICLQIyawb1RtnUXDUGLE4hdWYkXgc0YnsRaGcmbqPCM2bCYwoVMC4BVUIFcUkmX4QiSyYVNtX1Ysc1XGYka4oER3MUN4rRNtbVP4kDcugmbhUzM0fkaqEELSwVbZgyR2sjZsgGcwQzXPQiYPMERwjDVucCQ2TUM3IURnIDLCclMwLkVKIlPqASL0DUSRMCYXoWavYSPHoVdnUCYTEmbMkjcTQTYtIDYJkzXlslbhc1cv3zYyDjXswTa1YEaJM2XkcGZXsBdHcVVEYWUxrRbGczXzciPyQCTVI1a58FLF0jUsICYtcVbtgmPQsVVxAmPwDibZQ0JvjSS3EySZgFcPo2RCIFcPY2LkMEa2PiTyE0PyEiPogiYgYWVnEWYIoUU4PEdwoTUhQEUD4hQJQTLkcCbzkyTt4layQid2XyQUUzXroGcvrDYLUDTjwjKVY0PEgTPlUlLlQiPLQDZi8DbuM0XxfTM2blYjojPIkyRwkCNvnlRRc0Ry0TMt8lZ3YEcWkiZN4DUygmM5MzbiMzUtEDYF4zcOsxawzTR4QyJiAkdlYEaKIlLyQybmIkUioFMzgSZ34FdpAGLZIzPocSMtUjTlcGYVUlLEoESqfiX3MjK2M0QyYVbBUjLLsFSFYVVnMkaskUTWwTSQgTSZMSPK4RQmMCMxfmMnUlLIISYJMDVxc0RhA0a3EDRlEVbuM0cskWdjc1XSYlKtbVYPUmS3AiV3sDTMUCL471Z2bScZAmXBMVU3EWSC8lXxbycrgELsETXpkmQ0TEUogmMKMTVtDEdBAUMMUyMy7FLyQWROoVM0PWbAoUQ0DldzcSX5ola0ITPxIiT2oTXWszJLoVROkCSMM1ZwjzZksTXncGLMwFV5gFMVImKzshQMcyXxrBURczZ0TDahElL2o0XYk2UzE1ZsUCV4fTVR4VVXIESw.CczrVdqHFTv41PiYDdMUSMo4hV2AiagQVc5UCLEgEY5sVSgEFajUTQuc0S2PmMZEGQwjjPtfiRyMyMYEWYqXjKrM2LSMVUjYUdXM2XzrRX2bGUgUlcQEzQGEmQyTlbOQTS3nlYynUNxbjTwgmdzEEaPsRRnMTN1TCLqbSUUMVQEcDZQQlXw0VNqY0bWYFSIQDNuMidoQjXig2Uw7DLvLWQqX1Zs4TSW8TPjUVLHECQxfERxnkdrEyR4sRLuMSQUYCYrYSM3vVYoI1YyQ1bVQkYNwlSiISVRUUR0vjUMU2Zw3RXQ8DSoUTRvDVLvLjMIkVdvYDUp8jRFc2apIVNkMFYWk2RuYCdC4hMzPkL4rzUxE0TvQDQ3TzJXU1TybVUJEDUzLCSEolbjQkU3gUT3oTR3MSZIYyblojdUk2aoY1ZPUCaqUkKRYmbXIjRvshbpgyXFgEY4n2LQsBVScWYtoDQRESQXgybEU1MxgSVsMTZSkCNtjkYQg1bvPTN2gmQREzSDgkcxDEZmsTYCsDNs4Tag4DU4TmL3HEbqP2T3fULHQiK3.EV4ACLvomM2USVXUUd5YzcBU1JDglPwrhM2fGZ2QVVIo1J47FV54lVwIyMwkVSXoDZXoTQ0kiXvIURTM1XqgVbIokMN8VdgUFTSgkKzcDQQkCM5ISTysDbNwVPLolMMY2Yp4xJ3X0JPciTpYUY4sVYrQGcOECNSYEaC0FMynjdj4RNtLCbqIlREIkbIkUQMgGTu4FZvTDcikiUXcUUQwjZycEdwcUc0LSYSAmUFA0axXmVAQkKzY0R5wTVHQCY1jEbwEzaZUzczkkULYiR33xJIEjYqs1SFElcF8jSEIEQTUmZAQGQpETchcSNwjGatcjcPE2PVQDcwPTUDY0YLUEcxA0TyshQwLWSVkzT1HDQYk2XF0jXDsjYwf1MRIid0ICYNgGNkokLzXUUKAkSKAmQXMlYUciVJUEZ2fWcocFaBEVaDkDMJszR1fmQtIVYOYETDshUtbUZYYGUTYzYiozcLEyXhMzUYYTQLUmdAMjKTIkbZU1ZxHzRK8FLl8FN4YVV2H0Q3HWQK81QT8lavnjcOEWbpIkSyrDcYQVNGASXNQkTEs1RXIyTvrxXgY1X1UVQ3fCZIMiX4rVQCYER2jkLJkETMwVLzLiVHwTPmkVLLszRAE1ZyDyXgIiZRgySycmUqEiLoUUTvYSQWkFZJ0jMmYTcmUCZYMzQvI0RSkmQtj2JUciPBgVTmcFa0j0aIEWdlYUNmEjXZcjK4gmYVQWcuAUPqTDV4H0cvY0JBckKSoGZEUDdOQSTYk2P3QjLRUiSQgWMMQSPTcVUR8TUZMyPXciQ5QER50zR0j1b3zlSnESVTUDbhUVUjE0PtfzUwXDYKgCLxQVcqYDbXESPuQEMznlVtfiSO01JSwlbUAmdukDRtEzLWUCcwHzSlclU3kkRCQ2XNszJKQ2QI4jZy3TLkU2R1X0PnAUUloEawD1bAQTMwYWNt.ka0EFcRUEbBoWXlElLMslTFgSc0cTVS0jUlUmTxbUQlwza17VaIQSQpIUMBIDM4oWVWEDVHcWXt3xM2ESaTwFNoAWSPISVs4Vc0QSS4jUYS0zY1PEc2TyL1bmbnwDM3Q0S1rTQvDTQgUSZ4cjXKQzR4jGSxkUX1sBRoAGakklTSYmRwcVPRYSPycFLFI1b5ASQvEDUhQmcFYCQyXGUzz1PE8TPIMDdGYEQuUiL4PkblkUZH8jYSI2RS4BZPkjM3TFaOQiRNIVcT4xRZkyQQoUdzgTUiQFSB8VQo4TXS8FLykVYDwFL281YWQ2RSE2LsAUby.iLvPmY2fWNEIjcpAyYyIGLDIiaXQFNIYGTiYVSpwlLwEzTucSX2gVNIoTM2n0RioWTIkyZBQiMXc0TowzLHEUT1TUThQSUGgiYZUUQBQja4.UZ27lVFEyYEEiXzYjV3HmP3DFTZ4jcDglRAwjcIsRZkMVbBQVPqIVLTUDSJQDQtL0auEyL3bGU3rlbkckTLYEb0.WNi4BZkgUXssFdxnjZOQjPzkSQukSNnQUX2PTRVEmP4zDT1bUNWcCaWIjchYCZIYkPvDyPsE1cGcEZCMUXvokQ1cFajcVNCQTdNkSPRwDYO8TaMcSR1ckQyM0XEkFRj4hTU8jRhk1LAg0aQIUZ1XWPlM2Z3gEU3HCNzIVZZE1Q5MTbHE1cMUWaJEWZvrhXXkldTYCZxElaoUDNt8zU4gUTJM2a3EkdOIlRvfTaZEFZpYUPYMER4MzZEUTUi8lT1shLHEEZskCdz0TUR0VPmgjQqrTLIECMjc2ayQWLEwDYDQka5YzJEUWcqwTVz8VVKQlRuQTVwLTcjo1PYUiPWoFT4EiRVQDSqUkRFI2J0UTVRYTZSEGTVYVYXcVUsMTMlQFZWglbwTjM2klQKQkawXULMMUbWglaCUWSNUERyIkSsc0XsElby3FY4jkSyPCRiEGS1UlSGkiVlAyZrgWZyj1aIgzProGd1czM3LzZTgjbvTyaRwTcWIVSUojc50lUWIiZyc1PwMGVy.0PNYVL4LzR1DEY1XUQLoTR1AGRqAkV4HmK4QGMMIjQ4kUaFcVYT4xSPgzR0IWQ5EGLqEDZxHUMzLjdMcDQoICcZAUa14RM2LmL0IkYKkicyjSVIEVL2UUVqoDc48FNAsFT33RX4E1LHoDSCAyJHM1PBcSMxolKkEVUm01LtTmLOUCN5glTvojZHQCQ3LWRQYSP4UGdRMGQVcVUicSPxMUXNIUQyUmYwIVXMszT1byQpUSM3PmQr8jQrICViYWSD8FN4QCcHIyazjjUvIzbBEkbzEiQYQ2PiYWRD8lRCYCM3fDbzMSMkYUMZQTRxIFNGczXUUUctnmMuAmTvDEQgsjcMwlRJU1cZ0jMAoFVxbiTznTLyQVLlg0M0fmXTcjQqMjUukTdicFZwP0LhIlZ0QERUUiXgcFVUclRtLGMIwzcqrxX50FVlkzSFs1cKQmd0M0bkEDVAYTcVckXyQjM2k1T4IjLDE2c3fDTzYjTQkjQ3.WNoE0ZGEybgQUTo4BZyTDYDgGVqrxPtb1R27zcPIGLBQ1bRQVSEolL1gjPAIVPFIGQ2IFdEkFTlA0UkoEc3klLUwFRXoVcYUCRhQEYYUEUzcVbOkiX2.UbxjELZkiLRwldyPlMhISd4DmT0f1aNAGMnMTcVgCchYTXsoUVqHFNzjlU3PjX30jQFEkVtYFUT0DT3DlQLgkVNgTdUYjcjUiPXETZggjUz7TbJITRAYEMwHSb4DTLQEGQkEWZp0lVyHVZqUWX10VPxjmYFYybHgDTWc0MTkzSRkyTGAmXvLTUKIWL3HWXnwTMxHGQAoUd0QSbUIzSpUWXNU2cVQ1cs8zMCc1arcWVK4xU2YFbgYDdvIkTiAWNi0VLBcGa3MzPvfULKYyaqbTbpAyJIUTT3fSUSoWTS4xRoIzJNIVZCwFd1sFL0kmVTgURVg2SQAUNUcySvXjKxkkXuojKBU0LwTVSwfDRm4RLqHTMGY0RkMiVOU1J441XXAmYHshKJsxZKsFVJglZXM1cy4xascUQKokblcSbXYVXDIWVwHTQXc2PCEFZGgyar4DcJYyZqHGMB4FcPA0RoozP04lbvk0ZCg2QSkVRv8DLJEiQwDCTm4zP4jyJ4IzRRAEa2U1SWIkSvfiSVQEVIsDLkgESZYSSgo1cLUFQtbWQz4TNjwDYngWSIsjQC4FcqQkMiACV3sBZ3TkPhMSaXojUJk0TRMkVtHVaE0VQFIlc1olLiAkaBEDTUMmU30DVYQlYSgFSMwDaSEDcXMldvPCVscDQro0TAcUboczYmo0JwUCc0QFZx3xZCYzayslPgkid2blLUElbPo2amgjLgAWNiwTdrwVY1oVLCU2YNsRSV4FMkQUUKIiazYkbxfzRkMWNtbidvMEMGEmMzslc3UiPN0TXhUjYwQVSnI2atzlcoQCMRgzM4fEMq4Tc0UjUscWMSoGMjkDdIciZAQSaLkyT2gETCk1czg1bAQ2LU41QIQTdzXkYJs1RkcDQq0VYMwTPAMjK0XyQt7zUyQSNDoUL2bVP0oGausBSiIlapokTAcTPw0jRgYjUoY0Mq7lc2klVqjmP24DVAwVcogyXU8VMpcGcz4VVUUlXkU2YtT2a1w1XWgFL0zFSgcETTIEcCklX5QyaLcTS1oDd03RQHQSb2fURGUDT1L0Ys4TShkUL1L1MIMzRGUWdT81QqXEQJIlZSkEQzEFaiQjKtH1YvT0P4nzb2fTTsA2RCYSVGcCQh0zXA8TNPAid4DFdRkTQoIiXyQ1cn0Fd3fSSKckPSYSXKw1TwU0Jj0VPvsxY2HyRC8DMroEdpsBcBwDdmo1UqIlSWUUL1UzcWojPD8TTpMjXQYlSnkSMIYyXEIiK5Y1Th4FRhQ0c0L0SH81Uy4BNLAkPtwzQjYyX4MVbrgkYpkkVZEVLPQCSPQidQElU3T0YF0zQwY1UF0jPFEkLjUmc2XTMlAGcvQGLmolKYQVd2nTTKElSZISUtjGdEQ1USgEZnYURkgUdMIlKw01ZHQ2bU8zL4M0YJITM4gmdXQTXHkCbR4jTJ8zQ4HWdx3RY2cGNQkTcSclXHAmbxQkbugUQAYCczDVUWUTPlMmZo4zMVU1XSciaznGSVYVX0zzPkoWLOgjKYY2LOIyS4YFZjEUdvjzUrAmSz0Va3kFdXwDa1njLkYTQkoVPoIzLv3TXJwzJosBZmEVd3TTRLYiRMEDZ1EkbIwDaDU0cDQjcGY0QpQiUm4lRIkENlEWNRQEVNYGN2HjMnMVV4fjQYEDdq0DYWIibTgWcKkCUK8TS50jQD4hM0YlK24lMMI2cy7lUGMCYq0VR4j0aDkSL2MCaVY2RnA2aW0VcMszSk8lQ2QkTq.SNnQmdBoFQTkSQUc2TpMTMrwlMlciUyjzcrEkL3fiR2X1M0nlcNEVbOgUVxEEZ3UjX2PjKVAGLhUzYUoGdzkjLKg2aBU0JmgTQrEVRkEWTyLyT5YkUMshLVEkPV8Faq0TRBwjZxDFUyHWSPgETgkCM1fWLIA0MDYEQhg1TqbSU2Ilbtrjc4bFZEEzTzvTYTgVZvvFRY4xZmsBdY0zXOcGU0zVbUUyMHAkaoYkdlg1TPISQNEUP1UFYtflPyDiXqf1J0cWZ0MSUzTmRXEUTjQlRGgyJqwlZqISbAUSZBYVZpszcQ8TbBokKMkza4bFLuYVYysDRro1ZyMjMkEVU18TV4f0URc2UXE2bCMkPXsTVzrFNxbUQxYSavAkaz41LmQkXRMjMyg0S2PDRIMEd2HERNkTLTMGM3cSZ3UCM0fmRzPmKsMkXE4BQ4ASYZQSTSo1JWYTMV8jTnMlKZQELzXSRUAiMhglRtIlLBsxMJUSYFoGb07FVwbSLu0FM2XSSGACbhYFa0wjRkEzQxkDQAoDZ1sRYKUiSXUlMy7jYBUUPkomYmclcIcUUYU0Q3TGbK4RSg8jKYYkSqLzXQMjXK41MmcCSmEVdNg0U3EkQxcDT1gWYAMSXUcDUSEmSX4TU3jWQzTkTP4hUoE2JxX0MxDSdkACSO8DVvY1cBIlVDIFc5U1RtklYv31J5UVRlAiYvnkZrokKxHmZqElXKIlc2gSVV0zJybFMokiMxgELh0jds0DbUoTQ2c2YKsFNm8VaN8FM4n1QokWcUgzPBgSNrYSayYGYBgkdhQDaynEclIlZSMDUtkDNLwTUvDkbAU1ZuYzQ0TDQWYiUCY2SNQmdCkSc4IUYNEGTtD2chASaSETbsEzS3I2YAcTQQUlYqLyZVAyMtjVLkQCY4.kVhUibtAkP4MUQBsVPxHyPv.iZz7DNsMlYRg2Ln4FcJ4DZRMES0f1XvEyTJUGbLMDaLkFckQVXnQjXCMTaxjCYlAiR3UkXB8TT2HWd2cFUA8DaR4xcNYjLW8TZ1.UcIQjLYwFNAc1RCgSdrACRVgDdG4xYigWNBc0PvDWMYshQl8TQJ4VQnw1UMQSZsoDLVIWStHjV4HVYlICTXkiP2MWcvM1ZvckXLQkboETMxXFahU1JkcFTIEWcMASPZokKNU1R4Q1JDwVd0cDZTMzJrkVXZcVUssxPxYDciIlYhomRXcSTVQlYOgySAUFdxgzMRQjXBQTQyX2cXMEUC0jQ0HzLrciXpMULqckX5IWRVQVSqLVZHgETMc0MvDSUOcWUJIzLPwTcIUVNz7lSscTTsUEUEEjbvY2a5QSPUMmSjQESusldZgWcFkEMI0VQFMGMREFVPsDTYgUTnoDQzLzM1DDaF0TSxPlQpckStPVLqbmMPICQ03zJHUlUroVXwHCSSUiVu81P14TRxkSQ5sTVtPlTXgVcUYlcGM0YS0lLT8FVEI2SxfTNRMVYvLzQIY2MF0VdpYiapkmQWcETnckKzDkXrEyU5wFMzjVcpEDc0ASMKwTV0DSRSAmTiomYgcySOcGatbSUsoVTU01YDo1TOoVazcSPicFRIQzPgAkPtsTa2cSQJYDMXEDZYYCYlcVc4Dzau8zYwTiRA4RQuM2X1oWP3fWR0UEYgYjczPjP2nFNPIGZXoVXjcDN1HFRRwlYyXycYo2J2XCU0HVUUI1b5EmT2ImRMs1QVYUSLojZoYiVx7jRYoTXXk0aZcSYkIWXgIVU44xJMkDRwLER0TzJJ4DQjEEMFM2TKQ2MrcldD0DcKMFQtfSQxDFSLUEa3gmZVkmYxDTUwrxbUAkR5ciK4fmRKQVPJcici8jSY8FZqkmPTIDUKcGSoMUS14TcNIDRgQldVIzawb2TWEFRuk0amo2T58VXIMybFM1RmcVSXAWZRoDbB8zc0U2MxLlawcjTzsVNjk1PTMWVYAkUZA2JmIGc0bUPGYDayAmKNwFTQEVTmgmavTUb1rjZVUWQE4jVE41PzczbnYicLgjREUmaqbmaTIzLyUVZ1UjLLEkR1HVcqDETnEiYhgiY0o0XxDWSvnlVPszUuQVLhIVcksRTmkVcIMGdBgEVHkWTSUFSiMlQugEdSIEdpclSzsjdCIFMTclLzc1Tx7VZB41bk41LgMVZpUmSqHUThcVYAQEQrgWLvnlP3s1J30TdLIjbsgmMOsVVNcFMqrRZIIiLmIlcxXjUiMiTwnzMjUVP0I0Y03Rd0omQYgCNSsDTj0jSyEiZIolapMyUV4FYoozT3kSLPM2RNc2cVI2Ls81av7jRKMCMBI2MG0VbXQSXtslXgYSSA8VUzX0QXcyJMcGdXAkK1LibhQzMtXkUnY2MCsFTk0zJuQzUqfFVTYDM4TEcxPychI1brUVT0U1UWgzXNIDRMsRdm4TdxPkbkEkUgkFThkzP4kWdlIGZUo0J0QUbuIVPyI2ZpoUS0AyZXo2ahICRFEySJo0Pt0TL4wzMFcjc2QEYDYDNZkkLGAWLKIEU3z1bEMCMRk0at7VVW4FZqslcY8jLU0TTB0jcAcSLV0TNFMCMDsVb0X0QzTmb4LURtQVTu0zX4gld0s1QNQycl8zXYYzTwHVb2.USU4jbV4hQ0bjctTVPzg2Sy3zbq3lRLYyXxkjY3DVXUY0LMQFVOYiTRETTGgCUGQFRso1P1fUSvjVNW8DM0DVcBsFZUoER4klUwbWclEGUoQlPgYmX1jlZYElPkYGcRIUMx0DUwMDZC4TQJwjP4EzXMcVQ2nlVWUUQJgya2zjYqnGSRIkSzIFQXUiKZASYvUFMgYTLzk1RyLWcxgmPx.2QwwlRUISNHolUNACavDFcpcFbXM2QEsRLYgGUx7zbyPWUgcjRqLFM0Mybzbkdk0lRJAEYqrzYKUmcCEyQK4zLnQDNKkiRAU2MkYjX2fGLDoDRz7VdqUFNS4jaxM0TNwjcBQWP0I1PSI2TokGNSUmL0X2T3DlcB8Tc0TWZxPicsE0UtzjRPEickMCUhkVRR8VZRw1ayn1QrsVMRQWUqozPxnVYGUEZxIDQYETLEglPyXkdqUUU0DmS28zLxXCdLkmVtAWXlUESqHDVlgjY3f2aRkicYkVSngCQM8lYvE1QEolLwnFTlk0Q5kFMFgTRXYENBU2TvzVdwgTNq7jQVMEUYYkYkQ2XgckSzUmLHcybikWZPc0JgQmYtAidJc2MnIiMFMiXpcmRocFaUIWP2QSQjkUTSASb0ImQ3UyXCIzQVAiZgg2aGQ0QEg0MGQFahQWXy7VPG0lUybiXpAWSGojcUcUY0g0Y4ASczTSYqEVdXcFQ0g2aXQlPhszRZQkKxMGUhYSd1bSZGshcmQmMqT0J3XUU1PWNKsBZtTTXqPUVtgFVhEDMTMWMrg2RsgkP5cVYCkzbXIkcAslbA0zZWMWTnIVbXMmdgQmbTkjRyDEctvzSzgWSMY0QigiSv31PWEGNXsTPkg0bhUyYHElPLIld4AEcYkTbtPTNxk2ZlAUVWE1JAUFa2UVVGUTZRYidpYWV0njT2kkQUshZw7VYSECSyjiYFYkMPMjSZkUSQISMi8FdPglKOIWaJUyTuoUYvEFducicyrhSxHCRJYTQTQVR1Q2POUzLzfUVWQUMn0zbyXTZBcDURIWXrYmYukGS3jzUTUiZtPTYokTRYklVlgGdpISTzjUMW4hRR4hZig0RZwTQmcUYSYWa2ACaHISSzkjdh4BcgUVNwEjbD0jU1DEZ0rjd5UEQwAWcSkTMYgGLDc1LUkVREQDQyfyP0LjZ3z1TRIVNwQ2Pwn2XFwTcjQSS2wzRYM2XzfmRSYTVVcFSV4VcucWRqQlYRUGb1Q1ZKQCaUolQ4M1UJQTPVgFNwg0RDgCdHc1a0.kUy.UctgiVvfCMyYSUSo0X3gERmwjK44jQ1zlVjQlVGsTVJUGTr0zTT0Dc1QEYtUSLnQyb2oUSDQ0PsUmRQYma0fUP3EFVmYUSiIyMyUkQ3nFcrEyYxTVT0wVNFslaZETYnYyRXIiSsgSNhcmd5MTX44RXKQWZqXkbiUSSlIyYFIkXis1YCkSXUsTVRQDV2HyZpIjRIcjSjEGbSgzbqYEV2YCM1D0TXcUSGQWaBoDNocESYc0Rtkjb2DzZwbENT8TPqvzSQEjQU4jKsMiPRslUvL2YrUzQyLCLWgTSKkVcBACVlclZLg1chMUXnsVSpczLTMUP3MiKCYFYxgDMAU0aX81XxrFczEFcA4lTrYzarUUcioVSxAWcu4BUMYUaKEkbNcFNoYkQnYELz8VXX4xS2TkPhoFMLQDZBcWdFgzRIsRbwfiTVQEL3ECLx71TqL1J24hXqDVUT81SnQldJkFZY0laykDQFQCakMkRvTUNoQUcxAURO8DSHcjPwwTYnkldKwTbyLULqcjZYU2MVEUSKACL1E1STIWQ1YUYngSRYYlcSAEdqr1QooWPLU0Z5MjKvkkTuQ0aYkCZzQlUHg2Z0MjLxcEa5omMLMDc0AEdQEiUvDDatLyUUYDZ5kUTmokLyfEamUVdV4xb2zjV0vVR14VaYQjah4jT3k2UScyLIwzUqzVNtIja4wjQU4jMFIia2rTS4QkVmkWcnUCRRM0TGc1YSQlZ4PDatDVL1YSYyUkLHQSdHoTVkwzJuMTaKE0ZMkDd3TFdUIzLwwDVxUDdM0FRtXCZRMFStLlY1cmZmkUc1vFRggkSZUWcUsVMEYyTBsxYpY1YTEmKJsxSIAmcUYFUyL2YtgGdCMGZzkWTvPyUzjzM2IyRsUzYLklZxHzPpwzb0TUSNszTOI1a0DiTs0zXDshcsolMBYFTrwFbZQGa5kVdiMkTLkzR3cGTyPiPzgWZT8zay.yTyj2SBQiUZoFQFk1J2PlS5IEdyUUPMMEMrUWUI4FblkiMPkGRx0zZkcTbyIya3QCUtEVThYULiMSdColPB4VcMUFQ1fkUtPVPHkyQiw1a3LERvMkcyb0MFIjMhEjLykVNUIkXwUTdCQ0aDEGV2DGUiw1Z4f2LXwVU47DbyTlYKISdRMFSnQlQycFdIMWRkEzQXM1LjcCU1ISN0nkcu0jMKcCLtIkRIwlY4kzMisjdFcDYrYzaCkULmgFcnEmTToERV4lbZwjYtEVUvTzL1I0Jvg2J5UFL1TSdVwlS3g2PKgjMB0zJqMCavEWN0TTb0wDQynTcFMCT3bFZoE1LwfEagcmKk4zTscFZMA0Q0g0Sh8TdUoDdzEDRWUidRsjLgIWcyT2SHwjRtkEaYsxLPEkauIyL4HCYAkzP0wlVvo1Qqgya1MWaFkmQ1kzTyI2bnASLS41Pww1JLQSd5ImYKQTaTsDSzQTZAE1aY8jVNQTQBYCckMFNDsFczAWMvD2aYYmYPsDSwMWZOUVRxkEUCIFQvsBVkszbz7lZ1cCMv8VbwQmPSMTMBUSatbVRxMWcishXKMWRXY0aSkyQQsVNFsjPOQGMvclQ0YDRoc2YFQyZ2XmaPgFN0D0UPs1Ttb1S0o1ZxTGULwlKsQyRxLTRGkFaTkSZvfDNtcCcPEFZ1sjR0wlQ3ITYmMlbA4hRwM0R0Lza44DdkEjVjASb0nmLU8TQOglaL0TaTkUb04lLkMWM1sxP2n0YyI0ZXQmbU4lZt0FVVgjR1oWNsozcwXETkUWMrECUvElS3XCTs81SXoVREk0XQ0lYKolVAg0PPYVV4c0LmI2RnckbtYlPW41Ux4VaQE0RQMzJXEmKCEiVSMlaPM1T2fDNnUiL1U2PoglPvnkMJETVQYkSIciPY01XA8VZHwVPqQCZ4XUavLUXIUCUxQ0RnMmYBgSNKEEVl8VTYcTSxr1PEcWaMI1JzQjQwDTV1njZ2kSUkoTNSA0ZxT0M0E0a4jmURUUMookQtkkc0jkb4AGbQ4VM3vDQpYSbHkEcXIFLgYiVCgkXtsxUzsFZ4DjKtbDUHQSM5kFTRc2TSUSLmkFVwfSZO41ct4BdV8TRikVdtolVj0zLq3TZUMDUFAWa4PDZtjkVvslaRgFTRcFcI8zPwEjSHECROImcQMyLIQyXXokSHg2QtvlSY8VauciMJcGbsQTLiUyTLUzMjoUPlc0Y4wTZ4YWLnUjYNIUcYMDV4.2aR0FT58TdzjjMSIUTt.0T1Hja3ImVxIFMkglZtAUcoQDLDEGS5U0bQshRSslLwwVZOE0TOsBQtkzbwPTNMkDRNgzcwECVqkyQBAWT0fyc3gCVz.yShgDZEkST4UzRlMkayrjLJYDMlgkRKs1PGcyXgE2Yjc1cUozclolSXEGUkEWaJkSNvDGZjwDctYmbxjSQqMTcVISNtMTTvbER5Y0PvcybRcFbnESRSMyPQEDZmkmToo1XncyYnU2Y1rRYCIyMUwVTrIDYGwjcNslMLojZlg1RvnFRJkiQ3sVMO4jMggSRPgiK5MGdnYDR0QzXx8jdyPzPCIkKJsRbz3lc3cGZko1TvLVVvEma3jlKznjLt.ycvYWPtjWcWQ0My.UY4nmTtj2RuEiYZkWLrk2ah4hdqvTQVolVqA2XK8FQkQSXCM2QhUkKxTzLvAENu41LOkGVLUEQwYjL3XzP4UUR1X1aLMiYysVP4UUQlACdNwlXOAybzH2TxsTMV0jTtL2ZvPVUrQiMpglKwETbXMFRzXUZVk2LSgDSqAySzEDaTU0TT4BcyflLM4RVFcmVtLiV2MScDMVZwIWcRQVdRYVQyAkcUUyRVslVtEDaWUScCIlTNcCN2czYXoGSpkzTvbkPwIWZuoGS5UDQXk1RCcUU2XVMJACa2jGaVQjLPQERtDmV3omPZU0Lx0lLT4xMxTSb2fjLGYka2AGRmw1bwoTNgUlb4TCVDQTLnMCQygjTBomRiYjSn0TcR8Fbn4FNys1U3I0PYQFaGgFa3oTdVojQjQWYuQFSgUUXYcmcxIlLDoUZRY1b1X1PlUFYw3TTw7jc3LSatITdkwVTkcjTAIEUnEVLRIzYrEFbQYDRyjTXvzjMhgUVhMEdDgmUJA2RVESQCkjc5wlKzLlRPISSzwlbGcWaqL1LlYlSkomaywjQnwjbw3lUAcVdyDCNxIWMpQWbRcmYSkzYRYWT23TLyM1YCYmPzjTYvfGZ2QyLFg1RTw1MvIlQgE1RHEUSIsDZUQURyI1JwbUPWkGbwcjLxLzLmAEa5YjdJoDM0MzUMgEby3BMRwjQDUDYMYGaCsVU4QjLIkiXMUER2bCSwrjQyfCZtg2amklTMcTc3okc0fkK0s1Y2nTQqX0cVgmXyLEURIUXwgzPmszXjwjTmYFSm4RVMAUQgAWUhcSXwTjRt8DZ2UzSw4RVFICUFYTSrokXUE0ZJEUd2ITYSEmYDA0PTomQGslUssDMtc1ZPwDd3LVSY4xbtfGYtXCZgEycXgGRLk0J4sDLLgTXpgTXGMSb141ZSYmUxLiUTY0cVIDbt3zXhszQtsBQ1ISPZISSAcGdiEGTWgDM3TEUnAkawj0MWcEduIjV0IEZzIDQxoGcyYCLrYzaDkDM2f0cJImSLMmMrc0R4EjP2PlTzb2JgYFdtnVRFk0QrUWZO4jdqEmMHEmXGMkR2sVNqEyTRg2TYY0LBIFNiACYhQjXlEzMDEjaEgmSwHSSpgkckYGYNszLVoFcKk0ckU1MGYGd3UkapcDMLc0MCEWNzMULUcGQJUyUOMjTzEkR2PGQKEEUSc1UrkGMZIVU04hUznjYi4xbQk1JYM2Uns1awf1ZzMmZPcVcycTLkoGNJEkPVwjMAIVX0AkQNQCRmAmPmkkUzrhdqXFSKECNngVdqIySyTWYxoTNuYCLPICc1o2R1nUVCM1Qj0DUyoDNy3laqYkTz3VaHcSYEIEUyL0QqYEMCkiSt8VcxT0XvrTSqIVUkMmKlEET10FRLAmcJwjQ27TSTEVZHMjR1kmcCY2bYoDaYsDSDIlZUc1PYIURwT1PsUzQwgiRxwTRt7zcvYVQYoWMycTNqI2LHMlZuY2bLEDL2giLF0zZU4DcJMicwYGQPA0L0XTSAMmTkgiPukjaL8jcJsRS37zMpgGdwAiRzH2Zmk1ZykTdlEmay0FMMU2btDULA0lTwYDTJgiclECcW4BZqgkV5ImQPUlSjcGSFgVNqbTdwn1PxLGc1IDcAUlUhYEQFYiL5YzUwbTSw81MMgWa4Y1YTckV1sxZ1QUMJg1RUkkU1jUcCcGbNQENKkzYgYDRuMVUSIzY3D1JYUiPgkENUwVdzT0YCMTZpg1a5AmQuEGUngzUJQWdrwTN5oVYRA0Zks1P4.SPKMVTOgDTwE2P3TmQSkla2QSXtg0JCQ1TFMTb4YlLtjyZLYmTwDzQhQ1RHEkLZEmY3ICQngCMHoWUZcGQYcWSZckMEwjUwHjX0YmZY4haMs1Lq3DYAIDLlsRVXolLogSUQoULqzlczYzJKMGRzvzX0cTZ1X1XKEWX4zTS1sVa4nVXHs1bkgTQsQFTtXSdyPESEkiRQomcSQUTksTQpMUMwsBR1g2TC4RQwX2LhojRwMlKAsFL5AmMlY1Z20Fd5c2MrAUaRkzMTcDUKEFMsQ2bFIjLqb2MqAWQBkEa1ImcXA0aK0zXXYFctDVZ28lLEQUZxLWLO41JOUDVLgSZvEzRPg1bKMySnokdHEkaOACTEkWTHkUSHAkKsgTbGQVa1k0J0HkSYIzM0PiXM0TNLAWS1c1RK4xLmczL43Vb18FbZgjZNAGVKgVc4MmK0f1bkojToQmPNUDMMMiQyvTRkQCauQ2JZIzQs4Vb3IzQlU0MIkTM0D1Zy.Uc2rVMDA2clgmMqDkT3DyPyYFN1cTcqX0JjQlKNEjcvgyT37jVsc1Z3XmbykSNuE2XKUmX5E2XxQ2XzXVbZQTUusxJ0UzJ1bEVxXkMLY2JTMjVugGMYgEV0X2JyrTchoTUh41R5MDcicmanIFSugDLncjMjgmc1A2JOszbgoEd4.SL2YmVBU0bqfSV3XGTlMTVuI0QUQVQxoDLEYVLX0DQUcGaqQSN2.kMwIVZZIUaQ0zXYQzRI8FYAMkKvUCVPMCY4bjXMgGNT81c0PCU3byZockapITbhACMzLGcqYVZgs1SQMzbwMjSiEWXFMmTQUULBQUb2cTPu4TSPozQz3xZ2vjZ4o2P30FQOQiPQclPIolTtvFQ2jVbvP1PwQWLnU0UX4xR2QkXgkSPFYjSoIWdnEEZocUMmQ1btYyYtHEMpkyMXkiUKQSbKEiPyQzM3X1Rp4RUNsxJK4VRyX1bv3lb4bTbHszamImPwDWU0TyYAQlSUslbsMFdFQ1c2UVQxITctkmQ1LmMx3TQJUiQwDjP1glV3Y1U5MGRtb2Y1MzbYEUYhUyMZoGa0cEbN8DUZIFayDmPF8VMrUmZicGZmE0QRslYUgWR2vjQtEFQ4gGdtnzcSM2PFkTbuMlLvQVQ3kTTqflUogFbJYzZWgFSvPSbMoGcj8VQmgiLHUyUKQ0Mw3hM4YEQwTjRwj2cTkiT2fDLhMFdvPSbi4TdNk1czEzSCIycwT0MpASZXQGY3oFQwckZzHyXXMGa0YzaY0TX1fiPHYSSYY1clUkM3kUbq4DLEYUV2AWXQMmZAUFYEgFN0IEMS4jX4HFMlEFc0QESjY2RyLkPSEmRTolUWwzPznkKjQCaxXzbybTPuITTvX1QUslMyUyMWolTngzXGY2bjokSwTEcNomQxwlPyH2LmMzazLEalMVZ4XjP0fCUJU2R07FcVciaA4TMK0FMpI0cqcmMjY0PWESarkzThg1LzbTd2HSLDkiYoElLrEidy4FaZgVXhoVZxbyMRYjZ2IVUkoVQxzDTosjR20jXGIEa2cSVCIjULIDdKQmQwTTatYmbngWUCA0QwoFTGoTLPEDR5giKPUEQ0XlMJcmYEMlLYsRXFkSU1Q2bznVXEEzcHo2Q4vlZqMULyHFNwrVU0bEZhQCLCUGdPMyUNI0ZBcWb20jZqkDRUI2JN0DR2PSLpYFaTQid5MFUqICLFM0a5MTN0MCdUMzJk0TVjUDZ18VUAgCLscjY4kWLEgUdVEGQUMTc23DV4LiXzLiYTgTQWAkUsgTcx0DV1HmcZkTR4ICY1rjMWElbs4TSh4zU1YkSsoTMwjzPHcjLsEibsE2MYEFb1D2atn0TRIlTgE2UuIUZFUWSWsxUnMWaSMWMPwTaRcyRWckRtkmcCQjU1jmX5AmdwcSPkEjVKQ0RjUTZxf0aRMWb1DlZAgiZvkzZqkDMznlUWszL1DVQ1XmQ1czYVsVZYgmbwH1ROQEY4bDMDklPVIkaGMFdo4lQvUyYVYmSq3TLiIyU0IjbVYkUY8VQ4HCRZAESXc2RFYmbEMlLVQ1bZUSSWg1J2n2UDAkX2EWUYwVbpkSaQUGR3XTVJcicLUjSkIVRPolcjQGZZU0QDUTRJEWaZIlSxnEThAGbv7zP1ojSy.mbnglXSwTZoQCcnI2ZJQTcgwDTFElQFU1T3MSV2LUZIMWcjgGTogGahcyMwA2UZo0QnklVw0DbPoWLlcVUO0DR3cWYO4BLSQ1X1X1SkkzaEg0Lp0zL0YzXlgSRGI1XlkiQoETd0Q1YSMTNhc1c0bUbqkUU1jSL3YUYPAEaJYUUiYzRA8FcBIEYFwVczQTc1ACNmMkZMQVLKkUS1UTNy8jX0U2LpEiUuc2TL8TRogVN3LlQiUCNzUTVnoTb3HFY0IiVvkkVuE2LzcjZ5oWNkIVYMIzQzAiVVc2MZsFc5kEdWQGNicEaZAkLtXjPokFb0sFVCYmalw1arcSVtoGcuECQpg2ZlEFQCkkdxEiKsIybUkmPQAkUUk2YzQmZEMTP5kVUmMCbLMUQZQ1MqIidFc0Xs0jVFUDQsE0cEQCcWYSPQkiUukEdRomaCckRXQSRBQmVCUzbzYVdt3jKEEEbGkzMy01QIQjTtwVQFAyMjA2LL0laq.0TJMWN4.2MP01cxbUZOYibGYiK0MDSgIlSqoURtfkVYE1REkELZUFUkEWbtjkTEMzPqzFVAI0b0DDRoUWSNkGYlkCZO4TUVIjcHYlaqDCMWUGQTElLBM1UqESY5YSXgkGbCUkV00lctfWTJUzPgYFYLoVP1MFQPszYDIyTJ4TT0rBaIomduQSd0bmLmg1TuM0ZhAiZZQyQRgjYtIlVpkkRscSQEQVNrkiXogGYrgGVVU0YIcUUyUiaNgWQn0DbWI0bxgEdmojSmQ0RjoTUlYDLEcjdDA0XNoTTlAmV2TSYHQjTs4FcZMCQGUlZg4lLCMGZOkiXzkVb0T1LKM1XrU1bY0DbGgjXXoGSyTFSukFYOoWY4gUZQYmKyo1Qv81QZ8TdpoDQhk0ZzDlbUM2LPIkd37zZMYkUuokPBUlTOI1L2YURHc0cgISVAgSShokZFczUXMEVwjyYYQFU1wlQP0lSnImUHQmZhIld2MVMxcULU4zJMUCRz8DUkgDb0nESgkiQWsRMMMESDI2clElctIlcoUyJHMGYMMFMYITPKEWLq71bXckVXUWbk8lS2gULL4xLukSXRIkVyrRcKQkKzTmaTEyM27TLMA0MAklL2kmPpY1aMAyJ2kCcVcTcgQGd5sVZFg2RrU0R4fyUUslbjIiPiUiXvA0T3nWa2sxb1YiYQgDLyTjMBk0UUgFSY4jcmE0RyYmd2ASdVMWdmEFcYUlKvU0cqHiXzbFaQwFUwPzQq.kRy.iRSElY5AyMwU0avESTF4VXOIWSsIiYyo1aqPTSGYFNznGds4lTXYGShojbkEUQR0TVyzlP1nGduslLKUUZ2MDLG4RS1EyPIYSXxzlb4gzTWMUMTUyPXEiYIwjQuk0UkYyUz.WNTUTVA4xTOoFQ0YUZBI1QYkzQ1.0ZwokVxLGVvEUNtHyJNI2U2fmTZQ0Lm4xcsMkSEQzcMsBVMokR3TmTiU2YFoFLw41MM0FNtjyPwgWb3cSQ1EVYCESNioVX04jVOYERJslbDMCbCYTauETZEY2S4DSN2HSL38TR5M2bQMCTUkCNiYkKvMldGgGNvjDaMEUUzfkSZEEa3TGbWIiP0TmZGYzatgmU0gyUxshU3Y2PNcGZSMTbzcmQggyZzPVdEwVL2QEdQo2Sv0TNo4jTg4DQWUEcMs1PzE1Rj8jXnUmKRQjPI4FUtTDQBEGVxcUVs4TdQsDSNUGbU0DN1EVZCA2MhcDULszTv7TPZUFMwkWUn8TdHETNqTmKzX0LjEUN3QSXHMDcvkmT0rxLSoVbNUSMqfTZvETdzbWLIUiaEgmQKQEQEcmajUVbUIkL24jcgUSa23RQkMUMZsBcrc2SIshMkA0LNcFNrk0PvYTcGUFSME0bw0jXqnjcrEVcvYVMnYzU0TVSUgTVxDTdqU0TUYzbMYWUT8jRK0TS1b0SvcVYjgWT0E0LTgSdrsVQkwFRKk0bqDTSrM1TpcjVk0FcHEENtvzcHIidCY0QvHGQ2I2S5sRUv.EUH4FL47zZzTmYTs1Xz4BUZYSUWUULhMDapwzP3DVRqEGdvkCTVU0LMEjVxoDL0bGT4j1YDkWc0MUZh81MRQzRRUDN2cTLxzVbqHlS3wFapUGNtMSS0DSMxImL5wFd1HldEwzJoA0b5Eicxokb3vDZV8VRkQEbL8jVqIVXvMmQmQCd4nlQQwlaDECcgU0TJICNEYTduYERgAkP0YFMwAEbwckRLACSmI1ZVolbMYzQ0DWZxbETHUWL4HkR2XWT44laxITTIISQqvTSPQDVwjSToEyX1gmXAUSaFkWcCQmb4gkLB4DcRo2cEMWaiYiYjUVVOUiR2k1T2PTbBQkMz.mL5sxJK4lVDYiLDkzMAwzMCQ2TD8lUIQCQxTUXSYzSVo2T2YkRJQDQYk1chEGZtQicu0DRDE0UhcUMukVUwYFV4Q1JLYWMBEzT0UUYgImQZUVLDA2Qxc2TvgzZZcUSxgzX2f1atE2cmkWbR0TPusBcgASRgUmQ58jZ2UEdR01ayL1XosDSUE2QhYVY4cVT5oTRFgTQR4VV24VcvHGU3.2QY01LwQWXsgGSuAmPxbFQFcUNygmMtnzYEQUZyHlapgmbkU2Ukk1XCo0S4LGN1MELtslY2XVcx0jXKYkZXMSXKcTUAM2aAIkZzHEN0giUksxbioWZ30zaT0jdpk2J5EVN3vDUngEYTAkaiMDbMUVLPQUYxYWdyUjXiIDZqv1T0IVZDcSaREWY2ASQ2PScLMFUNQ0MrIVNUk2UkczPpUTc5g1Ss4jYZEiPTUzJjcTP4AiQjQmSkUmaGMDRWY2ZmMycSoGdtnETrMTbSEWUEU1cvXCRjECbpg0QGQUQLQzRAYWZxnkUQUSRKIkarcVSAY0MysRTiojQWACaFUjRDUkTLoUZTM0bucUMxzzROY0PFQEZ44FUUI2Myj0aTolPwk0T2LjR231UhE0LQQGQvQDNv8TbUgUX0s1QogjPkgSM4MFSIMzPQUibEk0T2HUTY0DM20VNh0zMxTSV2HER1UyYsUyMxrlXAUyXko2J2TGLiImVwYUZBEVaU8TZ1QWMrYFRT0DRvjVXRAicKslX4cFSFIlaWQ1J0EEQGg0QqPCd1cEQW8lbC4jS1AkMi01amIETtcGMVACaUoWT2c0Y0QkZ2IkRWkjXEYiKiUWMW8FUlg0PM4jTJElSzrRU07lc4f2UtTla4HCb2bFdQojKOglMhYScmgkLwPDLBQzMvHCNZQzXlkVUGYSSwjFcqPDMv0zXLIiLuU0LIoVaPIkKRgzTSUWYT4jUy0jPZsDRyEiVDMVTGECYx3zYzjVU48jQPAGYXIyRyIEancyc04DLmQiSQEGaFYUbyolL2DlRxLUZUA0bIQCctLULWcFYJoDRHkWUkImbNIiMFU1ZwYSNLYGQOkWZiACY0f0ajojMoQ1T3IDTTImZ4byZvjCcwc1aB8FdzoVSPgSPyoGbrgFLFI0cwPTaGsjVVIGaRoEYxoWPMIFb4MUUGsTPHwzcWUjVz7TcloDT0sjbSQiXRITa14xUOU1MUQzcqcFUiImYzfTSYMmU1nzSvTSQYkDbgsjQwfUY2vVRwIkTO4FUwvFc4gDblMkQEgUXjkUL3M1QSMzRIcyaAQlRgsRQkYDNEMUS2X0LocSYQYSSzvTR5szbY41RqQFMwDGVzQ1TpkWTmUyJ1AGRZEmV1fyXmUmYNwzLtzTXzYEalcGMLo2ZFEWYnM1Rz4jTtIGZWEFSREzPP81JwDTUzjmbsQiVLkUcyc0aIoEMAQiQC8VS3cSQPslZDoWPrwlRxvFNZ8zJBEjKmUFSQI2PMkjSrYTQjwVa5EEd0.mV4H2P20DNjkUa5AUPXITYMciSTE1PsQzYEMjM3fGUvDzUt8TcrsTPXEkbSwDZ2MDL2fETOQSd1AUV3sTP08TLsQFa1PVVqPjREg1Sy4VRTY0Jy7zP1DDTyrlaJcVY3jzTpUGdyn2QgU1TEciMQkScqPSR2z1aFgFcsM2T5wjZnYzZE8zSQEWXkwFSLYmQuITYw7VZW4RUsMSQX8jaHYVPYQVTxLzPkkEQLcCczXTRJozPYkGZ3vDVNUyZU81cMoEYLMlRyIFREYmYy7FTSc2ZSkjTyDVa0rlKhQSSYUjRx4BYvbmZvLVRKgGdhUkPJEUL17zLPUjUrQ0QzAkbqY0R4YzSUcUM1LTSJ0jTzbTP50jKMEFYHwlXKIWMY4VQ10DLyEGbAY0My3hPm4xTvgWcPEkMYwDZNwTMMgzROg0aF4VTtYWVtQDdTQUUgIFaHAkbscTcmsVNno0PT8TShE0SxHCdrQ2RtbSbx4jS4rTNj8jTSQzXywjKuM2YgsRbwLjc2bkPgUSLI0lU5YmPoYESwLiMEIWVCEzawLTRpUzU3jFRRciMlgDLmgFTCUFcxQVLTICTRYyJwUSXQ8TNybTa4nUMMk2USIFUTgTYmUVV4IldIMET1bkM1PiZwn1cKgDTyAUdxwVZnM2cqIDS001azUGbCkDbvnWR3TSSXEjZPI1XJcTSxrRSYUmdKsRdKQiVSQ2cGYUVzPTNCEEUWMkSJYSRGcmbvLTYnoUapMWPNgiT4oWa3YGZEo2MDklLEsBQCYjK03RLjsjaIESXYgCdiE0ZjMkR2LTPowDZmw1QSMDU47VZyXER0DDNq8DcRcSSPQWRkEVYOcVLN8VSRUyLUI2LDYFL3IDQzfGSlcFSPgUVNwFZYQFaxfFN5EkTlM1JiAGMOMmMRsxPpozUIMzYwoFURQ0ZzQWYDASMD4FMoEScJIGcxDCRk0TMmgVctrhSqUkQKM1SqszPIIWdPE0M3nWaJAWSx.kV0TURqQTVrQWdSgTZVIVUYgSaRwVZRozUHUickMVdoIjQ3MTbY41XFcVPw4DLmkkQTQSaNcUXWYlKyk1P0jyQLkEakESMSkibwU1RV8FVx7VSqg2PQIkQQQCVyDkYxI1Qo0lSMESMN4jMvU1bsEVMuwjUqjUVNgkbvLDSWkVcDA0PLklUKkVdpQlL17lT4IictrTVJklblcUVVslL2ciZhUVUCcUM3kjXokTTwDDdFcUVzYCaJsVQ2vDbFg1PqYTPAckVDUySy8lUwjTUqEjYpkGdYQTZuE0YicWbTkzaogUZGcVY4f2Y401LuICUucCbtjCTAkkb33xL3MFS3.mVVgCZnkEQ0EWXGglYt4FQScUct8DUrkETNkCbxbUUqHjP1HjPtk1SuciQ3LUZvkWLkUEVZkWLDYyTD4zR0bFcRslSAolM4EmbzDlLBg1c0jyXybSZvE2bzPWMtoVSCEzZBYFUzTlbB4zbtomRWkib3T1PF8FMYsxR2z1Lw8DZIQzRYUzYz81Tv4lb2shSyHmLKMEZJImcyEDTp4TV0QjUCEkdYYmXOMjdTkCcxoVMiIGdDslRJgzSP41UZYzJtTDcBsTc5EVL1ASQp4VVmckaGEERqkGNtXUV3f1aQYmQ2LkbiUURxLDaqQiaAoULPojPBEUZOYyU1bUTqbyQ3jlKIA0QyPmav.2aMcWN1z1TBo1Xwg1cVYjLhYUdnMjXK4VP3UFUwD2UA0FS3LVatTEaMM1ShAkZX4TcrIkcxI0MwHDVjgmc1QlbCYCVwETRwHkatM2UsYzMEMmQHMkZvkiTLslLwIiRq8jX3gUZUESQ4QETngVZQoFSNUSbvo1LCEWXWM2QX4BTBszQW4zZtwlVtbUT3g0XRUmR3QUaqUWYwITa20lVygVNSMkPNgSQuAmajoULvnjMWcSVSoWYIYmaLkETsIjUK4hbzHkbpYCYvgkZnkiSHkWZnkSQkUyXlQmbuQlPYgVLo4lVNMibYQkTzY0Lxg2YicVdmYGaP4RRW4xUrkCUrMFM1AEcYglLvbkRvDkZy0DY3jCcTMEcKUDawPVS5IFdwTVa4fCLpcSTAc2TKgUZ2X1UxrRSrM0JSYGTiUSX2rzUhwzc1jWcAITPmsxT4QFQiITb3c1JREVYBwlL2UULxETUWYScDUEZikGLMQWN3nUR4jWV5UyZPQWVQcDVFYGdEczM0LyMPY0XsYiLJMmdlACUxU2QhYDRnQyYPUzZWMjT08TNh4lQvUEVUEkX0AEZMo1X5IiT4UTdwfzXAUDMvTlaDQGcTMTQ5gFVvjjcU4RblQ0csUkczUGdz0jSP4xZNwjPPQFMEw1PhUmPrQWb5shbMQyaJkmKuESTqXDTLUTXUIUZR4BVGMVXNkEYMUmc0clLNkzbHQyYqY1RgYkcZQGMnkiZ0YTUys1L3wDb0TFQw8FQ5kiMyIkSogUQ1rjU2XTQrcmUCAEVtUDT3fERig2aycycn4TVngkRNUFaE0lU0ECTtEzSlcFTNAmXSUVaZkWMEQ2YFwja1DUbyfDNSIyYYwTRAYmPIgFTgUGYIUCdrcDT3nzchU1QUAWRQolRBUSMlgFTgYCM5IjM0MzYRg0UPAGLgkiT1MGd58TL5szYCICLqwjVzbkbuIzRBUjROUWTMokL07TR38zLtHGSNoDYMo1QTgkUWoUa2bCRGE2L3gjajMTX1ckbSE0TtU2MxD1XAgkYxMDd03FZyI1YxPFMDIENIwjZyckMNcUcoMlVCUCT4P2SoAGZCgSc1cUbS8zQ38VTzEUUzTyaGw1QPkCbPUSUQESahoDVCQmVyDVQJokSkEWYEcTQwckSCQ1RvzzS4YDRy4DVr4DNGAmUWgSRlwlb2cSbMMiT1sBSHs1XjEFSwc2USUCYJgUMXEFVzPFLwMWQ10lXGMGLp4FZYUENYUTYzkCRtczMTokM4wzLtb0PAYzUtUmVzD2a1IldqfGTFIWY2bkdwAiTms1SwHUUqTzTLAyR3UiY4MUaVwjXqgmdMEDUQIlSZUUXyTjcy8FNwIVar8FZzcFMDEUNW0DTqDCa3Lia5cma24BbRYUcxr1ROoGaTYiS43FNGglL0XlLPIGNzzVVwITUxojKsEUNyEWcE4BT3oTVyMUPGcWajIlUVAmbYIWaAMSVWoEV2zlXJISZyT2LycjUygFQhMSdxrRYq3RXA4RNOojXXg0Ptk1aYMkXLczP4LjVE4ha47lUx3TLkgSRY0lR03jbOYiPsI1SqojdxPSNMMCYjsjTYgFaPUSSg4zYWsVMvvDNAcyYIY1MqjGdsMVcSgkLRMjXP81QssRTyLSUzXVSXEVRFUSMVc2MtgjS3UTbLcCRSA0cq4VMGAiPNYkVHMlUzTTPXISZOQ0TEkDYtPibPEjKTg0a5MWLzczLzgWNL41XFg0UtcSXHU0bqTFYDEFc18ldmYlMO0FSrICQPkmc3T2ZJ0lXpgyTskmTqDiLBsVYqLSURclUtDGR2gSVw.mLhMmdqk0JuYyYyf0XQY1aNgmdLAWdPIidoM2YZMFM13VcKMSLtXUcAQlRyDTXMcVNzESS1jWZr01Z2wDLxfkKEYkbDglLHkyY1w1Q1PEbZYSVNEVXwoWRnkEZksxaowlbWoza0YUcvYmd34hSWsTP4IjcncWZJUlL4PidJgSND4lQIUEUi0zTFQCVRgmUqnGaB81X341XLsVNDozPUozM0sRdxjyJ3TyU0sld4QWZt7DUCMGZyfzSloTVZ01Y2fjYtMFbusjVUAWbCc0S2j1L4fGYCcSZOozc43hZNsxXhkzL4gTNMAWSjMUd5UybLcjYxcVawYUbZcWUGUkXlYlSGgDMusRMJcGcsoUatIUVNEWPiQmThMzXwLicqkzQIMWb33Rdq4zUpMDYCshLy3xYicSL2MlP4TGUyYGaxjVRG8jK3gWL2EDVs8TTuUzbSoGbCoUU1LDYlcGLIYVVyYyJUUEZuwjM3LlK3.UM4IjazrBLzDjbnMkTmYjQAEkYIcWXXMDbmkzbn0jP3XiQDQGSPIULskGdwj0TJ8Vd2IER44lUzTmTLM0UUkzc4LGTZgmQ3fCcrkFYFwTYl8lZi01LjMiV2wlcxgTRvnkKDAGTq0lcxfybAMkYuEjbogmckcVQBMCMpYCMrkkcz8VakQmPVYjVq01ROMFTAQFNxrDdvAkK4gCNybDTtDGTSQCdxMVZVcySxYTcoMDZRo2QJwFTGAERjoEalMyJqw1X0wVThECbwE1Jx7zSqQyJrEiZYImbWMTUGYlMSMFcwY1XEgidKQWcIYCdG4hKMMCVPcCQUUiXybEa2bWQsg2QFkzazPEYggmb5sBSvHzSF8lSmcFZPYDQ1olVEY2J0rFUW4FawD0Q2Ikdz.SLokUN5USQEsVPOojSBA0Ti4jSyYyQvTGQTkUQ4rVbC8jRzsDa1nTXSwzJtXGRSECUgkTQNg2cxAEcuUWPyLUXl0Dd2kjZ1jkUUUjXDU0LBQSPFYjTYM0PuEEVlkWcAI2arETVYYyZkYTRGg0bW0VdVYyQQUkM0cEb3cEUXoUMwD2cT8Td4QDL0QETX4TXDITZ0IkZr0lLtcENhETSBUSZxX2ZK8zS0HkZnQmTBcCYRUmLYkWMv3RaNElVyLyZ0HVPsQELgkSZuMyZDkFLBMkaZAmQHAkMnkVZFMidq.kL3LTQBMWQ5ACbRcGTCshM5QiRyQSTk8TaQQ2J5klPjslY17lPisBRtcURgU1cRElX3XCY3MzR2b0UwjSdEoFVN8FchQjVTMGciUlTo4xa0Xid1gyTiUWYYgVS2jkaXUVUtzjMXQjVMQkYZkFSzbjaK4RQLgSLmYicyT0PQgWT54hb1LWPNUSSCUWXtIWP3DjZtMjcWQlQtjjQSkmU3YiKvHWUKYSY54FLMkCaIMGYmUiYtf2QBYyQJQCapYSV3Q2MnQ1SOQ1QScmMLg0Tyk1cAg0aqjkYhYTP2jDVgQlRTICYLEGQEcSRYkVVIYyRMcDS5UFQVMGSDsTPtX2JzUTdybUNBsFS0nEL0XmPJAmZhg2Y2PDbUQSMZ4BV2cmTuUjVBc1RYcUaVclYzMlL4vjcREDavnGSxUlVok1XXEVUFY1M4bWX4UEc2EzLAgkZicCMybmKVgGRnoWTnolcLYmX1wTcT8DS2PzJlkSLQ81Z5EkKzolV2fkSIcSaJsTPyLGdvomUtj2bh4zbqg2Jvg1RrcEYj8DaxQSd0jSVLcjRzEWZvUSXtrlQ24VcWYGYtbGS0AWNOAmUIA0Y27DcxjlVrEUZPo1JDcka0kiS4Q0Z58lPzrxLTMCbt3DZUwjKToWbwDSN2IDagoWax7FcqbTdGMmdZQzZ03FYFAkd5UFYYgVPZQDbK81YD4ldJYET2HkVtXiYyAUPtA2UvjiSvXiRC8TM2YjM0zjUlQWTXYEVxjVa1PkUDQUNZUkMQEFaWgEMwv1Puc1Pzg2UzkmTVMkbLoGR1g1Y2kGdNcSYLwjZxDictczaQ8TazY2RmIyMZo1SDQzbhoDVMkVa3UGa3DSQzMVYxHGRhoTYI8jZiMmQyTkLyfSdq81Mq7FQ33hR3vjSvDFTGIFY3jjXQIEVnoDRTYmUlkiU3DEc0oGaxYGLEgiYhQ0TxXmTQUENzf1Y3QyY18jTCAySUEyZ4MjaPQ2XUM2Mi8DNtLmQ3cUSGYFV3nkS3LiM4w1STImVmETNtfSUQUGVzoEMkY0UlYmcusTToMTdLUmLmMDLnI2bEEySzzlMHs1S2MkPHUUMP4hXjgCcs0jYH4xRWkUbvkzbHcjZtgWakoVXuE0LB4jP2IFauoTbkgkRkQFVwEVYkI1byHmXtnmMr4xT0j0SJwla4bFQNcFdxPFNHQ0UvkSNjMmYrsDawUDQvIiMAIGRFASLRAyZnM1POMid0YlQ3XEb2IyPIAWQxsVXv.2cyI2J0PySzQUdigVNHQVbEMGUykEdBQmPJo2Mtfld1gGUnwTR4UlZC4Fa0LzazYkKx.ybtQkYpAEREY1MDI1U2LCQicVUCcWdrwlPxPSdyDCcxkELkkmc4sFQHgVVyoFZI4FbzsTbC4BSvIEaVclaNIzQnAULSclSvb1Rq.Sc0g2YwjSS0XkZCUiMzwFY40DQOk1QDojSY8DaxMVcvjUR5gGRuQDNPYldmMDdwsjaxXTcOEWT0D2X0ITa0LDUVESbK8VPKUCdwTkSXUlTwDjXwIzJDclR4LiXQcTatjTT3o0Zu0FLkMVPsIUcw4xbvXzZpQUVxkTZzMSXnkGT4fCd1XzbxYGLW0lLZ4TTgYTNLYVbLU2c1.SYT0lQwbSTs8lQ0TEZTAEaMsxcxT1SPMlXwc2L1TTZQkSVBsFY0fjRZoELZMjd0E2L4rRNnYiLqXmMrMTMlMiVuslKDsxPqQVNxj2Yh4zS00Fa4r1awXDVAkWQ4jCZSMlQ03xQFw1Y03xQvE0aXYyQrgySA4zc2UWPuMma1E1aX4jaQ4BbzXzZnkkXKQyU0nUblASYrImbloTLLcyQR8TND4jZ5YSc3XWcWQkUvPzTB4RUW0FZMIVMmMEZzA2JvsjcY4xPqI2ZrAGVOkyJ3LDVX8DZm8FLGcGRsUVVvsFQoEFRJ0lQlQSdpgUUtXSVhUSN1jGTK8lT0glRlg1SHQkV40Dd3cyUPkDV3USQuYmUMISR5ojat4jZhAkdPUlKVAWTzkDT5AkajA2YtIDdvzTTOUTRQ0DLkEGLSYTY3TDSxkFM3YyYRcia2jEUZ0jSiECbV4BYUYGaxklMDIycEIjKz7zbX4lU4ACQPI0PjAmQCszbZgmaGIjURgFSyzjYp81YuUTNoImY0rlbDQDV0HiY18jT5QzYhokX23VTx0Dc2vjZg4VPngCUEQiLrACS5s1MoQER4sjLwLSZ3D0aJojLzUEbHMmaKAmSPozRDETN3XUZlMUVKYkYxgjcyrVdrwTN2XiLkQibLIGYZg1blIkUv.UYzQWbPMTNOk0YuUTZnYUMlkCUQQWaCcSXk4zTNEiMw4VQh0DSkYCZ2YzPSgCctMFVykSTvHTPL4DZ5ETX4YURIUyMVgFMEcFTiImdJQyQoEkRroFQzDCRPoTXCUlVSolT04xQqYTNFgmax3lZY8Vc2DWP34TbS4lS3UzRNA0ThcTYykVc3b2b0f1Y43BdVckQXsRUxrVYtQDYyfEMzsTaHIjXw4TYI0lbm0zXVYzaGcmdZcVdQ8zUjsxUkQDL4fmQyb1bA8VaoUVaFA0U1kDNEAmLHMidGYEU4MSXXE2XS8jdwbGQg4jcHYSVZgFSj8zYJYSbrg2LpQDZqLESNQSTisDS3Xzb4HmMFozZ3oEcmACMXkSPpYCS5UTXsYkRxXDVTkmbQEUcvM0aTgVQkk0XNwDa3TyY4Umdi8lTSshKH4Fa5k1YLgEdIQzLxYjRwHGLyXUXtj2STsVdlQ1RQM1UEcmbPEUXVk1QlMyQXsRZF4FaxE1X0HFcFklRtrRXTQDaLQWNgUibhIlMGk0Rqn1PiozQkITXZkVSgIyRMUUbmozR1nTN3vlXhAiaP4xcXIVRvPVZK4hYFkTXsMyQ2MzR0sVaKISdxsFTNESVpUjR3XzRAkUb3vVLzclVxQkcC0lYj81cynVRiQCR3rFRsESZSY0aNITNSIybRYDS2k1XZQDTHw1QvgjcVkEbLUjc5QFbm0jVpMUbtEmSyolQuoDbHkFd5YTYnUyM5QzUtIWTikyJhYmLugUcvrhVwYTPDY2Xq4TRIETSjgjSvLjdRISVwMlRsQVbJQSX2P1JIgEZyUlLVAGRMQVdgkmaRQFRhcDLQMjRVYWQKEyJW4hT3LVdJkyQEczbHQyMqbibtLFcIIlQyLDSxrja0D0byMWcZQmctUlL3QmYzMlSZAGSPoTYpYmLXICbAQmKXcSb4X2SpcyPBgkLTEVcHYjU4fSPPYGVlMyawIEYPgCaAo2MAkkbxfmVCUzSi8VR2HGVHoWRkYVPXI1YUYCZswlRuAmKiQlbKISaJAkVBkUZWcUPwnmZvvzMwDTV5cFU1oUXxXSXJIUQz0jXtYUcJkSbmAUcWo0QFIEYVAUMJwVVW0Vdr0DRwP1TFI0J1PkMZgVdHkib0XVRlYyMg01cYACLYYDUuMDZE4jYq.US3oEbGYVa3b2cvc1JNo2PpgiQ3QkYqnDS2XmSwT0YwjTPqHEdgcDQvczPN0jKwXSSTMGZ0PUL1IWbt0TZPQiMxYkPGYTXVwlSnkCYjo0YvjEa3HFTPsFcxc1ahcGa1DCM4bGNYk1RkkiS3DGVMgjcv8jV27FQ5gyMvMkbNcmM0bFbFEVaOM2ZXEEcrwjTUU1SmYSdPIkYyIWckoGMggySOUWRxwjc0LjKjwFSSoUUD0lQlUlR3kmYAMCM1w1QlkELXk0RxY0YIYzJAoVSAQTdO41QTQEbtvVTVsDSqrTT24jMuQGZPslbwfyJ2LmZO0lKTQSdOs1XFsVXB8zSlkUd5QjZ3HEdqgENT0FMHoFZKoDdy7DQVQSVxIUcRgUbO4RbGoFaMAGLiIFbyYTV2ACYgAUPHkjUYA0PZcUZ0AWdFgSaOQzQlgmZRUiZZUjVWUkTYcyZ4biTEo0LxLDLD4BS4PWQMokRyHmShE0b2HjdgczXL4FR4UicAYybygSZVgCR2Y1ZQoTZyPVcW4lPLojYCkjT3gicXE2T40TYZ41YyTDcRk2arcDT3gmMlwFdxYjauYDQ2sVaTUGNwQycA8FaZMENXkEaKwVMVI1YygjYxfSXyQmS1vTNzHUQDQELLMzU1DmVvw1Q2PGcsk2bz.iQzAiMOUUNtDGQEEUNtnWX3AGdEIyUlozM0UiXhMyJsA0ZrE1MGYmV5czQy0jTPAERmsVclMDU4nTQLgFRkMkZGEjcTkkToUCZvcyYhUmUtkTMVQFdvXkTGYVMMoFMmMWMsM0QKcUS1DicJIEYuckSFwTP0ETLE8VYRcSRggFLNQ0PIMCbEQmQzECTvASMwQGYBUzQNoUXH4zXYshdKMFUE4lPYEmUBACYZMEZH0zU3X1SVsFdSI0a4zVcWAkYJEmSOIybwUyZlQFNrYiSEAGRWw1JwjURPk0JhIiLAw1UCwTM4kGZNwlLxjzPLEENBkTdAMjTgQCLtHWVOslUsUlVtgWbzIzRvX2ciMyXNYzSSQzMwEWRvHWbQI2Lq4hKjkCLznTVyoDdlsldxIFTMYVMZM2bg0zJk8lSuwTYqciVD0zRQo2agEFTQYycRIWPqPiQyvFbt0DQDAkMBYUL5AibKoFdVESYMMFRSsRbvPFNz.kMwfTNoM1MLIUVY8zUhAWa3rVPjYDREMTS3jmY3giRKY0UAAWUHoEVD4BM1DlMwTmcMYVS40Dd2gTNIsTXUM2SHYWUJU2YDoUP38VPGo1X3w1X1oTPWgDRAUFNwoWQzESNpEjQDcyPqo1cMESUvIDVWwldJUCN4AkY2cDSKcGYKQzZzfGQQkFb3AiLwISTzL0LuE2aOMmS1oFZpoFaRkFcp4VdrsDVPcSbi8FT0jDbsITZu01YGMWa3ojK5gzQLMUPwT1Lvb0T3bTRvM2JnQmdxT1Uyk0UBkWUC0FVxLiMYgzXjMmYPoUN1njXKkEbZglbjoUc2cUQFUjYF0TMmM1YsYTUEUTX3c2cAE2aAYVYxbSVKQVS4bldl8jQZ41XwjmKtgUdIcyUEc2S13lT1A2MOQGU40lR0YlbMgmYlgGMkcDLg8zLv81MBMVRSIFStnDdMIlLMAmMiM2aOUUUNsRTQAiPlgmdHMUV0UCQnQURTkyQ03jcBAWdoECNEwzMtA0b5AkKWEkP4MVS4fFSHoUXt4xZt4BYZcTZYcVVtDjLogSQQQjLykFMIkWaOEzQ3HDVxnVLXEDYqEEVMold3HVcMIDMZYUVjgSaDcla2g1Tt4DLU8lUqbTSN41ZVQlb5gGRFc2XIY0cwIFUvj2PnYUauYFTkoUanU0YzYzcJ0lPxI1MTolMmQ1XjgybkojaoUFNFkFYtPUapMSXH4zUsgGUqbWYCA0QKQDSxDFQEcyZ5MTaJMkSZIVPDg1PCIzSok2Q3XzZxo1TMsjTwkjYlIFYgQ2JQQFbiU2Z2biQCE1SPkkc5cWdUQ0cZUFSlYCa3IjMzbVUxb1JygjPsgkXGMTXVwDUBszZZg2X1cCb3XTMiIjPJ0TVFU2RDESczTDSKIUNMIGVTMyZLojXKo2YtjiQTASYTMyTREFQzjVSHgyJIQmRksFapUWTjciS2sza2zTdHshP4g0csAUdIQWMnASQtfTbWc2cCkUQisxJAoWLAMjPrAUMxLWdA8VPKIUPDkzPwXSdXo1RqjSSjkWSNIjTxTEZUwTMTEEcJICLx4jR44VcPoFSy3TToIFRq4FdvTWatLjVtM1SqfUSOUjTWMjV2IGc3TTdyHFdz4lKNgyTkcjUmE0Lp0FZQcWd0LycEIUL0H2XWAmSAQjUxTGM4bjKmMURz0FRw41a0LTcpkSbwwjLBQjYv0lMNc2JPkDSxf0R2PSQxImYhUmcIQlawYTQ2PFbOIUSVgjXBEFcQMFbHUSV1XzPTgSc4UyYv0DNyM0J5MlSoQDMV0TNB4FNW8lY5EmSzrTMhETb2HkX50TTL0zcIQCboU1cGQWL1EjLpI0JOgDMiUiXAUDZYYTM0UGLYAkLynkLzXDVRY1QY0TVIsBLlIGQ5gTclYib3.GS4Qld1oFLro1SUclQvAEaBEiYlIiVW8jQ1LCcpICUNY0YYEjZqnmSBQUULglQHUyZBkSbEcEQwYWPpMjQNEDVq8Vd2DVPJQiQgwzPJgzQMkjdEI2SqczPWsxYqH1MKkyXtkCNMUlRyQVa2cjZQIWQTYTdwsRNickaHQiQ0HWM1oGNFsTb03TcLU1TwMEQwb0c13za2TCTY4xMxTiZ5I1UoMiM3QjSwPFSiEjUBkVSC8VZsU1M3ECbjsFRKklbJMCQHszTAQkZlkFavYjUz0laJUESkM0Ml4lRGgjaDMzSVUWM5gUVPY2LIcSbzjzcQEmKynWdlEmMloFNRc2aR0DbwPmdUgGSNgDRuACaMQEalo1YgoFV3PSQBY2JGETVOQzMQcUbEYkVBIESUEGcFQSdNQUZWEkLxY0aOcyUzsVTZYjXLMSavcWL0nUUvzDVlMVME4hLDshZMU2a3D1TDQCdqozMikyaKYTa2QCQQgDSt3jatwlQCMWYyUEY4DyT4kTVyPjYyj2U1PWUvAmTCEmQBUzcqcicuQ0atbGSVgDTV4TUkQEZtcDZ0I0LCshZ0YjbXIFd3YkV231PKkWXvE0bvgmTLwjVkAkUqr1Ys8lZqEVPzPGa3DkRQoET3zDYvH0Xm8VRkYyb34zQAgmKIQyUlACYwfTTAMCYtQjX2IGYVYUTWgkZwfCYyLTaYIDdGk2JvEyXOEiMCgiVik0aCUlMvbGQp4xapQCZt3lK4Hlb1YFU2XjZKkzRxrjVNkTUxbDSMQkL2HEcqfib3b2MvTyLTQiVyfzPvnFYuUTcOoUM3b0bYolcDcia1v1a1v1QoklVho2LtwjYhUVawMidUElTz4hRrwjaQ4RRt.Cd3MWSRE1S4MDUAoUV0PFNrAkM0HmV4IVNBg1JigTRtIzYgMVYnoWLgA0QxvDdjcyJ5EySjIyQ0z1aqUyYTMjZqvDZvQCV5cUdqY0aK41PVESaqYWRIIDckAyU5UiSTIjMDEyPgMTQRYDRnIWLIcCMTcUaEMmYtrxS3I1JvAiZnkSaFEzUzEWST0zPLI2QOgDMDIETxcGSXM1QEoVQRMTVJAyMDEGb4ozXhoTRFoDLxQkPAsRUMYlKsACViczUzHETQUjXUsRVh8TLTsBcQgVZwMyXjYTZSkVPQkScWQGSSYURAYzTJUmMVIjaEECd3nlKjMzLqbFVOwTNKEiblw1bYYEVPYTZYIzbrE2XAc2aOMERMgjStLlQBIEU3HlVZUiSqDjTJ4FVkEkblkSbzAUVwzFc0bCYEEEMLgzawICMxM1bqnGbygmaH4jT3fzb2gTSqMCL1cyYjgGVrglcCgybzj2QEcWZ2ECd1b2Mx8lcqwFYKkzP4cWRQEDchASYPQEcYsjU4MSVD0zZSslTCUyLFUmRS8lc3XjSIkjUIYEZSUEdAokPMAiS5Y0cYwlQkoFQ0I2ctYUM2YWLAEmVhQybtLiPqcSVZMVMqDWNWYDVZQTZTAUNPk0TpYjUp01MLIVSgkVUAUkc1UzbH4xQx8lZ1kmSFcka4kVMmQVbwjCSOYjbMEjaOcTcXQWc0zzRxHiMLsjQIUWXzb1bjICaJ4TU4.EZOYDN581TlUjQMkldskldFgUdxQ1aEM0RjUDdmkSRIMTShIEY5Emd1XyYyUWUFcDM5ozULITNpsTXHoDarQFT3LTbzblPtT0MCcWaqUmKNQDZAQjXsUUb3T1aqslKXwFajY2Y4HTSBQ1S0zFVH0zXvXkMC41TrUEVskCQzPEdPQDLrUyJBUGVvclRKMzbg81TKkEUrQTb2XzU2rRUOslLJ4xRtDGRQMDb5Q0bVsxQzYFYMUDbvHiM2M2XMMUVBUGU0rhV2kFTZolLEokQWQmQYgyaxkTTwYkYVQUd2rjaHA0MA4RQqUkUy0jX2MyUxUmYWEFMUoWT4L1JuUCUUMCUzHGdYUFUNEWcjQCMwk1MkYyJnMkdtE1bYUmXsgEUwMSYr41bYACLhI0YkMyMx7TdxoFU3rRd2wjbqMUQhUFdZkiS2nEV5ESVP0jcDYWNRMSdP4lVGYDThcEUqPFUWcGQFo2T2LkUhEWLFgmQroTStIkbS81PxXEMzXFQqcjMoo0UqDVMjYUMrEGV2sTLNI1XMgGMqQWdlkCSXEGMyPFYuUVXXIVVPkDYxjULFsBUIg2UpQmPS0zMvfjQsESdVwDcvElayAGaGkkSOsRZTQlMwozXl4VTPUkXkEVavrTUjQEazkTbSMld4j0L1Ula3I0XoIEbTEUQAA0cYAUT5EkKCASSVEFbokkV2fSaPgjMYEVaoMFZAYka3nmUTICR2kySVImLpMVYT8lViMGbqrTM0jFNGkiaLcjbkc0YIgWPGESNhEUc30jSYk1ZCUkbKQGchombxHldRcWLPYUVhgzc20DSZQkXJgDMDgGYYEVQsE0TmEDNYYlUKwlRjsxSOwDbzPVQygTRQczQjk1PxXiRFMVRPk1TwDjKKYjbH8DaxkWVDc2XRcEUpACMsgySzPjKyXDZTY1RCUWTxzFcCYidtrzaxf1M1EyU5M1LrciUAw1TogjblwFdMYSUXUlSUQSLXszRxrjRNIFYAYTUwPGZvD0QNQ1TH8zazTmUogVbvozLREmU4bFMvLUU4.kT28VLrUSTpMTXIQ1cMgUMnwjaUAyXNElYPgDQzXFUhsjTw.CMz.Ucs4xaGYiMtkGNxHiUS4RLsUzMZY1MNUzPwcSL3claMQVcIwlQWEVXVITUToGdBgTXSQySisFQB8TaxcWPv.SZsITMKA2L2g0RwblLBs1JjEEbQszXSISbigSYhE1LvMUZ4XUMOQUZQAmZWIEQkgmS20FVX8jbKMERUsxbOAWNqjTVLUybLQldqASM5wlZrshV27lbmkWXvfjMp4lboIDRFkmdMomUxY0MZc0P3.WctP1YtM0YV8zaLAUPpMjdvfiRK81ZnYiRSUSRu8lapg0PmsBLIQDcuAid201YiIUZOElZGglYAY1Qw01S1IzRrMSRXUTYtkVSX8zTXslZFsTSxXERqQFUg4hPGgjTzHFaCM0LB0TYuU1XhMjYxITNzYSdiICZiYib2MFVR0lXGg2TgESMtDSMvwFLFo1R5UScAIidUIUY2cUXjMWLjMjTpEFYHgSUmYlKUslMi0lRnQDQJslcgcSVmclVTAUbZwVbFUlYvnkLGk1ZI4jcxfSSioWX0nFYpgjRYQ0cxIWdCM0U1wFbLomXKkVZ0QEcWMSPVMUVqLzJhEEa5sFLBAyby0VQn8VMrckYI4VQAkkRqgjPKozQgYiKyEUcAY2P2gWci4hMZIkQsk2XAQzSSQ0a1ImMKkScloUYwDGSEM2XsI0cKgjYBAmSPkVa2cyTHEVZTc0LBA0YHcDRNY2c1kFaygWVQEjaw3zZ4YCQ0T0Z1cTXBc2Juc0ZgUFUkQjU1.SSOAGZ1TlbZ4DcVEjKKokSAkSQAklVX4xJiEyJpsxYhgjS0PyMtM2Zzc0L4EUUtDWTlUzaQMmL1fic0wDRmY2UqXGSIIza1rDTMsxa0TUPvrhRCIyTq8Fdp0VQw8jdko0TGQGRIcCVkA0bE0TczPyTXIEQ00lVv.2XmslbzUmSFk0MIMUTv.UNDg2S1o2MWEkXE0lV0ITbvYVXPgGVMMGdq4hYIsRciUGYm4TY5o1cWwjSxfSbpQlYjwjQ0nGU2f0QtMibmUGa1.WUBc2czYTcZgWSToWMzcWbVgSMNczPiYzQUAURNs1QhcjSKYzLDETcxXkKREEMXg0UQYzbnYSdlUDT3HFaMI2P4TlXkkVbycDY5gEQKEFdQc1SLUlSv.UMYMmKZ8VNwj1cjICYxAmTHoWRRolL1EDcwcmcVoDSs8ja2oVV1.kQqomSxozLncFaSIUZHciSGEiXhEkXJMkS2QicLUVUgYUMTcyaNkWdRYidYIFaVkmVXMzbTciLwv1UtEmLPIjXjMmQBYWZToTU3UjZyQVXHYGagclP1wlbJk2bpQFcsozayklVDgCNKYCZW8FYYkTRtXiPMcTatn0U27zQi0lTVACZ3vDco4zYTo0TlYzcy3VNmIWbCEGMoMWdvslb0jEUkk2XqAyUZITXGI0Q4LFcjIUPA8ldCEzTSMUMyjUZAYEZ14TNiQka3PyMl4jMVYTbUUDTHgmckYUdK4BUXgkP1fzM4vVS5UlaLIzXRM2bjkjTZgmbnIUSuAGSB81a0XSQ4v1XMMlZRgCLqLlXvnVc3bkby0DTFkTUnICYTUkSvEUT4LFaEklPwPUVOUkbjUWTE0lTq7zY4TCaFE0MkgiZTg2MCo0PDMFZybmX5IyUnc1JMUVMLsjZ1kjb4wDbRI1JAM2aAcFMAQCdxAyavImXzIWMG4zP5YjXnsRL2nlLMgWTxbiVLEGTVMWUAISSPU0S0Qyav7FSKEmUBETa0ozPwo0YAkWP1sTdgEzJEIjc5gEQyg2JKcSR3LzRwkETtTEVmY1YWAmZKoURok1LYwjbiASL27jLyD2QVEVZyTFS1TmZqfEV3k2LvbjYOEkaTQiLRMzPlkDRvMzL1PkLtsza4PGRXQSRNY0XYslaHsxMqbFZYUDZK8TLpAkbVECaqDSaYgWdvkVY0METgcSRSAScLMiX3kSdVgUcks1X1EkZrwjX3jGVCAWL4QldMoUQugmR0YiVO8VSgszYVokXgEVMEYDcs0DNIMSS1A2UYkWZWUTLpkWYzblXHQFUFgjTEcmbxglSJkGb1ImMMcFMyQmd1gDM14xTwMCcwT2ZMwzQhgjZmcDcvHWapYDdh0jP0EFaNgyLXAmMns1Yqj0T2rDbw71UiYjVIYULC8FL4DibXEELVYzciE1SvjUYYgyU2TmZBQ0MoUjQxkkL1ICLJolavYzcxrjK0.yYO0jZv0DQxz1JDsBdTgDMxb1TXUVZFc2TPo1MskETwfVXXkTaZQyMIcGSGkTdzU1XkM1J10VNj8lLtHCd3gmMY0jMiQGTIYjYwTTQzPVRVQES40ldE4RcFETayQjRY0VRSY1ZsUmS1YlX3LWNjYSNYgmbpolXjI2J1b1MIMmbJEGY4vjSIwFR4U2QngzQWsVN0LFULwzbkYkZjcTXPgFU4XmQ2XmY2.Sb441Tu4FQyQlKLkWQvAicX8zbPYzMI4hXgokcZMUcn4lPzYjd33RN3IWb1UDaq41b1rBa0bEavT1Y1ciZtglauMlMzIzL30FaCkFLSAkaJUUXQYzT2QjZMgyJJEDbAMUdyHUPCgGbYgkcPkiZRMDMWAEQ0jVPwPWYxUGZqfzLJgWb3PiRWU1cFcyJPMEYlszP0TjZU0lPOcFZCMFZyLGcFUWSTECaGYGLEImU0bjakc1LvfTXRM2YRImQZkzX0szUBwDcsESR1EFLJMCbyslZlI0bzUlamslcykjM0XDLqUUYxQTNuYkRVsTa3oUPQEzQLMDLynFZjMkPrEVVwYSSMU0L33RUEkUYM4FQiwDdlQyXGQFZ4s1cUQUaJQlKFoWZznUcoMVVDQ2T4TyM1oFa2LCQ4ImbpwlcYM2Z1gWcJkSP4XmPtgzPDcSP1rDVic0RREEatYjc4rDMk4RdyMmRjs1PXMTYq3TXJYlLUkGdVMVQtgzTBoTVVclazDFZwHFb3s1LtHWbDEzbFQkQ4YlbUkUPVkUU2PWP3PjVoImYZYzbskkYsIzTyUkUN4lKrUWL2EicQc0aAkzPjEjaPYmP3LVd0DTN1X2XuUTQZw1aZoWaOsTa3TkUugWaK4xUOQlRVMSYhITPgo0QF4xct0DazYTcigzSMQ2bwsFSqnlQo4BQm4lYwU0b3kmZCIlM10lUyckQiYVNlUUZMIlUuMUbybCMTg0cs4TUUkVL2rBL33hdyYlTRIkQPImLSMkbEISYy7TLvjlcm81Lz.0TA0TZSQFLqwVUxQVUzUkQVIFancSUEsTTPI2UVMjKkMScuMGY3kEUjMGcVYCVQI2ZqgDYPkjYwfyRo0TYvICYjcmSxv1XAMCTxvTUBUmPhYWNKglUq4hKA4RdvE0c4TVTmEUX1YiSwUUYMElRoYCZCU0Lq.iVqn0S4D0JrQkMosVZYQTSIUEUuUCb2sVLok2JCYiM0zzZ2jUL0X0JUQWZ2oVYWYWd3QFLAMSQYEzSAEzUnAkTWI0U0UVPtE2SZsVRyLjZFs1YLEiaJgTVqnEc2PSUxv1Y1M1SNcyXIUzJs4VY0ckLyAmZrITP2gyJ5wzT1Mkbtojdw31SqT2cvkUTZEGT3UzbCgiKScWXLIGVsYTZkQES54hdtIzXzU0X33xZrECb4HyLtUkMzA0YPMka1gFUJoDNxjkYBIlbSUUaNUTXwv1LAITXwczTJIVRV4BYgUmVDMWdDk0RjoFQtkjY2jkPBY1btQFaWM0MxMkSUY2JZEyaBI1PgolQjQUSuQ1SVUGLWwTL5AyLWYVbgciZtYjUAITatcDZyM2Mvj2XqHWRGQCMsEDZVQUPKMFbw8zRM0TNzUiQwnFY13RTLcSTGM0P0oFNOg2S2.mKwIkZQkFVMIDZkcmUBACQIMjUGImYs4xa1vVTJEiZT8FSmgWXWUFcD0VL3Q0aDMCRZU1QyQEcZUyM20jK1jTd13DanckZAEmdUkyYEE0PwQDYAYjaBUzbPEDbHQVPjYWQPYjVDQUTOY0TrMGMYQUTkoFM34RcycWUxflTSkiL1f1Up0VVuQVYi0lRzflYxjTQUYSLJQGY2Mka5UFNnsDVAgDY58DdnQ0PQYycwMWL2M1UlMGYZMiS1rDRIUDR3DFV5MzQJESN2kka0LFRko2TwI1T2Q0UDMSUg8VPw.EQwnUPwTTN3LEYWEjXZ4Vd1HDSTA0MqYVRjgSQpsRX2M0bqwjZxI0Z4fCVIsTZnQjKxYWLrUSb0IycNQGbW8jVIUWQkM0LLIkdKgzUwjGdoIkU1YCc4oDMzf1Tw3zZjoUdtLEU1clcHsja3UzZkkjRxLVQu8TYzgiX1PyYQMTQjgjbJ0laR4zYNIjcnQVbKUidxbDbqcCNzzjay.ScWAyY1gDVyzTRKMCTFgyQ3EFS13jcLEDLk8zUwEmdRwzbUQ2bxblbhkTNRMFbRUySNESR1bUaRcSTvUWaQMzMEQFNZYFRicjQqTGQJEENzEmTuYDVtU0UqfSRCklbYsVM5AEZlQURgMDNoQTV3bmPKIiLzDkK0IlV0MWPFMTT3LyT3ESSyDjbMgSM3kyb2omT2gjYNYDY2olbyEGMnQDUDYkcNwDQiwVXFU2aMECYEElZSgVaM4BR1DUQqPiX5IFZpozapAyXUU0bDIUNjEmcREWRkwFZSgUTFYmZOU0apI2RUI1TTY0YzPEazzzb2cGbsYVS1UjRwH1LYc0R03DREkVQjwlPDYFTt71MxgFbushLx8FTqbzXHYVNwLVcpIkZZkSSpUCaMAWYzgkaUcycEEmQ1bzZyEFbJ4lZ4LVSxMkXxX0bAMyYkk2U1g0RU0TLtrVSwEFchIDUyLTaxDWV3QVVFMGQt.GdSUUTqbkQIcCSiYiKGI1Q3MCVzfjKuUkSQUFNWwlV2w1X3UjRBAmdSMzL1kDdqYzJyUiZ4vFZlEyZl4VavMCargiPJ0FRtMUSqbkaFMSQkIiL0gUNvQWL1ACYznEc5Y0Pyn2Z2zVMOMmURMSYmsTRzbUXv4BbQIlbq.iXAk0PXk2PxzjTRclU0LkZJsVN3rFSqXidP8jdnIWSoMlUwLWNFM0ZBQzMDk1ZuM0L4UTP5gFSMISLSczXsMTZE4DYBoUYOsTbl0lbDYEUGwjRtYmU0cVdtgVTk4lSQEEQtbGcz.EVsM1MAETNscjK2ACb3TEUuEFNw4lP0TVSs4hRoMGdxf1UywlbooUb3bGV5gmM24TPiUlLxrDMQYlKoMjXqLFUxrFaxo2YVAGQtL1aiYWRqXVQh41SQkEVmU1LLg2TtMjX0HiUN4VMTY0M3kSZYgEQX4BRZcWZyTSSmISczrzcME2JCUFbpMETjMUMOUVThMURw.karI2c0g0RmoUTRYSQPQSbnEmZIIEbx.mQFEFN0YlMoE2SrQyc5IzQzEUPFMVZEMScwcGMyMUUJYyX3wDRQEDLtQUPQkibJkWShEVNLk1Zv4xZxnDZ0rlMgsxTzrjbmgzbWgiX0LjVTI0XLkER0j1UXsldhQDczjTc5Q1LR8laqYCZqT0QLYzTmg1TzUDQvsTRmQGTP8TLNUUYrQUQJM0c3UFaoAGbKMlVzbTLFYDc4XWN5UCVoEEU0MFb1M2bqMTM2MGcJc0PgAGYAgCYv3hXscidAYWQDs1S4vTMZMWcxQWbnETUqICYE0DbREWXMcULvYmcnwjQFkFa4LyaZozXQEkYtDSdOAWSZASN4QjPBsFMyHWVloGVXgWMhkkMrUyUgokdlY1YSgzaFAmQAIkPuY1XXMjX2MiZSEGV1vjdmw1YGQla0XkRIIjXyfGLmYyYyYjQEklRnUEVWU1ZZgEc171bWkzY4ESZKUiXqvldqHUR4fGLkoTREUDdZoUbzfTY28FbTE0LsYGRFoWa1sBT5oEQhgkc2ozbxQkUZQTTusjdW4xMS4hbTc2cr8TNrMWVNkFNScVb5METAk2bzDiMAo2ZQszPi0jYoEkPPshKuUiQLQURDUCbtX1UwIUV34VYUQTd4nVMyLEUHgiQyEjXOMicWYFU2YCd0UiRSE0XJcUb44TVMglTtU1LX4VYwgjVvPCM4EjYFQ1TwsxRzkGQsIyQ0D2RIEDdnA0ZqkiKyDEN4rRRkECS3cFdpACQ2X1RUYCNFgDSF0TTxbVXJQERr4DdIAUdzokcWomLUkDbtQEUYwzbhgVLiklYSsVYz.2c0jSLBQETYUWd2MTVXMWUzAyY1D1T1kVYTkDNMEzULoEMwMCRQgSXiMFUrYmTvnUUnkTaWkSZrcCSZQyLUImcMo1bYUjQTITYyT0X0HmQzYSN2Ikc1AiUqoUYvglZoI2Q2QlXy8TcigFLh41LpsjQ1IWbGEEctAmYDoFbAUlczYkUqjmQxrDLMEVXtrxSwEFNxw1JsUDNTUjXnAiQzo1cyUGVZkjVKkUZtoGMBUCSzbjQxbUY1QSRXQSU2AGajcTaK41UZomU37FT071LSMzSh0lMpY2S2DTXMIkV3rFazEGagoWZUY0Jr4RdWEVLkY0UVUmP4clKZkSdFUFa3P1QNgUYWMGd5M1LxHDYWgCSrMCbW0lLhMyYLASVoUTSwoDUxMCT1jza4g2RlI1TWMTNRMyLJgVL1LiSvDzTt3xY4HSZUgTZlkzP1HmVqgjM3cTbqPGd5UWXr4zbFgVRqnWPKkUZCYlVtIVUzHCaTIDdgsjdUUDNNIEcFI0LPEiZPECVnUDUhQGQykTTXEFTSAmYVElMZombZgTXgMDRhY2QDo0Piwlc0ozLmo2cNMlK5MTcngjR4fWRn4zcj4lRzX1JnISYTg1JGIidAE2aAszZsEUROwzXG4hZ0I1Y04zZXMSNZUTRNICYKgDc3UVLr8lQxfELtMSakMWcgI2cOY2Y4TEY3b0UF8VQtIFQ5EjS4XTc0PVcCQGMqLVThY2RgIVZ4HFR34hLyDFcP4lbQIFRPQlbLUDR0nDTGM1MlkUbxcTXikTdssBUvsFZxYCTDk1UBQkbN8FSqvTNH0zT27FaqISVsk0T4UDQ0vjY371LZkiQIkEL3Mkd4cyPiY2Jk4BaociURgkUZ0lb4gERUMkVxLkazUUQLY0U34FZpsDd18jahQlbMQTVUojQGoTLqP0XS0ld5slVwLURXQSPvDVbj8TVKcUQYIjM0AmdrUUNWQkKS8VUs8zZyDlSvnGcggmMqgEdynELq7VP1AGVlgUQF41cuQlasITb0YEZJIDcJEyUx8VQ0wFaIQGRrgidAcDQEAWZCcFUOc0QEkCT1j1Xiw1PkI0UyHTUTwldXEUT1zFMxkmdgAiMlMmT2YCY1MGU1TVQrQkUIElYzjkL4HWYyEkP2QEcZMFQzDlKgMlZt.SPDQycGQENnwTR4gDa0njbLQGNGoTLSEFZ4IWXmICVxvzSvPzPy3TcCcCd4H2SrcmQP4xQs0zZXUDNrslMkkEcWgjRgIlZWk1Z1fkMYklVuA2SAQTLjgWZ0wVNDAkKXUSSwUkVh8DNnoTPJAUNGgkR4f2bgc1ZzMSV4IkPgUmKDMiaKUzRy.Cbqv1TYQTXyDGZDMkTUsTNjI2aukDbrk2X34Vb2TUVAQ0cn4jPKIFZqPjXmsBLnISZPUyJlk0QXsTN0bmVqPWbsMGMHclTkg2b5Y2T2LVaqPiYAUSUSUCd0n2QIYScGcEdi8FbCYWSMAEMvQkYqgyczbjT1P0XNQTXs8VL1YmQUMVcPIkYlQ1YOIDa0nmQBcCLPYjMxHTLxslLVk1ZugGbQoVclMFTI81c3.SbLclYK0jdlgDUsEyUzPFSp4jcX4ldYMjQggUUsYzbMcCaV4xLtzFVzbVbiEmY4EFNPU0Zqb0TQcTZvgia1jTcKgGNy0zZkQCL5kULSkibyk1SyDFLNkTUwDVaKM2cUsDRrgSR3cTVGQFYQcEZiQyJhkkdCUkR5clQyY0JznTchoWMP4xc4fWQMEWRFESLs4DUvjkX3HTPxsBcwLmQzwVNsQjMIAkV4DzSkkSP3gWcxXUd2n1J03TdFc0RRkiYoclZC8zPMQySmU1Y48lV3o2XqQ2bzLiXYcjPQokbwUjaMc2ZYYiTqoVXWQ0LOQmbRc1UJE0RwYTQt4TanEyMqP1SucSPDE0b1TmLtEGd0DTN1MlPqMyPGAESgoDdjckY3HFchImUMEjL1v1Rww1Yys1bEIyUu4hZLEmXNASPvwVS4M2P0UFL3AEQq8jZtfjVSUTQtjzTWEVMEIGYtfDTxLmPqMiSokkVMQ1Qwj1ZrkEYhYkMXwTZpMlMqHzUHElXjUjUwkjX0blPZUScUcUULIzanMmdjAka14FVRklZ3o0YogGYvXFMQs1QBomYKElSzvTdpQEUl8TbmIScog2StPUYVUEN23VbxLETSYWNxYSRtP2cMQGSr4xZIIkVIImPzT2LMcUc0fjQTcjT4A0a2j0TQUkdBE0ZMgEZikjL2ckZVwFcXQjTqgWNvUTSSICTpElLFITavokTIMlaFITRpcSVjYEVJ0Ddhw1cX8TdqnUc0D1bSEzcVgURgolaqTkbOMlc5MFNykkXBgTVYUSYvvVcpkCa1nmR4fiMWoVR3MFS2P0clI0Y1QzPCsxUI4BdlcTLAM0b2fTSLYjT4rVT0MFaWcFbVgFcNMlMgQTLFUULAclLuIiPh4VZIQlUhgVN0rjbVEDV3MCcDomUv.UQ4YVLIQibucmQtQzUGkUdo4xUYYyUiokTIgzS4sFU3slavEUT1QDbQk1RSUzXOIWcycEalUSXUk2cpcTQynkStD2cGkENlsFclACL3QidMEiQwoFSHsjSvQiLkIVUOMlcgYlaAsVNGElYKokUOUjdRkTPokFV4ElKNgkRuYFc2PybCU1SVASMioTUIcWNM0zXEMyRxfWTpIFZrUzQFQCa0TGZRYSSGshYTAST0U2PAcGRH4laYo2SBAGYhQ0TWckPJYDR1sVMOMmYH0jLX4lQLETQugmLsMlSHoGUuA2ayIGNXE2XAYSUMc2TJkSMH8VTmQDc2YmKQ41JqkGZQQVSxPGN1HlK1fVQDEmLt8jZLoDRzEGTxT2algzQEEmTXUERvMmXngSLyPDSZgSUKo0Z3c0Z1HTbvMWZjQELQgyXV8zM0wDQE4DYLQDbZoEQ2bSYVkFYGMkaiAUbw3zXJglKIwlbz4jYyH2UuYWVAgDaNgDSmAWLtnWXjgUQgU1QEwjXzoUUkI0MBYmSE4jdvLyLCg2YD8FUsUjKykiUyQld4YGRyAmKugWcZ8DdiglPLwzJqMWTqH0ROYkLOMVLToURjolQKMkcPsVLxTiVI4zbVMzarcWL4fmdwcFatL0SUUEaAQDQwbTZJIEatoULSM1bq4lMxUkdokmQvjUc4DzZRAkMQg0ZVkUZOY0Yz0lSDshUqXUTpkEVnEjYyrTSw3FL2.Ub3jiPtHWY3IFSv4VSBIiXzX1UMciaKYzaQkjX2fGaBUkZXozZQEkU3P1c3sFTOwlTIE2ay0ld0oWPnU2LNIGU2cFRmYDaq7VYqn0P1oFRy.SQHcTbiw1bvshdn4VN1TVMYo1ZIkialgFMgEzJ2oGUAIFMwUEUIUSN5A0MIM2Svo0SSEzZUYSLwjVQ0byblc2RQ8TTZ0ldoI0JRQjcz3lL24BawP1cUU0SvbmL2E0LQUDbrEWXxoGRo41SMcFR1kjdxHzLqkzSrwTNDo1Zh41JBomMMYlRBUSYSQETnYlakckbY0jYwjiaBYkVwHTZh8lYIEzbBEmaEQyJ3bzYOkUXwgCUDcSNyQDLiYiQu41b1njatk0M3oWXkEmKwQFZ3n2MCICdhA2XZQDbLkCQYYCcyozYNEzMIwDYWwDREY1RUUycTISa3UkZRomR2fUaNYEVqL0U1HTViQkSzYzPvnmd33DLyX2JmgySqEza1bFMzkzJJA0MmUiVRQmdNcUbigyPLwTPmYlVk0FNkUUctDGbnIjUoUkaqn1M1H2X3DDSG4lY1PDTTcVYYcFQ2HjQNEzPMIiT07DNZczZ3X1RkMVbBEUXt7zUVc2aEsRSggjdwLmKPQCbKcGawUjKOcjRSMiUAUDQPoDdXsDc1IVXTYyQlYlcqYWTicTL3cUPwLFT4TldAESSrMjcLoVUgcEb4cUPhoWTzfEQKsDcQQzcwvDM5o0UQQ2USAEVvAST3f1TBwFTlM2ZXAiSuMSQXYmd2TFROM0UvP0cp0jQvg2RBUUbSk1T4ImcvnEcvb0UoIlcrsBbi4haB0DLyrFaSA0SGszQvPkQpY0QyPTLo4jdNwVX0fCYzTVZygWPY8FbwbTMlIjbnUmL1AESSg2RzUiM1o0TyICV3ojRYAWVTklVOIDMtT1QVAmZEwzMrYTU2Y0MTYWS5YlTnUDY4.UYN0jUlYWa0PCdXsRNoQlSXkCUlMiZvrFQxfyMHoTTT4jZyEiVTMVPVwTN2wzR5E2Sp4xM4TibygCSOACQvrFSD81Z0TjQDkjStfjRtESQ3I0R2TyQQUESEAGa1TWRTM0SpAGUk0DYAUCQvMWTiQmSr4xXzjUTjk1UlI0RBUSbVICVLcEZCoTaPIGQvrFYKASav3TYvUDREcicuY2MkoEN0c1MxL0XlIVbVUjd0MVYwMGdiIkZKAiKLUiKqEjX5k1JWIlTKICUkgycUcDRyo0LIE0Xog1TDI2ZiQjMDMGSvHyQyD2YlcVdXsDSxoVXPgVZqfCMOQFS5QFQrgVP1HiTxLjdQkENyfFS2UjYu8zQ1ISZVYEYMUEcwnzMvIyZ4QzbJ0lSwDUZPMjaxTWS0gmUlMmZKQlLz4RaOMWcncWRF0DaGUiZqsVTVITUGsVN18jVzEVbHwjaqzDQtPGbDQ0LD4hbsozM5cmZgUTTBElXHMCRpgTLxkFMTkmK2DmLQgDUDo0apgkRLQiLAoFUK8FdEgkZG8jRiYDVDMTbJ0lSlAGMOYSV2Yyc0UzP5UWVyHFcuwTP3P0ZK8VLNIyLGgkZpUlYvj0LhoFSvYlK2M1S0EVYAEkTLgULuAmUtUjYmMTZ4flLuUic2UGb2PzUKQCZC4jLgIDL3IjPW4BQtQmUZMyYAgjQTsDUXEkLGUSUxsjbLgmLQYSVhoFTjICbXcCdyTEMQMlKFsTTvTyaWIUU2.kbNgyLEYUXToDa5wFdy8VLwXUa04RUWIGTvkVLt4lTjY1ZGwzX5gya2blVDAGTAAGMXMVbnEjPkEWU1gkT0oEM3TzMgYldHsBRV4lVqMzRY4RPL8zUWQSYGg1coM2QzjVTxETUmMWNFQ0aPsxMzQzPSoGUm4RRZMyQTIlPoU2Y5kSYqTjXwT2MiwlKmkiYzUjVhslT0LiKUoUdPcCZR8lLynjSUA0QzclbMsVPTc1XAM1aXwlXsQVTN4zcisTNvfWRwsFR3QyajQyMkMELzEkSzPlPEMkQyE1YvEzM1.WQEIVUM4DatjULQgWMGkELwUUQlUWYSkTdwAyTx.iPxT1RRQmTmUzSkwldAM2JQcCS1QCMTsVM2LUcvLCMRgEURkiVSEGduQDcqj2SBsDaxozPkgkSZIWXYU1P1YUbxj0QkgGT0PmPtDzR5MmVEMyJAcVSkclUEgVLyo1Z4HWPEgmLB0TTIQjQzUmRhI1X2fTQz0jK1oUbqTlXgc0XKQzcpcyMyYUYrA0ZmQ0ZOEDVAQDdqkjPqbVSukzZFUyZxIzZy3xcM4DcvHjU0UiXnM2MlckVzPSLhIVNO4Dc0zjKKgCVkgFLvEyaXclLlwTQxPVSuoVX4ASZ2U1ZLASLTQSYRMSM1AiSso1SqczTmgmdQYVTjEyQqoEUFAmTnASZOgTV28lMwQ0ZmY1MIoWbqgDYnkSQMUGTmACMoEUYwUVbqAEQBcFMswTPVgGYTYFbvc1YUIEdE4BYsMCR0.WQx8DNTEWMOYVdDoFc3QlZkclUwrhP4XjMvkSbKYWaRcmRRIldkcTUvjERAYSZ3gUSZIjcpUmLQMkT3TSXkUGbtPjdNEybOoFd2IUYHciQK8FVWoGcyXFSykkazoEc4.ENBQEVoMVdAEiMCUjQ3EkKmkVVYQSLzXkUvjmRNA2TjEjYD8DTjozX5UmTGASaPUTPK41TyDELvzDRxzDaZQEQwrBan4zY3HCUC4jarMjRX0DcmU0QYszLvLUSRMlanY0Z2kVS4XFM031Sy3jMvo0QvwDY5QEU13DQm0VbVQ1ZssVQxjCb3jVZJAUMpwFTxIjYvo1ThkVc1jSYjcVR4HGU2fTTvUDMhgjRJAGQv0Dd2rFaOgGUtvlRjIWNXYWXMIUcB4zX0QlXBQDRpQDaZkWaQUlbwjWPycya38zUX0lRhYGcHEScZgzY3Xic2PSMqAkR1cmVtk0JS41M0TDUzjTMnMjatn1UB8zZMMEMRMUQVgjLmIyLlgkLSQVXz0TcVcUPL8zRCYTcnIzZsoDcV0lUJc0TxzDMLAmc3XVTqEkbr0VSlMVbwQzSXMSNAI0LrMlUtMjU1rVaocmP1glYVY0cVIjaY0FbwgzYvr1Jo4DSqfFTAYlKEAyQCMUZwgWMhIVdugDYyjTbvo2SkYSbBo2MlgGcnIkU3TiUoACQAAmU1TWYzM1P1sFVM4BciUWXiEESMIjaTEiVxwFd3TCavEURhcSSrUmaxX0Y5sBSyrRQnE2JiITbzQUclQmYlQkYhYmYEoVVxgFbkUScxH2JMYCcn8DdFYGQSoUTAk2ZtkVZ3XSRyz1bqPCTN4DSOoGZWUERXQGSp8FQ2X2ZwgiZAEjTgMzSTEEQ2okb4XEbHgEdHslT4UjM03lKQIlKtrTQ0z1RlcicYkDYJg0a1kGTOQUa2.2PwjmbNUzZLEjMzEDMvEVMgkEdjAyUXgWdLYEYk0lLxQjP0f0XSMWZzjVMqoTUzPSZzIldZUScq0lZVMWXAYiQVEzb0XzXgQFLusDZqYySvYUcg01L1DGY3YDYOYUN5gycxbzUPclQpszRCUGNO8TYB4DYAIzahgmUn4DZlYURlAEU2Y0Y1PTY1k2YAsFNvDkMXMybYciUDk1ZCUWYJ4xPysjayczTWk1aCISTLYDYwMjbwDkTnw1a3wDMHIURFcGbEUTNRclYIIUTkcTN2zlcJkzJYshR2rlQQg2UG0TVHQzR03Rb1kyR1w1UGczLwX1S5UiMroGa0gjdPgEYrAicrIVPLkmcP4VRogWMsolPKU1MAQEU1HiMVMzco4FYZgEas01Y3EmS5MEZiECb0nWaykGZTk2cj4RdyHzMPsxJjMWUQgkSHw1LHg2UCMiZNECUFETdpcCRJolXyciapoULLMiLLgFRwgmMEEFYtAkMNEGNTQSRyXmZuQUVAoFNggSZA0VPAIiVVgFU3EUVRE1X4.WbrQTUzkkZiojQxjTX4H2TOshKtXyR3jyJY8jXMkGatc1J4k1JNozUUYUVZEEUpw1R0kWQAIFQvY0ZvM1Q0wzJwfTQrACa4DCVX4xMy4FZWojUXUGbWgyZ2QySUEkR0o2aHQWTtPCTQIkZFUkaqjUU2sDcGI2ZjIWUSEyPRYVNGMCRCYiM4kmcxDVYkYyaoACZKU2Lxk2SJ0zUOYmKwD1MCEDajszS4MiL5sDMMEiRg4FLGI0SPgDYAIDYZYmMS0TayUVQzbmKzDUZAImUT01ZQYiUTkSMP4VTjk2SYkmMHYiXsc2b5QULq7VVHESMzLFTjUGRMACTvXVM4HlUsIlKw.EUrwTbDU0YXY2X2MzYJ8FVtn2TAsTdygjaIUDbOMCSvQFMGEVZx4RVvQkQtozYUMlaVAUP2DmUoUTdB0jdyImYBc0Ztg1cxL0XkQVPlszQFACMIIjczX2XgM2Swf2LkkFdNA2QQAkSlQTcpQSXNMiQx.2UzLjUQ0DbyD0TnMyJwTidpIyM4gFcJYWVmEUajQlLUEGbgU0Lzg0aWwzLNgSc1ACcqg1TR4FU3YVbqLkamoFRsIjKrcjcHcUNPwlTvQVXIwVQMY1QUcCYNI0SZUUVHIkQwUSbYklcygCMKcDLQsDLTcjM0YCbwTyanUkXgQ1c47jUwf2QlQWPh8TSwvDdMImRQMVbzrhMtb0Lwg1Mwjmb40TRtkiVxDSNvgCZMEybIckUzkyPVU2buA2UDcGayLyLTASYS8zZRAETxoUN4HSNtDVRgEFQ3Q1S0Ymb0olZzfzZOAURGQVSFQmLgAyXD0VXFojLHQUVv81biUibqYFQN4FVRgzb3v1Mg4TQ341L3IGbPIkUQshYXE1JxQSYVETX0wDR1bSLvEjRHg0PsgEVU41QIoDLnkTa2TFQPY1UqQSMCcUQ3n1LFU2UVMSXhgyL2Y0PugkLJoWYo8FQOMETHgEZIomb4PWXt3xSWI0PxoUcwD1ctcib4XyP08TZqUSYhUlZxkkXw0FV2IyPmQlK5gUMwfmKQIFaXUEQWcUTxnEdHASS2sxRuMSUznmP48jdO81cw0TUSUyXTkjU0fGYyjmZvflckk2J28VMRYFM3kkXtjUTx4jRkElazE2cyQVXtnzS2DWc3PidBEyMHk0MBcVPhQyUnImZ1kkM0IlM2bzZ44TXF8zcLgSb2IzJ5Y2PIgUdkQTPvgyRHIiciYyYSQGNyzVPnIFQggUQTIzRFEGYyXFU3U0atPDT38DL3jSQxHjaLAGRr41ZIgEVJ0jaV01SgUmVME2RDYCa4LzRKIVTjQFUC4FMAkmdUQkQpYkaNg2J2T0ThshKybiQ0sBUtEjbnYDNBkUcwjyPLkiQkQyX1Uya0nWSEAkcPAmM0PkQPElbDM2ZZI2Pzz1XYcVd28zQ0clPzYDMicCdLYkKzfURhMmQpEyUVQUQ0sVXNkyTxIVXtYTaRsDZpozPpQUYm0lMxM2Th0jUKwVc3zjb1IEdH4Tc3YVcLcTSoU2Q3omPE4DUtMVTxwzbXMWc3LEdFEmSyzlLTMGQlIFZ3MDb4HELF0DZ1cWPrIjdqMWLrEENAcTczIWSBkUUDQUdnsjQPMUUJQFdmUTYZIlVColZ4kiK1kGMOc0aq.SRZETaXgmbuElUNc2MgE1b4TSbkACZzbCLLkmXx7FbmQCQi8jSqIEbC0VSFkjMnsFZKUDaAQGdRwDSwzTZjkyR4gSLE4lbtLUZvDlRxUCSwsDN1YTbEA0XJIySKojTIYCTJklLXIiM3UGRAc1bJI2Sw3zPU0jY1L1Ung0MHMzX3UTPNAUTiMVQynzQAQlbs8ldwYjSx8zTWA2QUsjbPsRP3Eic5oTSA4TL5cVRTwFUwTSLqvjZ5k1ayb2b1Y2ZAoDUoQVdvQyZB4hY2I1XtsxXCsBd0jTMhMCY1YULVshSqDSLtnUSK0TaJI0aLMldhM2Jvw1LgYGR4kCL2jmVDUmUyMGZVEUdNAyP3kUNm4xRioWNVoTPRgzMvECVocSXjsjVoIlQ0.kZAoTM2fDYhkVY0IlM1PSS2IWRtYzcGESYmgkLiUTZCMVYgASY2EkPTY0YTYWS1ITYS4DVMYiMUomUiclUwQyYtXiY2njP4n2PMElV5gkVwQDYjM0P0wDLLQUN3DVUQYGcTgmVuYjS5MDUDcCaw41U34hZtUST4fTdFEkYtTTdFgyJKkjcDMGZKkSMRMFVEcCaNU2cqDSY4LDY4fGSyXyS2MVVsAmd1bFcLUDYKgkVIMVVqYmUqk1Q4oWVP4zLngzXyU1agwDbVAmcAkkYXkWMyE2byYmMsQVbxDCaTYScEMTdK0DVNMWMN0DRSIFSBUVTrs1XuwzT3AEYLAkYBcCcsIWTnMld07DMOQlarsBQDUkSQQDS4bTdGYkQ0rTUsoVMKoUS3Y0JhYTLx7jRLo1PwDiPsUULmgWSzbEcrwzRREicAc2Qtg1bFMURmUVajkzM0Y2QMUidXA0JKgkKzXkMn8DQ1wFQoElS1PUXE4hQnITP4cGSLQWRDklYKMjazbiVJ41YY8VUKIUcGIybsQlL5YkRmQiVls1bqETbqnWcv7zbU0lQtEiTUwFSHA2TmkCbVIVVBshPXYSY3bCNgk1bMslY1c0S4.ySo0lQUE0XhsDRK8DNQMjKZ0jL3XFdmQia5sxc48FT27lSBgSMYEyUiYmV3QGLZMlTnQySGAiS2H0YMoFNUMVS0YlVHgyLS8zaQYVPGYzRnIGaykVbWwjTwwTbBslYwQzLUoFbKAGd3cCUlkmXNImdYIyXxslTio1JTszTNYWb5ckT0DEdJ81SyU0RGEmVxYyUoUVMmYETMUzYSkET0YSSCUTU5AUbkUTauUTNCMyZ24xcgEmZmcWdLUUcK0VM0EFNxnGUq3DYlEkMTUWPgITdVMld3wFMzDVPlUyYmUGR1DjbZECcvQjPwczMkIjZH8jUjASR4EyS0DEVQkVdwQmRPwjYtPTbvEUY241a0.Cb0TDLwXjLrcSU1cyaU41Yl8VSoolSgclVCgVc3bjUtszPR81JN0FbIgSZqImLzEmMPY2QioTLUgGVqIkcwgmd2PjQWQUV3QCNxEEaX4ld5kTZ2UCVnkiRT0zb0IldqsRa2UiVzzlU3.kLhkmQt7zRmwjYuUFUXkidmY0cgI1Sr4hatHUR0DkKn0lXyLUS2PzX0USdEckT0Y1JskkRCckMggTLl4zPSAkLzslU3LiQwk1TwQlYoQWPKIyLAUSPo4hPQgDa0vlKiAET30DangSUiIzQvEVUJsBVOwFY4MjMXg2U34FQJoUaHozcHI1UV4FQgokSx3DVzfEUxgSPJglLxjWMtzlayoka3rhL1cicj8lUkUWRwE1LD4VM1gGa1MWYmYkSm0jL4MlSvLUM0zTNy8TM4bWaK81LwDFQtDSdPI2bxE1P00jZVcVU50zY1EjYgI0XmIzQ1nVZJA0YzXzJqEDQCEzMigCdqkSVP0jXyLkZvPFd3TGQGkkdz4DZpUUc1cEdIUTaPIVU2EWYuEScT4jbFkWS2PzZSQEVqQVYYcUYm0zLRsRRZgTRqMjLvn1Sk8DLTozRU4hZ3MCQ1UUX1LUZvIVcpkFbqQyQyLlL5QVZXM2RtUyTo4hd3cycPgVTqDEd2cjYkYWcpYGSOMWNsYSS0LmT0QVYmcyb5QictjmLwL2R4ciL2UETHozRIcjc3.WZ0bUQoM0MQYkPWACNAImdREEZLMSTxgUbxMyM3UkPlETYLIVbio2XVUlSO0jdFYzSVQVYzfVZQgyXNcWUrciMhciPqTVPtXFYpYldoIlSpQla4okSVklbEcWLBYFMNU2QoQjMwYiQMY2JnEySwDFTFMUNwXVN1LlZQIlMzYFSO8lcYUzTEAWVtrxTCMyUqgjTNoTd0zlP4LCVhsRaj0FdYMWTxYFcx8FMEQ0ZGokZ2XVc2wDVGwFS20VVuYSZkMiYpo1cJYFazfEQkIiLoEmYZYSaEcVL4sjdnQjdOQVPqo2Y4kSZvfEUIImb0DUb2gzXHgER2jFdE8DYgMDdpsVMvcUbuYEUFEyYq4TdxLldzIzTSgkdMk1SigjUvHVPIk1QUsTYxTjaEkkZDQGYtHCYSw1T0sxcl8FYJo1LNgDczESZyUCNzETQHEULqE2aJ0FUFQUUiM1YAkFbPESV4QkSykSZNcUbyszJGYlaGkVd2kWUtMWMocEcoMFS2bFYXUWaIkUSxn0MWUUMOojZ4MjXpYkQKsFSucVR2XUYnshSToVXREiRTE2UYIVXRYUMCYmLrETbhgUPqbFMTkGTuITVYUEMU4RamEkRybia4MEc3EldCI2bVshMFgWYrkUa4bjMAUDQkU2R0QiM3EDLvoULJcUNp0lRQEST3EUaI4TZ4fWdowTciEkcu0DZuYSNXUWXuoGRqMDU3Akdko2bo0lLx8FTmQ0LFUSdy7jTRolZKg1MDYVbR01MtrjdVETQhIUUAQzQCASRj4FT2nlYkUETPcSMLETPZcFYAQkV1E1X44hUN4jZHYUaLMDSsU2MEk2TTMka1LWL1AiQUwjd0cia0fjVAgFZjESVWI0cMgEYKAGNM4xZtvzROEEZ1gVVVITYPojPSwlZ0QzRx3Va2gTMFgUa47lPyHlToYlVNYibrgkSyQFL3MEcFYDbJgDRiwTaFQ2LkkVP3PUXG0TZgE2atgWZ4o2LrczXKEkRhMDNoESaBY1LSASbCs1Mt3VLzE2bXwzPDAGNoslLTsFQ1DTYyjGczLiRZ4RZxUEcrAyXXQEcFMjdGIESvYGLxXjZwUEQYIzPq.GMq.GSoQyUx0VcgMmVyMUapkzUqQFUDgjKhAkb23xb1jDRiIyTScWbu8jTJU2ZLIUQVQzUNMkUQomLIk2b3DFTyITUJYERWkiSUkma3ozRqkEcDkyXrQ1XFEFQ3b0UjsDLQQCTikTMkcmbwc2RTYFLgsVLvzjYpQja0jWZzfCZLgyTiAmQR4xU4MyZJEzXGI2LJo2aXwVVCM2cQgSTY4hXyc1PDUTNx3TQD0DRtI2QRAUa50TXL8zZDMFVAI2cOoUZFs1atjGMRwjQ3PzczrzbOAiRj4lPRYWdEIDdUMCRFkkUVwVUnMDdEoVVZESdKcFRgEDQ1QSRLkzagoGV4fUPNEVQso0JyoVR2TzJJkjdDo1ZgM2YTICcOciRgkiUt3hZ2QSXWUGM3nWZ4ISTqgGb0jTQZMCdqESdzIjMl8FTyQmRFsTRHI1PpImQ2bEczAyLnUGLVsDVukUPB0FT3gGcqI0LjoVckwFT3sxP4k2XkElcGUVMyfWYlEiQWclZyQyJtbTQMEmKqf1UD8TZw4lQA8TZyshQFIkKAojdvYyMXUWXwMmXF0TT1zVNuIVMSsxc0fFV0YCMmoVR3b0ZSkjY041btYUcMoWYzo1SEcGbroVbJwjVWUTUyP0JrIVV2EVLWwTaEIDMmAWbvIFY4XWVzvVP1j0Uxn1RssBL0TDb1Y1Ytrja4PlUgQzcwPkbXkEQjkmM4cCbmIGT2TCdyr1RBg1J4T0QhoUbnQkSwgCVgQCR1kkdAklMLYFTq7zSjozTDEFa4kUZRszUNQ1PFUTQ0QTTwkiR3ECbjgURWQUZhYCSGUyaQY1ayTVRUcVPPI0cpgWdzrlTxkEMCEkQRgTLg8TMrkTTAIlUYAGUo4lSsgFNnoDcRsBUskSMkkVbik2JDsFbOASPNIURMoUMgYzXgkjTjclZFMlYkcyZkICVUU0PQM1TCMkTnsBaXcDU0TkXv4DVUAEQIY1MKAyUrcDdCIjRC8FR4fzQDgURuckXzbmQBMmL0UUR0j1UAAiZDY0crITdpI0QlYmRv8zZxXVQiIzZYISa43jKp0jLtrhbUgVaFYTbpsTSwrVQZQmKGIjTFMkRxTCN2ojXJk1JGQjSqQ2cqfFZ0DkT1.ELl8FRkMzMMcjcRYUUhYjVM0lTC4FNWIDL1Y2LBc1SNEzM0cEROQmd2LCVZo0UBUiLVsRTso2PwDVXOMVTxslcG8VcuQ0c0s1LukidCIzarcWdGUCRKcCQhUTT0wDaUYkKQckRhECdzMidjYEQn0DU37TZ0gSXzLSbLkUPtICM3QTPXEzPCAya2XDMIUzJWEjKCIGUTUDdH8DN4cTNogkLGQFYHA0M1XzcVckXj4lQToUdsAiQtUiVLM1ZWMVQtbVY3QlLnsTVnEkVBczUCE0JUsBZlUFTKMSMYU0M47lLUkTRnEmYgYyZM4BbqoFSRUiYFclcwzjMWoGcUEUMlEkMMM2TBwFM2wzTtA2QzYCUzD2ZG8zM1gVcXE1LtoGYloWXtPFUP8zMN4xTvIkU4rDd5EkQAUlLCEWQRYFQyT0cWQTNAUFYUUSSqsxMNcjZGwVYqb0cFYTXPQiVBUicUg2YGUjaZYCdykkZqASMSYkQWszJoMFYHIVS4oWd0kVPWkiZtYmRNE2Rj0VTq.0PgASQrclbQgSMlImYKc1LtT0TqTGaxXFThcGQCMSc54TYIYVbvk2UqvVLKkVRooVXg8FTNMGNMcFRK41TUAEV481MyDUT14DdHwjYvI0QPISTVAWQHECNhUVVkkzPBsRb1MidWEkXqg2UVITcrwlUwflc1QSdHEVTsokcqw1RXcVMzkyJi0FcIQTaqHWRmoUX37VVJgCL3YGcmASTHcmSgYjcYwDcMwFRqTzY1E0ayXUTgQWcZEUTVQDNGo0QPMkMIIFNRgzamoFRjkiPNYjcyAUR2ElMwgzYtciTBUWaosVM4L1YUYzaSclUT8DV2HTXJYDR4M2atbGLw8zX0bVVt.iX1DWX00VLm0zPHszXFoFcMIjYOQSMqDGRoYEaKEGSlYmKwAGV0ckbzojVzTyYMYkXTM2MUYCQrElTy8jROIiUXQUQ1YCazTTMFshS3oFR0jWZ0HkR5gERDUmXQYFVZEEawPVXEcCLIkGSXcVaxMGawL1M1ojd1EVR4UiXxcDUp8zXq8jLiA2bzo0U1HGdsMSNzcWS4DTXUkzYhMkbZIjQCYUNsEWbUkEbIAWTjg2JZU2ZPkzJlQlZEsBRHwFLOMEN4nDcvcyXEgkPZY2MvgiS0wVQZEFSyb1PyEFMtLja1wjZ0EyJxACcFolMvTjKXQ2cXwVcO4VVhk2bBkCQ2YWV2TUM2MyMngEbiQEcvQGcnojRSwDZrIVSMgTalYTdMIDbxgFLsEzJOQUXDcSMZUzXr4DcTgGRWkjMVo2aUkmMIUkVAUDYGcUbSYTSrgUczcTVNYDRpAURp4lLAYyZvnmUV4DL0XTbIEmTAI0S3nVXLMiPxQlZkQVXvEiKkIWZu8zPIUzbSEUUgoTN2oEVsYGTzITRH41JNkUY2fFN4vlLjkmd3LVb0IEVkMWVSYmUvHiVPcTNWY2QIgzcuUEM1okVk8lc0HiS0Y2JqgidwXDLtD2PAsjX4P2UlsTPxEyLtb0RscFQDEkKII0Jh4RQWkFT1P1biYjdvLDS0UDZRoGLG0DNlU1YUIFNPE1YTgETpwTPQgDRJY2YuIicuIFd1jiZi4hRZgUNtDSXlYTP5MTTCYyR4nWStPTXhg1LhcTbgETTMk0RDISVJYTPpUyQiMUT2YGd5gURQcjcoIUR5QmXzPyMCYlRw7zPNwjQMAia5w1ZsIUTsITbk4TZlMGTuMzT0LlVokEc1T2SjUCRUoGRLEzQtbVL2b0XgkmKxzzXukiLxbVa2P0JXUFS5kkXvPWaqUlYPEGVKI2PZMzUAYyUxAmTwI1JqPUNKcSRAI0LDQkLvMGYLIyMnkUYCcVMnoEdE0DTxIVY4vDbJYCTBUWZqXyJtTiK4nWR3HDVwTTUnECV54jQqciS5kWTqQSMwfyZ3HjbIsRbWUFbGYDVHM1RUMGbJ4jP2k2TqECSTYUYxozSUM0bK8TL3zlQgEzYh0VcqgzUWEVRq8zcMEWalYEZwgVQXgTUSwlPzrTUHQzYh0jSTQFRGQCdzzDYjICLPM1JZM2MEI2XQ4BaI0DYroEQ4biaqjia0kzcMYmaso0LVQyRGcTbiwVU0kyLxUiatIUVlUjdxP1QEsTQybCQlEmK0MSL37Daq.2Lw3VdFgTR1kkdxDFLwf1RM4zPAETVvTSdRkVZwrBSkYETOcFcqQENu0TblUGdVEkQvrRTi4hMJESNlciR5I0Y3D0LPUCV0jWXjUEYBEjREIGZvMGT2.STvIVckcDcDkGZRM2SVMjRSokRokSYvnGRtg0QqkjdFkEdRgDasEVP4PSSPM0TgcEUGQ1RlolKpoGTMUjYPEWbooEbXUWUAgiaLcmPrASb0nEZOk2YLcGbEoTPCgid54lRoEFSmE1YSIjYv8DTSY2UPYGMiE2bjwlSNo0YoQ0bFQ2SVE0LTE1XkU2JtA0T1cGdgA0JlIzMSI2LAEyMxomc0gmb0XzQGsldukGYCg0PCM0J5gVaxP1T1YUULcDSxHycvnmY2I2UJAmMlIDZP0lPxYiSSUDVBcVLXUEZRcFb2jjMToDV2DmdzciMxcWLqb0TvYzUg0VTUkzLEQiPWIVVvXFRZ8jUrkSYxwTQWY1ZJIUZjgGdyLWNLwDcB0lUCM1TLg1c3U1L4HEZg4jKpUmSHI2ZjczTFgmVREUdw8jYZsDNtYTVYUELxwTVlckdNoGaRAmdzMzZyHEQSMlU5IVYtYWbYQST1kFYR01bjYkbwgETwYCTxcEQOUlLxn0bhkFa5gjYlMGZ4PkPFQERs81QxwlY2rzUZgDRz4zbVIjKzTTRiUWSXMTbZITSVYCRPsjdsgWV3zDQtIFTlAiQWomPEkEYHQmUvLjPUASaEcFVPoDUBwjctj0PzjkQEMEZmYVdznGcNIzcTUGdwAyTj0la1TFY3HDM0HzYwciTvXWViAkQk0VNNc2Ul4RVyTCTPwTVLAkbPEjSjETMAYDUD4VNksTawsBNloDYBshdXQVNAgSV1LyYvPlLEg1R1jkYxQ2aq.iPqUUTYgFTo4BYnM2RoEVQLo2UNMUQt8FYBUEUHcjSREScIQTZpgTdvslbzAiULElQskUYsYERzYTVSkEMBslM1fzPXESdtH1MDQmaFIDLQcmRyPmd0ElcqnVbxIWUF8VcncDZmU1ZEITdYgyXMcCa0AyUBMWQ1XSQ4D2bgEUZWsTdmUkbDM1TCQybosFSg0Td1PlcOszMqvlXokUbhwlbVgSa1nFSBAUSFkVcOQSYGEiSwPkcDYEUpQDazv1RwXVTB8zQ33VMkI0YoISYxkmTrAmQvIycrECc0gmUDg0P2kUMrIiMqQVUVITX2EkMCckPZEUNXwzb5wVUFEyYY4BRPImbTkyQxbFRGYkT2AmT0fScvQUTE01YBYVQgwlZlsjTOUzc1HTX4TVaPUFMCgTUyEEbOc0QzEmalUlLtAmavrDVnshXjkjYnQ2ST0DRKE1LwLSUy81XmA2axQidq.0TUUkUS4FYCM0QywjStjiTQcGarokKlQzXyjyURoEa4TkYMsTNXgzS3fVLmwFcmEVbF8zSFEGVDgWPKwTVmgjL2bEVx7FQzvDQuYDURYTbzr1bs8DaSYDZYQUMvMFQgsjKuQiTUozSiU2Uh4VQGwTQ1U2cTUySpIzSYgDa4YjVBMTc2DFc5kicGUVZEciPzkDapg1P3HzTvPUNXYUNtfVXNYibngjUE0DcnQTZSUUNEYGakI2MwsDZGMDbvLzSPcWL38FUuUGT0TEa3jVMuM2JAEzXLIFbyTzX3MTZzXCN3PFLg4RVZAUZX81SCgSLEIGQjUGcyIyUJQlT3flbrEmTzPkPYQCdwL1ZwIURN4VcuAmd5ozM3fmP0fyMtUWcP4TLAcSRkIUTOY2PzwDNugzY0gTZvUEQ4DGcv3BalkTc5QET4USNRQiUQgUYtslYtf0TgkiTykTQhcmKD4FRSgzUx7TLLQzLx7FQi4lLIMicPUGTTAERxTFQZMmXXsjb081TxDWcuQSYwPGcQUDL3cVaEgCZY0VLvcmLGciKSomSowjYl4VbIgFMWEGV1MERHMGTzoUQyvDTVUUQOkyPUkmUyfVc2DSVv7jXzHjToUDQGsVb0g2aHMDVxDGcyETUzY1JA4BRPMCZYIiQFIjYq.mbvsjUjcCTBISQMcFTyTjapwlZQciaqIyM0YlaIcTLI4RT1bjYsAiLUgFYDwjR2cWcLMjS03jXt41QMMFV3zTYZgCNxgjcQoUZIUGUY41YQQSZ2kWXNE2SsMGUoUCTzYlTmcVM2D0J1kkUvX0UMw1MTcFNWEybYYCayMkbD0lMDUlM1n2RxoWR3HVUPozMvsVc5IiSuQiKNklMKsFU2TiQxLkKEQmVkQSd1I0PyfyRNAES3H1TKU1U4LCNZkjLwzlbFQzMYUVU33BYz8FaiASPO0jM2jCLuY1YRkSN2EjSl0lY2IjKFISPqPSUyTmc2bDLDAUN0cCaOI0PAMEb5ETbGcVduEEbCUEMU4FNhAyPjYzcuIzLQU2TxDTbZMSNjQFUqH2cUACRz3RSjMUNQUlP0MEQyg0QYkSTuIDNqcCL3XyURc1ZEkyRqgjcCQiaz81Xwz1ToAmRBMUZsoFMmslUxcCNnMjZ2QWbSM0JIoWUL0lcUc0XzomVoM1QGkWQLkTb1DmKN8zJKQjMCgyU0HkawsFU3DEdxbzbtk1XO4lbUojL2YFUwvDQTgCREElPu4RcRQCSBUlSIkTP4XCUVUkRh8laVYmYXElPqgWaLIFc1bmVOYlRgQGcgc2cwLTZyY2RQA2TJESZ04VNNkjMzkCdHo2XhEET4Qma1QkRwsjdiE0bTEGU0bjaXs1aGcicSAiMKQyMUglULgiZiQ2M2zjb4fiXpMENpYlKNklb3T0SU4FVN0jTrMGQynzQJQzR1UTXw.CdMgzQhI2c5ACSTASNz4DUzsRR2PGRok0XBUDdIUjVjo2LxXUTmgya2YTXVMWatXzSTwTNyITNrQSPNYCSzYkXqwzUxDSZtcWNvXGSSUlUSEEb5wzaxY1LC8zYNczU3AyUpQiZsEVY3HlXjo1aoEUZAMzUJ4jZic2UEQWbC4lTRc1JGY0LgY0MrM0LwbSZiciX08VNQgSNyYkbzHGdqHGQJcmKtj1bWs1cIgUNsk0Tn0FVlwDUJ8zPukVLGYWSRMWSEMjPx31QIQVQWYzQZgmSWETaW4lUxciS3DiSAszLXgGchE1SJcibtkiatM1QEETbVESZBEWXgw1TFIEV4njRscEZlYTX38Fc1g2ZNIjXVQiPwEVZYgESvYDRkQiL3E2QXAUMqEEY5UVaOUVU2EjQvQkRjQkVlQCd2YkRFQUaZQ0Qoc0ZiUFRBQTULEzJwjkU2fUTCMGR34lYKMkMlA0ZVsRdtXDSRUiL3QzSNs1TqshY3X1Qt71cTASbPISXtQkXooUPMgVcvAyQ30jdCEycv.UZRk0QWMiYIQiYpMyb0bFUOUzaxv1ZCEiUAM1JBkSZCgEcqfzawrjbiQGaBcEQyTTSo4jKDkTclkjUzjERwjkX50lasUmQWY1aXMFdJ0DZ3o0M0wzXyI0RwEEVPMGRR41axEySVokYAcUQTYjRygiPBIkROQUUjokP0TlYpkCaBgCSZYUVioDUMo0TH8VbNkjckAGbL81U0LiMKwDcwvTd03hMpshbrU1ZwomZR0zMkEWbt3FQvr1YJUTNIgiPKkibpwVbEcGZ2TFbwUGUscWY0.GQCQGZCICYpYGQxbGVoQmQmgyR4UlS1XSXnMybxk0PVEScLcTYygjdzD0TnQkbng2JLMkTznkXV8zcZAERMglTuETNTcTcU0DMxEUU3XFV4v1UUcGZnsxZCECZ4zVZIozL1kzSvAiQR8jZyM2LMEFQGU2QyTGQxAGLPQEZvIjdAQER2DDc1rlQSIyJvzDRqYEd5g1ckwzcTMmXtjkQ1o0RMcGYLEjTk4ld5clZHkTa0MGLzv1UvHSUI8VdVozQHgTZxgSM0vzJzvDQHMjRhclV4IDN1QWPH8lLsUTLvvla131ZisxMYQSTpQUM3giT5cCcYMWTyYmZzrhMDkCaMcVbLQ1LSgGMB4hPlo2PgsFcsMkaCUzY0bjTEECTxbmXCkDd1gzMCEiKqLWcusTNHIGZlYjQOETNQEGdsYFQx4BcoIVQ5Y1LosBSLo0TkUTbWECV4kUXjElXJEEL44DL0kFR4fUXmYVNwrlLmQGbu0TSqoWQKk0LykzXG4VchEFY1DWUloGMokVSkwFLVMDRwA2cEE1TzUlctETRgE1LuYmLkkWapkkR2j0anUzYyMVdrU1YWQWaoIkXyrFZsImXQciKk0zSkU1RmIjSkEVPBMzT3rDMJIVTT0DVOomVNc1LNo0UigSNNkDVPQTQSwlUZEWM2fjawIlKtgWaxjUcSEyUYMDLFEkd1LiZwTTZGoDcLcFcUEjPAgVZj4VbzUlXrIGYrY2Q3DSc3ICQxfkPrgjYskzLhkjU1LWTOkFc3cSVygWMmEVcPEEbUMUbU4BVAECaCAkKyPWYQIUdKkzUQQiStgSa0MzZqnzX0XEap0lPOEmLzclP4fiKtfjd5cFZxHDQyckTxjmR34TZynmSpECRvHCc0AkUHQFSvUlQQUGdFAkP2gmLoElM27VQMYiL4QiV0kiRq8FVqgWMC8DZR8VT2YiYVkiPvo2M04zZzPmQmECToQmXgMCayT2Qpk0MBkSLlwFRFczbzQ2cn4RXCQFLqIGZqQycmITV0XiKqAESAglVTYzaDYmR1ckRQ8lRrslUsw1awsDUyLib2rDUUQVaoM1XE4hTOMlc14jMhA2PB4hROcUcJkibgM2MOszPpcUYk8FU4ECaAUySVgVMtQkVV8VYmQEZ1okc37jKtvDVOgDTrUmczYlcoQWR3Q2atrzZ17lMzw1QWsRZPcDQNo2PwDzSLMkSNQ1LxQyYUg1Qz4TMhciUO4law8FSyDGcxkmazgia0HST4fmQQokVwHFaWoWRYYVZ2zlUtHyMMc2ZBcVUkgkL4PVZs8VdQM2RSUyLkIGdwDGZIMkdiYTYPEzX0nTSyTSbiIVYIMmVsICYVkGZv.CawTCVqj1cYQSNnAGSWkicigzR3szUtrBStPkQwnEN2nUMHIEaz8VUSIVVx4FZWYSLRY1LTQWVEokY2fTbn4RSqUWUu0zUogSMW4RbE4TY0jVRvDkTCwFU2TiV2sxRhEVcAMUcr8lMtY2ZJQTPKojKYclYxg0TCcmMxTUcuoUdOYyaLICa2zVYtozPYomYzbFZJAUYmcyPRkWY0QlSUs1QmgjalkWRTgCcGcTUUoWXLwlMzkiSiECblolStjDV1v1PznzRZc2YwMkMnwVXp4DVUUkUEQiXqMUYKcERnMTQFM1axQ0MGkDNQokMhQFTVUyXsoVV3okcVEDbZ8TNNoTSXYWSiUiRpkWUlk2XsE0L4YTLr4xSYsFT5MiPyHSa1U1YNsRcnIiLW4RL2flUvDDbHAUQ10TbqQyMUAkKOYSNhM0QxMTVpQSMXwTUsE1UtDGaHY2PJYTaRsBVzDUZEkDc0fGawgGM1UCN0w1Si0FRqEUdjkjVKo0bVgzcRMlSyImQMM1cmASNM4VPxL2JIEjbIQmS1slaTw1XnIDcyjzJoI1aEEGctXzXKI0MRcVRYIGTYsldAsRcnsVRL4hZ4bFTxjCQmASNAUlMoQSYtbUb2IiQ3TVNQolST0FYFkmZ3omSuElUQAUavETQKE1PKgjS0fycoAUPy8jazfUYg4RdrkDVpkFZybVbRUDN0IEYggzaLUiKwwDdqDyZ2DkTlMkLjU0SsIGa3Tka2v1JHETdMUzRrQiQkkSRtYFRiI2ZBojVvc2ZwbEZpIjXqzVZFQCLZciT1o0Js8Fc4PlUpM0bRMmcSsxZJkUSvPlU4XTMWY0ZlciToYEZtP0atvTZwk2YGQFTvfzYpUjZVUVQzU0RWIzQ33RUE8VQCkSdKwVcNgSPHI0JPwzT0EDdzIVcKE1MRwlKgQSL1TFT5MDVwDycisldxH0LxfEUiQFRGckQKQkUP0lVscFanM0Zx8lMSAyLSkyJ4DURNQUNtU0XugDQ0bjaxjlSFYFTzgEL2XWYwnVUO4VVvTlVqAGRvAka4Dibtjma2.EYLc2brcTP1kkS4okbQUCRTIiLBQlRpcyaMEUQoEVRxkGTgQCcW8jLswFLMEmS3PmUYshVXcVNqbESVImSIgUNIciMy7TRQw1MKcjUvYkZ4YCVhwzRkglUCY2Zpczc27zPvICUXc2T0AWRzQDNyszb3QTPSEGZ1jyQiUVXX0TZxrVbYMjcxwDLEAkZpYSZyHjSEQzXhAiLWIGd2sTTmgFLSczU1YGSLkmaqHlVMAUMMYWXw0FY1XkUukkPIcyMgshXNc2Uqw1LqLSSWgUTv81aJMTRKYTYzACLnElciMiUtsFUqjWVIMVS3YkKOkUagQWYOgVc2QmLZYkLvEEbKQUbynTVvLDTgYVZ4vFMZY0aGglc3YzZwkCU3X0T5cDSYQFRwYyaJQmYuEWXNIFdYAkYOQ1YRISQSIDTyfzUMUiaXUTaGgicikmSxUGZ4YWTE8TVro1MUklasUERBs1J34zZPcSazHzYxIyUv3hcJE0bWQmSAUEdTgTds0zZ2DWQZQia2bzbSAEawcyX4LiSYwVPPcmLAgzMBACLXszJDYTSw8TYkAyQQYWbLoDZ3AWVYAWTxsBaUYCbXkVMr4Bd0HzSJQSP2H1LEcVdA4VLBgUbKQFbOAUS3rVcpICLYElUjQWdIMiVCE2ZUYlP2fkdiQiPzbyQ3b2Q4biSUUlXmMlVH8TTqvFZGgFLCoVasAEa0YDSkMlTnU0PzQjRNIyYVcjKsoUVvgmL1IFcZAkUNQSNGczRpwlUDUlXTkDLyf0SR0zRV81Ji4jZuMiTMAyJFozYoshQ2fySzDGaio2YAEDZx0lPvcSP2Umd3rTQpM2ZiEUVQYFahQSd4DlPzcUb4blaynkR4XEL1QVYJgjSJQDZOYEZ07DdHYDMGYSbiMyRp4hK1UCc3UlXCsDZpImSuw1LlsRbnwlcskkU54BbK0TYhYVTyQkdKMTXMgCdok2XWMlVgEiRscyLQQWMNISUzkib00jSwjjSPgTPsM1PJQjU0PycB8TaJYkUVAiM0AkSkY0SjkVbKgiRqoFVLUmcxX2YCkSXFoWP37TTUoEU4jUZkUTU4bTUvklbVUVSjkzPAQibqrzL1LWPIs1Zvj2L4XlRwYGS4PDQoQSLIEkMngVZVUVPxETNz0TPZI0PJQjPzLjVAQWay4Va4kEZVEyJ2okPvMVSSIjMSszZ37DbNYmYpAWXAkUVVgSXuoFapcUQHgyYBM0XzkzcRcyRA0ld28VagoVN5MiUXQWXCsVRDUFQ14lK1fELxvzPXYkdz0jVuE0T2PWNZQTc0UVR1QlUiAWcEcVU2YkRqTyXCMSX5klMoUWYgQCcRkVL4ozPyg1PXk0cNEWXWcETMokTIkDUk0zTv3TPAslZrIjZvAmb3EES5YUXpUkdz.0QTgERKUidpMFdwUCT2rTLgQSVrUkYxjDQOEybKMFTKoFSvLzRzPGVMASYysVXGQVNvL1J3f1Zrg2MGYUUFM2U3LVbwbUUtIGNL4hTkEGV1IUMnMkRzgSd0UTLtw1QhcmKgYyRlklaUETVukyJwg1StjVbWEjU3EmcOkjSp4hT0bUYzPWPxIVZ14TLPklbqwFcyHzLSEUaL8lVWkzMi4BLoIyRxI2PqklXs4VYXwlZOEULtzTMJ4zRs0zTkA0aDIkT3QEc0LSbwzFMxM0avQDcssDbLQFRxjVdhkWVMYFbxrTU4PTMAsDLxjzYzU0T1IDSIsRRsMGLo01Ss0VLAQ1SUQzJCcTLw4DNFcGNyLVUAEFduIzaQo2aPQUS28zRPU1MMM1SEMlK34TPKUCVIoWcPcVSjkUdrgFTlQVQjMzbCk2LCMDRUkDdyXWSAEyRsETXPAGaU4ldJkWSzDiXS4TVUEmX5UWdB4jMrIzQPUyRDASbCYDYtoFducEZDMUSvj1bLU0av.yXqshK3PERpEWZ0bDSB8VN38Dan4laYwlYWU0YTslMT0zMT0DNgoWYvoEdYo2LLcERIcDYoMUYvQGTKcUZKMUPTEVQrsRLyYzbq31MVwjbBYiSP8TTyQCZvn2aLckb2rzPwXFRuMFLPIUX2UjVAgUYGk0MLgWU1MjYqwFUz71bqHCUWg2Yyn2c13Rd0UiMqE2amQkb4PiczI0aIsxP0XmQIwVdCQVRPcESWsTXvrxTHkjbFgSLSMUaOUyPqgFY1ICUpUWTgIUSPE2aJMDdwLiSM4TbJETcWojQtjVa5UTLiE0aHI1cikVYFACZtHTPII0bAklKyzjdl4FT2UGZ3TkVKo0MloWbyT0MYQid1UjZiQUYrkmXG4TarczQpYjLMwFQAMkaikzSyQDd0b1bqnlauEWdMYkPTYkYUoEUxnzMDEDM03jcJ0jRQMFZVEiUnMzPVMyL4k1LIcVNKQSd0oFZ0czX2sVNLEDNMgFSXc2YBsFLCYkUr4xStgjX0IWbwcCZsEDRUACc0DlTZY2TI4zYyckRJEjYvDGUsUTLBU2QKIDLLg0TwMmLqk2aqfWV5gSP1XkbhE1RsMVZiA0LDAkZYo0LscSLzkzXmwlVgoldrUCdCckXqLzPucDQLMWZxzlKxPUXrASNHcmXwnjXIYkMTMyX1wTSgA2YBM0YxT1SkojbkE1avMVLycSTybGcRwzJyTkcHgTZVUjL0wFbLICcug1X2oGQz8zLFUFMtrTLVAEV0QjP3UzZ4fWSz0TRjM1a2oDMRclaEEWdvP2TzkTYqbzcBYWPpcma2Lyc0HDa4bSQmg2bmcjZVIDcOMUVHcUbLI1XNgTV0zVbEkGYloVMxsTY1TkK5kzPHYULRgCdCg2ZtXmcBMmSPg1aU8TXtTyJHoVdyQlLxPUNgYWYiQ0MOEESP4VZHAiX2.iShc1QY0FcUcyPH4RLHgmUAcWaxUiM4MESZM2LoMFYRAyZyE2Sp4jcZcUL0kzaPYURoUjUVQ1MlAiU4wlbogjbFclaBUSPAUjXCgUPmkkMuElMyHFYyAWXPcyU2wVbJ4BckETaLgET4UWQ4IWThQGR0kSdyH2ZzT2aIcmKYgkRosxQ0UyXCE2M0PCRN8zZg0TQZE2LZQldsQjRAQ0czIUNJckcsgFcFo0J3UTY2U1YgImZP0DbUcTP0HUYmEmYvjkTv4VblYiM2MFSZYERVMFMDYmKTE2Xwr1Z5YTNtQjaloWYBIlTpETQGwzZTwTYjISLDMiToQCNvIyJC4BLjsTZsUzR1k1MLEkTxDjTqn2cXcmctDDdTIGS3QDbn8DVxTUd2bzPwQVb2YlL5sRa4LzbnEUQzLTQqsDZxrDRpc2JjcELMglUEQ1UwACcPA2UCo2P2I1Xv7lKlgCb1sVX14DdrQiT1AySw8zMvjFdtrDNgwDMKkmQQY1UyI1MBgTV5kGSrE2QjcFLW0FLxIkSHYERIgDZRMWamUCNj0lUAE2JOYGaz.EMwwVURQDUzAkV4UTQ0gCRzIWaHk0TEkkK1L0angyRkIjM4jEdp4xQtAiUgciTkoTZxX2Ztk2LKIWPC8zRxjjQ1o0X4YmbqLzQOECSBcSZy.WbxDjaoMGQEQSQRETLH0jSqciU0D1cFomUjAmTtUGai0TSjwlSvDUd34hPwUzQ3jmP3EGT1USQxEjbBgTcK4xJz0DVzPEURImLAkEdm8DYMACLH0FR1cFVykEaPUiPyoFZ3UiZlsRdxM1T1AkbHEUdFIGYrASNw.mRxojcD4hdV0VdzDmQ1MkTxjDQtf1PtYCdt8TRXQUalkWPNElRJMWcTEEdyclMtTkdwnkbBM1RGkySv8TLJ4xUAk2R0gUQ4TGYhk1RKEjb1L0Lw0FRqn1ZyUjTzkDd4M1bhUUY0r1cnEVREQTNBQ1QhEybtcyQJcGLCkCN3M2ctLCTCg2MKkSQ2zjcKUDUBYUMQQVUhU1QlMmRWQSXGA2QIQGMqE2LW4lbOAkRkEmdEQzT30jKv3RUJwVaLkWURU1Zkoja0rjPXYCN0rTNHgUUk4hcZgSZvEiZJoldtbjbqYUXpE2LmUFZj4TPKIicSwzTsA2a1cGQZwVbmQ0ZFQyUpo2aWMWZLESXqXjS5ACSm4BLQcUVHIkVD0DbyXkancTVUEkd08lapQFb2ckdzEUU3.SZLwTbx01U3rFQJgzT54TQWIza2YyL00DcNImdYo0Ygo0U2PGUtEDc50lc0fDQzwzT2HEckASQ0f2RqLEZOEScsMSMMciUPIWLMEVM3b0aIYCYzbVZVc2JzrDVvMjVSgiTMMCalgzYIkibxwTa0Emd5sxR1jTQqjDV4kzPkISYwoWZx.yUOQUbvklc4PjMX0VRA4VQxQFdxg2U4DTRHI0Pwb2RvkkXGIEZYQmLwg0StYWQSElSocGdOMGLFQ1JyL1c3.0aT8jZBg0R2YjZy3xLUwTPqUVYyzVcCoTaDYkKukTbKsFLvXVPtQCaKw1M2D2YK0Dc3sRNykyUwEFd4M0Y0bFVoIVbW0TTRgDNy.SXW41JB4jcqUDT0TiPtwzZxXicOImK4U2Z4MlYYkVdIgWUhgTUSkTNnICUX0TPvYzRP4FdLoTZ3QGb3jlUoQSQqT2azk0P1slYNg2YA0DLpEiXyHjdJcDRqg2Zt7FMIY0ZHYyMzjlaLM2YnM1QAU2aoIDMpclSU4lMybSbkwVThUlXZUUQRImRQcTPqvzaswjYxY2M2jiLtclVB4VYQcGSOgDVUkWU4rxZU4Rcmgjbr0TPOw1QqrRYw4hR4PWdjM1aIUEavACMSQkKGEjVugENyszSAYUMXYTaxEFMgQWSGgGMC8FUmk0TAAGMSYkXOgUNSoVQB0lMPgWTNUEMTIkYgUlYi0zPXciQrgWZBIUP4.SRwUCL34jcrAkMPYjbOASa3b0SQkzaxcVNZkFTwLzTlkkKG0Fc0cEYRk0TxkGUjMTXUkiT3Q2aNM0bhYWYWIDRh0FSwLDTxg0LiQjQ5gDMD4lTSMCNZsjKlYEMjUiSnkyJ2Y1a2kUcTIUNNgzaLY0bsw1Qy3VNSEyTuoUVWklZ4rzJ3LTcFklSVY0UGclY0PSciIVTUUDVBEyP3MFQuEmRDcWbykkX3YDUOMFRyYWTQUDdpU2Tz3VLgojZwbGYl4zagUSL3EVLtECSOcFaHszMNgDRmgSUVo0bqIzUJkmYUgWXOEWasE1cX0VVNElSpolXTUDVxTjLP0zZAICT0fUdxIET4TyJ03TYEAGYtvVaIUDS4kTT2MiYKsTLoQ1MqwTbDolMPETSPEjXOoTdHsDQvfURC4VMQcSbzTick4DVDc2QKUEcxQzUIY0Q4UELOkDMYY1LWEmQ4fSRwYkU3ISVlsjRCQiX2PUcE8zZm8FL471MZYictDGbygzMVszMWojLZslKhECR1zjKkEiSFI2YocEZSczSMIzS1DkTiUyXHEmd3DjUTEmKs0DRtsBRZ8jQykkZyzzSLYCY4LWQwMmMJQyXzkTMwUGQMwzUxMDZrkWZmQFYAQCZ4Q0aiUESzoTZEgWYqHkctkFLAIDLBQzXpg1YVgkQJQWUzgEchkVVWcjZxomM2YkP33DLKU2PuEiVtkmc2XUZxoFRx01QpIWdTQyXFYWb2oWQuMTQm4FU3PCUtcVLZslZi8DNCgDTJwDYtzFY2jVUzjEQL4xcyblT0oGN5UWR4QzcLgWRlITXEIVS5UiaWMSRNQmP4M2btokc3X2bXEVZ3XlVyUmLEcjbBQyPmc1cxjEaSIlL0XVchM1X2j1PW4jKtDkUzEzX2szMtDjbMckYBMkS3IGcTQWU2gUQ4kkbwfmPzXDVoISUvrTUpoFYHkSNUUjcNEjYUYDSVUlUlISMRAWXh4xcKMmLwQTYqTyaCoEZrIVdKkUZ2.UMEkzP2g1ZiQkb4jUZ3vjaoYyXKUTR2DiUO8TUiMGYGQmYCkGblUWaCkWdicTTEEld3rjdwQjVhM1XJMkdvTVLgMTZ2gmK0n2SnkUQX0TdkElb4EiUlk1aG4FMM4RPn8TPhszUoczYtDVRynGd4okTwDzaTYiUqPEb5giXvzVS2fmZwk1ML4RalcjQyn2QlAmPwHyXl4RRwo0biMUV1YlSTwFS03FSMMjRZUVdTQFMJomTVUEVUMCbwQFRDc2MyLDN5czaIwlU0LFbs4FMQUTcpIkXYMmQt4RRzgFUucTLRcFSxcmaoUTVigWTMACdQUlSOQlUvn0SIMFUBo0JJwFbtXkPjoUQ1gmT1b2Q37jSvEVStgDawr1bvbTQ54VQHkkcVEyLEQma3bFRxQTU34hMiUGQlIUdMgCbR0FQPEkVV4RUhoEVhMkdvHGd1zzcpQCUZQWN3TUaMQTPt4hTAUFbiwVXHglPGwjXzQFZyQjVVgjVtrjKwjFcCYWXGc2Z4UEZ0wVNqP0T4MDMwDUT1bGdkMEQMM0SYIDdTUVbqjFQ3fCaKcFLvX0QgUEShgCLyU0MuAWSugWUvTWRBImRxXkaNgkMPsFdlYlcSsxTTgkdJoTRAMWX2PkbYUycNMWTFoVdyPTdgoUY2vDNMoEcV4FbJA2bt7DYQkGYik0aZcVQZsBZQcmZEEVMjsjcig2L1n0btolMR4RcDsxbOsDQKYjM4o2MsIES28TbAgWVnU0c4.0QZwjQ1YWR4bWXSImcr8Vcw8VcyMzb1UkQ3M2X4wVZI8VaHs1ZhoENtXVdFwzR0ETLYoDdzglaTgjctP0LqvFQY4zPOgjcQQDNBMzSLEiLCI1TRUjQ1PVPuQmcnshYlQUUTo2TtX0PUgDSpsxYDYWRyHSR38javcCcA0lZO4FT3DzXiQiYMgkXBgUbRYzYMAiYvoWQRY1L5cUXsI1QCkFViISSng0bTMmMPYSR5ozMhUTaOgzLnc2Uz0FQGUDT3PDTiYUTIYmQFUla4P1bm0jVzLTLUcGUz0zMlkSX3Xib4EzTvgSYDkjVJMGUHk2M4USS2bmVqojMF8DShYmZw7VV4HSdK41ThUyPQIiUjkEUxnVa1vVUHYyUvc0JjgFLycFZ0USNHcWTPsTamUlLksTVqXVV2jDMwUDTy4jTpc2UQ0jSRMlLv4hRYslShIzRNIldB8jTkoFVNQkaCkFZEUUP44FL4EjZXsjKUQCS4IUPq01UIYEMiAiKncCLXA0X2.GNEc2LkcGS3wVV2rFMigDQJY2M44DdPcjRRMzarAScmYkPowDasgCN5QiQGoFTPgTSWY1bkAkKxg2aPECN3g0XX0lVyUmRBslYykVRNozSqAESi0DYo4jbYIDaJ8TLYEkSAI2Z2s1XnY2RqPyPqf2M1Q1SvElKx4VLsUWRNQ0RtTlKxvVSTgDSOcWcV4DZEolKEcEUu0DYxwlRHk1UJUGbyUUcBQzPtYkUTYibSg0ZSEGT2Q1M1P1QtHDVq81YMUFcosjaPIEQZozJ1fiY5ETPJwDRKolT2A2amkDd2UkXNwzM4kCQlc0R4f1Tq3DUw8lTh4DNX01J4I1RtT0MnQkXRkkTuoFNOslTQQCaTgEQ2IiPmM2YQcSQvrVYG4VRXcEYOEkTxLTPY41TVk0awHyM3L2TZgEa1L0c4YTRigyazI2TpgSUgUyXYUjZRoGNhgmQzcCT33zSS8VcVEzU2U2RXA2T54DR4QVVlojKOwDbVgET3jkXMMkMuE1RDUkRy.SLsEVX3XTPFsFQ5YVTtj0TtLiYP0lZyD2YhQDdhUEZg4jMG4FLWsBajYFVgM1cYA0aNwDZzgjXj0lP1r1RlomUvcldggCRYwlKgE2SIkSPm81QBYyZukSbPgEYmYmKVMiZXgjY0T2Z3YTRYQUaDgVLqPmVqcUZIcWZWwVd0giRIsFMFEFYpoDcz.GMQkTUhIkVpA0SZEEa0YWLXI0Zxc2S0LzZxTSNqD1aHkmYyUlSLoGTzHEaFYWdCEUQkoDbusFZlUWNxQyU4Y1MsgCcs4jQjEkaxcFZOc2YJcjLLI2YOUSSIQGRNkVTqr1UHgTYxEENkMjMZ8jRxU0SggVayzlT0UDZvo1SBckP1vTSzLyP4klazwDVJgiS4fEST8la2sjMwYGUzzlQg4VajQVSTYkPsEicx7TLDYjdWAmdo4FVnoVZtsxMxYCQUM1Zwc2YWQCTUI1MOUSYMoUb5EjTkAkSnIWVXQyZHkiMvPVQXQ1TLY0SJgFYJUTT1YjbpQWPOASdtQzUS0jbkcycngjawfVQRgDUVM2bwTzT0nzbWwTN1cyLmQkUtD1cRAEL3QGLOISU5EDT3ImSNYUYEEya1P1LqMkYT0DT0AmUrQjdRYTYqj0PwUETh0zXnwlUwnWUxHGT5M0Mw3BN2kFUiYzMIICTp0zMtgSLMoDbzQlSyMlLqQkdDoDMUcUL3.0cso0TjoWUSgVThsTVoAEbpwTdiQ0YogyUPY1auI0c14FMtoWS2nVNtrFRMA0XlM1Phk1MLYSUHoFSG0lTyTDN1HiX5klcywlLAoVcjciVEwDSHM2ZWAycOomawXCT2XVQnkEbJYUbZMmPLYTSx8VdZYldpg2cVUDMQg0MiAGbtfyMO0jXH4TZDk1T4w1P3TVXN4TXFcDLrgWRgMkQFITQKgSRkUjbPQSTvUTdF4Bd03FSXUGMSsRVwzTQPwzZmAGYoQETrkUchUSUkEkcok1UQACbjs1ZBQGaHQFNPQjbBEFbqDDQPMyMuMDMKUFUgIVT2.CZwfjYwUUYwPUbM4FS3MUZukGUxIWdSMFRzrTVg8TUVImT1DmM1HFcBQkaPQVTMoEUt7lQEYCZZE2LNcURnoUR2EWRJwVMF0lcqfSd4MVLNkyPuckShEVMkMGNnoEaIgTcSgicvXlY1YjVBYDbkoWMEcUc1c2UZcVNNMELUICNyDVLxDUTKoFYTQUNgkVMiIUdFQFQ5kTXg8FV0MSYjQTYYMmU2EURIECLtT2JMMTVJcFLyszbtXlarQ0Sv01Q1X2PJI2JZw1SZkUQ2HCLNYWbqjDN4gVXDMFSjE2cZ8jXgQGNBgFVT8TTjgycpY0SFgDNSo2ZlIiMUgWbScybtQ1azYld4PmKqEmRXMiaDAkQpImQsoGZ0cGdWcERvYyX4sjcg0zQt3zX5MmS5MmRm0jZmM2UNwlbYEEcpgWNV8jVqwlTHgGdpMyPVUFYqMmVLMEMIUWSNoGLZU0YZAUX1A2LKIyY1sjRkIGS371LjYlbnQyaXwFS4f2UvgELQA0PqDkMXICM54lX0LCR4oER0PjUBslPw31UnUyLyXCVQgFNvj0PxXEVkIyYAsTZVkWXpEEc4QzZSgzT2YUPpY1TkU1PlEVcFQzausTNq8VcVsjKuMEaxQVSpMETlwlYLwDcRM2MzbybOAyUmkVLHgDUEIEc2nESgg1akUWMDEVNzQDNwsxQKMFRNUyYSIybtLGL5EUbxUlatH0UIsjVIkiKFUCYHIFcngjYyH0Q13lVqjFLl4DRUElVKElXOAkUWwzYI0DUFQSbL0FZsAUVnokThAyL1MySNY0XWshRAkTdQshSTgSSyDkRRo0SPcULncld4gVb5YlLxnGd1bVLgM1LUE0JwI0Pgc2QNcDVWUzYxPTZTsBRCYDRv3lPzMzQOAyM4XkVXM2cvXEdDc1c4nVLx.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.CdF0zYEkCMCElLAAWROUFRgEkTIclKHA2JkMDTXwDQVg2aTkyaK0TVtY2S3LjYLUUaIAyStPEcrUTQMcSQwomT48DRTICcSsjYiQjTzDWb4IGREgzPz3jRME2ULMWPzIlS2f2cnElTsMFUNojd1X1T0rTPPgyTAMmPEQFY5A0XwkCNCcVUsoFQmsTd2jCSoE2LqQ0Jh0zcxkTPoMmUEgSQqU1XK0FLqM0SEETLM0FSvgjPKM1SkcDSRE2at.WZ0T1RX8TRjgmQhISPscUPLglayblT3gSUn0zTJEESxbzXqjFUD0TdrYjPi4zUvITQLQGVgQ2ZvnmLlQSdDQCb5YGVMkjUMkFN4giRooEcSQkUu4xRUUFT38jc0YTSkclbxoVSicGUsUzZCUFS28jb3gEQlsFZIoUYNYWNGIiLvLiR2YjMBUGVxrhL4UDNjMDUsokUHIVUJIlLJ4BZxETSJQ1SqUyX0YTdQEWSXQENvkETqfDaOcWRscCcnIEQLMySLslSFU1QH4lRtjDcgkGa1DEMKMVMqzTTGgCLKY1POsldnMGZugTVq8Tbs4FSwEybBAyYFMlTyTWPxXDMvkiUqoDdmYVPmImZSIkcXcDMlAmaEQGMVgyPOUiYhMVYjIGMjgTUEYDU3LFNLUDYqHSQGomZkokQJIlQY0Da1fDQMwDSoM1boclRwHVZS4hUVYiatjDTv7zRVsxJUgmQ2LjMS0DMQESS1giYkMGYoYlLskGN5MVTZoTbX8lZxHjP1LTVVAkMmcWX0cCdtr1QPoUQhwVb4EWPtbCLngVMkAUMQ4hMUEEMQYCNgYkT2jiKMUiU2cTLg81aEo0UpshM2AGbHECMoY1UZk1cukWMxLzSGgWdEEmUFE0aCYFaSA2Z0YzM0HETyQCUVYyL1j2L3IyMwLWSksFZwQSNWETdx.CaUk2MYwld28FNlY0YggWStT2ZoYybEYFUFoVNYUiRNYlVpciQFo1ZXcFTtXUUwfETEMUbEgmSiMSNxLUc3vzLLU1J2QlMGESQMwFRlM0YA01J2ojMugVZpojb1TlZzXEUVwFNXQEQmojc24zZM0DdRsjYogmZSoTNQkDaV41apomYocVTMcidv3jT3YDdtMmV2ITLgMTXMYSQJo1bRoFc4jFLXIjU2jyQVszQt0jPMcVMvXkY2wTP07DZscCcTkzT40TZw4VMMklaJE0UNESULsDMv.2LmY2aPYzcUQTaZoWaKQibMImbjoTQT8lRyklXlAmctEmZyYSPtPkbq01cAA0cJAmdCQCUQcUS2b1Z1MyTvXURgwjM3jyaEkTMpsjXgE2ZjQCTgMkZyAmM5M2YYkkRwgkQIgkXHQVcWMiT3EzY27jasYDZ2gELGUUZHoTPOEUdWYTdx3DZ5YkaWw1UoQWUnEjQPESc0YyXR0VNU4BMSYCNtHENS0FQ5oTdtnkUtIjTu8lPqjDb5EmKEgTXk4BdwP1bUUmaiwDa3rjKsAEQSckbOMkKxQVZvQyRLQiM4LmVkIVRJ4jMFQDcnciKV4xJ181bMQ1UYsRRBMiaQoFdwr1bkYGLykFbyfzXwfGTLEzRYglMG0VSSAEbmoENVMjY2QUQSUWS4IGLAI2QRgTXogmMF4zUJMDZvIWQ4cTblsla3PSZLYlT1nVROcVbzYVaPoFSLgkKYojSYUkXsgWYUUGZn0lT1XjPWUzcCgVXEIzQZQCTlITbyjjMtLFdushX4UCVvQiPi0zL3.UcDwFbEM1SsozYMgScB4lXxDUTU0Vb5IzTXEENWQDYzXEcQcEVKMkVSkkSvwFQO4BRiQTX2XES38zXDQESzXTURQjTVsDYg4RdgIkRyAmKM8TUE41S0cyXtUSP1jmZIcDcWQVd4jDVscUT3HkK3YEQRsxRqUmTy4BY0DWM3Hiaq4hcwgCdV8DNUomP2bEYZwTQw0VRAYiRFIFdWo2LqQyQhAkbQkTczAkXkcDZ3IyJNojYAQySDUDTpASYGMyXqMybxz1Yr4jMYQWZxUEdmUSdlASN3I0UTQkdqIEU0wDQ04xSPUUR1g0MxEEdxs1aGokVKQDLDkCdLUVNhEWNKIUdjc2cZcSYVc0XiAid1DiTqLGT2UTVkY1bvcTbAclMsEzJGQzQw0TYK8lTkcyUF4lS0b0ZvHEaEo1SNQmXTg1YiE2YNcEbDAGbwsTc2fEZlc2S3TVXrAEVDYkSScGMhY1J1rVY2gCVyIWLrElS4XERUgSLuk1JlgFU4ASaiMjYvTkYNcGTXUmVz3xczQCasgjQgsVSXY2bSokSpITawcEYs0DdwglLSIybFk0TnkFZggFbr0jMHgmPuAEMR01UgkTXLUjXrckQ4IzXAoFYTgGbw.CNyDlSrkERLIiKMslRzDzSj4TUUMFcYQlSqMWYP81Lt.yQwM2YjY2MrombTQUQ2HDYUETbjI2QtvjYyDkSxQUMEECYRUyRl4hclESMxEyXhYFcXEFUHkmXP0VUGokPUECcEcma3UlPzjWNOcWTroFc1giP0EyQWQTUzHlbjAWdvflRCQzQUE0M3I0ZhkyP27zXTgUaB4lQHUkL34jP14BV5wTNGcUL3HFdwQUPtQmM4XVcvUVN2bUPnUzchc1T3c0Y14TY3nVd47DZznWZ0TVYJU0XkgWX54DavvlcyTSYxETQAk2XDc2ZEwDN4HjaZg0J0XSbKc1RQIjTUgzLtLmUNsjdJMSX0bFNTk0T3rFYqDCRiIFUvIlZjoFcYgDQhM1UtXiZ3LyQqMSQ04VUz.CRZE0YjI1QjgCblolSMomTHcTQPkjSU4FT4bGRx3DU5YVRFkFcWUEakIUcLkFYhAyLjoEYS8FVYoEQ03RLOQWV0MmTHAiYrUDSCcSP4cFMrYjTnUEYNomUOcUM1AmP5MDc58TXq3jXF4zbLESMNQkbs41YvYScDY2P3QVUAkjb3XEUQE2Y2c0UXwFT10FLW4DaqLkLPA2auIELloEQvbUalI1Pg4Dd17jLybFLXclVnshUzLCZz4FcCElR3XFUOMWLmckYx7jdEYGQNYybGkjYEgCN4H0aBc1L0QmQTAyTjIFZ04lRCYCa0MzTjAiRGUyMzc2J4IEc2nFSQECbwvFQpszaGcVQvshc1kmXqfzQ33lK0wzXv.CSIgzYgoURmQTXl8DNyDFak0jRZg2XtwDc1XFTNUSdyLkV1IDQvcTNyHSMqcFURc2URUWPVgCUTckZ2kiSqH0UiI2UvHDM3YFYh4VVKYCdv4VMsg0SFElbKEidqjyLhMTMDMjQZoVUPg2PVUCLtkTUWUlSPcURuojdwDkQFMVQh4ldDMzc2gVXGYlXosBLjEic4TEN44lSTEVUuMEQmMSQ3oUM5EVapQGbRclMuYyZrMzUwcDVOcFY0kTSSQiaPUiazD1bWEkMTEkYQIlXIsDdkc0bzMUTQUSYD4DMFImULMUdOgkcBklSDc1ZPgzZEwFUyXyYLISdjgzblEmZZMmcgwVTZgUUtPlVPYFNVg0ZyfjXuszUzQyQwQlcFMVZ3HkP4XVcX4DMvfVTngVRpYWd3cmdTU0QrUkdqckKW4hd0TzTlM1LWU1LuUkYyfGQzIGbNQ0RH4DLyI1UsIyP2fWavj1T2MjciYTUpgjXIAicYgyMxcUNSo0Q1jCMw0zPVsxUvkTRHoULq7FTGM0StYULJYFTv.UVpshKAAUXKICLOsRQU0lLDcETiAWP1ckUBgkX071SwPmZ4bDS4zjcz.UXw3zUwYSbzQ0bOQEbwQCNu81SQEGUqDmchYUVugzMuIVd5IFUxYjP3YCThMzRsU1SCEiQqEzSoUTNUQzJLczTyXDUyzFdAgjUIE2R0b1MyMlXr4zQ0METVkSVBokaVU1M4n1SOg2QM4FLRQmarsVS4gyau4zUxHGLIgVTBojbBkjS5olLqDUR581LQcDM4gmS24hbk41Q1ICdEEjUAYlLm4BY3MWX1cVNvj1QDQTdtcmUKQ0TNsxbHUFbsQ0L4n1bzcSXoIFd5UDdBoFRs4xQNkyYxEUZ1fjcZEzbz.WdIUTdjQicrkFazflVhgSZOMURXg2YzcCUy3DTVU1XYIlMloEQWMVN3PyMyEEYGE2ZBMETNUzMtLFR2QCdloFclIVTikFSQkWStYmUIcWUFQUN5E1RBsDSKEFRQsRZYUDayYyQP8lVnkWSq4BdUomQmUFQEEDRRUCctLDNGMDNXgiKqwDNgEGcnIiStvjPlAma17FY4YEVtEFaIkFVxIjZznUbrMUUBEGa1clRHUzXgQldOQUVMU1JMYGc3vFaxQUSvrBVLgWM301QHoGZ2IlYkozS3n1XNg2MhY0UCIDLyzTRPoVYv.idzMWcynjaJgyZAgkPGoVQ3QmTPQ1YTgjKl4Fb4DFYVs1QWI0bBQCMQA0bTUjbX4lQlcFMYQFaOgiMwLiVk41bmQiXuAWR0UjUSYiKUomPE0jTCUUZOUCShsRPmQCMhUDSAcDa0cSRCYSP1wzSXkyS1jEawozZIYSL4k1YTgEYmMUdCA2RxoEYkoEQUQmS5w1TT4FYi0zXjUyT4Tzcz.kKhwjdnMmRFMUQXYDVj8lKmwTQRICawHkPRIWRgASLwHFavUiMTIzZ5QjKXYiLxoUdX4hLRAUcZYWbgEUcnklVSU2c30DQFMSMGQUPiYESFMFaOwTLyklcZwVL1gla0b2YhQicgUzTQo0JNIDM3clYPICbmo2QIYEa3fiL2vDcmQDSgAWRzfSarQiXSMWQi0DYCoFSMQ0PPs1T1rTZYUVT5YlKhMFcJMTTZklT0kGMkU1YvwzL2cWaPUFYBIFR48jLGglRxQyJ23VQxbFTSomX0PCc3jSRmAULGgDSiIWYkg0MrgUPJQWNW8VZvfkZMozXHsRLy0TQvfkU0bFLzTVNRMCcyUVavbEYJA0MLY0MMUDboEGLRcyXwwjYqsjargTdDYVLW8lZ20jPUkFaE0lQqU0TtP2QvEUVNYkKDombxY0TS4lTtszX4MWbVslX0DmTl81Uv8VLOszZk8zPhsBNYMULHciZPc1XOEkUtrzYDMlM3v1ZDYWSG0zSugzP2sDNPQ2XFckP0PkTZIES40Tb0sDT54RPY81MJomb2IFZ2HWbtjlcqDmcggDRHsxMgU2J4LyRoc0RwHWdrgUbZUTPpYDQ0jyPz8DZisjPtHyQYQjKEIzbhUjKYklMVY2anYVYvjmVq.2UwXCTZs1JMokdsgTSBEyS1XiLBcCUJs1UIcjVT0FUyjlY4QVLOsRLjMzTxUWRxQDLssjVDAUa3LEdJgmUy.SY2gjS0HybMcFNHgUVicEMMA0S4PlUxsFTEUjZxHSdkcTS1Xzc5MkcH4TLroDZpQmVA01UNIyXsUGcQIFa2fyQFUFV1Y1c2Dka0ImSLoTREIzUqM0XLEVbmAiaOc1P2XlY3j1TxwDMYUVPXMiStMmPsQmZrkkc5kVdBsldPQyUnYzR1MWQSUVbCsxJAkjbW8zRwAWNgc1M3giL2IkbVcyakczTZUicTYTPmkCM3XENZoFSvrhbiAWP3bTb1IGb0biLUcSPXkiU3QjaqP2XwDELrIEb131TyY2PocjLZcWVyYiKy0zSkESVAYlPEQ0XJgkdBgWTRw1aKEzTv3TNgEyZ3TGb0ACR1UWZTo0cSgWMpshQpcGNNIGZho2XAQUMYgSNw8jZz4hViYFajkWR2cSMNIybvAELoY2ToA0bZg1Y3HFR3XkQx.Wd401ZRcmKkoUcRkjTEIFbJc0MvE1R3zzbnEkbxE1YAQTQDYlULkSXzEVP47VdSsVSVoUXKUCYHoUU54FMk0lLvozbVEkPFM1TosVQCs1byLFNTszXGElPGQzQ3kmRNAUXpA0cRAUXwvjQKY1JwUWVBI0aGAmcvTVbPMmZgQkLoMzUQQVVtnjVAECV0E0a3UlbQUCTWYzYPUzLu0FLNISZVcTaVgULqUERYgUTv.SUDgUVkMmYAglbLIzcYczcqXCLCcGM4QVQDk1J0DSUS4FRRc0MvbUcRgFbFsxUGIzRmQSVCshPpgDMBQDZ1D2SjoDMEUSaGAyTn01JGI1RN4zUtQ0JUkGUREGSzkyQuYFSVEVRX0DQvECaZIlbREFZ0rVd4L2XFIFdzI2P3UkLT01b2HCQzXmX1ImcGkkUgQCVvUCdEEiVzPkKFshM13Ta0TlRkcjSlQ2Qz71Tm8jXIYyR1XWcxjFZVYUT0QVXLUUZ5clTtg0TlI1YyQGQl81R2kFYsQUMugzXr8TS3fjSq3DZhYDZzjzZxfWMWwzJ1oVQ3UmSygyRIMWaMYjMLI2XlAiRMYUZHUzMxIzQWozTDAmZRkyYiElaII2PIkjM3zVV5UFMR41aQkFUQEDQyHCYXQUdGUWTUQjRLMVQ4g2RIQSVqAiZ0IGMBolKlo2bPY0cqIiPq4Bau4RdEQzJKgUZVwDax3DQvU1cDYkP5kja2AWZ4MWbO4jXDM1SUwVZCYUNGgiTuMFcYMWaMIyazrhYXQEc3AkVtQjUqsjPP4RV0jzZKQkKqDVQrgVMGojQooFVEYiT10zMZ4jcNMVTjYiRxDiQxLDbScGb1wTc1fCLCw1R1HScg0DZqPzc1X1QPsTRzM2XSkUcPg1TLEkPkMzRyUENwwFV3rFLYsTVy4zTrESLTkGVxozLHslQmQybJYDSNEFZMYTTLITUj8VRvEyYUkEdZMUTG81MDwDStDFa2sTSpsRcpIkctPmVZcyLtU2cxYzU3A0PI0TLJUWUM81LxTTMlMlVp4zXpgmMSMWLgkSQHEkQ1bEc3nUP5cCTy0TPq0VXBgEQw8DNzzTYZYzP3YSdLYiawgSYugVMz8VQqLCZ4LWTHcSdNgzLyUkXXIGNMckLGQGd1TVcWISLRQjKDoUazv1YnMSNLklKqL2ZiczPDkETFEFdCgSVBIlKUszXUUVUScER2wFQr4zMV4VLpMmSqcCLMIiZQkSRsUma4rjS5AULuYWdUMTLBwzZPU2QSAEb0c2bHETLKM2Y4nmTTYWVDUjX2PSdMMGasUELQcCS3o2aEgESx81RqQVMqDTPtIUMA4hbFUWQNgzMxnlKY8lKBcFZi4BYQszYCwTbCIlTPkDRgcmQ2oUMzcETo0FUIY0LXYVUpMmY0UEUqMzUJQUX1Umb2g1boMURZEibvQVLzDTM5cGSvgmRjcWLCoWd3LSaP0FYPIScOIWc3fjbjoUcNIUdrYUMZU0Rwk1UqEjSz.yUYI0SqU2Xxk1bvjFcGsxUKUjS4nlc4Q1PQU0aXoFQNIVbMIlPPs1R0QTV2YUQmkDc4YSTocSX1cidDYDMD8TN5kDayPESgUjVrQFRF0TZVY0U0rVT0cDLtHFalETauMTV30DQDYlLqfSR5AmbHcDbtMWZCAmPEUWTBozQ1P0byIUYIclU3kVLxPldxL0TWQDRxY1UwcGc1DFVyjjX2PETBcWLncyLqP1JMszUz0TdCISZ4sTY0UCLEcEdoMTYws1PwfWVlkETEQCUqfGMG4DZPgkKlkmQhcmUzbyTvETTYQmMmMjVFUSRxHUcnolMgI1agMETy3zYPoFQEQjLuY1aRQUQQMTRHYiK2PFdFMyMGYTdXgEQBkCaHMUTvQyRFEyRMYiXJIUQEsVdGcFYCMTPHcGZqo0bOE1JX8zYSIzZlk0MzLGVCkzYJAka4MERkUTQsUSUybjXW4zcNo1SYMScCMURzAUPOk2ZZkiSU8zJRk0cuMjdY0VTMcENHESNs4DR1EDahY0U5ITaYMiUKojax.WZtfzMU4BTuklYt7FcDQzSrsRT0cUasQzJ4.WbUs1Y0UCS3vlaooDcFoTTM4FMVgmPRcUbzQURGQkKkIUXqEjQXkUTUIzb0PTLvPzJM0TSBUUUFgjMXUjYxnlRRMUUFIDVGoVPnslblo2MPEibwkENOYlQyPmdkAEREE1LpYFZTo2UG41XLgFaLY2JFs1LzTFZhUzZDoEStHTTqfGVvnWZtLGZrYDLREkdkI1J13xPxjyc1cDRjUzSlMya3gjMRM2LmQUZnkUcpo0P3.CTUEzSPoEL2ESXyIGdlgCLDoFdHEWb0MUZ03DQPIEMvnkdVUTPZI0Jwb0R0LkX5kkKmQyLg4DNFAkZFcEQmgWa54VYUYVThc2L4XldV4VZVMEa34BNMMlZNckKukia37VX4rRdloVN1rRRWkmKjE2JZESM5UCVpQlLN0lPxYWS2rTMyk1bC8lSMQSVqAUXVgkM4LUPvTmbR8lXnESVjETavPSMAo0QrkmPMUTX1z1cqvVMWgzLRYWUqcEYVYlVYITNHEDVTc2XioGagMSMxL0MqkCRWo1X2cFdMQkSXMFQykkSqQVRSkmc1EicocVURAkdkQGNrQlV5MVZUUVLLU2QPc0YXI1JF4hbkU0XiMFbzbSRTg0M2QiQ1jyJuoTXMMzYSsjZAkiQyj1bTc0LswzXE4zYGQkX031aEY2Pto0YT8jTlAWZyYzQ1sFNi01ULUzYrESNTYGVqEULwfkP5QkPHgVLwESbC4jcqgidJUmLgshRyg0aIgFQpgUblgWP1k1YJISUzbDRpcSLq3TSnYFR2EzS0nkLAQiKWQVazcEchM2TW4lYvjSbYQFZ5IUSs4xaKQWVqQlKwLUcQQCdXEUcRYiUxo1ZUM2QXkTb4cFRSoUMNMCQwLiblAWdNg0TrgUQyDyJyHVNFU1RtnWMOAkLGETZxw1XtvVLjQCdDEiQyDyTGMmKtbSZxv1cvP0UNgyPgMlZSkVXx71Y3HFUyQ1S3bCcJ8DZ0HlaSUTQmcUXtDCMngTayHSdNYTap8jQiQWbo41T5c0aP8VQkQ0LDczUAcSTsQiLkcUSFEido8TazzDVEshUW4jbzIzcmkiP1LiSrEGdFg1MpACQlgSU0IDaTQTbtoDc5QEcgEEUFUScDImUyHSQtMiUMYULYEGUlsjSUYyJhIDd0nTd2.CZ3XCdqgiPkElLsg0azESXKAERj8TTHwVZncGb0DkVzomY1DUTvEyX0A2PYQzbLI0XqIScGUkXxkVU1LVXuUlLDUDcNEiPY0lYHQFSDUWXokTc4YSTlQlUEsxXEITS3cCUwoWMlYibvfURzgmLwPkQJQzRyHWSvYEV3IDbloFSRUWYw0zYDIlcPAiSjUSQqLTMDgCYr0FcZETMZgTVWQFQwn1ajsVanQTbXMUMsgkXMICdzklVOYCSxjWVw3FVWkmdygScYcGa3QGVqb2M2bkLlAERskyXHEGRqYUSoUTV2sxJY0VbCUDUj4jZvHUYw.Ucro2bQEzL4v1TJU0P2ciTzrxQ4YESTgTVJAmRTYyJ2z1YskFaXEiTPESa2cCcT8DQEIDVq71Y0zVYMkEb2j2Yig1RGEkTPgWN3c0RrYkKz.2UwLENYIVdpY0SIU0UPg1bkQjY24RbPEiS4HWQAUkVk4hSx3la3QjchU0JUE0Lt4VZZUmPZYldyX1YYIEYq4lPY8FNnIlXOQFLwYCTjYFSqITbwXFTZwDLrslK3v1avfFYtzlSU8DUyUVQjEySnAGLRsBROUzbLQlPhcjMAESSRUEMqMyUwgCR1IDaWU0PP4RPIYjTNc2ZucyPxMUVYYkZ4PkT1g0aSM2ZFYVaXUSQqbkdwXCMqn0UtjmbHMWYYMFcEgjcwXmKmMWLv7lUBolb0kCSYI2QAUSVscCT4EyUmcSagESMggSbUg0RVImLloGZ03jSZUmSyfGUqXWSSc1L04hY4QiasQ0XwbUUv.ScpQ1XvTVPWoDZT4FZggkQOAmX4IWZ33zY0b0c301LkQjVzokcqLUQH41Jtj2L0TiShECLWYGb40jZj4lM4.GVTglXw4lZKglbAwDSmQVbvUEYlYULqD0PCoWZMQUXtYCYmolPZ4jagMDTzcjVIUEdKIWcBUVLoUGRlcmStb1RTYUbhklLSczLWcTVWElLwoVTHEVbr8VQHMFRHMmYWgWN5EUX4jiZXAST1A0atjVR4YUZUYGdxDUVZsTMwTUTVk1alMVTmIEL5Yycmg1YrIiRRgUaXkGLykEMus1Zn4RNvvja3ImMWQyR3Y0QRwzQrcENLU1QAQjZwgzTMoFN1zzSBQCSLYDb4nlbhg2UqAkKDUzbqsBbUYWMGsTYAIiYOElKybWaqDVdD01SlESdVY0awHVc0HTa4AkXCcDZF0jaPYmYFMjc04jaZg1U20DTZQCTTkGQuE0U18lcYgFaEoDThwjYIoVSgUUUiszJXMkZ5sVcN0TQvPCd1oka2EiPlkWavYidOMDUIsTMRUiLXEmKWkFZAI2YGcFazoVMt3xXIcyM1I2YOgFVgsTLyrTMvgDVvMWU5giTvYSXuYiY3sRRpYUVrEFY0EyYFImZl4DQy.yYygjUpMSSUMVdTc2LiQ0P2YmTWMENRw1L2nGNTolUq7zSHklKuUWMAgWT5olRLITQZckRMQGQGglUGgVVCcyTAokPvwlUzP2MzglK2kEUOEUdVgWZyDVbEASZL0DTzHkME0zJ40jbZk1M4M0XlEEUjYWMWclSMMFYmoDbNgjTs4zXTITT4UUMisTSKAmZwHlX1YyQt7VYCc2ZkkEZoECVuY0JrUVPvP1QHIEbUM2chgWPznUPqw1Ms01PkciQnY0S2Mla2AETDQyT2Q0MSM1SBgEQhkVbzTVX3PzbIYUV1T1bmojcPQULIkkQxMCNnQSSNkkUpgEV2PFTg4RTvHibiozSBQ1YyHDZ3kUQh4VR1T1JKMSbUcDQlcFZmsjdPM0MIkjTsYDYD8jXXc0M4bCbjIFQ1DzTnYCTyHlMT4TP18la3.WT0YERtL2XCYzc5IGLRYEMFQzYqUkawnDT5k0UsMWayAiUIwzQUM0MgM0cGQjKyDjVhUEZ1vlSjw1aCUzTwcybqHDL4XkKRc0PIo1avr1QtEWLUQmUpkUTnoDTi4RN0rhU1Xla5wDLXcGRx4VQDEkRSsBSq.0bpACdlIDN04hKjUEURcSaig1Y3f0M1QVNZckaqLTU0.SauU1XIYFaqLjK3kmRFMkPOkjLsMDMlcEbNsRREg2PU0zSwUlXpcDSvTGZWEkcv4RPNMSUqHVNoojZAoGa3MGYTgUVW8zJi8jL3fzQggyPoQ1TiQkKVUWapMUSsYlav4lQlQjZl0jZq4hTvwjahgURAAGY4DVaZM2YqLVQFQTYxYCSTYyaZ8jcPcCTvTDUtDFdzrDSNAiTTk2RPQzLYsjXGYjbG4BVLgTNuI2M0L2JgQmLNszblUVd4IVLG0VTTsFMJgyP24FLEAmYh0lb3k1Z2.yXoEzUvXCNWkCNjETYDMTMvMUa23xLNElTXIGQMY1UwgkcwUCY2XiSNMCZDQWaDYiUOQDdUYkX48VZskUZyUST2kzJDgGQv3ldHMTVikiPUsVRLkCZmEDdzvlbYk0YFgkRwLERgclTuUDTScDVTMycTIFTqz1X0PkKDsjYvwjSRwVQVYSL0nDL20VMCgySscmRzbTZKMzaxnlK4A0Q3o0Qi4hYmgFUocCZGsFNYI2bO8VaW8VaDE0UkIUVAQ1ZBk0JiUiY2gGc3zDL3gETNASLJ4jalcFcqkGR4DUP3fUSqXCM2rRRyMyczUmPHA2LtQCbtQiS4fkQxEVMn8VSPcGNIYiduITYPQmdm4jb5cGav8Ta4HEbYYjP2nkKBkycNUkb3gyY3LSc4MidDEiRzjSSUMDd0DSSjI1QCASUgQDYIIUM1ICSDAGTjkDNUYTaCYjREMTZjIScNk2SNcjQx7FNqcVYho2SAQ0bGEUaAkCcH4BdmMCQ04BczXjdscmUvLWMu4BQCYmaOwzaigjQGkjXEETY4bzQwQGQxLVLYg2ZtQTcVQmc4LkK13xJPoVMyrRNzYTLynmcQoGaq3DN2kiQLEGUTYiU4QmSok1J0.2ZUY1Z0XVPv7lMOkWP4IDaMc1LCwjUzEWbWgyYisjK4LDVwQCLg4TMhQiLtQiVZMFZlgyXSszbKYUSXIkZYUzSvEWXBYUblsjK2HCSWETRGQkTHACMuU0SZUDViYTZ2jUL3bFVzX0UuMWVTcmYo4TYocSdBUFR43RcTUTbxQFZUIEVBMUYqLSMD4zZvfCaQszZz8VdqgVZDY0brQjUp8FcMkEbZISYY0VNDIjKrMFRFASVwclMF4zc5EkKKYGQUozTKIDQBU1MOYTLFASdPgWPXM2S2QVdXMCQJo0buAkLFAUQRcWQUMiMxH2MvTmYVYVZEcFYLojVVgWVv0TUZUTY1gGcJQzQxHEUkE0PuMEd0Q2U4PFLYM0YO4TLjg0YJcmXAEUb2.GQoYlPNElT3PyJp4VdBImYSAGc18jYFsBVtETUwcGa2omRyUGLyvld4f1LtTyQWkyQWECdwwVSRMFV2TmLQM0UKMkKlMlbqM0JMUTXKkEZwPEQSM1T4kzS0UCS4USdzkGLJUyaToTVHIUdHgka3YlToUzcWgCVoc2T1LlQsshVSo0JyYFVKITU4nzRjgDMPkzckklSvUUSxMCdjIWdBYFStH0RYo2aLsVd3vFR3gEN34hMX4lVMEmYL0zTqX1UIMGNs8TMTECdv3lZQAyTiQFYmQlVvgjVPEDN08jX4LEcAIWaZckX10jP2D0QNYld5MzJsQ2X0vzXigDLv4TNtcCMwvjbRQ2RKk0U3TSdQAEV0LWU001bJgzR2o0aJIzUt.2JCUiTngyLOc2Ri0lKi8TSMA0cSoWTHk1RiM1bwTmYOcjLyY2JNszU0LWZgEWYuElZ2vDS5k1J2kVUmgWS2TybUciLHs1JFEVLzMFcsAWMrIWM4ElML8TZloWVB4zQ1PGa1HybJEjLigiMAQjKpEWLwoFQ4AkbgkCMB4FLZY1axIlVE4jXzrxURYFVyImVZIzJgI1Xzb0cZAiazjFRhQFSlcCbikkTksDZ2I0R0bUNQgiRxLVb5cWLp4zJyXCaHA0JRoVZ3wDSg4jdsQ1RwTzJXMSa5EEQxImPkcGV1fFaFECQW4hSAQiTgMSSNE0SVQFbjojPoIkMLI2TS8lThE0cOYGLFoFckEmaYUmQ4zTXro2QrEza2QEYznUQD8zayszQwPTLSEEaoMWa34FcVIjXHIjZtTkQ40zLMIlZE41UOg1QQ8zc0DjX0LGUzUWMBMGUHcUP0jVYR4Dcx3jRlQyc2.CMrUkRwP0RyImXIEFR0MDLyMjUxoVVOMSYZMDTQMiXEYlVkkjQ3k0LVgzbTUSTvLmPOoETyX0TXsDbyHlRnoWNxkGRwbDLtcUYtLjMFMTauo1bPQGT3shRGslb3gGSjsRX17DQMckc5I1LyDkVRQ2YnwTQ1sBTA4BYpsTYPIUcAMjSiQ0XT41PqbDa1MyZlMkXpcWcLckPCsVLTMVXDMTYyTjKwg2aKUGaWkUQ081XtcEYEECZZMWPWk0Lt3za0jCVLICcQUEMjQWUCMlYtPmdAgTQoQELSEkYDEkbvYVRxYGN1oUT3D2Xj8DYUkjchgicysFTP0TVEI2bMkCdYsDMJAEVlMUYIkDNysDSxTWZoMmL1UWcMQVdkkzUV0jdCMmRusTM0M0az3DLMESdyX0X1jFVNkSPWQDQkcEMKY0QvLmSAgGTrUCYwQGNXkDVDwDa3gCU4shKWE1X2b0cyXyTkgTPhYzMnE1cpcSN0.ScCslKHomaQUyTLczRtv1ajMWcW0lR3DVVzXCZYgVNJwFSgcyLnQ2TyLTcv.iPMI0ajslRKwlXYwTQlQkdMASMRYzJwolZMQVdwnTSykkKWYlLhQVbt0DZyQ0cMETTGQ2Z4kCTwnDZhoTZ0PDLgszM3QjTXgiRYI1aMMVVTkWc2U1SKoWX3XDMigDcpMSTYMyMuMCcRomVYQiaPIEUVYlc1H1avozZkUzXhokLCYlR2okKQMWbH8TTmQkX44zJIkjdHQGQ1w1cWUSbqgDc4bSLgMTcp41RCIkRC4Fd0.SPT0jPLAmPzITS1XEVyTGZ2DVR3XGctkjVNYzawojYl4lYXgDRvwjTzHCNkQkYkIDL2IUXwkTVt3haCEkUiAGdRsRdQcyStQ2coUTa1fSbTMWRqP0a5QzbSMERiIzJmIGVy.kMHwVZYUTMtHWVw.EaCcjMUU2PuYGZ5QiQ30VN0kWNOAmTpISZWYUUoUGVtrVXU0FaFgWVOYkaR4xTHc0PuQiQtIFLGUWNw3TRycmSv8FZ1wlV38jXisTM1bFcvkUdsEURuYiao0DYV8jbCkGMDQFZJEiVnEEStMkRQg2YzgmUZEUZHAiKvASTrcCVYgSaxrFamgmY3EFZVMmV2vDTFolVXYmM00TQzfjSHc1YnIDMF4jMEomZN4xLFQUX0DUX4rVcG8lSEoWTYIkbUIVZzMDNNklZNQ2bXI2QzD0U0QCRqUWdBQWdtzjZyHjP3rTUKQ2UT81cq8jTuMWR0.ya4QmajMySokTVHkES3rlZXQGU2fCRW01SUEDS2rFTUgSb0TySrICYvHmQE4FQRgjbqICMX41RKgiRwPVdnkSLvPSRvYjV1TWPVk0cD4BNxn2SjkTZiQCSG8DNwbia1w1JSgWdE8lKXsTb2TzZsk1J4bWRJMzTCMCdvYFNjMlKI0FYh0FSv3TU3bzQ0jWVNYFaxUFNvDEN3jkTvbGVks1c1jFTl4RVOQDTyESRVQzZIYTQuA0SnciVYoEVNsxPVQ2R5QWNFwVVTQFVvgmRkIWNzrTTnkzcyz1ZWcFMOglY2nVdsYlVjgiXEsRcHszY2g2YqszZqfWVScjcDklMU4zThokVZU0TxjDZ4k1RRQlXHYlcyIVZMkkSqMmSskGUQkiKKMiYQYCbOcCRB0lXgUGS2IFQ3IjSwLlVpUDcTkUT3D0LZImPqEVS2sRYNMmXUASQLIicqP0X1r1RSozaTshZrgSRMwDa47FTkczSX0lbMQiVrMUUoomZvTSMQUibAIUdzTGYHgjMGMWL18Vb0EjKLkVXGwVYxYCcC8DQqXWPHI2PDsTPJgCRuMFarIWMRAkQDwTM4.UctcDMxH2Yj4hS0YWVSAkbiY2U3MUXY0zQ3IiSkEGMIM1TjYFRJEGLxEzMrEVZvYSTGYlatr1Ur0TRLAGb4PVV2jTN1zzXG8zPwHTYtkiY0rlR5sVRqcFc2QCaQY2MqXDZPA2ZWkGMmQyLzsldxf2co4Tal0VdtEUcAokLz8zb48FUEQiZzsVMYUVcA4DbmY1SJMTZSk2SW0lVJYFQps1a4HzYjITSzjjMIY1PxnUbVsBNt4xaSE0cI8DN4fyauwzPVMzT4AmchIEUxAUYqrTTskkTvIybD4DdhgVT0zzJqXWbIASXTUWSmklP5A2cBoFM4kEb2ASaiEWTgE2JWQFTwcFd5cyJ3EGNFkUa1.WZ13jRT8lcwcVbFM1PwoDZrgiU4P2bFslVsM0TOkDZqzjZRkTSMMVbzjGRzUmLV8jRzD0MygzJGcDL4XFYs4xX43BTEshZxHVbEUEbGEkRoU2ZBwFNOMlKp0VMzMySDQjMEEiaR4zXDkzYLkzYtwzYEY2QHclb4f1SWcWP4U0UQolRksDSiQzcQojM3TjM3TCawUSY4f0RukEZDASY4j2QEgzMFMmXyLCdXUzP0QUQ2DUTyETY2ISShUlVxjjanI2ZnYCUWICMIMTaBoTaVYTcV81TyXDYD0jZBISYLQGNlElaKAiVjEUaTEiYHwzPF41SIElLUYUXF4zX4EkcgAmQ1UUPjYFVP8jR2EzUZoVaY4lc1MmYHcEYVUGYyb0QjglPYcFSHMjTzoGbGcEaBcyXJcEd2okU3ciL1QyTREzQGwzMDM0LwIiS4IlcT4zSGEUS3jUS2vjKksVXqYUMpsVSlQjYoUWZXQlYGMSNNUGY38TNPcjRsQFdO8FMDo2bjQlc2kyRyUEc4jSa0YELLsDR4rzS2U0J3g1MOI1MvcSNvnDcRAUMRsBMvcWVmkFTKcyZzYTbs0zQrwFTWM0MFQSLgkzRjcmT04hdu8DUVgGUl4xcMQGRlgTbGUicrgyX4wDbKEyZVcVZ2jFcYMVUs0TPKcjVWcDR3fzLiomVG0jdyoWTocmREIUQikFTwcianQ1SRUFZIMzRTkDTGwVUVQER0gTV2glMkkUZlAyZIsxZJciRBwFLEImanszSwQGUG4RMAQGQn0Ta4PFazn0UTUDLMEiV1PWNK4zLTojYq0FbLYUaw0lU4j2ckoFRnkGQ4o2amwzazUCT3DSdKIkMIA2ck8jUvUzYrkUbQYEZSIyUykULkkjYPkzLFoFb5oVav.ycNMUcqA2Pxolcs8TZ5sRbPcTdxfVNLw1L0TyYT8TS4s1RDImMRMiX1DlQwfkYTAyStQzPqXSQTY2LDMjMKYEaxTFLkUyQzkmd1UCY1HzUvg0JBcUc2PWXAwlKDIzTyMUQCczQWMVdHgGN1XjbhsVY1cjQoIGcI8jXqkFThcSa1PDdwbUQ1jkQikiYFYiPUYmcCwVR00VbG8zcjwjRpkFLw7FVSglbnEidwLzRR4BSysjbyTDask0Q3PlaxYCbJE0QmoUd4XELz3hb5QWQSY1Lq3FQhE0Z0PDdAAWLzT1JZMUNKQCTQolL27zXx.SduMDMwshcZETX4wjMvXWZMgWN1shRxY0QCUmR1vVTqTjQ0LCR20zXxQiTO0TS4kmLxHVQmEyQqYmcJAkZKEybJY1PDI1XpIGdGMyX0Pid0rlbzHkYxsBYlESQQYEYxLGY17TaFY2Jt.GSFgESEkEVJ4DN3sxMiQ1R1LlSPM1ZwYSb3sVZuAkUEESZ2gGTOkVT5c1TwclRqgSb4MUbA4FYxjkKmETaTM0bzQjQpg1SGAidxbUVzDScyfySJMCYqPUdgomK1fmSWo0SlYWSlkGM3fFNlEWSVshLJUSang0ZxQDNUklQw0FbQAmKlwzLrMkU4olKlkFb2HlYVMCUT8TTHMicikDVwYFNxL2b0rlZxsTMKM0QR0DZKUlakAEQiM0cwQSXOciQ0glRNIFZwzVMqYGRWwlUzElK1DjahUlcy8TLjASdyQWcNYUbJwVdLciLvTUMOwVbhsVLwnVX3bTVnMzTDkGN3EEbmkmaHgDNOwVaAgCTwslSjcyS2biQtkEQ0I0MWUWRhAUbuMiL4LUMBMCVoozaKIjQAMUcugkQTsDUzIWMTcUZXgicGEjamcUc5g2LHMCLkcycY0FYAoEdHsTMksDduITLv.CYkcGTWIUVyjFQ2UCME4BSqg0YzDmbMASchcGcxLSdUEjSQQyM1shc3cDZVkCRRAWUxQka5IlTzXFTsMlLqUkQ2IWRKACTCs1MOgTUsgzYtDWS3gyUCU2Z3cjPwn2Sl4BVzTldXQlRhMELwPDVZU0PD81UGEmbjIDMH4VbxgzJtPzQ4HDZrACYVkSc2LUXyfFNFMGLsgTSRo1Q5EjPSsxMyD2ZyrVUPQyavLSZqI1cpY0TVM0StECc5IzS2PjZkcFLgQzZxkWYn4VYjwjY0jVUwA2LVAUMw.GRi0jSyfkPUYCRPMzLYQ2UPQyP2gTNHIkbnUmLHgiY3AyJl0lK1rDaMoVMRcELqrBdpYCVBE1JNozZ4UCcUE0XUIicSQTUKQzMBwVbAEUTysFRKIyP43zXYo2XPEzRiECbIkzY1DCUPsxXGgTLiQyMKImXvrlXNA0bmIzcwgULBM1P1.EaNg2JYQWd0cVZxMjVLs1c4nmP0H2bzUDSzvzZvn2asEjKk4RX3bFcvUVQ3jSb1czbrMDZEACaxXmRIszLGYiQ2IDLIgCbxIERCkiTs8VTCgjKzrxXRUiMr8zRPYVTKoWZzfCcpMzYic1a0YCYV0jaFEUTt4FMi4hKAEyQm41ckUFLgUVQ1ImdXIVUwEDVxLjMogFajUDQwPmXmEDLrAiLWslSwEEcNkVUUY2UtHTY4kVNnsBTqcSMzoGRHMGY0nWUtEyXPYVTC0FSVY2MyQFc2kzMwvVdoIiSL4VQ4rjdTUlKIIDLBICQD4RVyDVLmcGdrckbCMWcGQjSTAGYkUiVNckT1flVLgzPVk2PuUza0DVNk4DNYIEcKk1TKgGcWgzcwf0ZoYUPH4xMzblMGcCZTAWbpsVbBgSVIcDMUE2TZQEMybCdKkjV0X1Q3XDUMwDb4UEUnAGTJgVLLsxXtfCVHcCSybVYGYCT0j1bXcyPAgUX3DmXAMzTqXUZAYUZqTGTJ8FTIkGasclTEsFb2PmQGcTXwwjU2HGcqMCYw.0bRMWNQQ2T47lQYkGTpglVokFV1v1aKMFcw8jRsUkaLYUdgEGVLQ1S1AGNkUWbyMSQ2AmVKQFU5QmcOQkZOwTZmMkct4BSBkzQynmcFETPyUyUMgTYsEmbLkjdhclPI8TLFwjZOYzU1LGd5kVUNcTRIoFSBECSPIibyEkTAMlVXgiRtn0Q2PlZ4PURKYFLOg2Jw41c3QGUMACUQM0SpQ1LUECdvoTXxbkbOgTLoo1RzXCSGMWQnkmM1cEZowDV1bTPMsxLEEWUgYTLvblbiU1QWMVbvLDaIYSNkcVaLUEa04DTX4DLiQTSAEDR2T2aFo0QWo1JTASbW8jXmc2RNczMEICdVQ0RSAyY3YjKtTic2TyQukkRRUGLw3FLK0DQNITVEsldjMmUm8zPqnmdEkEc5UCVVkGdvYFYHglazQDMicVQ4fzMEQGRqQ1RxkzZl41LmUFY43VTwPzPPIic3g0Swo1bEgza0TlV5YkPJElMH0FTnE0PpQiQJUlYPcGQqf0LSMSLBEUQ3sjZ0L0YYo0ZyLkbLYEZ1HGayzVb0slc1MyR1bCNGU2cWsTTjckc1ASdOY0L4XmYmA2MxjWNs4zXLQFTAgiKHwjZW4DUDY1XiUiPqbFMxo1M2QyMY41J1P0LMAGLSYSTOoTZhAmbMIialYkUlQ0cgclTB4zRZ8lQ2XiLWgiarciLWkVbFMjKvkTRyDEN1.0MlkyTQc0cPszJ4TWPmIlVJUiUOYFNyEWZ0nEc50DYmA0P1ciVFMUXIUDaZk2JsIWXTQVSzIWbuEVaisjXtITZCoTajUWajQDSzAERjQkaynGSEAidyj0LtfyPzIERYQUV0QjTIQmUPYCN3.Gcx8Tdq3xU3QULLYVXH4lYDsjMJc1TMwjZXgWPhEVRgkVcoMlPx0jM3LyYgA2bocCdmQUSyH2Rk0jdko0RwgzY2fzThw1L1AkSIE1T5MSYEczLwc0RUIWSlMDYi0VYAQzTrQjbt3jRqbGQyP0LRQTTRUlLvcVXoMlS3nWQwfWbGozXxUEUkslPlASYlYkRkIjX1EFV2bjTUQzPgc2UkoDR0nVQyP2RKolYt0lTFUGMRcUYWsjavTWTEwDROwVV38TTUQGSzYSP0UkUXUycBUjXxXGRUM2b1nEcwgFd0QSNqL2aBYiaEYWP2sFcNkEbHshMNgmdMoDYq0zcvDCT1LDd3.kPiImTv7VSH4lTHQGNEMTNHQETgg0ajMWUrAWTmkkMZIGTxPDdMg0Z2LVQzflQQ41ZAcWbBIWYykkTvPDbCgEYTcVMH0jcN4DbxL0MOEiVAg2TnMjKyDDcqAWaI01c0sFYw.URjoEN0M1X3PjMHElazTmLVshTEUDcucyQWUyS5oUNJQTTDIkZwckbtjDUgImdXcSQoYEbwLTXh41XPg2MxACUNEkKCk0ZiAmKSUWMkISd2byYVIjV0HkLjgGdxjWLQkjbncCSScmMMslMKU0Z18VM0zFTiAGbno2X0HCTzfCT3kTLuMWcpIiRx4jRyH0Mvj0JTUmSYIGUXgUUA0DLsEFYRo2TFkGdwXTdLgVbyU1Q1ECNskScg8VLYgiTYIzbRwVLtXTdHY2b2MWZwYyYGg0Mv7DbwMyavz1MxITQWMSdLcVb03RNwLjRqMVQZkTRQsFajshQ5EjQpUlZO4DZOEVa3UGdW4DaoECatnTVg4lQpoEQZoFLncCMzACR5wDMGMzXmMGSqD1JoImQEIFRNokPBQmV3DjVLoGYW0lQ1gFMMUFTJ81XXI0LKEVVhEiQxIiSCIGc2YzQTAiYYQVVQ81UVYVNuYlSNIVNAM2XlMkTk4BT1TEZVkWPgASUlcTL4Y2QpUGZ0PVPqjjUH8lUk0TXoA2UNEycUIEUoUVQGciP1PFLqDVT40FSWsxaXIVUlMWTtMkY3QkRV0TNukELFwlZXcTUwsxLUgWRzTmKzDEZO4hXvokSqX0XWkmVwciXKUlbzIEbJcWXR0jdzAEc03hLvj2RtPWPnwVRW4zSUcyaykVQ2gUcW4RZtIDLtEVS5kVbZwVNiMUNGc1MFkURYUURF4jcMMVTnkEUG0jPv.iShclMCcGUr8VQSgySEQ2c2YTPUcFcFM0Sz3xR2UTLqn1cRU2YhQkM1oGR3.0TmgCQ2MDZVIEcwPyZsUCctUWLi0FVUECa2T0RzzzTigDUnUyLzIjP0DiZUQWdJIlatPCZ5EkcVcEchYEMhUlTA41UPE2PtQlLM4xJlEyc5gURF0zazfzaIUkPiUWaqEiZ4PGTWMScVslLGYjR0sTTIokKwMCRSQkdUEVaBYVQy.USyw1aiEmblICLZsTajkybzAmSxUGUTMlatEVXZQ2YNMDanQjZwkDa1njcjgSYsoVNO8zRxcVRqH2JEY2S2H2SOA2LnMiRU4FYD8TcFg1UuQVUxLVaDoUT2HCSxjmKmUmQhglVYwTL4sldhY0Px8lKx81Tvn1LhUEY3kiVSY1TmYWQLcmTLc1bVshXA8zbBYWZrAmVxYSRtDmMAkFTW8TV2Pjd2LTYtjyQyUVdqn0T0vFUGkEcXIFQU4hVx31ZtYGcp4BNA81TUQ2aFgiazMmcRIjcv.0YsQDL4cVMhwTdik2clQyZuAGMAQCLlkTV1gTMZgkdyXCYVQCMJ8VQ2vldOQ1LIoVVhECZ0D1T0szMnc1UpIUUwzFSNMFdBQDcpAiSZgzXmIFVVUmY5YUbOUTc34DSqrBZZgES3kScqTiLSYkRvUFSBUmMkMzPT4RTyLDbYQ0UwMmVMQTRYYVc0g2SwEiQ4AGajUTQmklYwkSRpsBLzQTP3b1MzPFbQM2c1g2brkSVRIGStYiLqEUMvE1UxsxSPoTNpgGZ3s1XJsDL0HzcCoEaxUTXYkzLqblPtnTXKA2YvHidDI1Lh0lXvbldZckKNkWb04hZVc1RAcmM3fkcD4lXDElX2slLSkWQFsFMIUCThgCVrcmKqnGZ3zFaDQEVsgUPxEmcn0jbzbWSIQTUvHSSAoTagIDQj4zRoAGbowFbMsRd2nDQNoWUiQ1Q1sFT4cGRSshLNYUa50lLPokcsIEU2AkVqDWUosRbxkFcq3hY34DS4vjMPUDMwcVZB8lUlQDT08jTxgUYjUmQKYSS2oGd0PmSYQzLMgldGIFN1vTR0ASTpUFYhElQEslThkWRykFNwPjPqI2TlkmRycULPUlZ0fVaEo1MsgmVWM0aKc1bIMlUV8jVpokcCYjLuQmQzMTcVAkcFgGMVMDct4DQZkEU3AiYykSRnAkLCckdFkld2fWd0.WLzECVvDCV0TCSAMWYLkTdwf1MXsjKJYmaPYSLwQEbjkESzshK1UjXCIyPpIUdW4BLPYFLq3hYynVcrAkQU4TPgYWQMYjP5IkP5M1cz4lV3kkalYCdCEVVgUGZOMWPRoGbHgTa0A0TYkSMqLVY5Ykc0HFNw8lM4omYx31XU4RSJY0Ro8DM4rlLsY0bqT0P0HlVo8TRnIyQB4TNkUDb3giQTokK0fSUmYyYXokKnAyTLgTL10lc0YDdmsFUUkFVxnFboY2S0gGQOkmU2LSVtUzUh4BVU8TP5QlLyQDY2TyPjQjcR4BTAY1TBo1M1UEMEECVkAGdmAiTYQ2Ss41azLUaVgWUOMGRzIWL0T0LQYTT2EkKUglLIkzJUIETqIkM1LEaToUU2j2ZNElPzDzJAQVYMAEd5AiUwcVPq.SQFY2REYiVCk0RxTjd5UkbEgGaKgFQKk0UHclR1L0TkshS3jFV3c0JzbUaxMCMEc1JSgCbXEmduMmd4LzYIgFSHkkRJoTTTcSXRQCL3LFUCoVU3U2PQEVLiEWLv8zQ5UlbocFUxUjZlQFdCUiLkwlbkYERDAUQFUFNWgSYQMGNkoEaUImUTEUc3PTd5M0JTACYgMlYl0TZ1n1L3IWShIWSQMVLQ8TMoQyJFcjRtvlbyTjVsEELM8TMVUUSBYWbvk1S0ACYNgGbrYSdgM1PtfVbZkiVn4lKiIjVPYUR0kTZUAEU3gFdDQ1ZZUkSMAGSxk1XlsTcxfWLtQ1Roc1byfWcnYCTgo0PyESXwMScm4BQ1ECc23xXsMmQg0za0fycCYEb5slRuAkPOAUSLUmRvkzYw4lQwkTYZkTTB8FT1QFLNgWa2jyYUszcrclUxP1TpUEZYYFZhIlZ0nTMBUmaYACUyfjMjM1Lig2YEMFZUUSV3MEMYMUamYUVqvFcPMFNgAEZUk2T3Pib14TdvYmM1k0RvPjMpcGRKgGdjMmcpYWaDk2YOwVXIkUSBojZGIDdyEkYGw1YwkDQWEGMTAyaDwjQs0FRN4TQtcVd1Q2YiYmUqXST3DWQSEVXKAybvUFcJEVVWkkQl4zbiQUSy7jYwsBVHQTQnkmY3nmQx41b2LTXSEzYiUFYuclZuUCay3lXkgTXiIVVwQ0ZHIkaZ4hUYITVxbFbn8TQFECS37jMxcUcCASQzTWLwrlP1kzPpcDbw.mQ2wFaykTTtg1ZLsVSh0zLwPGVRM1c1QWdybUZYUERSUVX0LCcUImLvkTYXk2YIckaNITLXYCM2PCUoYGcEo2SPcDShAmSXklVtvTa3jyUGUVUMwFQqD1RnIWZTAGdiYTa3kyPzo0bQgSNw7DTtzjQKU0RgYSdsslS4MSRVg0Sp81ZWEjbJsBNEc0YJEVYhAEQY0zJ13jLXgSRswFLBIEMIQ2L2D2aWUVR5wjbsU1XJUDUCE0LXcyZBQUVoUiVxjyYhgzXAQSb3kjVtI0R4EmS0TES2A2PwD1X5MCd3EGMsMGa4bjPO8VV4jTThcSTPshd0A0ZTshZhkkcAMUP0fkdgg2YhgVaLIlMrgTQREyTtfCU3EiavYFRpIGSAI2Z10TcmEiUyECat4TPFgTXjcTYIwFaSYWRxEiKVMmUzvVPZQDTIgFRIomMPQjaBI1S1w1YBgVN3kVPR0TTUwVZPYTatsxTGgSYw8jSrgybkkkTSoWLhgVRzo0aLI2bGIzUAo0YYUWNlwjUsAmTDQVYE8zXtTya5w1PKojcDQWb5EVQQczYBgmYVc0TvY1PLoWZtwVRukyPpkmbzE0Jn8FYJ0TNlcUMU8zPWkkTuQkKG4DY2gmS2QES2wDNOYySpECVSEVXyoELPkiRRACSLUjcY4xSNM1J2vTbFMEUWQCUyfTb4cyQOciQwAUR3jkKAwTTvk1R4LET2o1c4gWNxs1J1nWL3jjUk8zUgwTNTUlZ0c0cPg1T3IDQEEyRKAGayokMjUGVWMUQt.ENAQEUAQzRK0VdJk0bjUWRLc0btMjcEETSNcWcvXlRkI2LEYSPsk0T3QVMpwVNMUmVrw1bGYFVRE1TFA0aokzb5QUbH4xMZUGSPgjdtHyXgIicrM2SsIFQhUWcxMSblgFSyblL3PVU0blXx01UUo0LH8zYSMWbv7DbRIjTqYCNGomRHYlTVQiS2cVYg0jQUISbRYUNs0lPXQiTFo2ZOkGaMoEMkU0JzokMwMTRxoWdwrhL4kiaNUicBMjMHgTZzU0ZsEDU0MDZLslKWAGYoUEQJE1UwAidwIiMZsBZ5YjdWYlZWokYzkSYUg0cWcTT1gGRwY0XwXGYGEGb4M0aMEEdskzYXAiYwQSRWsxbybkdRcmKt4hcNYmYQklK3DkUvMGL1cSZtUTMsITTvk1byLWZTcyPtjWQqsjQ14RaCMTbIAULoMkMvLWdk4VZQIzasczYZwDdIYFTyYTZAAyMuImVockKAAWbo8zPxQVayHkXr4TQB4RauEkcybzL3EjZ2TWN4bCVPwjSzsFb3rlLJg0bwjVP1sFZXMkT07jYBICLUcWUTUFd0L0JlAEUAUCL4EyM2QUTEgiLUsDdqDSYzb1b2b0YDgDYMQmK4Q2X5kkTFIychQUYYg0c08Fd4.mLyYkS0T0RucGQ4UFVmAUPRIEM0kGc2IEU54TYZkTXVglUhUERjICURYGND8DRvf0RZIDZMoTaVMVctvFSloGZUslUvfSbLYEZIQmZwjmLoESbzf0SMYWblg2RK8TNloVd1MERkoWLwPjZ0bVPNokRjMGNCAUUJUjMOA0MEIjLiIlRvE0aFczSvoEb3rjX1bmb33FMOwTLWISdJElSUUEY3vDZCMEL2MWRAkjVwnzQykjVigULUAEb4Y1Jq.WcWs1PV4VUPolZyYlUpMDNKYzZvUVVq4RV5kiZJMzJQMjQtIkK0k0MOwzbgMlT1nWQZkyaIIjV33BdjYGSqTULVMDb3o0LxAiS2kCb07TbG0FRKIyJ5kFV3QGVAcUVz.WQ0UCaq8lQFI2RXgDT3giM1PSNroUYOkSaLYUVV4lK13RZv3zPxoDVqfjc3LSbMECZvL0JxPCZ1A0PIEEN1QGTjMkVZckTznjaucTUo0VNjM0MGkUbzTTYhkmP1EjQi8VNCYWRMQma2cCY3.WSJ4lRnQjVlM0PvslSiEVSzYkUgIWbTcWd3LWYn8ja0E1RzLEY3jSUokiVkwTR4jzMBkiUsIVRlgiPgwlaVokcNkCY4ISNm8TNZIDQnUUdVoGRCwlMJMkR5wlb3cSRMQ1UGUGY2o1JqjDZ0LWPSc2PwLmTG4hTRgTd2biTvnjTVYyPnIGYKYjL2E2aAgmQiQTSqXTM1rRUDYCamYSM2IWTtUmKz4VdQozMTsFVMo1QjQGc3AWLvcFZVgSbxH0XwjyLgEyakAmP2MVUvTlKMU1cPYGRlgmU3c0R3DiTznWS5omSKI1atMzRrACMtsFVpEzUDwTU3fUQXMTMp0zZ44jKzfCNGUkR4HyQgUGSqETXzwTZwAiZ2DWUSMTMisBQGIlV00DUnIjPxE2SNgyTvbzTWkid2HDQw.ENDgSVBUGcTUFNgAGaiAURLkSd4PzLNQEMxnDRnwFVHciaAEzcUIDVkQkLrYCSO4FRE81QiYESWgkYjUCUUg1PlIkbEg0PIoELKMmYuISdoQSXgozP4TFY0ETbAoVZUEFbVgSS371cmolaUUDUqzDZLgUTtsVargSd1Q0a2bVRGUmQqYGTT0VPpEzQgEULyrhdGsTbw4jZ0HkU4XybZM1QrQGRs4TNQQSdNwVa4nmTQESXYMEVGcDNZIDYzICUxHGcB4lUUYTL0ojQiozYpEmQiMUNBQjXrE0QEk1L50zYFEkZ0PkV3YFcYgENiU0ZpMVZxEzJMsFM4IWVYQFblIWQ2XjdCICYRo1bwE0QAc1QIgSUScSMZMzMqLFSzUGbx8zMLMFSzk1TJk0Xto0S34lSmMmL4DlRGkmL40lPzPjU3nEayYiLGEFZnEWU0o0S4DlP1biRqT1MxkibNIFVJwjQIASYGEFSoAWLwn1JK0TMFIyQKgmX4X2MKYjL5clVyHyJQIzQCkiVrgSbvkUajUVLjAWS4f2cYIzX5IVPwEkPCQ1cMIUdoIyZHcWYLY0THgTaQMFQxc1TgklbSkGcpMGRW0VTpk0SCMUQHkFdWcld5czUpwVQqIkZJYEZEI0RwDiLqjWVGEFRu0TRkYTXUUzQ5EEdBEyJAciKkMUMXo2RV4TZ4YySogSZIUlKq3hYiICTpUFR2zlZsEGTXQlU07lUBkTd0XWRsEEMLYCdH8FbJYWUt4hdDcWdNU2SWgjYlIUX1rzZX81UN8laLYzXvvDQoQERqckUzHCNznTRs8zJvTmROESY4MjcEszQicELR8zc0jDcyLUZzgSQCAEM0.2QGcDTY41PtjDUoQyaqg2TssxY1XWRKIFVGkjL4YWMFgiLQcTZKQmc27lYQkzcCclLwolT1o0XpMycFojSBoVRZoTQ3YWXo8DZBIFNkwzMj4jVCw1X4gUdIoTNigTZTIybiQmSzHkbEMlSmImbtXTLGEzJLIGYzXDNhEWXNYDdLMjLLomZEkEU10jZnckVHMDbHIzbGsld2TzJvczYMMWY3gkcGgkMNwDY1ckYTo1R0k0S4rzcJITLtYCUVgTdMYUaNsFcs8Tb0bDLJkUdJIUN1IDQwblcvozUmIVTm0lL1r1b18zXyI1XzjiPBs1QE8jd5okKNIVVIcVMXE1T0T0TnISTUQVahQSSQYDTTEGStQGd3fmQgIVRwckbyDVVWQSTrEGSQIWNLASLLYyPmg0UgA2LAolZoYjTA8lY4HWSSMUUpQ2LBkzbAcEM0LUatnDNlUlZCETdvLjUKc2JUk0Jukic2HkcIUWTKU2bMgjdPkiTyQmRWcSQhYEaq0lLzHyXZEDYn41azk0JTQyXCMjSjM0cZMWdjESMt3DbookYukiUqrhaKIkVWUSMxASPWcTStPVP2zVZWIENjYlTAEWXR4FS4DDSlEVXigyUrEicDIDShoDMyfWTSo2RxL0Zr8VS1cTUngUUD0FLCc0S2YGM0giVKczXw.0Mvk0Q1gWZpcGQQkUU4XDasUkd481Jj81cUgzcXkVbAQkTqDVT0z1LCsBTUEkZScmc47lMiE1LVoGTJc1bGsjPX0zQLYzUhIEa5IWZhMVYUYkMyQWZLsxZ0.SNugTZQEWXzsFaHwlZLIEVSoEbxMUdnMDaTg0Z4sTcqHFS3fmUucldVkiSvHUbyAkX54xJnQTdxMCMKEjMB0zLrczX0XlVw4RY2E1S4.kYtbGLsIjbyf2YWY2PkwzRvvVQKUUQR81SnsVSs0DSAAmcVMUbQEDZQMiLEcDTuYULvg0L2PyaZwDNrcCT1PlaqHVS3zlTWASUuQCYhgjdqUTNhQWX2QEM2EDRgMiVGYSUP4zLI8jZkUFZKQTUTQlPqTzbE81T0c1cncDSVQjdBcETrQzbhUScYI2bq0TUhUjcWYGYNQmbr4xMGUCViQCYyj2ayHCU2sjaogCdlYlcPQmMJgjS3TFZmEyYqnkd3U1ZqAEVGMicyrTUJE1UyvDVIclbjAicsgmcQ8DNV8lK0MCLOIlXSQmazbGQUcUL041ZyoWd2bGVzLTVnIUbD4FcAwDbJUDNtUVRi4jR5ICQkQSZtLGZrkUXLMzQIY0MwYSLukGdN8FSu0zbJMWcEomKKETXokjaWEmUKcWdREkP2MURt0lYRM2Mpg2Tq8FNtcVUAkCN1omdLcGMzPlQTQVMUkyTIQFLRkyYFUTY1n1PVQmZvDTNNIER3gWPqgWU2z1cBQTNwrVaMEmctUGcxYidsMmT2DEZy4VcNcUdLo2YAQjXxbCR0z1MPMldyLSR1n0PwfSMpgWbRU2XX4VdGsRSz.GN27zM0vjd1I1PLoEVH8lQ4flazM0MyzFMPYGMBoWLoYWXPoDLvD1MtDyQjcVanQ0ZNIjUlEld3ozU2k1L0AkTwQUSJszP331Q2.SPzXiUuo1Y13RROQiPKUlMrIGQyg2c4nDQ4EGZgAmUWEDYzLDRwQCYtTSZBUVP0kDcO81PAw1XzYjaFcGM0kUZz.Gcg8VY1ImSTEmZ0nGYGY1P5oDd48Vb3EldE81UjIWYUEFbEM0bwP1czIzZx7DdxbyLUoWP08TXAYjTjcTVpElUxbiYhEkVEcETrcCYJo1XZUjSzUmdyDkPyQGc2YVRvYkPxEiclwVckM2Zjo1cyETTXYkZVA2QZokVlIkZxEkLOMWPO0FUZMlbugmVXAGZDM1czjkXXcmMn8FUNMiU0wTdZQzRHkUS0UVQlkkdFQULHoVZHAEM2r1UxMFQzXEVMgiRXgkdLMzUikzRVIUUy4TZhombDsxYmgka0E1ZtsFYUYkMnw1coEmVogFL1vlPgslLLcUN2ECM5UWP3YlTDIFdOIUPhQFcxASXscjQ1TkdWICbBMVcUUCbtHUQhI1PWw1YNEicQkUaLsjcZM0MwDUYGoUUOUSaLgUTQEmMxMyQKgyQpokbBEiPsEzcz71QMUCNUI0bwISaOwjZ4ImKkQ0J0cUZzgTLMQ2LGkkcsIySmE0bNk2TCMTXJIFQBgWU0QGSnUVSzYyXuQkMgIjUAYmTxbTSUokRL41M1EkZAYkYG8zJBMSSMgTbEoELMECbRwTPtnmPtUUR07TNWUERq.UToQVL48DSTYzLrkkdTkzUjYjMVYTYB0lYqnUc5ECYp0lLZUidyYFM4kzRqIiY2kGcvjSZwk1bggVUpUyLGEmSv.Wa3LDLuoDcmIjQKo1LjQWVwYUT2ojLWojPh8VPjImKVo0cLIENLoTSx8zLuYjZO8lVzAESTo2UyMVXksjS2Y1QLQCMwPUN0ESLNwFZ0ciXgwTZ2TjV2kWXHY0L4ckQwPzJIMTVP4VMsMUNUclPtETTFYFQWMlSoEkXXQ1JqrFZ3gkMwLybCUFNJc0JJsRSuMWLscjR1z1Tq.mdmwjZCkzJl0zJEYVVgQVSDQGbrIWQNwTT0TVNMojcr4TM30zYYkiLEsBMoY1YA0VbZIVNDYDdgwTb4HzctXSagcTPQASRQ4TaIEULuoFLR0jKmMlXy7lTHMTTOYmTjkySwXjdTQWLXk0PIcGctPDN2DkKOgUQ1AGc20DbLQmVMMmaHYVRCIGT37lXzMTbvg0ROMiLtbjUxklMOAWLGgFdUcmKwQmVtgUSCESViMkPEgkdvoEZyI1JxYEQDEyL2cEVwvjY0wTLNQFcWMFUtYlcykkPQQ2Jz0DZyHEVvXiP1wFd271Uic2MtcEUzrFTooTVHASTro2QNUUYAkjZUsxPJIESU4VZ0wjQrkjRwMlLtLiTqLSawLlQVAkczLyYKcWNHUiRTQmaqgFQYk1YukFQnE2MBU0QnYjLwXVVCgEbXQWS1bVQZECdoQVaUclMzXDaxfmTvYzMJYDMzPFL03Fd1TzTxoVLBoGUJMiPEI1QB4zPBIlcwITREUTcJIicyLGcUQ1XSUyXQITdEY1UFgiciQEUJgWQ3HzMEQjYhozJQUUSUMiKhASSy41JGECYywTLBoVcrM1ZOESMRoTZyMkbQUjVXITXLgSNKcGNhgTaZgUSxUDaIM1b23TdHwDTwEEVuYTT0UlPOk2QqUGMIo2Q0IDSowTdIMyZQEmcsIkaFsTc33lKzTELMMVbyMmLDUyRUUjVOkmbQslK1DmLF4jbWESPtcGMjoWXYYGSs41SxEzR3DGMR8lPGAURkAWZooUSDcCdw0lLRolRlYmUnoVPAUDY3LCZJQlSH0laSckZm8TU0bFTyYyT3fkUMgWXVkVLNEVPxYTbmQTY1DVcZACbYUFcEQESvn1P0T0JBEyYnICd3fUUyojQGETVpsFRBkFVRcEbvMUNJgUQZQVU3vTZNISQYUWdYwDMSUSL27VZloDaGEkZqQEUz7TUhkzU0olS2zzXKETboQiXKYDUwHWVGshQNgFbwwVcLQ0azTyMLsTbwA0aGYzMDEDQqcWMCE0bDAGN441c1gmL5MlTD4FLr4zUB0jRiYWLkgmVngzMrESSTAUMVMWZBQiKKUEaxb2aqP0QrYGaJcDVrcSP4UURrc1bgMCSUE0LDoEUvomLXczSS4Dd3szQ3YWbPQWQCICN2bzYBYEUgE1aYs1SrkDMLg2JwkzS34TZNUkU4UjSM4lY40lKkI2PpciMxQlTGckPzslP4XDTqsRNYwzL3UCNr0jX0D0T2D1M3sVQ5UDTl0TVxIyYDIUXHozJSg0c0YGQ2Y2PrgyMv4lSvrDLEgVMoYUYvMiaqrVdtXULhM0clgWRQAGUQQUTQgkTGAWdQ8jSggTPHM2SzU0PwgTczoFNNcWQI0zJRcVTHYzX3PWdDcEcqMTUscWPo0jQVQSdzPSX34RdyH1amg1cn4TaqbmdLUjVusFatjGVo0FYwEFL3AiZTgSTwQlL1gmVoshd2T0Y4bDNSUiUyYGaxHmcxQyTqjGYkAmXNQldqMCMFkUaJsTcGc0XwLjZvo2QjMWV4H0M0IkLHgVRxnEQzj0M1kkX4Y0apIGb4LSVlkyPKQTSCkCcG4jZJMiaEcFQN8TZu4BYFE1PokjTOsDdKMlM4rVLnsDNyTGZwnFV2Y2RiczSqnkK4D1JXsVQlsRUyjlXokjL4sTVGEzQuUzYOMjQVQTTgoTQXoUVxf2LTwzXVYTTQYycRolRTUWcpECYw.iTQk0Q3U2LCoFdQojdqTFNyzDQDY1TkIUXBg1bsoWbZYWU2XkVTkUREICTpIyLKsxSEgSQ4DDR0rjP3rBTxkVPmgVbvjTNF4BMWQEMNEEYAozQFAyLE81MhAkbZkkRJITZkcTL0H0QXAkY5k1YZcUaZwVP0XmUnIUTrg0Jx8TY0USTsg0JDsxPnEURC4BUEQVMPMGQ4oTYQYkM3j0asUGNGkCVvjDTgkDUpshRkQFQ1ImQ0ASa4gWbyY1JtjzMGY1aWM1QMozSVMFbGkERPAGd2.GcwMiTZASQAQDQIoTZzclTqDSQnokMK8FV5EENYoVL24lY3UyTxzjVmMjKjImbDIyTNkmLS8DNKIFUoUDcLYiMmQScF4zZ5ciQGUzY1jCV07jawYzREkUVxI2YCk2UvXUXikya1jjdFIzZJQUdxIEdZUjTi8jTTcWTxUWPvIkZS4jZnkmUqHDQXshdLkWSwgyUjY1Sz8zX0nGNPUGY0olQmEjcAwlV3P2b4I1LvUWU5sRXEwjSAgEZuUTLtLWRCAWdFESPnMjLFEDNAQTTUsBUt8TQmwjd3QmcvkkdGMEZgclXvc1Jgs1YMUiQwfDVX8FLwD0LIQ2PzImLAEUY2XWN3glYMciYnUjaBolbBoEdXkic1QSRIUTaqMiU0MUcHEDRsYCdTcEM4Y0M5UETkMCLJcmTGk1amcVTn8lbOsRahwldxjjUtciYvc1Tp0TSMUyUCkSX0LkbqPzPikGVOgiLgI1aQcEYZ8FV2bTb1.mUTE1csY1SYEVdG4haSQDTPolPzIVL4j0ZngjKw3TXtLlbWglMrMlVgMmPGMyJAIELOYTLFEVTzjVP2TkLHMVSm4RYkcDRxLzSvgTYOYVbnoURncET4YEbGQGaucWY4P2Qx4zaNg2bvEyayvlVlkTNUUzcOEyM1nDLW0DQgoTPzkVLIYSNQM2TZcEM3jmVkQzb34lXq8VTzb1PBsFVFAGduUmcIgmXIQiaB0lQNQFd0j1coMWUtT0ZxPlT0TTQxnEN3EVU3r1YrMTQ2wlawsxcVE2bIUjPDk2SkQTUpQWRHMFc3X1ZEsDcW4RXvsFL1YCUQMGRUYyTGslV2TkPzbmdoEiatQSX0c1PhY2MXkkVKIDYWo1Ttg2JocSYJUDdMYkMHojQ081QqP0P2cya17lSBAEbgcCZvHSQ2nVTUUzc3LiZ2olclgSdyoTTxfEc0PkbyMCdD4VRHg2a3PTawrVbSk2UNkyRVIiLUAGbJUGS4.WSyHFLT81ZqXiMSojQJcycTsDamwlR1PUbsQTVTA2PLkWRzESLvflXgImTMY1Q0MyPxn1ZrU2LEYTZu8TYvXmPGEGSKkEYFEGRUg2SvfVM2DWPi4VcEk2bl4RL4DmZPsTdXMkcAgjVqUDaSkFLz0DVLMCcWsVdBcGNZMTTqMERSoEaPEiMRkEQA0jY0ESMwnmTqElVwLUYZ0TMxP1UIwTLVAWXt4Rbv.SZEQDQCcmRSciPHYDSpE1RxnFTYEmXZMzTwI0MtvVa0ozajYCaGMCdREWRAIiYqXWRF4hM0M0bDw1Jn8DZiM2YYkjKEg2U0nGdOcTZhkkc1ETQnYmMyf2Y1LjZCkTVEU2QzrjamckPYQCV271Q0XDcAsDcVQFYyMyU48lQWAGVGQlbPsDTVkCMoYWSGYGQwolXQUTcIs1X3DzXBQFYHoURy.0TtMicAQUR2w1Lqc1UtjCbKQ0LBYVNzszQvkGYLkDV1kDcYUVb2T0QCYycDwDUSklaycycMkELwE0XLAUL0QiUx7Vcqf0Qw7FQO8lbzUkK2.CS33RdoYUXggiKv7zMTgia4DGdpUWcq7TMwQVYLAGRvITcGMyTvrVVDUUS5UDLyzTND8jYlclYnc0bYwlV0EmXSslVIQWaAcGTIEmUzzjMYc1bBQWSEQFc0oTLyQFSwTSSNUmdhQSajkCaPIWYlASLl4jUxEDR4YVPHETagAiS1kUUjoWRMQidFQFawbGVsszatTWXm4VciYkSPACTOMTaGYTV1ECZRUiU3PERIs1L1TEYFMEcwDEavLCaqEkYlUldjUSYWIyZ47TUGckRmYzZDckM1oTQKsjQ1jDMtIUQk4DS4cGURUiQ1XGbX0TYhkjKIokUOUFTqMFN1QmPpEUS3cSTpEzY0HkQUUCLhYUQHMzX07DZxECUsUzJ3kEMgo2bnYyUtIkZWwFdwjjU0blSOgDV4Lkb4nmdokVVyXWTtUyanMlQlgiblU1JyklYwYkP5UyYGMjKSoUTlUkPNIyT04Fcx3RLGMWaLYGYyYiQLgFMUgCT2UWcoQzR4cSTQUGb0YlbIElVw3FMoUTMvQ2UGQTR3P2MI4jYM8VcToWSzHVPCUjPQMUVyYUUBMETyYjVpokV3bWbrcELBk0byfzZKwFLJQGMLolQyITS5ETQFwDMxoTVz3DTrMTdogCb10jXkAiay.yLq0zUikyLxjjM2ciMY4DaqTTUSEibF8VdSMybxk0TQI2SFM1XAkWPXMTZxYkYSczJyMlaUsxTnMSSXcUMCgDbgQiXOokbqzVY40TN5Y0Y0.WbPMTMRQUVzPkQwjjKRYUaME1U201JPEVQYYmKAMSZYkTNy0DUxc1YHkFb4LzYikDY4PCcqgUYvHGLhImRyUkbyUGbx.UXzElczAUMIgDSYgSYyjGYGgjXocSX5kzRDkjdZQUSq4FYhwDSFUjaLESQgYzZAMVaQIGNO0VUrYkMI8jSuQFQFcENxPFZlUVV1bjUwI1SuYVVhEkRnkWaW4RTmEVatv1Yi0lQu01TEYUVZIFRWQkXSo2a1c0RZsxR5U0MnklREMVdwXFMFgUUFQzbLwFZrcDNEQjSRIkSNISSxokQFomRFUyRoQTTREiXRkkc1.0TiojLBAmUvkEVQUyJj0TU4bUXtrFR0cGYEQTRZMiRushTMIENwIVSEMlQVE2QOwVTWsxT0DELzrVRqf1aWITdyglZjgkSxAESQcDQHUSYBgENsQEN1Tka2YFTzQCdBAiX1HyazTTTWEiMkYEdqDjY0bjaznULVIjZscVVqcjQnYGNvgELIoEYzr1XswTbqn0PmojMTMiPukWNx7TQyHWMmUEdWQSbNk0cyckasETTzbCRWAWN4IUMqkWZyk2UjAmQ3rVcTc1YzQTPMsTV34FLy4hd0Eka1LWbzrxZo4TLBAEVEI2Ptb0MEsTVOESYGQlbrcEZFYkLz.2PBAGZz3jK001ZZc2cukiM00TSy.ycXEjMPoVclIUXogVLC4jc0PVUyQzLv4zYvXmQ3n2YooldRczThkTYnEkRDMUZMUDdLc0RyYVVB4BNHYlLQMmTyrVSyA2c2w1SVEGdSQVNsUjSyIUc4LFMJQCRz0zRmMmVvX2XNolVxnGUUclQwIWPRYiTrcURPUWRz.0U5YzTxwVduo1cvoUPjUFLLkmcTYlVxXjQvcERKcGZYY0b1bkdYIyTyo2UyXybIITQTECZVITUOcCTyrRRHQ2cnYTXAclTyQFQvkGcVUyXXM1PiETRw4DV13TR1HzQhcibmkSQUcVTAgyRlgTaIwDRMQiXzbEUnUjYxfVdMkETAcjVhcWYUojZSUiVw3VRzgVPUglSBcTSYkUcqfVbTISSyoEbBslV4gTaLkjYWEiUwjiKOYDRAYFTqDlL4XTbNcmdIIiXHMmct7DUqLkaKYibBslVyM2ZhoFZAMWUKg1LxLia2o1ZI0lVGsRRjk1PKcDTtglZicWZA41LqfGYhQ0M4TCdqUSXuQ1UTEzaY0TNB0jZIQCMgMTSwnFRpQFSoEURJoDayMCZkomRqT1JwshX0gDRHU0MvwTbBMWdVQiTwY0J4jyMzT2LWgWVDoUSt4xPKg0TLEzY24jTtjiUJQiPVklX3P1L1PWLOUSUD4TUEI0QtY1XyP2MGgjbzf0SJsVQs8jTxfzXhkGLK41T0gETRgka0XCYsYTMmcVUwPmXkQzLtPTUj4xLpMzTIEDdiM1RoUWc0gTLkMGLLAmbFEzQVoEbYMTTwPzcZkESqDETMUSdUgmVogzPCshKYoWUwfSQ5ETRvDSaQAmSBUGRsAGQPgVRRAkQIMkZMQSPJMEaCsjPxoTXvQFSzT1QtvzYxfiPjoDdLMTbiQ2ZNU0LvHFLTgyMIUjRhwDRAkVRnEDZtMiKOkDQ3sVZ3fWPBcyXUECR0M2QOEyJqjjYskWdBI1LXMzPTEWX3gEUHIiSjEzPjk0T1UVTwY0T0MEbT4Dd2gFMUQ2ZHckbqoUN3YTNX0Fb1UiLyQ0UngiR04DZ2fCUTASbhkFNjYGTtrhQ4DUUtjjdqHWcyYWZFgiTh4RPvMkdoYWaMk0MzMjVHMVNjgERPYjVMshLJIGTvnUPGciRx.ybCsVMxIiUKAWblQ1XpsBSrgVPyTkKIkzQFcjXik2azMWbOgSYgMTZncmMFQ2Sok2cvMTYmE1R3TWSk4jMPE1M0P0RMETSDYDTFUDd0HDT1XDcHk2bDUDMiQCaOQGZrUkLtkjV0zTYyMDLIo2UCckSKYSROsDTUkTQAEWTHUzXsMEMEgTdnQ1ZGclKuoDbxfWZrYFM58FTHEla1MFaw4jPUgGco8zYhwTVAIDb08lVgMjQOcSbQQkakITNUojS5U0LDoDc4DDRkAWUyvjTwYGS2cjXLo0UKwTV2cFMzb2TqHESoUlPhYDbUkzSKEDUBQFVJEUc2YyXKczJm0DcDoFRgQETsMEUwEDctcURtXTYUEiRHUUZ1ciKPU2J4MURT0FVtHyaUo0S1fFaDgFcwj0MOk0JwPGdxMmV5YFMmQSbtLGcuQyQpYSTxoVNmcicF8VTr8jYwcCd3ciM4I0MI4xQiY1SngTMJYjLU0lSTAEMXUTUsYCbjEzRybyJYYSRwj1bkcTZwUVQTQCbKg2Psg1PQ4hLHUjKZg0cAgUbvXCT4kCUxcjbCQ1LQkFTwXVV20jMqklbYQESVUVNGAEaNsBaAYUXvsRNybTcBQkcOgUPQIGLzTyXiIkchMmPwXVT4LyQp8DY33lZQAUU4kCVNYGdgckMrEVamkjanIkbM4xY2QUXII1X2nVM2vlQGQGSmMjXJkTay.2cqrBbtoELm0VPEYkYwf0MuIVSVgCVMQFLvMTXz4FYvnmXiMSUqgEZu4jR0zzLHYCdUgWZwE2aq.mQwnDR58lVPcFVnYCUIEzaEkjQMU1MvQVL1XCR2cySocURyUWcyU0aAMWc2E0bFcDcqgyXKsxUywVT581XnozRW4Bb2L1R0EGTII0QMAkTmw1XTgyRJIlKyY2PjgSLNcFLUkWcn4xQyDmR3cmPykmM2UFaLgFLtv1ROE0cyn1L1HERpglKqrjaQAWMPkDNiMSUvsDdjIVZyTWb2DSbiMmR2DmP5wTc0r1S0YDYJQSTwoGYs0VNtUzLsYTRYY2TqUDTC0ldHQCZr8FY1M1UZg0QKQUPxnzPhcDYtwFUU4DLZkFNWwjbisTVKMEbKMkPyUlVNEGdUwzbjg1X0bTbL4zaFEmR5EFQ3fCZOIzJgM2M0DmS4XWXSQCatL2brIGSZ0TUYElLvEmM2DSb1QVZzLSbQMWUW01cNkiV37FLCkzcYQzLFElZ0kjKYMiPDoGLxvDRFYUM1XCbNUUa5cyblA0ZFcDSSU2QYYFSRkSdzTjMiUjKtQybRQlVzDWYNQ0ZRUUdjMELIcjTM01YJAWb4ESUxslaqcWVWomTKoGa1DWaJUjdrsRMSIld4gCNWMUTvk2QLkUVAUGd4wlTFgVdugDRskGVzTTRvg0TCg1Ql8lc0XCa5oWUuQEaPUEchgEbvMUZnYiPyPVQFQyMscmTgYWRXshKFUkXV0FcNwlMwjWMikSXLQUU4gid2fDdxImdxTmMSUlKyIkQJAGYgUCUugTRxXjPKs1YGMSZxHVSTI0QSUiQzcVNBMlbtcVSI4TZK4BdLsFMkciXuMTZPYWXuEUZNc2UtTiLNkmL2P1Xtg2XvkmZwjGYTMUQHomLREDR2YmTS41UxIzYzbGMkkSXZEWUYYySyUmZGIlatESanMUXxQkVDIWQzMmcws1aKIGT38FN5ISQ0UDNlM1UwnDQvgEVzYWdiEET23lKDcTdxjkdOUDdqPGbVwTZvrhLF4lPqTGdzf2LiIjUhEzLy0TaukzM3kmZQgzJPUmMyHiSqjkdWAmdY8TVWASQt3FVjoVTCQDYyjzQ0MjSiUicvEWTyXyQngjZpMzPyMSMBUGUXETdAkCVwozZzIzJ0fzXw4zU1DUXPk2cEYFcrwTYscEbnUSbj0DaGQiTsYyLWcSMxkUX5oTb5kiL0X2bhwValY2RsgFUz4lKMMjb4LlPyYkUz0TbIUjSho1LtsBR5UjU0nTdUoUX0QyaRUjSxHGNLEGQ3P2ZyUTRlMGcsQWPsMEZzUELXwFURgTRPIGbIkCVzPWTywlZzvVZMIiL3jyR3rDM0zzPMg0SukkLWgGQPEyYZQ1LGkDSRcEMyIUXHAyXzYSR1kkUKwjKuUUbsA2Sw4VX4EEN0EETXEycUAkTtwzYkczSgEDRIASNx3lUxkzUvH0cToWXVAkdzUGa0D2YjclcXQ0XWshTzMjRUojMpcFaAcWNwkkU4cSYvbDT2IDYYETXlgCTvQjb5YlRQEyLyXybMYFVJgTS3L0Y3TmLnsFY0jSMqACTqUyZl0FU0YzLR0jd2nzUu0TMwM1J3giQjczYPkDcvEjR5UTRzY0SlsRZ03FMt31cWYlTrMjTvgWQRoTLgUycqXlUtDSUi4xXQkUaY4VSZkiTpYTLrMSdF0zU1nTbmcmTDETdWU2Y4j2aXgERkkjXYIictXjST41UDImTBkSS5QUV2o2btPGL3sjMi8lbio1MRMVTJoVUgQzY3QlYJAiVDA0alUTUicWT5MUNuMUXRMkZOk1bAkVYwf1YK01TmIDLjsRUMkVZ2jyJxnFSykjSFoEdW81L0H0JC81ZiUlT0wFUvnWUwECLkEzaoYDbgcCTrAmPhgib1YmT3Q1TDgDSCAUVxL1UTEVdMQybZMGURUkTzPDULwzMOEmM2b1TiklavASQ3DELxTkYzHiVSkmKw7TL1PzU2kGRNU0YyY2TSc2YC4hc4UEZKEkb14lcFwVL3fkcW4BLLszQ2.SayImQYwlPMgyXLEFZiojXwMWLvLWamYWMiQzUyDzXyUlZwcma1jSXYsTaw8FUhQ2X4sjPBACMsQSUxfFNVomdLQ1JhcGSHMzY0cTaG0TdDIySxHmVCclSUUlbyvFM3YFU0HjSkYyZXMVVtEUbzQWLOYCaVImTNYyPDYFLFYmK3HzcZQTLlcCSYQkalYUQxHFSr81RsIWYyETMFY1UE8FLnYDc47TaJ8DMCc2TVMkSusldTA0U0cSSMQWZhMkawkjLMsRXHMSZYcWQ3f1MEAWV33TdDUFTIQDQOkma3MmLvMjKv0DMQo1TFwDN4UFSygVayD2MxjUS2QCSLkVUQYGYpg0M5Uiaw.SSGMWQybSchICV0QGZnMWapozRwUEapc2cuk2ZTITMUIVM0IVQuslVqfFS1IlMx.yTgMTQ4IySkU0UT8zPGMCViQ2XTo2MPQzQOQSatXTckUWTXMVRJsVMrQSUWUzawU0SzQCZFkUMpU0SCkWdTYUMicGbtkmVwI2X4gFUyEWQqnlZF8VTw0DM4kVStj2TtEyQNshPRY1aUUUPtEjXUUFcNYkKyMzatHTR1U2LDYTLkAEbnU0LNUCS0gWYEMiUpUkSSglQEUGVkoGN3zVaRkGayo0aQkzSno0RtzDLwASTEMUbHIkQigSVFMiMLIUSpASQrwzcjEyT2shazDjdCEUMpgFRXIFb5QiR2bGVyAEawLWNUYzJk0FZQEEcvUkbscWPWMlchMFNrY2aKcVULMiaoA0cn0TQX0TX1fDbxDVSZYVURIDak4VbVkUNPcVVgwTPgQjT4zjPtcEZqPTXBkycZcyLRcGYznmUvjlRIozc5ICQOIkQ2PUQzY0UmQkaXEFN0Qld0Ymd5slRtHkVEIzTP0lTwjGUNkkSTMTPKMTQkYyboI1R4gDcxHTa4cyQ2bCQI4hYzUzQh4zJFcVYtMGLZYURUQCL5ECUkkCQmUDSBoULqjDTyTEUjEFUgkzUJozctfiSRYzUjIUVmIUNtj0LrwFZlYkaKYWRTAyRscDbAAUS4YCbNIyQwvDNEMzPyT0ZQcEMLQWZUsFUqjFVtnDUjkEUYUCZNUyLzckS2oEcJo2cEozTvYlRYAkRFgzXEEiatElVwP1csgjQrgGZME0T1QiYVMFaMQzZ44FS0.GSjIjQ4Xzb0nzbL0TdicET3HyRpASc1MlcpkERLI2UyI1T4nDNPUmLy4TRTYTbUsRRlQFYm81XIcSdJcFRpMTSqjFRxoFNF0FauMmUtHTSxoUY0YjY1bFVFgiSp01PzgSZpwlSqcza5gDVs8FSFYycwDFb3cFZtYmSDklYFQSNJkjTn0jYAgFdgA2Q0.yXHAkYzQkLLkDT5klVFcFcFEUPyP0chg0JW8lRQMFaxPTaX0TM2I2brckcpE0JzfCYPA0RGMmQybzLtgjYPYULNYELjsDZwkiY3UGSTMmTFUGMt4BVN8lVMozPkgWZsU1TOIETzPCMPkEYNIWMvXTUOAyXms1JIgiUws1LSsBRr4xbBQSX2cEMx7VaBQkchgSTBkCSxYTPXYGSz7TXwojUicVSh0zbMITM4cCUMYGc47zPhQiSJMjZD4hU3rjSKcCV1UyQJMGUEIkd3vjYnIGcLYjcVE2Jo4Bbw3zMynlb3j2PwnUMOk0JwIWRig0XjkkM2ciUgQSczXTM4fjKSMWVngjY0rzT5wFTm8TRx7zcgkEciwldCo2YBsjMrU0ZhQVXx0zc1TSc4nzU0fWPzXzXMckagMzQvomM1sRNwQEcpMULtUEbmMlSyU2Q5E1cnc2Pn4RSRQyY4jiUEUibZU0PtbUNVkyT2HyRNcmTsoEa3L1cQEyQKIFZ0oDctsDSwojKTEVMzQmaTokQWUWVFEzPSAmbNEkPVokYIshXx4VXSwVYwAyYUQjcvEEZ2TCdSMyXuEiPK4lSWUjTgU2SiQUS2ASVDUDcJ8TLjkiS0MiVqsFduwTSwASdIQFU5kWcPI2bHo1axElVikTctgia3HTZ1MiTvLlcq0lcIQkVgk2ZJ4jTZEkTtTzYsYCUkgTT1L1PRoGU0rTUmUjK3sFVxM2SpkkMGY0MvIVaLs1bmkjaQUjK4bUNAQCLxHjT2vFcRcyPzHUXR0jYBAEUqT1ZYEWZ1MjcooTYwIVV2b1XxfTMy3BbxLGdWcFLToVYrgFToYjQyzFcPsTMgQ2Py0FZi8FMFQmPisTQFAWaKgGMpgUMvPWNyYTTiICTJgCQwICY1X2SRYVSxojT3.USuYkKFYjRJAkT38TPUMjRvjCYTkkVrMyXMoWbvDmQwkyX4DTaY4TLrYTMRUSdBUkdKETXloFSS8VcnkzRt4hUwb2LJgTdJQlTQUCMykjMzbDTkUUNMYlbzPlahUEcE4TR0wVXyg2YmY1QqAkaF4hYnUjQKszJyfESvLzPpMSbyrVTlQ1ZGo0YqYTMnYmLpkmaMoVctjVb5kjSKYjdicWUIIkQZ4zbjcSSyYTYyYCVxoTVBIVZtvTTk8TN4g0QhsBVAU1aHQzZEI2a5MCM30TRM4lPqglVMIGSvb1P1ozSkojQJYDYIIERlAGbhMCR1QUZKcCSEgicDQ1UxzDd1UURTkibKomSWwzPZokZkAiUBAWXvjWY4cmTwYURtHCc0rzXrQEZpkmXvIDL0rlcQo2MXIUPyojUtHSXDYzMCgSbVkyXDI0TXU0TpoTUvLVMHUGazL2Z2QWN2EiKNcicncSMYYiXFcSYLIVT4DEY4AyMGYUbXUyaDQFcvolbqjCU2LiZkIyMYMTS4gzU2nVR4MDb3njTuYCNwzTQZUlK2TkZvX2JAQlRvDyPiQEYsgjLG8lUwbmK5omP1cTPO4FR4gjRXE0MlQTP0cCNwMiZhISdmQUdSICNMYEc0UEYNoWSjASZ2DULwIWYUQWQroTZUUiYwMjdRcUdCEkKqjDLjoUUB8TUBozSBkENA4BcOIUT33Vb0P1JPM2Jzf0LgslKyUyZqwzQqokP0fiQQ4hY3PSPAElVyrhRhYkaFcjKUMVdW4Fd5YTLwTWMxU1LZ4xavUEdvQCNlgWTtUVLyXWa4YzLKMkbTElamkDc0U0bnEiV4wTcIkUPZkWQWQTLY8jKsgTV1jmdZ4RaqUDc0flYsQyMGcmSgQERw7DRlUEcDI1MtsRSEslM2AyJFImbNUUblIEVZIUboIDU0LEM0nlUtDTNsgWP1XVak4DaBczbT4TLjgCZjgCd4QCYpoVVQc1cMIEMiQiUSIyMGAiKCc0YGkkMjwFSvT0YQoGaw4RQAAUd2X0YFI0Tvo1MvfGRJgjThUGaD0jcJYSYWAyLt0FSgMkP3LWYYcTZ1YzQgszcoIiRJ4lMhQGUp0VYLYGUi01TDkjLnUkPW4BdWEyM3cSYTUUbGg0XqLVaLUVZFcSVtkmavjEb33lSlc1Z2TUNHUzUjYSXKEyamk1ctPDaNkiUtQkTyUmTxjkcqHlPyTSZLUWRMQSUKUGZVYSNxACZAYmL2HjP0kCYNYFSTgDdAc2MIgjb3sVYPI0MP41T3cVZQESbvQFc1TjPy4jb5wTQhEmagI0ShkELGQTUtEidQYzbvI1XiYiRZgjRwLzSyMGSqP0ajQkRUgVVFglYq0DbYIDMKk2SOUCaYgjSOgDZLQCdnAmbv.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.mSVQySIgkRQYiYz7zRskWa0.yLGw1UicVUOU1MuMDVyDjXOYTYqMScnIiMqEkXHkyZRglbAclUjI2PH8TLhYFLIIUQxflLYUSYEQGSjokQMoUaxYyXjIlKDkjTZgETtwzc0HUP2YFS4DFZF4jTxrlPgMjQIIybBUDMwLUazIUbI8lXy4TQv0VP2Ujd0nkK0MVVrg2MQ8lPkcTMYU0bIMDRRISZtsDQybjR4kTU4r1S1g1atMGdMwFN1IiVYoEMFUTaiETLwnVUh4FNCIVSPUlTjcmdAQSYDoTN0nDbEElRzUmLH4xZqwTLHEkXrQzSy3lP0gmSVITSpoGYp8FTPcSLl8VUpQWL1USc4DEL0X1MI8jR1c1ZwnUQ1YDNzTFYt.SPlUVND0VRzrRavjEMjQCatPUdyXGRNE1YUYDaVoTby4jcwDTcvLVaBoTNH01JN0DNZMFMUQCTSoURyQVYSwjVNk0ZkgTUjUCS0MkSGAGSjclTNQ0QycDcp4TTY0DdZY0bxTUbN4FNkYGRVECVynVQ2IFVMMVPwcSMFE0SNokM08zSnMTQiU1PCQTPx4BR1nTMDEiShsVdtTTQ0jUZyDSVzLFRwEmTFMVbFESQT4VbiMkR1DTRkkidXQiZWgVUyPlMyshcxImUrslQ4o2ZW0DZxECdtTSb00VdX0TL4nmVusTamcCL3nTNn0TMxbEaqXVVyoUYA8VYqjFSzjjat7lRIYiP0UVVLcSTmUkLpMVbtQEV4omSH0Fd4j1Uwj0cvMicpolXg4VMpUVcSQGbII1R371UjAWUy4xLz4hYFUWNWI2SQkiZ2PzUkcTNvjGSz.0TME0c1olVSgyLo8FbjUka1fUPCcFbzDmTZEkd0AUXkQmRlwFTW4TaZEEYXImKHUDYxICRWo2S17FLCk2Rzs1LVgGU58VZqDlcoc1Jsg0POg2aZoVVPAEa3fVLIo0RjIlPDE2PNcSNvMDMqUSM4HDMigFS2HTNPIkMW4xJMYCQqUlKtslQK0VMFEDcwHVdGEWVqDFc3HmdQQmT4X1P1XUao01TxjkSxgSSYElYwPTUy0ldRQTYAYSMqnmU1oEMmkGayDSP0A2M2LUcTshLoshU4jDSHcUbDMmXGYUYv3RNlYSQmMEdyXVcjQSLvj1RLM1XnEVaVYSPCElVyPFYwr1RsMmM2.GaDk2SwLCVjAiQ0.2QtQCZ3M0R4PmRgoFZn4zQwLlSo0DUSoDYuEyRQI1YrYzXUgFUVEzbsgjazEkXwgzUC8zLybiV24VN2ImQTMjQwf2b4EGQyImLtEFT04RM2MDa0jTY04TTpU1aqEmLokWcFcDNVkjSBUlc3LGNq3hXSkkSybkKVA2YiQGa4UGTKkmTnwjQxb2QCsDRVQkPxnUTWUyMn41MOcVdVEWPTgUQTYFTyYkUqE0UUQELH0VQiEFRnUFR4shLLMyP2cVPKISN1HlKUsDTg0jKCAWQjEmZzHlb0DyaFwlVyIySHsxYkEUZEkGMkwlV4Q2M2TCcqfSL23VX1vjQVoTN0kCdociSJckM0.CLDwFb07lLlUiVxDWdnIlUx0zb0IWawklQMUyTqDVaCA0bi0TcQcURFw1PLUmUgglUkkWXRAmLtD0MvMiTjYzZDMzJ0bzQrEWSzQkMNk1ShY2MX8FLhYGYlIWNMESM4DjY1IEMSQldtgjX3sFZv7jVJwTY2bVdF4xansRVvUGVTMlK3kjPK4RTq7zQrMTUHgmQrY0JoESdrwFaqMELCUEcxMEanIEMTkGZt.yRvk0R2HSRTUFaw41bzEVZWgiKucVbPYCQJsjXvczaHQCZqnTNI0VbGMCLS0jMvEkXzHDVU8lYJQiY14jRuQ2MNgkdnc2UzIzavrzS0fTSxEUVDgGc4LTQPgWYKgSRvIlS4HCNpgldYEzJqUmaJo0JpUESKcST0IyTuM0U0kFZtMCSlgTaJckKLcGSrEFYNYFajckVhM2XjgVanoVTs8DT4zlXnYFT0YSV3TTUGElcT0DLNQ2XQUkaqjFdDoTQJU1UX0VarMmLFcEd2fiapElLxkkX1cWS4ETShszLlA2Z3nVLL8FROckLDIzYKUCbRcVZ4E2TrUTMxE2JXEiVpcFVYIEVvrjb2LGd4ACTHUTLG41Mz.GQIMFLnQCYVEUY3oTbwXEdAIWMzkEYggSSpkzbqwTN3gGS1gGatgSNxwlbjkkLvoWYzX0LVQ1Jp4la2cGZq.0QPcDa4wTZuYmQFUGaLM2SOEyR1kmbRsjLvY1bwMkKwb1SxUiUHQ0LrcEbRUiQ041SBQ0alsRU03lUNIDLkUEVTY1JXIyaxQVZnQDYnwFS3DkYzXTc2n0U2rTauwDbBEVQsozcPAUctXGLTQzMWgyZPUkL5cjKpAidq3xbhomX3j1MrI1MCgyavkDQygVa2gyTrE1YZ8TQtLmUxkDY4EmTybTLuI2LQUiMA8TURomQSgUUUoFdYUGVj81RxIzXsUlbOomagc2UDQCcwYVatH1aNcDYgwDYzjWaHo0L20zbxDDV1MWLiwjYGs1RO8lKqPFMIYETqgCUTwTdSAib0cWc24VbE4RYugyMkY1S2cSarElbMU0M5wVV1PSa4oWYmkyRnUjKvcEVLYVdGAiRKYiZGMCQ47jb2LFZvXVXLgkPYszJzIyLtj1ULwVLX4jTsUGdCQkPQozU03zbUMyXl0FV3wlZIMkXskTNO0FS0TUX2TGaFcVcyflYsYCQgw1XuQzQ3DGNlYCRrcjY48zYvYWZ1LkTG4hVwYDUrY0MsMycScybzj1Y4DyajMzTtfVTXMWN20VT37lbwkWX1XjXnoDNjg0bvfSPyjjYtACb3MEMvHmXhg1YyQiUGQ1cr0lTFszLtHzQ0j1SlI0SNIlXvPyM3Q1MVECL3bjZ2EyLWA2TJszaJ4VMKsRRoEia5cGVQQSQF4xQSEkczPES5cGUwsjYHwjZvYjYGgSXmsxQ4TSXCUlZigVN4E0JxgGLDg1J0nmatA2aEQEVuAkU1kENQoFRroTV2gkKJU1JvEEaRAmPOAWPWkFZy4jVCEldR8jQtDFZG41ZXIjRyzVXrYiKpMCR2HjMgM1YWUkUOo2UkMlPOMEZPITbiMWRTczLLgDRtHWdCIUc4LWXHAWM13FV2oTR2DUQvIkUJckV2MyXyblaZAyRyvlXvLDUkkDbTYyLC8FMIckMXUUNDEUZzUmXNgFVNsxQ0cEYqLWL4LiT1IlalUUZmoWSYgVZB8lLKoFSHsFRxTkYxcFVx4FNkg1LWY1ZkgCMMk1T0bFYykmLXI1YkUERDIkLzPzTvjjMBYFLkg2XvglLmgFUREjLgojXDY1P4TFY38lc0bWLYczMCEDNNMiYRUlVgMEQKUWQxPSMrgDUPQlSyHjS1.2J54DaqXWbuYiMEUCYUkGMTUCTu4FUSMiX3jjc1Tia4bkak0TQBwVbIAyTYMCLDMDd5UWVqMjQFM2SzLVTzgVV0TDUwQWaWkzTzsVdAMkUnoGUmQ1UxHmcUcSXpQ1SLUCTzQSQ0DjPvEVU0E0QXMSUPMid2P2RwUDaTAyaqkWQEMmYDglbOU0RQQEcvAkSnMkMNEmSZc2MyjUM4cWT4M1JDMVYCMiSyElcDYWUAwDZ0QTTxMCN2ECdIUmTxLVNFkmUtbmQJgiUEM1ZBUmSKoFLZMCLHEVVWwzRMgmVScDRqfjTvTGLvgjaUczQoIGbQo0alYCa3oFYpQESRUzcGQWS5IFTRISU1cyaqH2TZQTQJcWZtQTdU8VQJwTTFgGQzXERFYzXnoELznVd3TSQHg0MxfUNKwFNLMVR4sVSDMyMxz1b30VLCESUXgENwTSaiM1LPECR44BTQIVSwnWPT81aiQiUPkiVEIkP1Y1T4YiMFomUsc2ZOITTMMlLY4lKMgCTUUiZsQDczgyUlgFamMmKgIWQlojdtYlbjkkbQYyPOkzU33BLVA2PHk2aJQVPv.WU0UGNIAkP5QlUFczcvHmdyA2RGEmPCojM5k2PmAWTzLjLOAUU3XVdvMiUrc1cZ0zQuUyQSgUckk2PYEiUwLSVHQCTjAGdiQ0ciAUQoIVXEcDb0IEU0PjY3nmQBY2S1XVYYUkMSc1RCkmY0.kdL4xStQTVI81UxYicJsVaCQUTXUmaSIGMQ41ZwoFQ3rTdxXUSGolKM8VSXQjVT8FaZ8TRTwzUzIiRs8lLAsjU0TGctIEY1kVQz31cUAGbvIVaVwVaQ01cqLjMpgFdusDL3bDMtE2cU4RL5MDVkM2LosTaQYiTzglYY01JgU1ZyHGYxXkL3E0JjAkbOkWTycEdnkmSUYyJMcmMGQ1RlMzZw4jM0jTdV4TRXASamEESGkELPEDMLoVd4TkMqLCakcGb3zDTMgiUGgiPhoDNGozZ5gFdLgDd1Y0SxbTMKUickEjdHAGZpkSYNY0JmQyQFcEL5cUZHolRuACVrMDN0IGbHIiRK41cwMyMB0VS3DyczIVcJIFdxAENzXlLMU1ZLYEZz7FVhIzPnQ1LZ0jVQwDN4DTT4zjTWMiaXEkR04BRhcVaKgkKLEmTUAGMQwVVtQiUIUSVhImVzoGcs0TYsoETL81cjMUXTMUVigkbzo2Xk4lcOAkUrAiPCwzU2glbXgEZAgEL1ckUqUCN4M2LJMzMO4Baso1Zt4VRJAkSLMkYL8FVqbzZxjDRwUTXycWNMQGN0.SRto2P1I0QrUFLtHVd3LlZ1kSRi8jXvHUUHY1MFokUqk2c2gGMyjUbOE2JRsBT3jkUY0TaVMDMt71cUETQ0LkPAIWTNMyQn8zSvQFaDcCNIsxRLMiZ3.mYkElSVUVdxfUazg2QCojSJgGbOICdqTlKv7zJXUSb28DaJgTcN01JSEDcpklYrklTyEibIoGTDQmK5YkXPgVTZ8zP0oVYIUzYqzVdjg1UJwlXMElcMgWXvIFcgUSS2YSdAk1JFQkaxkiPnUUPiE2Q4TkchEWQtLFSUsVLygjRzrlRNIlSJMUZ5kET5wDcIYmVtvlXtTGaW8zYJwlMmkWMU0Fd23RdUEzXzzFcVcVLockb0MyUTY2TYcDZtf2U3QTaxkiSyXSc5E0UjkCc0YmMWEDUXgzPYUFY3X2RxbmQikkaEkVT5ESN58jZzQGZQ4DdybmMSQTY2XlXwoGMC8FQnk2aDgSShA2cwTzMvjVbDI0UlsRZTA0bzj1XgkjTFsRVWEiL5MGLqITcHEzU2IybH0lUBYzRigWbwsRXDgDUsEmYW0lRwcUcwoVNr0lKi01RwACdockTWQSM4fUZkMibzQkTiMjXQs1c2MmT40FZTAiLxgTLPk1Uq4DRYIycGszJQgiPggDc3kSQKokYL4DcXQkQwjkZ5gyUPMjP4QSTKoVM1cmMuQWVXYia3PkPpMUZsoEVtnTSqrxJgsjVwbTcH0jctIWNBYWP0rlSybDLGYESRg0X1MFd0rhdVYSU0vDVvI1PZQGbAAULYIScTITPzX1b4fDMQomTyEWZgA2Q3UyQuwDZugCTp0Fd3QCS2IldockR3UFQVQFMjcEQFITM1old4n0QhIVQHQDRBIGVKMVUmQmdIEGUzHTRycSMPsVYtDGbOcDVkoWSy.CUyTEUDIGM2gFTDMWcqTyM08VX07zc2MmSJozXEcjdogCZqs1U0sTSWASXTc1M2k2cKUjMvPCQCE0THMCa4YEaKkCcxLWaIgVXBYmSYU2cqgDauUkUCUDUsUTPHMyL2AiaJQmK4kyYKUGQQsTPT8DTCI2PpsldFUFZVc1Y1nmaP0FMGgyaCIyUAImZ47lLKEEUnEkRynkUxDTLWIGV3n1QWI2LQkmLgcycsUjYSM2SJMWUHgUMIAiLUAiLUMEUhoTU0bWQ2sFNyDiaToUVlEFb1cSbmslKm0FUvYDVvESYKMDVhUFbp4xZtMUT4zjPgYDQw3TMjAUT3TiQ1Iyb3nDd5c2UDIlUMgybZYiQ0rDaDIVTw8TPxXlKwETSNwTXNY2RisTUTYVYt4FSTglZKMyUtkUc2.EMjcWPGUlYLUlXrQibYUCNxDUaQkCTqjiLNIjZicmT1jGbLYmSREWLwDVTq.yZk0FLB41XzEUMNImdzLWNZ0VLDsVMDc0aXcVMhU1JXYjV3cFdO0lT3gjU1IkRtTUTiQiYzvFRtvlK5AyYsoDZO0FZkE0QvkWT5AyLOEESngCdWIya3UFczkmKLUzPyolYlUkU50jbRQDYtHWbYcVbpwDRXQ0QkkTbxXkQ2DUZBUVXGo0S4fjPTMUN1QVbQUzU4jCMvLWQ2UCZIIlUxPicUAUSsIjSRUldKwjV0HVTUQFT4L0Pq81LBUWaScDRoojcmE2Tv8TYjUDUYYSQHgGcUYSbRklSFI0PwolbzD1ZXYSSksTSsQSdrgSLHwjc1LkS4IkM1A0ZYESL4n1R2HGZmgVNPYTQt0zMQE1Uz4DdLI1YwrRYxvFbw4TNq.kXWU0ZPg2cGUyJXkjdqIWN1n0R2bzYtflRIwTauAEUuMSNtUkPPYDYD4jLAYSMD0lVBEFVxjWQLACbJoFR1UDSpEjZWMWS0QiLQMybgAmaqkSXvYGLRAkT1Y2Z0bCTqYCcVglTJAUcVYCYhMlZSUDapwFblIkY4g1cpMiPJEDZFc0UykSQ1E1SqPDU1TCLqYELxDmcoI0YJgjUwc0TvsVSy7TZBUSU4czPIgSU3TDb4.iPuklKOI2bB0VPhIDbTQSLmISLI4VaEkzTTYSXynEZ5g1PpMibmk0U4TFd2MWS2kCV3LjYLYWP4I2J1USa3kyRhUGLVoWc4HyZQcDa1QUaR0jSBsxRqomTScFYHokbTQjP0Qkc1Pybv8TUvUlKh8jU5o1UwPmSAgldPUTX1MTMBkiXjc2ZtfmbMkGSBQWPhcjV1fCTFgiP4gFZ5c0LpETY0LlUDglKrAkVnklXL4lVGo0X3DTdt8DSvMEMxM1SqP2Ylsza0ciaNc0QZozP37VRVQCNzkWYzwjMS0FYncEckETZ4rhZVUTT5c1SKkEVIUzPkgWbTUjasgEQnUkTJo1LIckZi4DMvfyXTAiKKUDN2s1P1jjXqnUQ5czYAcmQp41blwlbwflc0kCZngWclwldS8VTuIGVvDFdzLlLY4TayLDSDIzbI8Db2XDbycmPEIiTKMlKDg2PgcUNAYFLCwzRRQjdR8zLBYya1YiUm8lKwICcxL2SgMERCQUdAMjRuY2aRYiZh01MocyavEjKgw1ZOI1Jmk2RmIVU2TWNLg1SxgVZFIjbxPlPC0DSLETUi41QKAmQgE0YB01ST8VSU81RtEVbHgVXV0FRnsRNQEFNK8FRgMkV3MTYgcVQGkGS0k2RpgTSAYzQiQyMFYFTTcmd2EyUOQDaoM0a3HETYUDU4gzZAczUEEzPUM1TYkyPxUzPOcDZwEDV17FcX4DLYACQB0VavnjYzjGYgUGRFUDbtIzXrkiTrc2atUGQXMUY3c1MVQTR0H1S5ozM0k2Lv.GNCgSXCgEL5UkZ3LyQusVPmMzbLIlStLVSZQGdLQCZnAyLwcETlU1cZ8DQokVdBwzb2Y1PTYDYAkSVYI2aAQ1TlMkKhMkavQ1J2XTSyQEN4gVSxo0XmEiUBcFZgIkU2kzcmMEbvz1SD0jXVQWUHshUqY2Zv3jaPESRwTibqAEcAkFQrgCZz4hPuMDMpcid0wVZiYWblIUczfidpE1RXgWTKIkLtckS5IEau4FTQkURTQiTNozUNYCQtvFNqfmSrQGNociakU0cC4xXkk1RBAGMlIEUE4BLXckUnMTMGUWUSYGTGwVQtAyUMY0QlQDbPsjRyQ1MPYTTIglUIMiVxYUawDVL3XSPSIVNzDUZz4hZqcFTSoVSwLWYqPmK3QVQvHmawIVaTo0UYkVTHwDLGUCayLja4rhM3fmY1DEUqEVcEYkcvU0L4HDVxQTL4LkYvkSZKEVQNQFZlUUZzLzY0f1YIEVTEkiQwTUdxgGVvHUL2k2atDkd0cGU0kmTSYVc1QGcZ41S0jyYPoDVXcSUXEFUyLmMI4hMvcjQ4QmVJcFbyb0ZoojSC4FL2fUbCs1Qxn0LtcESIMlbDgmYtDkZuolMUMTSX01M2fCNUgjQ1fTQqIjT3TSSyU1UrMUaqEkMWgCdOIEdpEjcxXVVsQDa1ojRz4zXUYTSEEzbqXSb2nkZ1T1ZucSbt0VM4EFRMojUnYSd04xcyHjbIw1TqcTPz41PBcmdwUDSnozRQoVM0bDYXUyJ2njQLU2TnYlZtHDSFk1TyUlUx4xP1cFUBEictsRaIkjUlcWT3oFdi4jLlIDaWgDLA4RUyolVyfmRBIyXlIGQ2TCc3UjZoEkSEgTYiokY2M0J3PWcn01ZPkFQ2E0MjkWbzPzLnEDMxjVd2QiKBAyMlcmQW0VXPMlRXMzSuYiXrYkMhomYwfmUzQGa0glVk8TZXY2L4j0SzPkc2cibtLDbzTCRFIDbSIETp41ZkgSLtbmRngyMXsxJzkWXk41ZYcGatHiS0IUQp0VMIcWP3AGcR8FVowFdIEUcAkSZJUDVnQjV23RLUsjcXEUawnlL2g1QUk1TtgUPpAmbxMGLvMjYE8VNgUkasI0QwfyU2fmbqnGTpkFTZEUY0.mVmYjQwYibRUjMTglTTMjMvX1Q3QySTkDRk4RU0PGUxYlT0E2M4nTUAkUMh4Rb3sxT2gEa1.SNHMGaBMTYgk0JTs1ZvHTRRkjTgg2Q3UERuYUU5YES4.CaHg1SjgFRLUlMjETdqQTPno0L00jdo4VUEUyQhMEZyIUc1TFSzQkchQVZwwVd0n1aJomdQwTMDYkLBc0UJo2UmkDSwHUbzE2J14VV3L1L4vjP2QlY1cDdVcCV3UWVAc0cn4BYDI1XnoWMZgyQPcVauECSoYkSJgDQqkCNt0TcTgkUwQlUyXTb1MycIISdm8lY5UCRzUibTw1XWslQGY1RPUkPAomQnEzaVAyZZE0Q0MWcOEVdvflRQM2XzQDLScSSVU1XGo0S2c1RqkSSUUWLmI2ZyXGQ0Hid0o0XioWcAElXyklPvIVSkEFSG01cg4haLcGVoQUNmc0atH0Yh4zYFQSaYsTZ0YUP0DyUS8jLBMiM3QzLwLTdqcGUhU1cqYkTEQmRDomQTEWQokFUCQlYFc0TSgjYvIVRTQkTNwzZXMCLmgzQ1DkLlQkdBAUQ2b1YkcSUREzawHzR1jlXOQCTO8TVIkySuIEN33hR3YzSFIWXP41UDYDdwjDYkklLsYVa37zMMkjRvIyM0X1SkQVMXkTRqvlaRkUTwjjXqfmdiIUXyE0UooVZHUVPK8Db0EGLSoWdTMldWYUctwFZF41bLQUSvHzRmwDVTUVdpIVV3I2TZkiQOQWXUUFUmEFdGMlcxMERvwjTtIVLywlRPQ0TqP0TmM0PtkCRiIEVRQjZoQ2Tt8lcQkURpQSZzfyZwM1ZNolb0LWaToUdoMUYtkSMvUWalc2J0kFM3.2JO0TbvDWP5c0ZNACYtcTMZQlSqMkV4kiYOAiZ5o0S3bVT2kDa3kWdokyZVUzaT4hc431StXVMjYiZPkjS34xUwTVajkDRrMkaXElT5gTPqfTLoQVMv3zRXISdlcmU4DGZrciUqEUPSUVZ3MTbMAUdqLmMnICLvzjYYcTcT4hYWQFLyPzLlcjRIEFZZglQMc1YvMUbrIFNycWa5o1MmQGZOYlc4ACRPIFRkkFaFUSPxoGMwgjPhQyYZg1LQEmP0PWTEQyMrMGMwomLKojawLWSt0zJ3rzbzUUPv31QYkCSvoTNJMFcxwlcSMCQHUWPP4VRiYTcDITcDgTNqHyRScCU3omRhU2bHYFSYYDbHUEVAozR1YmaRkjczM0StDCQYgUNkIzcl4hYZIyTVczSWUFNyXTM0LkXgIkcyYWQWITZiUyZHkiMxMjdKElXIAUXAcDUHcVc2TzQ4P2Syb0QXEmKqc2MvAkRVEEThElVkokPBUmQVQlMXklPEMGbWIlYqLFZ4vVZkglMIklPEczctkGRWMmYJMVXVgCdCUVNN41TtnDdxTiLDIGRXMFQlQDS5USdE8FMgcDR2gidCMDbM4Rc5QEQ0DFTJszUqnULtMFVmcTRzTkM0nDcNUDL3Q0ZwrVaBUFMJgGV5AGYVAWdZASQ1HVLAgCTJMVQ0XSYZQCRFY2X3nlRqYCMTEicQcCLYUUZD0zJMMUVZslZ0P0XyPGQyDFc0EGM1X0Mr0lQ4Q0XRECZ0AULtkTQGsDU44FaX8jPRsjY03zJwX0XQYiU141b2klSCQ1awYiXwo0M3j0RSQDZRECMtbmR471S2PyMxUGdjIUSzPSVsMSRF01JqfiP5EjTzcUPho0JLokVMQTQYwjMwTSRRIWTTYSXjQmQgYmLEgVYooUPSwzQTcVLxclcQIGcDgWcK8jcYQmPjcCRWETcx3jVo0DThcVYiMVTSYCRV0VXZ8FaLYkQ4XTTrI1btcGbCYkatblP4kWQ2USXAAERjoEMT8DYKAiRyoTQWMkMLY0TDUyaZESNL0jY4M0Lq.kLXMlSII2LKAEVo8Vdg4lTBAyQ3jjMTUzZuUTNzfDNRgCSqwjdrMTNwQDRA4TU2DCQxAGbDEiRN0TcYYVbQUVTNsjPyshLksTd0MCMkYTXCASLyXWZIIWaXUWazoDdvIWNusFbvT0YJUCLjg2ZxTUUIEmMsQiQE4RQpUUdxPTa1HENukSMjoWTIQTTvYyXvXjdRIVQHQiXrQjRuEzaGgSUNMWXtjCbqsTQ2MFRCUmLNMmPGkSU3bDLIsDSFkza3gTP3MWS3AkZIAiR2PmaHslTYsFbGw1UscDcoQDc0kTXqPWLuEWYRMjSKwTVVAUdz7lZj4FVmYDS2LDbzHTPJIiLtASMzMGQqojPvblbDEWSB8jc3LFUnQ1SZcjbvbWYOYkMZ0jdzHUSjYCT1HjSUQkZZYTYigkKS01Z04DL1EyYNAiXuYlcw3DRyPWMwfUYvbWTtszYDEWS2HGS2Yyaq.Ea1g2ZQAWS1ASbzX0a2blLWkVLpASVqkmMOA0PqcFSA01XuUUbUwVVGcTX3DEaJgDb5cWLu0FdRcTQTAEMxfCQ5wzb3ETN4wjRp0lTQcSUlEkLPACbogWXCgmSCwDR1kiKyg0TSkTMh0VXlkkcDQEQxQUdqEFRAclakUUc14VTuokay0VZPgzcCQzTtbGcwEESLU2LyoTUqT2bG0DdsQVPSECU1T1UjszalEUPFYWYQMTbDgyXiwjXqo1TrgmRDEkZz3lP4klaSshMzDTUgoGNk41TjUmZokFLDM1J34VVFozUEIUM3k2TZAmdkgVUswzTnoUdiQ2XycTYGIyJGw1ak0FT4UmXEUDUjYFLp4RML4hLvjTMLcFZM0FYloTdpIVT38jXBsFN2LzcVcjZ0IFTAwVXW8DLjECMIMTYqLUdyzlKpkzUvQGNYMTUh4hZAQUULMlZBsFN3cVMw.EarAUMhYCYA41crU2TAM2UjkjXoIWYI4xLpYUVtYTNzfkLMc0bMMDULEDcSYkc3MSQVsld0QiQJwzPqQzcHQ2XBkzMkYzbBQmZpszJxImKvgyPmcERVsFZzomcUcSbxkjRwHTT2XjZkc0apclUYEFYMslMKwDNi41ZhElapMyc0LUZMMzc13zPXASaCUjLzgUbUkEbqk1SX8TU33FYv8VdnMTVVcTZM8lPsk2XDMzajglMEkTXUQCcIcmZTkyUgY1ZEQSQncFT2IjcugVTKokKJgVXhYjb2oDVSAUYHAmUtoGb1HTaxcWbzHEbn8FVtH0TXcCYIsRX3ElU0I1JX0lQ2f0cSMFVIQ2Pyr1PzjFRjQDNQokQSwjUpQmYyfUNxTmKFoFbrQDSjYWLwDCT2LVMvzDaxQ0PWsDLGgETCsBTikjMVMUTNQTS2EkVEYjS1YjKLkid0HGR2UCaM4Tb0T0QJoDN3IUbmgzbwUmdxkFdAASQnUCdsM2L3XmR4ISdxjWMy8DLxrRal4zT4EUMQ01QGczTzUmTCIkX33zPlASQEgWZvQza3gDTigGVxDUL4fVSgkia3EWbyrjTtQybZEkUFAkK2AEYzj1LlYCdXUkPloVVyfWckcjMxj0apYiSLQjd2.2cvciR4LzaVIzX1QkSDYyb0MiYCkyR33jVW8jStkmLqL1JzYTNSEjdMUDZD0lRPUmdHs1TYgUXUwDbBoTdlImSvcjR5MkZQ8zRY0lcokGcPIzZZolYPY0ZNojPtn0QXklRH4FdtAkX3UETm0DUCc0TDQGUGElbBkWYyPSN4QCaXYCYw0ldCEyUAcjT1YkaYYiQBEjTLgGRhEjSx3BVqQkRngCSiEDM0Hlcx8jZREzZLQlVJEkTBciQ5giL0rlPzwTbvYWUC41ZIkyTwQlS0LlKgoDMDEEMKg2S0YWaBoUUqXyZiACM1M1SQUTdiIVPHUzcBo1SyY2QiEjYjYSYXQUMsc0MlkyYtMSYSUWT2oGbggFanYVQXQlKwfULpcGUqXVVyMkamMWLu8zTzTVZIQmaTIlLvsjYuUTc0ISTqYGMRYjSsEWa0X0ZpgiK0byLoUGU4rRagQ1ZyfEY3jmY03FU0MSatEGQ4jkLqnUZMcmbgcicVUjdOkWUTkESQgScT4lcnU0QOQ1SugEdtUGTEwzaWUWQvASZEckUukUV3TjRlIDNEMyLrMVYAEFQ2rFQuYVLu0jawzzTHo0SDI2Lz8jQDkSd44ldg4zZxMSaF0DY2kCLH8lLVETS4HUSxXCSu81LzQTV0fGctzFV3HGci8zZTwDaXYFb3YUXwMCQvQ1bmkkZhIUQAMjXKkiKz7lKwUSUzP1LqEkd1XjPRQzPWMUZSMzbnEUPwMULIgFQS4hbtDzYFQEd2XkQno2XLklK5clVx7TY5kyX0ckX2fFNW4zb1fjZVcjPCIVROkWSYw1X2o1PJsjUWAWP2QmbjsjPpUmLzfSSD4hcYo0MGYmczUGVMgCakIjcjQ0b0MDdvjkKm0TLYUEY1.GaJYic3wTUlcyUqfTULQCQ1IEduY1b3sVR0zVLCMDTnMkRvjWLvDjK4kmYuwjKCImcPU2ao4zTrc1Lt4xS1nFRFMDd0T0ShgGRpwTLxUkRwcEURYyQVYlUAIETE8FdrEDUV0jRUUUYTg1QU81Xx4ld1zlXKc0PNUScJwFUNMCLhUybXgjLWsTMvQWPFYjSxHGRREDamsFaGYUZmQFbvkDNsoWVlEzLjoDZLcGaBUGZvsVRloDT0H0aN0lbFkmYP4DMvE1bk4jS2Xja04hZOcDZkMUPwYmTwjERyLVT3wjavo0cCMVVyPTNUYGdLUmRXQ1bHkVYZg1Ut71SOo2a5wFZtclcwUWNRAWXUYkQ2sTcpQTc0ckRo0jRLI1ZvYVazPSbPomV3wzX5QmUKUlaUIVQ0QUdtnEUuMCdHQ1MWUjaFgiTw81MyYlR0sxMNMTRF8lQBkkUxLCc271P3QVSYokaZYWUDkld3PDVHoTYVQmY0.ya4MGbwLVbIUCYTUmbFgyZBE1cpAWS4clQKEyRvTUPHQ0QrQDL0ISXPMkMMc2JAQ0Rwklb33jatYVVj4VN1XERLE2YxzzSzEzSi8TbJI0ajoWZtQCZtzTaqDDUgMyPP8TRxf1XmcSUqnjZ3T2UoY1czkkVyICbOMmS2XWSAcVaD4VbrQ2UwEjZCM0ZWQWU441JFomMAA2RlkzTBITRzDFLLAmKz4BaXUTXwHkPUMUY3bCMOIVQwj1RzbUdBoGcmQmalUjXZgiXzMjSuM0X3DDcicWMx.2PJoEMBECQyokdBc0LjIiMME0bq7VbtUGNVQSRw4RTCAiLznlQyU0JxUibrsjT5o2X3X0Y4X0YtvDLMsRbwAiaqMEQXEUR5UCTTUEYWEidTIzaC0zRTcWd1ITNlYEVSIVLhUjZAIFdDETRtLEV2bWaPc0XvQySvE0SVYSZMEEbqTTVGM1X2XyTqUEUsQ2RlQTPIoWPrUyLpcVRj01cUYEUiAUVGcGZ14RbrkkXxXWLWICb5cFV5QTZpQzcJckdhElczH0LXsjdxrVa3sVVoElR2PjZ4A2btgEQkkWaD01JtfmYCgjUqclQwDzRSEjdYAUS3HVXWcUbEk1SCkiU2YzLRISSnwVTM4FR3bjUn4lbqgWdV8VR4UCTY4FS1kUUtkTMPklT3gzZGkzbYIkUUICb34DLq0VSwHFY2XFUzg0JWMzQgwjLqHiYDAmVqLzQS0zSWoTdJkFRPQ2PjcGLvcyYqH1YHkVX4DCV4cGV4TldNoTTnI2TzUFTtDVTsMUZ5gkVvkSa2DjSqXTaHIVPQAiMssDcEYCaSMkKlkDc4ISQKQiLDoUbZ0jdIkyXTEGYFIjYEglZRIlYwg0UGQlYtImbXoGdMMVRmo2QLIWbGUVRqcVa2jGTGMCUhMVTEIVZxjCbMYzUOkUSRIFd1YGSYcGMAsBMCI1MYMWPvUUXRg2MxYjMjUkKvDTagQWSoAUV2nWbIUmLQkETgIUcKIldOsFV3wFSvcVRxMDVUgjVGgUbwfTbVkWRtXjK4gDUGYiaqXlZ4.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.yPAEmRqnDS1UkcI8lLuUWbPkFZFYTUoc1MBI2bIMSZIAkL4HmP0HyUWMDRTMVTycTTyDWUhcjSt.mPlo0YxIzTYY0LHQ1JoUGMLwTaqAiT3EVZJsBUq7ja2blLtPia0ASQWcEQKM0QRcUdDkkSw3lRJYFNlU1TBoUavbzJkoWSy7TV2rxUjc1U2PlMRcDY3vFaDM1aXACdybTTRsDSoIWSVIDR4EUbx81RzbiK5wVLmkjKRcUQqzlShMlVF4zLw7TM4QkZMojPEMjR5MjQ1wjUJYzTpU1c24RSBgjK0MkUMcVX5MGSY8jKUgGQSAmUsYDMJcGb3bja1UUbDkWLGcGa1kmd4UVNkMTNQkCTnMlc4D2JBMET2X0LIwlcAo0RXAGNnEEQRgUUOAUN1TWd1QVUtwFT1DmM0YFagoTU3YDQrEGNmQyZWYkPHcmXSYSR2nEcsQ0cAMEUQYETp8TaKY1JtkWVjgCUjI2UvDWMpgGMuMDao41LzgmXKQEcNIiSmYmV2D0Q30FNAgzJTIGSZIUbDYmd24FNYIidtPGNuQlYqESauUTatLkPSQkR4.kdvISUrEWNy4DRSAUa24lVxTVN0glSF4zTB8FU0bkT3TWQ2LSYy7VSrY0anEyMpojUjASUZcCRYYTS1fzYZA0LnkGZZoTdv4lTOwVcSYWSvXCVT4Bah4zXlkUS4ETUFQVUvLTdVEDUucyT5kDQ0rTU17FYh81JwbFaO8TXqUDTxDzbSQEYxjGNRQkQ24BSLMETuEzXq3xP0UCNEIlQHsDd4AkVxnVQ2TVXTkyb5YTU1shSSoFYGwVbQQELjMkR3nWcP81ayAkL0TCTug1JS8VchoEQwjSL0TUPrUTdtXjY1PFUzoFQzDka1nWPrMFclkmah81bLkUXIElcykVU2DGSBM2YR4TMx8zT0QiRQQEbFYSRhgTVsEjaP0FTYUkYFUWXBUTdgIVSxjGSm0FYqcDZtgTSsUETvEjSi4hXZETZyQ2cyfEdUgFRxIWaPgiXTo0a34xQ0QmUwfCMsYFdKUiahEDZ2nEM4XTYvDkTQoldpAyUL4xTHIiUDIzP18VU2EmTIcmaxo0TkMzJ0MlboQmQ1Iyb0jDaq0jRt.GNp0TXS0TPpg1T2kULTU1QgcjXWgkM0f1ZDwVVqPCMOUSTwrBY3USRLIlRGMELGg2YRgDUBIVR3c0LQgWYOASb4gWSqQ1XXElQMsVXPE0XiICSFUSSxPTTNgSL4PGQzLicJ4zUKMyTCkTZMczZGI1cvgEauY1YlAWYwc1Msk1XkYSaCIkMBE0XpUkSAcSUoImYjYSNIckRngmUOgCZqITdzMiK0D0bOYlajUmQjoGaMEjKrMmPwDSb5YiKvDEb4cUQxL0a0vDLJEUSlYDcGE2Y2oEV1YGTKw1Zlo1JUYyPOgjT4HDbXclTPwFROgkYkoDds4TRj0FbsE0XRY1Lx0jQzTSbkEEbrYmP2cjLNIzZiEySvAkRHcVSwQlYvIzbq7DZgElMjUjaZsVTq.2UWo2JOIjKo8FYUg0UzkyZsICarcGNMEUM5QFNYoFdkkSaXg0Z5YjdqjyPnUVbzjiKuklXMgyLAQ0YqXUZBMFbPEkV5kEaQECbQ8FS3PEQRQFS3nmdB0jS1ACRJgVU4EmMQASLZQEbPMFMJkERLQ1YYgERG0jREomQ4g1M1fjKAcDbhUCYEgDaE0VY3X2RT8DSKgiVNU1UzcVRYgFTOkSQpYjXq0jLk8zZOEGM2LiX0MmQjsDR0rxLEEGMrY2UMMVMSoTaBAUYq0jdTkDQwPULhUjS1gzTCcCNSYiKzHCbMgTcUcWdGIELwA2Sicib3bkLOcSRXMyPjo0XZgCZioVQyoVSRQmPgUCdvcSLDUTZAoFQxTlVqbiQUYTagA2XzfmS0IiK5AUVVo2P0PSUzvzQ1vVLhU2QUA2bVYjQV4hXIA2LRMmU2X0ZlkmK4MDYsciSyHlL1bmSwIWPCk1QywlQgMDYCkWbwIiMIEFV4rFSDckc4oDUNIWXmIELZcEcPoDQkImQPYyXsY2SWQSVKYSU0PyMwcVRoIyURMEQokSbWEGMJEjM3fCQSckPBk1LIkEZrkSZ3jjQOkDZ2YmMLE1TiMESxXic1oTPzUkauAiShgidYk2JIcDTtwlTi4lPxI1XDYFY38VSXU0ZPkWaMQUZ3LkPTgjUkg1XiMka08TVzbjKKM1RN0lVxEWLkcCZrYWYDsVYqf1RzLjXmwDatYWZKglUXI0SWYCZs4zYHgDMLQUNWEGSvcGUVIjPz7TVYMkLVwzR1v1R1HldwXSM2P0TzjTa1rRLz.CdBsha5wDRmU2RsEmKWU1a5c1aZYjaGwlQMYTdvTEd4k1S4T0MHolRgMCYgUlUMUjR4IiQ4DSRyUSSJUCaooTPD8VQxEEQMI2SgUSTGIiRIslU1MValIENj8zR1D1TtA2QGUkKJ8TMIMkaCg1P4bEbtsRX1UCbxnkK0HFSxQ2cE4RQ4PyaLoGRuo2bVoUc1ACU2kibQo0a0U1Q4UDc1UFVMYFSzsRUvEWbCsDdnsFbhkDSnY0LNETPsEVaTQiPmgDQtDSZKsRMuA0LjIUYTIiVCcVbwEyLGIzTGIjPjQFYuoUdLE1byQ2S3X0Mmo1JYUkK3fDLMIiMN8jd03DQZsxRVgjKWYjcjAER2kzLhAGd4giVpoFLyrVRVgCQ08lMCclbQUEa2rDbAUmdSwTXxETYxHiM0.kcPEkavLjXLMzLjITSGQFdUkzZS8lXIgDSTU1c48FLjAEQQQ2SXUSNyHGMv8DMj4VUsQ0S0bCTUEjKnACRNsjTZIiKrgyJPElM0QjYxoWZ2fUczTWRoIWNEkTTskiPzomMOokdEYjPw.yYxUlZ1klM30TLXMkVoUDUwjEVscyTpcTV1Ejd3PiZNUER5YDLwHyLz0FNt3laVgWY4fkPYoUajoTPrU0ah4hXP4RYJwzLLQSRLIFZKkmT3UkdWYlRQUmUmcmTGkTUpoGQ2YkRJgyY0zlR1L1Uj4hK4UTVqXEbJc0T2fGMLkjZyjSZio1UzjFLv0Tdwo0QBUzbPEkUIo2Sig1Ug4FTvLVaYsDZFkUQygUbmUTaRwjUwfWUyA0c2bzLMkyZjsRMKE0SynTPug1Zx3RM0rTdpcVZwjlUrkFaMsFTJwlcBkiPggGTxbzZYclQNEWSZcjZzHGYKQlYuAESzozcGw1MqMSbZcTTqcGYVgkc48zczsTQvwVY4rDc5QjT1TmK0jVMXA2QsIEStQCZT4BawHVd4rzJ1YCbAUUNUIUZJslTloTXgg1LCkDdX8jZ20jZHgjauEia4zzQgslMWkDcwIGSgYiLQYySvgTcsoGUXQCZxEkdlAyaFczMBUidTEGbHEkcjcCZlEGa3UDStkWLzbzLvDWZvgCUpMSUX8lPDUVT0YCVwgWLJYGaRUjPmA0Zr0lQMkTU3XlKpkVUVkEY1cjcOclQikFboQUXtPCbznDLgsRXpwFd4oVb5kkUuMlKNIzY2cDbTImMScVb3f0YF8FVtHVcxPEZSEzPIQiVw3lVhcVTKwFL2PWYy4lXxM1S2shPEM2U1EmbZM0Q3oFMNQmPPEkK5oTLWYEU3nEL44TN54lbOc2akQGcEgERHUTPiUCYw3lY37VT0MWPYo2Q3w1YmQzbYcGLLAiRqAiKR4lbrE2YnwVdQgETDomVlgDLyUiPSQkK0kjMDUCYJ0jRwTyTiIFRFo0LAMEdxMWZiQFbq3RcAsFa0fjaqPCV3gDYiomYlQkawnVYic2bisBNIECV50lTX4zb2wVQybmaw0TY58zatXVPI8lRsY2UZAWNqY2T2I1JMoGUAE2crUSSPYkMy.UNgsjKXkVLmcGMFIWTuo2TkQFMmUGVtHza0gETrckZ0EVPrA2JvzzbLo0RFUGTgQSRpUyaT4VbigzcEI2PzPTXTcjTwDyLvDiQkAybwoWVxY2UxfTMiIiQ3DVUw3ja2bVS44VNZMkdqPyUSkjZKcGRg0Vc3QGYIgmKO0jQMAGZpQ1RUIlUvE1TUklL1oWczPiXIQUQ5kDUXUDQoEFYtAiLxXVTwLURyTmbAYiQiMEQDkEaYwTbFMFQUkGSnIzR0A2T0YkLQwjZ2gGdHUULtfGQyfzaqnkP1jyP2nTMOY2YwP1YEYFbuEEYnwzUBo0PCUzYUclZvk1aRombRUDVwgUVWckKWQSdt.kapgzY1IkP0nkKq7VZEQzTtbycVQDayrhVvoWbWUFd5gkKTImdog1Z3TlK2QEUP81XzQSbt.iTSU2QMg1RiQTUCslT2PSbjg1ZXcVXvgyUm8jMUQSXsMUZrY2LvkWVx0lTjUyQxoGTsk2UH4TQ0k1c1ECazEjUAACVrkjR0nDS4U0SKQlYwnFavjyYnIldWYyMm0TZ4DiXz3RMMgmdq0jZW4FMn0TcLUmSQA2U5Ymdzkmc2c1T0bVZNcjdmckdwL0Zy4TSvLEcZ8ld0EkTL41a1DiT3HWbLA2T1ESPxvVQAsFUKQyPWwVRqXlYGIGRwLmPMMmaScicp8zT1byZ3cyS5YzUMI2QsU1J34hT4MCTyYyRiETQCEUN3EFLoY0TYUFTyMULAkDdLgFV1AEbTUGczDkQTYDVSMTLCASdrUyTB0jRyMjMrQlY3wDN3jWN5QmZkE2UqIFbNUSb3kET1UmXtDFLgEzRnszXynUXtXSbJI1QLUDS27zckEFdNImYP8lVnUkYQg1JMkUVI8zUzcjVGsFVvH0RQoUNCAkVYo0L0HjPJcFcyzFTg8zLRQka3IWV2.yJ38jR1TEMZsFLUYGd0LyTuo0Ms0lTywzL4YCQZgEY33lRAEEQUUDcAMTP4giPhYmX0kFdE0FbwLSUmUlKhYGS0cTTwHyXWQWNxEUViQ0XAUUc2vlZUYmPVUkKQAWSrUTYx8VP50TZ3EVPIwFd0I0LyfmKTMTZMslV1T2M40lTGMDY3sRVqL2aYQiTvoWVLkVPjUGRY4BUN4lY4XiKCkGdG8DdEEWZvokZFkDNWMGdZYVdXU2YxwDNh4xP3PiVxDkTuglPwQyPpsDZ0UFRwLEaDACbLkTbuECd5MyST0FQzY1b1T0LCwjPmQSSl4DavUCNMMURN4DVMYlMjkzJJEmP1EzZhIFbgAkcogkY2.yXQ8TS2z1Z5QmTwnzLq7lVl0jUks1MjE1aqf0SMEFQ3Q2S2DWb2XkRkEEdgQGRDECQ3IicxfCUvMTL2b1PPIWcUsFalIGdIQmUJICNkEUQrYlP0T2ctDCdNgCMnElXFQSTznzMzEGVYMzRI4VcPokZ3AiM2njPWY0MroDMxrzMngla3EmZzcFLKIjVvTEZp4hSvPEcEwlXgYlaUYmXRUUMuIyZYkiKkU1JX4VUIg0LKEFZxcGRJc0QMMEdJgVb0.2TxAGRtklduYSV3DibxTmLxrFSk4VchE0ThMEVxXVXgUTQnglaog2bEUTMOUzZ4MlbPQlbJsDdgICM0I1UBUGUpkjQGMkPzMzPgI2R5YkSw.SZncVaUUldUYEdNcjUZgUYqH0TIojVVoDUtHCSF0TRnISV4LyPqsxUkYjVwHWTJUCUyzVZI81MwklVJgEaxHUL24lPKcUY50lczQyYsE1MyglYoQSUkwVNBcyRCQVcpUDS2.CaYcEY3YiTn4FZs8jPLgzbvQUdIEkK43TMvf2Qn8lZNUSdYYWXHMUTBkGb4YULYESdMgzYLcUbXY0YFI1UQA0USQkbHYzSMgkQwrxJTY2cgEVLC0zZyzzTCEjUJ4BVYolSv4hVzciXKcSSHYkL0gEd3XSZHomS4j0TGgyYlIDZwjjYRoEapEiL1gkVgEWbPgiZ48lcM0jbVMCV3blZnsTSzH0PkQmLU8FUjoWcsEyP5gyPjUlT0sRQv7DMMY2UFYkazvVQzQUcvD2bsgGN3TWLUczUhgGbOAEa0k1QugFN4ETL4bFUqgEVvX1R2QkRvjDd2TiVwokTx7Vc1fiVjoTN4cjM3j1SgQlPW0TRiEVPZASTsoEdVgCRk8zPBI2PiMCZmoTc3TjU2XySn41Sgg2SWAGTYwFdgYTX2j1ZFEEcMgDSjUmd1MURjYEQMs1a58Td3cmbAgUZjshL5EkXGoTPNkmbHQDbRM1JtHGNtHENXolL3fULDYyMlYUR1IiX5g1JgY2L4EjKR8TQ33zPsACNzITLQgyT0MCcqAmRk4hKt.SUtfSdhA2SkcjVwgUcqDTdtQTPIM0J3fCUxImakE2QJoVUtPDdsMFTRc0UkgSNqbkZ3P2Lh4TUWsjUrcUXMwFMSMERVQUZ2LiaN01apMEdVECN2HkT4AyYCM2YNkCMwQycQAmYEYCNiIWaQQyPtsVYk41Q1o0L3YGSGQmX4fjdw.iSXUVY0Hmdv7FcUIFQxXSZQkCNikGZOYzbFQWSgUUcv4DULsDQrcVSnM1MHMGY03BSt3jdv4RSQ81MEsVcRMTRNEkZz.SMs4jbvfVVj4VQZIFayfWNv01XwsRU3LTQrYiXxbFZDUSRAAEVZMGNvbDZtbjV0.kbmYWUzMGQ1HGQz0VcRUSZkgWcCY2PYAUULYmVVYEb4zzbHEjPykCUDETT2Y0S3M1UEQjbhsDULUSaqDGYL4DYkUFZXAWNU0lQ5gCZloWaxH2U4MmUoIiVKcVYSg0Tt8Fd3gyZT4jPDQFaYMGaZUzTF4zUGESVQEyRrMlXxPzS1k1YqMVVAoFSXckavf0Ji4BL5ojZ0kiV2YyRqXDQqj1TFwVMwrRNVEWPtYlU0UidAEjYHIjYmMkKGkGMAEVaLIUc1vDSEcmUnI2JzEmRFwTLzomQp8VY0zzRAAWLwDmVWciSAgiXCs1Xk41XmkSd541R2v1QAYGTqL0R3U0RnoFZyUzUQ0FcI4RbQ4Vc0MUYAszXrcSNNcTNl0DdB4TSyHmM1P0bv3BaKgUMtAWUQUDbEwFb3gTamYWMqg0RzsRbx4RLjISavnzZRklUhkDS5ESVrokYtjEVUISNX0zUVs1LqEGNYQzLCgzZNcUcDcjY3j1b4XWaSQGZtjFT0kjLpY2aqLSMLkDU1QGbwoGZXkmco4VNRMTP4TyUqkFMXoWUv4BQloGdvjkXqLzJzcWdzIjbqnTXYYVPZkiUKcFYhoVX1fFThoFdBcDNiQkVlcFaDMUVJ0FSFo1ZrY0Z0ETQoEyXHUlbswDLCEjS0MFQ2PWXDA0ZqzlVpIlbgUlTBgURXgCcK0VTtfVSAQkKlUSPrIFZlUlSCklTDAmXvMlQCMCTOQ2YgIVayYmaQMFdhg0L4YWb2YzbCwjM40DNg0FV2.EStoDVr4lcN4FSl0TVq.yQlczc10jUgIkVQkWXtsVQFs1c3oVNnImKvAWN1wTS54DRxzDNv3jcmwjaUI2PwY1cjo0Y0nWRwrRagoDN0HTclI1SDY2Mt3DLIMlaUEFY2T1crkmSkoWQjYGZ1MGc0oFMwrlVvjERRoDZiYzTRcEYjMGZ5MlYh0VNiwVPvXmdyglV4IkRNQWZtrlaosVchgUYOczUQMSaJMULvYUMI8zUGkEVjczP2PzaNomZTo0bGwFSBEDLTU0YAolYnkyZXMlLhYWY1QUdjk1JZk1Q5olUjElYCQUbWImcvDCVCwlPQoFS4wFajgSQ4IEVGQDUwcFL44hPD4jZy4BNDwTRXYCbiQiXP4xUNASXJ4hbjoFNv0zRv71JsQzSjUEaikEaWQ0XF0jRDYkaNcVMxc2YAsFSUw1ZZojRWkVShI2MqgiLhYDNDwDTGk0akk1QYgmTSQyLoojavjEajQUYvEETGMzTxH1cmU0U0.USOomM4TiXlQkRJ01UlolUPgid3jFVuAWRukjdjMWbzvlMlY2bRUiX1njd2MiRu41SDw1brgTNuQidRUSTFIEdvT2Q3XGb3QFZoo0awIzStEzLuEjXJcUXTIULpolK0LFRpgyYqQFNJsxX5s1POcjTlwDaPkVagcEbjklbB4hYtgVMIgyZ2DSaw8DMMY1LzEWV5U0U2j0XJElS0DFaywlV0XkLMEiTLwzXNM2JEIzP4kzQgIkK4UFRrQVTV0lUsQlci4RMxH1c4vTNqshUyPjMQ4RMJMCTqMVLVYDd4nWaXgSV0HUdtQDSmgGdOslLvL1XNYzS3clVzwTUQECQXozPLYDTJkGU2nkZzLCLukTU0fGQVQ0awo1R2IzUTMVLNQTap4lTEwVLx3hVYUWdmgyZYE1RSgUPT4VRz81YhYmTTkTYv0zJUQDRDkjcpMSZzTjV4.marA2USY0U0QkRDUmLTA2bDklbgUiRHESP3nzZwQlK0nDMQgiV0QibzQFa5c1ZJ8jRvgzSBMCMvMWZuMGbYIVRPciLKY1ZnsVYyjjbDYmaSwVRqA2YC0FLVM1Jh4TVuACMOECUGkWYJkTS3nzJWI0LvQlQ1rFNjcTbqUiYQU2JFI1a3c2XUUFSzHGUMMVRwcTd4b0a1TSMEU0XqcVQTkiXAUmTXI0Jx3jcCUSL4XTS3jTPgQVdHYEcPM2ZzslMxHCLncVXnoWcsclUxEzPTkFUybCQjMVar4RTQckbEkWazLVbT8VcDsBQDI2RPE2PpAmK1EzSKcCdFElMzXUVQIVd07Fdzf2PF41Mqo2cpkSSIYEUtbzMWgTN5kmMuYEY47VXVgjMnYUM1U0RgsRXwHTQq7jRiwlKm0zaG8jaZUUPkISUK0DLkAGQxImPAY0PmczYqYGSkY0SqrlZqoTb0QzSnMVLH41cqUmMrciUlglTtjld0HEQOkmaREScWUicQw1P5U1JynlXFgyT58TVnoGbp8Vd2rhc041SzX0Qx0lPNUUQGQVbiIkZxTySxAiQvECUBUUSTISLKQlV5EWakQES18jV1Y2ZPICYyXSZAISZPESX4.ENzIDd2YCbCA2btPCczcWcyQ1RqjCcxXFcSUiSDIyPMQCSVUjMog1a0jkUFk2b4MUdzbSSkcTP0fGLqPiLxLDUvjGYLAGQjgDTqPkVGEyJPElPJQFQyYUU3PjcUIEMgUCajcTLzUWNzbUcMYyJLclZOkjcXMGbykGQUYmLOAEQ1kWbvb2R0X1QUkiLqUFa3.2c0QyTy4jLwfTdmcGUxfya5cWLIEWZqgTXKgFTGo0JsAkbUcjXVgTUlU0cXUDSL4RQgQTSuEVRpQGVBElaIAGTD8zZg4DcUg0TVE2bGQ0Q4MGM0TjcQ0FT3jmbpY2P1kTV0EVTuslLg0DRWgSQZElawQDaXshdFMycncya0zjMxo2SjUCNhomcY0TcPYCVEAEcMolbvjDdxfzM3slYh4xXMUiR3HiPpYzU3QzLB4Ba4AUQ5cja1w1bKE1amMCR40jMAUlT0cEVEUDZBEGcgQFcXITXr0TcF4RXY4BLBk2X3oGRCIzbmMER34BYOclKk4lTqrlMDUzRm8lTTUDNEwDaxM1aJcDUEUSbxE2L4DVS4UEZ3oVbBQjY3QDYtPVckUCUhQTa1P1TyIUcwgWPPMGSEkUaAojaYAScGwTXiYyXwczPjITPsMlPssVS2LEa2PTXWMibXgjLhcVa3v1L3blTAkkb1oVLqIkKlcCUqMzbIITR3wDT4EWVNgiYmkjXZU1LwDlS4.mTRQTcygkYHAWTSgWZnokX3gUNgczYkslPYU1ZMEWR1ISLy.CRBQjQOICdvn2RQUUVRolLtQmSJElMAUjVgUFQ4n2ZtHWNqHySmgyPQoUcOMSX2XDcVMzZ0w1cQ0FVTklcv3TN0ImVBUiaxHFdNQEM4bVVqYjcpUzZ0rxXmIWRBw1MSQlU0E1bhUWVVQCdyvzc0M2SwEUND0jTncWcl0lUJAWaH4lPRsFU0X1XzfyJA8DMrUyZlQCNDUDRrQ0XxTTL4jjQZEWQKAWPScGa2MkQOwzLOI0bXcSYNITL0kSMtIlZzIEVpAkYwHDL4DDUlYyP3PiYh81L38Ddkg1PkUlbLokdmUlYYokbz7VaTgFdVcURjgTUYEDb4ckLPkVPSoVdYMjQRoENIM0TSAWRyEUdComS5MFbMgSSsolKqkzUrwjVVczLLgGL24xPjcyYwg0RYg1cNAESRQlYxTSckwTd3kVTXolPZ01LpMjKQECbzgWTtjiVlA0YyQjSEIkLtbiS2TCcAkFY1EVcDEldng2UOAWMtDWaYgEMFwTMloEbTYDR0QzTzcEa2QWSkIkMvLiT0AUY2H1SvXzUJAmU3XFSDEzT3XVdlcjRRIFYF4Dc1rhYZY0SEUGZEoTQC8TVFACasQjaKkyJBIiZHkWat3RcscTVyESa1U1aOIDVvbTds0zZnYidZwVRo8TUDg1JRoUSYE2Mm4BMiI1L3YEcxI0ZzLFS38TPvfTb1DmUmkkT2kGL3cUUzsTcSgDTJ8lbmkSbYsxJBI1L4QkKVgTLCcEL0MFaoMSSNMlSzrxQtf2QtrTd3IDclMCawYkP4klVxP2MwwjYIMDMMMVMHIzTwoERAgybjMWVgMiU431SzDmTzEWdybkb1.GLHcicXk2Ltj1avb0RhozR1TTdi01YyMDY2sjZ4Uld0gyTrYFY0UzMDkSZVEjRT0DZGMVLw4zRRQ1c1YFTwDSXJg2UWMySMgUb4QSavkjQCIiRCACMkIja5QkQ4QkdIg1YwnjaOUCR18zR2rBMxPWbqckPL8zaqLSZGUGSkMlStnWaqoDSMEySPo2R3E2PCozX30zbnkyYCEzPkETUYUjcyzzaW4VMmQWdRoDLtHVYxnjRMMTY0ImRkIDZuEzboYyc2Q0cFgyLug2Ut4TZEslSMUkXAYTXskkd4QTbo0TdYozLy4VVsYESuoTLMgGV2MWZKcUQjASVsYWasEGTt3ValsTcCgSLLwFZPUFbVE2YYgmbrYDLvHycYo1ZyIyYvUUcoMVZJgEULoVVgQEQxYmTtgUYH4Vc24VbMUWblc2UUomRpMWRw4FdZ0DMIUUdJQVTwslRC0zRwwzJ3AkYVgVL1MVRwDmT2nUbUwzTTUER2sRQzUVQvUCSLgmbpgGLsIlLmUmX1DlbW0lbwwzJkMlLAo1TU8DUw7TPCsFY3sRa2XEcLwDcTM0MV01alkFMFcmcjQWN1XjZ2nmLWkVYgkDVrE1Mx4FZAsFdpAWPxnWMTYGTzTUUqLmKzACZ13TXi4hbsYWQgwVd0jlMvEyaAMUblgTMvAkLtLTSx4TVPszZVcmLNwVNJY1ZhQScNUGSFsDdgUSU0YiXC4FbEITTMkVL1.EUWkUZhwTVzLlTHISQLk0ZKIEbiIlK2Ikd0U2ZYshZpgGdNwFZlAUS3EjLSMSRUcjKvL0bD4FRyTGcEMEU1XycJYyMhElVvgmMvHiXrgVTLITatEGMVgGbr4lMsgkYxgVT1QTS0IDatzzLkUCQqEmUtklTPgjcvYVRqjCQv41YLITSiYyLAIkLWIkZ0kVQtESSoUzZigSY50VMtwjKoUiUXoFaiIFSZEmPYMTZVsjPXESSynEN3ECZ3XTYt3Dc0g2P5UGLSomPtHDZ0bFNxMVLG8zYIszYUolPVo1Zn8jL0vFMXoFbyfzPpkyaxbEMmoUMyEVZGM1UBECcFIVLOEUSz3BLMcGMoQCRuE0UyvTdCIDZJE0ULgjKgIFdvEla3MFbLAWTq.Wb44VT2.SX5kCUqbVYyECZoEyc0EkMzMDblEjaVUjXOcySxwTUkk2TtHVRt7VVUkFQV4RPI8jUkkkbrMzPlAGa3HSQkkTVOgyMmklR0czUPEidVUEbnYFVmEjdIclMy0VRi8DQtDFdvYDQ48lXxYlVMcjM4QTUH4xPQMWcVEGayAiXsAUTOASUXIyJQ8lLWkVLigGZyYENRQ0TIMFVyTzJFMiQoYicFU2MTEyTq4hK0g2ZSMFaGE1XJkDdqzjd1PVYynUVwkVV1gWRIkEdNcDc3LzXFYDa1UVXV4RQ1UWQtP0aWgWNoMWQ1DFRi4jS43FQzXmXWMSdCUWaqbySOMmcQAUS5gVdREySjkDdIEkbGgmXMQVPB4DYPgzT2.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.CNhwzMukFawHUVwQFQ1PTPyLyQOsDZiUCMF4lLgETTy3hSxAyX3kSNDkDY2YyMMQGMtQ0b4IVY0flTUI2TEwzZmQ1YEk1MyPDTAg0cws1SToDLlo2cosVPzMiPvbVcrMjcRAyY3jEbZEVU2sDYPAGSjI2SJ0FdVMTUtbWYu0lV2I1TDYSXRgib4A2MLMFR1EGancmbvoFNh4TSqUkaHszbJYEV0sFUpE1M0A2X4QURY4hXSUSV0E2ThQGYvUkUREEdqwzYLEEYps1bxEyY2YCNXYzcjcFYYoFZyYiYyLlVEYWcuI0csY1TWQSbH4RUt.URLASbgUEV0MDcXgFRIcyYnIWPjgDM2DDVjQEbwbkXusFRt7zPYoENjEkLzD0aDg1cPU1T1TVbTg2TKQmTl0DQiQyQ4oGQUEzcQczJCI0cYQmVWM2bgwjKAgyRrgFMDckRrAWZu0DUKUVcpckKBkSY1DkdQsVMpQSb4T2bUgibYYmYTgyQss1ZMokLhgjQswlQyPmclcTNTc0XzPycnUFdgM1YmMVVvjkZ4MyZ4LVNK0TMuYFUhA0JlMFY4nzX4YyZ1nDLv4FaPYjcH4TctQ0RhYVbwjEVIcVbyT2Jn0jVqTmRlIlVTYFQlgkcSY0P5sFRisFYBgTYZkWT0ImPHMDRJEkQOYCausRT1QEd2bEcBYUNBo2Xk0lXrklTgIFbgE0aiM2algFVnUDc0vVZqXUPskyahASURgkcYEUNjgzbosxcZUkU1rRals1UvDWNCoUNnQVa5kEQF81YjoFcVIzLwvzcNYkVI81UIEyXVICTzHWPB4VTRgkd1L2Tg4VQSAmSG0lZ4PkYC0TLXAGRqjybMEzStXjbRQ0Ru8DQXICLksDQzbmdoYySQ0TczYUSQAEQGMlb3cWUMg0U3UDQNUEcXQ0RxM0cN4hTigSVt0zYigiQ4LGQxDEL3UiMxTjR3YFVqUWdBsBUtIEU2klQGQGcBc2XB4xJFkiYjcTV1YEdZEVaz.mMvETTxfmRUUGdgkiYNgDTlQTNC0FSzHFdYEkM2jFSJMUav4DYEomaZ8VMqLyUE4TQZgCYvHFUSgDTOA2bWMELAcmXGYGcqnGZBcVS2DDaicDL1j0MW8TRoEDNl8FNjgjQRMyZXE2JKgzMiwVYxshXJEVLzkkMVsBcgoVaZs1cosVUPclc2E0RQYyYNokLz81UwYDUpczLHIDLOgjXV4DT5kVdxASSncic3DjSVMWZocjVJICRMAEcHQiLpcGYGc1LUY1RBAmLxfmLYoFY0sDLGIUUOw1cxHUZlkUUDgDVPk1auUyaVMSQuUTY33xUzsTYyQkcog0Yt4VRAcmKNMFQBgUTwcVMIAyaqczaG8VPFkGZyE2XtLGar8lZ2ozLEYTdgoEVi0VSvcUYyIGRrcERXUCU2ImVBAURFo0MLgCURQEYLgTL0nDYhoDMyUDdQkzZBomU3LzY0I0JSMkKl4RRGwVTzL2c27VSsg2Zw3TLNI0Zw0TZxDWTmIGLRIENKkFQlo1YyP1QuAWV4kzJ3HDcoQGczA2bZIUcUUGcuM1SVQkYxT2Jxk0cXkVaoklMzMmPPYzPvIERREkd2DCUZYmRk4RMy.0YzbmXWAGTEAkKNUiPBUyT1rRUIMmS4QkcxHSXiICb2fFcD4DT08lPybSQZ0DVTQSSRgzSybDMycjLyfCMxEEbAo2MxHiRTYDdygWZiEFLtcTSsE1ZJ4Fb1E1RvYmdZ4DZ5giQssVTyg1bvH1MhQGZlESSksFdkIWanUkY0jjZiEWSvHGSxfiKHcSYLcCd0IjQNMCUOEUZ331Q1fyY0QWVwfELNImXkgkYvjyJ4DGU2Y0S1DGSRUGNBEUTGslUko2ZCgjbEokRDUlK2ckY5E1LwDVPYA0apUGY0PzYxEFbGQDU5k0S1DiTmkmR1HidKkjYqcDMwMlYAQSTEsVXGISPucidSgiQCoDRjkDcUASayLVYvAUPuMka4bSYRkzYE0zb2IVY3sxbUIEYuQyayUSL1clQJYUVAkSLgYSZpU1MIQDZp8TVC01QoYFLUUyY1ECN1XjZZQkc3jURicVLsIERKMWNPsxarIVT4AGZyUEas4hLgMmV2M0TTMFLu4BV04hZwgmatvVLWwTd5UCcx3Db2XTYBk0bjQ2Lqo0JxMkP2M1XMgTQ2sTXmUURyAWbykmUuolX3YkbPMCQoQCNEgmPyIyZ0rTYvw1TicUdm0DdyI1UtkjPJgzY2bUd4.CQvHDayDjQMMlRpk0MLEjTlgiKzYEN3DzPrwDMmICQhEURQQiMKETYyMWTgI2atAmcwnkatshbsYVTwn2c0fEZi8lXMYmXWIVSx7DZz01aTUWTOEDauYDMOo1TzIWUwMUPAszSHMzMWglV0TDM5oWTB01TVwTZWwlXWEULBkFcUoWRFU0MGASMvQGT0jyPAEzJtXGU3oFVKMDTz0zU3Ujd1kFLBQGdUoGRyXWR1bWNLMlSAQzMBcVVQcjYwLCT0HVcv3TQ0j1SucmMqzTNxMEMgAiTkolPQ4DTLU1QyUUUlgkaZ4BdxgUXYYUXxAmbTcEcxsjLAoVY2IELBUkTrklXLM0LScDYsMWdKASYAgzTqMSaSICbiAWcNQ2YvDzP1EUXEYiX2LGYwXGSY0FZKICTFECTE4hT4Y1QyLCdZECVzc2SRoGVUwDdUYSXyQ1aoYGZBAiQ1ISLmUkKPIURiQjdxLiUvjiPZkTZWQVbjwVaikjcPcSLBUTdZciLRU0JrcGQPYjQXs1YtnDd2jjbYkDNPM2Z1XDT38DY17zPO81MHUmRqY1aI0FU0jzXjshasY0LiYjU4XVZHI2LSg0SoYTLxIkXUMSTislKqXlUXslcPwVMwwTXjYGVyDWZzfVLtL2cLgCbqUGdXsDLv.EM1rhcBUlZFIUNVgzSWM1bmsTa1XFNSgTPwAkaWgSMEcyRjISYIUTUPMGcZEzUqDFTUE0cEszP4MGNXcFY0MUbwTDaL4lZ5IDVGQ0crsTcHszYykyb1YTQtk0Q47TYGcFT4QlbHUERQUWQ0D2Upg0URYTZVkkbMgSN0bWcmckQMUzb1TmLkYlXyU1UyPFY1olSmUESookU5MiSpQFNqI1QvfEQZIyUHIDVCgzRSYGTs8zRYoVLwD0Mhg1XyXWLrAiRtbDdRckP4r1LvUGV2giVkUmU0bjUmglTtcCcqzzMQYUZ5MkcVgDU43BZvf1cwvFc4XkM4gSauQVPzrVY1c0QREiYZYzc3o0btwlSyvTb4PSZ2HGUBEURz8zcy8FZ0UFU2TmZYMCUsUkSyICUJEVUVwTL4rBRBcTVTY0JqwDZQwTZnA0bggSL1LjMJEiU17DSJQ0bEkkcv0FTJgFLkUDNNgWU5YmQzDVX5IWX1TTUjgSMkkVPIEiblIia3UiaEkEdzzVXw7lZR81ZYQDUJIjMmYzStshUxnTMwnjQN8VZgs1ZpEiS14zRrYFRwLSMhIkYxTjc2o1XQUiVEgFctMmd3.0UBcTNh0lYAUWd4UlZDcGT0PGSOESZFozPO8VdxE2R4EjXtHVQlYFZOgURv4FM2nlRmMSQOY2RiA0UvYSX3UWZvTiXyLiZXM2PFU2T2shaIkTaIMCSlcjSuIyZJIWT1Umapk0XSgyZ1XmUA4DMyYVRWoFdLACStAWSCsFUTk1ZuMSUYAWUsIUStYFLDUUMWIVTGEjZpQ0cgA2LqLjSxPGNyDDaWQjPsElboMCYW0zRvcWdrgiVzTVNmU1R0H0bvj2b58zbEEDb3ETNZUVV4.2Tj8DMFM2UVokTAQ0Z2PVPZkkUj0lPmEWXzPFUwLlRtACU3jjRyHVUjk0cMoEUSojRTk2SMUlSPMDVAYUTGkmVwYTbzMGVqACRMglR0gjbOo0bUAkd5MjZB01TMslbyvTTzkGZLIUaGEFL4PWdLUGYokkc2LjQzwVayjiPN4hXW8TaugFVzjkPogUPvU0a4j0Ym0VY2PkSssBTMASdok1SOIDZEIzcTQSVpQFMV0DNlgUcmMFVW8jTNwlPhAWbSYUNM4VUrgESYUycXUEViUkPvHyc47zQ2UEUZMTc3.GZkkTRVQEY4PTSBY2SEcGZus1Xj0VTv3lT23VbGEiVtslMGQ0Sso2XSszcCcyPggVcWIycOgmXzPyRkESVCYEQkUCQt4RXycVcEMkdGQ0ROgFY1Q0RsAEY4LzXicicRQkRrY2LX8DLrglTsImREgyMMMzSYEmbtIFaWEGYHUCRrAWNiwVVmwlTAcmX20zSqcDTAMSQsIDY2YFQAE0YRgSTpEjaFMVTlE2XKkidycUdvQjU2.kZvHCT2.kLo4FNxnFbEsxTk0DdRUSXEY2JlUSam8zQgASXQsFTYcSQ3XEbIQjPtAkQw.mMlciSwHyQgcDbgMCLvUEdPQiVW8TSq0zakkVbJQ2L3P2UlsxQhwjYtrjVyU0Zqz1ZyjEcIYyXZkEZmQzMLIjdYQ1SLMUPvYlLuUFUx3zcNQ0PjwTaWslb47VRBMjTkUCLksTd0zzcg4zUtTSaTc1bnElYtPzZwUTRCUjUSU1S17lXFkyaiIGdsIUNQQDSvs1YqPWSTEEQ1bjQiYmbEESSRY0bw7TZ0g1Q5wzRFQSdzUEdyUjRqXGQiwzZxXUMI0VUAkkPHE1aCIkTvTmRBAUMLojYpYiPDo2PjUCalsFN1Q2UvgldDM2cykiTx4lb3Mzbj4hPWYVLJolUx3jdyYGU0XVSxY2Ro4RTyfzbPQibGgzPxMGMWAUaIIDSi0DRt0lQJYmL3wFTU4VbZEUNCQiKlUFNkozZCYkcHYGcNQCVjcGaoQ2XSkmQRgCLwLlVgEmPPcmLWICUKczTHg0Z2jSUOQCRGcmXzclMXMWXRIyQOwDUqjGVIESZp0VTxcEd0omZvT1aU8lLJIid1YFN0HFTAo2YpYDVy.CZxklLGsRNYcUY2QUcmAENWIEMiAGcWoVd0fiPDUSNsECVBE2JTQSaKIUSVgGZyoDU0T2PpQVQyU2LxH2LvLVc33TYgsBZWMDb1zTMyDlMCkiVvXGRtcWbLYUREITcNgGZBAUcVUlYJoVXCkzboclKXMGZwrjZVUDRP8zLxoVN2PEcYAmRZ0Td1Tma4k1JvP1SJAWPlQlPTgEUkMmY1nzZ1cDVTQiR4LCMkojYsYidrc1PYoWX1UkaucUM4QTMqbCQL4jbV0DLu8DL4fDdxUlV4LVP4MEYBckZzojSIEmLxDmVNIVdSYGdWgkT5sVZLcVTHwjd3biRhgkdloELGICS4zFbDIkbwwTaNglPsglPlYjdz.0XSk1c0o0StHyU30VV5YmcNo2JJ8TaXYTLAE0P0.kLFU1ZMglPwTSVJUjRIQiYxkCQuMkSq.ULIMFVmIDcAYCYvgWbOglVxrRQkMWLtfjb2g2QVEGcyQFM0MWR2cDaFM0QsslY0DjRTMTRyI1Jvo1ZUgFaVgyQmYmaFg1QrkDQO8lQtXGLXcEbk0TTEcDRVITXIkkV4jkTgshMIElPzPUN3kDTSEySUo1LTElYnUyPCMTQRYCdj4la5YEayrVPskjPAI1RKkVbickTI8lb0rhL5IVRKYWMyjiY2PDYAQSSwUCbpsTLWcUQ1XSc1.Edug0bSkVNYo2YvISQOACQqzVVwwTd5IFZzkkSDszLjMUTwcEMOgCL0MFSLI2StDEUOMCNCQWYGMCU3UDdUMmbvTlZLclXqfFVhgVPTQFb0gTcOYSL5gyYPgkUW4xcWUVZSE2XyUGMp8VdP0TZIkFSrkVVYglRrUmaho2R1cCQzoUYuUUNw7jcSIVbJMFSJQiKIUjQ1bkcvo1QxLETwHkZXYlTx3DSNgSR2EiShsjU4gWSBYTPjUEaDkkRlgFLqL2Pxf2LSU0TTkTZKUUMUMVZJszTQY1YhMmU1XFV24DbxfTLHIERjs1YGoDQzTGaq3zbOgzL3vlPFcUbFEUVpQWUsglRFkkd1DlSFczRA4zJwPzSOU2cZkWaM01Z13Rb3YjSWojVZgzMGYFN3HSZqTSNmIkdqYCdAkWbHgVa3kmT50lQEgUSyXmQxMzPoAmaHwVXn4BZvc0cwbDRp8VV2f1Zr0DcgI0LKw1bhUzMAsjM4clYNMEVzPiT0PzQvT0ZxMzaRcWQkIVc1HiZJMWX2rjbhImTBkza141T1vDcmIESSAmbC8lMtfjL0QVXioDNVYVbxYjX1XUUHMVLwombvIkPuo0QtjWZ3TiSkoTQ3QTPyIDUoAGdng2bsYiSzkUMGkzPlAGRJYDbQEUSPsjK1QEMyTjQ1sRMGEEbvYyShsxPYESd4z1MAIzLEcybFUkYnAGSCkCaoAiS1QTQXU2RwvTdYIiStAkTNslT0n1LMoTYRQTZDM2bMElT1cyUCciKw0jZOcENrI2PQ0VZ2kWSZklbYA2T1HjTPQDV1UWbqT2T3vzSHYjV3XiMggyaMMFYUI2RugVapo2LwIWZgQ2ZRQVdYclPIgUa4DmUjsTZqAUQxQCYEYlKKgmTAYESqTUNzT0TUkCULo0XHElXYUGTGETVzACSzkGTkIjPs0jVjgTZCIlQk01S1EVU18DTYQzUDQ2TNkkcLc0MtkTYoYkboIDd14DTncjbAglMWgzatkGTvU2Zyf0at.2QJIlXKoVbAwlYrolb2zTP5YzRT4RVBQzPQEWT1cVTzkWRFETYIU2PqYka4TSYjIVMjQDZgYFVQkkYM8VVG4RcLQVTFwTYrUCV001L2jmdwgFZ2gVMygSZpkiS0gWUkYTVQ4BcJ4xZKkVNUo0aMkjKCYUTB01cBQ2YTMCbjETTEEmaLwFaxQjU4H1bQklUDgjM2XERJkCVocEbzDDVtTEVhMCNMYTM1IyLJMyJDgWN0bzUK0VTFISMmMjPUoVVDUyLzYzT4PiZQoWLsASXNcSUX4VVSMTS4UGLNAGQ13hZgYjQGAUYOMVaJI1YzDib3kWalUmZYkSNX0FQXg0LOUyZYEkXSEFRnQFUuwlYugCNyUjPuU0RQMTNJAyPzslS2rRRyfSTi4jQWg2bYcVXPMCSiImPIo0aWg2ZZshUZs1Y1gjbmUzU2wDNwYGTHgkR5YkLwfVYrg2RMkGTv.iSJAycQYWcJgGZLY1X5EUTgglTAkzUtICNHomZ4cjaCkTQhQ1TU8Tb3b2QLAmP5UCaiQmUzLSc4.UXyDlSykyPBcFVyY1QYwlLQY1Jr4lKiszb2gUVqH2QCEEbBAyMQs1Zn8VV2MmdsQUZt.2P4IFcic1MRkVTKgWL1TmdwvTVlcFayUFYtIEShkjSi01coUFNvkTZQ4FNpU1QWQjSFc0LyXmRPY2PVMVM4ImTkAkVsESb1fEQyICauczaIQ2QKY1PyIiYPQFVUgWTv7lS4j0P2TyMQAiPxQDQOgDL0TmRxvlazgDUSAmbqgVYJcjR3UTQy4xYLYGQg8TNp4jVBQSSJ4ha2XGRQclTkQGV201TB4hVw41ULgUP0nFQ4vlX0.mPqTlXxD2PgIiTMMyY5I0YUc0TtcFcS0VQvDDYPcDarIjKGEWZk81c5QkQPgSc0vlclgTVHQiZYwFU3QSMqU0LyIlQrY2TlIDNvojdlsBSLYiPqYWQ2nlLT0VdqUzQhsBVIUEVt4RLmoEbBcTVPcDLpoWY3XmYwHCchUUUwMWPhg1TQYWbqIFbysjKYgjdnElPvA0U4jEQP4zYGcyXVUkYzXyToQCMBYGT0QlKC0VPxQjKtUmQgASQVEiYvkTTyImRiEDT43FMR8FNvIzQAIWS0oEZ2jUQOEEY4MCQ4jiPiUySMUkKko2bwTlTtIDNE8DcxsRU4g2SIwTStLGMBoTQMkEZs0jXV8lY4HCR0PUV1fUTLMiXxEWPLkictLSQtgCVwgTPW0FVicTcqPWXMIVbRc0UFUlUkACYOckYt3hMnklQ1kzaKczPnIyQog2Mx8lau4Db5sRPRASby8zSOo0aXYSU3DGdE4xSHIUXKgVNLcyXiM2Rhg1P3fzclclSrYTczgVavLzbWsRbOkEUsczcCkiP4DVdQM1PlMmS1TjS2j1UY0DTIkkT1LyY0YmYHYGTSUkKkkiXiISThU0XSY2ZF4FTlIlX3XjaZUSNwDiU1L0SRQUUT01JsQTTtjWQzvlUykGMDYCdyoFUCICRlEFUpQjahEWdYUUTFMlQT8Dd5Ykb2kkKQgCQDwTXGYCbkA2byb1RqsDSXUDN5YEaBMza23BY0nzYucTNIMUbiMyJxHFMR0FSNcDNIYjSMoVUVACatAGUJQzJwckLyDibt3xcEQ0Z0vFNEgUUhQDQIYVbUcmQXACZ5MDbsEzUt.CURgVULk1coEVT2LEQFcmZuoVakQ0X3PDS1M0UyfzZiMidqYSRCU1RzQWZOw1PIgCZOYmZMk0YsUTQxfjQyIDSS8zYNkTLkMCSMIzXY8FcyMFYEU2Q2bCQzn0S2PWZVYWaHc1b2Iyb5ojank1RtjTUh0FQ4bFNSQybRMTRrETaEcjYyYUbHw1TzbVRlwVTYMlVCMkaZc1RtDUYFcWYUcDLEkDT43RMEM0QhMza2TEbkola3rFN3IVTYAmXjIjZ3g0Q4D0LqM2YKI1Up8jRH4DanQzULcEUk0lRF0lVXQFLy4ldmYFYsIiTlkUMQkDVNcFdNIiYL0VRF8VdYMUYnAyP4IzSn0FasUCToMyLEUTLHE0Q4kWPqnmQwLmVlQUSIUmb3cjUy4VMLIiUUgCRuozTngWRRg2QvnmUXgVTwUlMGsVMtTyaz7DMpsxZFoVXlQELgMzJtDGYtUDVJklXCQVQNQ1THYDQKUmVBkiVkczbYMEMZoDUrglLlQyaJEWbzIULwXzXZECUxLTNKQjMWkWd0bGQTgEU3UUMlISd0nFQGYybhoDMxTCLrIGc0cSb4o2XKgkRFAmSiIlRlMyR4MSPvsTVVomVwbjZRomb3okPJQmZyjlarIyTJUUYGMzJtQ1c4zDY0ESaykTVt3RSTUlVrcmLWcmdikEV0DEMIQmKtgmUWYELvbDa0gWYgMUb0bTMA4Bb1bGRwXmSYoFMpQySMQEZycWczH0UwQTYqLVb4IWNOwFLYc1chEFZQMzSlUWdugGQg4xc1nTavj2JqLVY0E1TToTTm8FVzr1POkDdAQ2bgcGN1sVb1ciKQIySUI2QOMCZ5cWSqnjZh8VUiA0L1rRQFkELxUmTQUVSBMzP301QOY0SLslLEkmR3PiZ1YicqbkPCEkP5IzQoUma5wlLy81UnkjcYgVaPc2RIgEQ1ckdqQ1UmgWSy8VaAIGb2LEdjclLDIUQ2bCNLcEYOAiatTEUVkTSAs1SNslR0oUNUYSLQITZRQkcVEySTMjLxXlUVkiLyQSMA0TYiMSQiglRyIGVGcjdyMEZrgScI0TVTQSVj8TMvwjRNcySCgWZXAUa4jDaCsVS3o2cEkjUwEjUrITXFIGd3jTbvsRLREGSJklV5c2SYc1LjcWL0HTdLciP3vDTuckUSc0bKICYAgUVY4jYsMFa4zja0gUVpA0czHEYrsVT0MmKPgVQxsjalsDUTkjUy3hVtwTcJEGNTg0ThM1TlAmZW81TEU2b4IDV1rVN1Hkd0wTNyPlV5I2UDM1ZEIiYSQmKCAyaDUCM3cTbHo1MGUkLvgFUnUzSA8VdIAUbqnUbssVRpAUdyYTMwQFcOwjdzgVZgEVc4TiYOcjY4nlPMUTRFQiKFoWN4I1J1HSYUcCbx7jP3kVZj4TTvETLhMDVXgWVokCbEMGRzYVZqTjMVgScYE2ZyUkRqolXtDFZGUmZxDzcMkSQTsRa2LCaqXGQXkWTlQFaoIzT3gjStQlVrU1SAUFY5wTSOIUPJMCdwUiMugVb0PDN3g2bJMiZGc1QGMVbNMESxjmLuMFVHUiP2XTL4AiMRkjPykWVR0VP2jCSV4RRuEVRnokLDEVaSMkRLclZZ4jXOQDVBoDSqPCMt3FbyjSQ5sBdU4BT3QzbOczYOwlYtjmcT0TQlgzJw.GYk0jKxLWZZslPuQjUPkFbqjjaocVV3DiL1zjMw3RRiMFM2XmRFkGdOYkSgYkVV4VNhUlc041TEQTcZo1LsQCNgoFRDIjR0DlT3fFVBwzUlI1XqrVPL4FUMYSUBgyZ0YVbLUSMIUUSmMDU0bVQ1EEcIgUMRclK0fyZ0cSMqT0JNoVStg0LqISUXsza5gTbzbEdG4BbLc2cpcjbyTDTpE2cvg2PlYkRw3hM0wzTnwDYoAkb4vlVwokXCUWYo4VVqHUR0ozYlg2LIcGawwTU2cSSOAWawDVXOcDcHEmYAolXCUFcOMSQxPTctgCZPcmYSIkT2LiXIkTatQSLDIGdIYGUgIVMHoTZtLDLw8jXGY2cLomVzYjSwAENhU1QyszPwMiKWUSX4cUc1Mlbr0VTuYyL2olS4XyPjYSXzHiSx3FV0PSaLYzaNg1JJgkPlUlP0AWcgEkXIImKtsFYn4xY1f0TpQWUu8VRHQ1cwMzLgY2PqECYZUWNgM0akMDS3EjVNczZEAWRFc1QvzVS4jGLTUEMUQGM0j1Q00zLQIUMxQyUngVa3PiXP0lSyT2cVUmLsgCVK81J5cGZN01JUgjcX8lSRISTvXmQMAUavQSYUcjQhIUbvsTciASU1MVM1HkVNIjVC8Db2gCbqjlSpkSX0Lzcr0jdIQDcUk2RRcCakwlSTc1MS4DdzPyQp0VQzHUYqn1b0flRSUlSVUWTWUEaOUEdFMSdIkUbVcTR0PEQZY2PQsBVQYjRyslZoglYkMkUzI1agY2UgIkRybVTvUyTxUVLD4xaz3DLVUGa4j0MloEZAsVUgYTXzQmSrY1LJMyZ0H0M1E0Qlk1cBwDT1MWYtfjPC4xQuI1ZL8zMIMmb1D0TFkVauQWYp4VLEgSRtk0R0zTQ2jlU2HyTlsxb0EEVRkDTC8Ta4DyPVcVVwkVdKoFNoMCa4o0Q1D1JWMjLWQyYxMDY3DkZWM2anMVP10TSzUWZxM1RFsjLNYTbv7lZOA2PXUSVMQlM2jSUAUVaNIUYxQlKVoUNqjUcNQSQ0jkQr4TbvL2YwDyQp4DbTU1aEozbyElQ3AkVN8FT1sTaN0FbJEFUucGRVM1Y1nmM2Pja3bEZWk0ZN8lLtsBVgoETtTVSzIjRi4jaNckP3flY5kiY1jUQxXUMCgUUTEybJIzbG0lMDglPCAUQmQCT0DURxD2ahQWa0EUR3MEYCUCR0bEZzsxQq.UYog2aIkmVYAmYXkzUy.GaDIFc1sjPqLzc3QycucEcFESLtjmXQwlVyrlb3DTVqwTMVEWNNkCM2LzPY0DR2rhLHMVVY0VZOMmaVkEStzjVxcTN2YCTxvFYEU0TxYWcXUmTDgVQAE0SuY1Skg2UIEWcRUiZxITVxDTLzglPVo0STYicyIkdScFaPMDSjA0XsIiY1oDYzL0T2s1XqsTQxIkXV0DZRoDZs8DRLgjQEEiK3UEM2c2QYgWanMyUDEVTyHTZRkEdhMVSqnzZhMzMOkjRw0lP1QEMvf0RSsFUl0lVMUjV2bjMVQlPxfEL3MDYmUEdAAScjMFTPMyX0AmVlkiQiUTaXEEVj41TVwldvASUiAEMC0FbyPFbnwzaPckKg4hS0c0LSQDNzQUZuojbDkDQ4sRco4hSTglS4I0c3oTZmklSgcFVYo1XLQlayTSZoAWLToUdSoUZjY1U1XlYyUUVI8VMyPDaWIVTwfVYgEEZ23xTmoTcBUiMP4lVIgCbUMFVzsVVyE2P0QDVvDzLvglSKYCY2TGLTsRVyAETqA2LFshXREEcwsFRF81PGUyTKkTZ4DFQIwFNsgSVUQVZC4RZzolMt4VMEEiQXU1SpUjc0.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.Gdz8DQM81X4M2ajEjYoQkURY0X0kjPrUkRto0JoQSR27FbXEkX2HjS44DLYY0XLQGMgk2MOsVZLIyRPYkc3kmRlkWZtPlSu4TM1rxSQYEZqL0LyEmV1ImaFQiLqkGS33xRM4TUyISZSkWbZwjKwAyQ3PCUZAERhklT3I0ZEEVdVgCRkUVdsAkbtH1U0ImSwQCUEMVS1TjZGoFVG4jVQU2b0U0QugDShM2UJE1RDsVRtEmaFwzJysDQIcTZxPWYN4RLpEmTQcVVtjzLtg1XgEiQ3PEZkMCMBkEYsE0cvXmX3LzXOQDcYMUP1PVSzbSMBcFcBQyctAkLz.GbrYlUocWS2vzJpAkMMQDV1jUdGUGSwQ2RYIVSAIzb4gFb5UTRhk0S1sRN4j2L5IjUhQULqTGLMEUaDgTUmozaYI1csoTLokFZpYjT1MSQg4TLGUUXq0zbzP1bR0lXD4jX2PDNjEEcwnkby7zMDgVYSkmQRgUSSgTUoIyYtjERVYjXiEiT2XyUFokVxcjP3sBdx4xbqQFcUQGQ0YVcBc1JrcVYoIWLgMUaik2SwAUaPQia1U0SYc0TXk0SIYFViEFRCcEdHAySX0FT2sDSVITUGETPDImXhICYCYmSEAUZ0HVM0YFRY0jMtAWRqzTUBkzRlsTXFgGYzkSXQETZ1sRRq3VSNAmYwczYIAGNAgDalIjRnIELBomYwHDLT81UJwVN2oFdT8zbNUCM5EVcvcjKtXzMR0VdvfGY0wlZvTyQ1XCUPgCNVACa0bSZwsjREwTYA8DU5QzX0TCMjACbzclY4LUPF4FZqIWNJ0lKqP2TxzjUBsjbzjyauUyPEAkPtAiKA8VPz4jcwLWUNk1a1jSN2USUqjiTjAGLmgyYi81cKcmQMYUSmIUT4HUXmIDTJQmdR8jYs4TNEcyQU4RVyoGb14hRpgkLxnWa3LlapYTP1Y2aSIWPXQGLoI2b33hYwAGamoUdvfGb3czU2gDMFUWYXM2Z5ozYOQjVwMkZSMGYzPDbE8jRMMFcgI1UZMGL1XEMWsVZzcCcGIEbVYmQv.0ZAcSNZoFcmUUTSQ0L0LTbJIkdzQmLJAmMVEFaHkUNjkEUvU1TEcSMQI1cYk2TioFatA0ZJYWSqrRZIgUcMwzJRImZ04xPksBL4QjPyk1bOQWPwDmayc1crYTMGEiR2n1bjAmahAGLVIkYTsDVOwFLsI1S0DzLNMlLOEmRpMFawLCSAQTTYYjLTQ0Y1g1ZpQ2S3.WYiESSMQ0aq.kcEETNFESdMc2Y3DULqsVXZMVNxDyPus1aZMURhkCUBsDSpA2bpYlMlkCVZQUdIUiaxcFaywja1nzUFAiaxMmMmYiaYsTP4j2Q2YFbUMUcEokdosxZsoTbKckUnYjUnUWUmYFNHsVMNoGTTwFcooVPtPTVWcFYAEkRT4BZLMTcSIFVrgmaUEVSJklbDsTcPcWVvE1UGklVxrTZkklM1XyawfURLoUa4XGNxMDQl8TVFAUM2UDNwYVR3QSM0LiX0kkaKMEMEYidTETZpcSVXQGNsEUPSgSYsgmUZgTQFoFaAgSZ2bzYx0Fdsc2Y1gjVW4lYAkjR1XESmMyPlgWXlozYjYDLqMFdXU1LTMCQD01QLYDR4PETqbVQVgVNBImcgEEQT4DVwgVUTwlMOkCLjkSQQcmZFkGLOMlYVQGUNESPQwDdXQ1P0UUTEYkV4PWTmsjYUUid4.WVpQEZVgmaWYGM4EUSy4jXnoFZ0wFLwXjchgmatUzcvj0PmUVYVMmS0Ikd1LzYRwVM4LmZrEFZwDzROI2QQYmRPQ1YP01UwbjKVcDbxMzJtbjPXEEUI4VMxIVaXYFczkmUggDZn0TM3XDZpgCYxbWYicUV5EycD4BYvf1bG8TSTMUNlckSYQ2cq8VSPEkQ3AiXp4VU2cTa4TzLQkGbncDZPkDYqomTsITLxzTMRMTLpAELxPURjU0a4o2YvoEMxc0R5IEMwvFTSkFcvM2QJYkbh0TTLUDbCUEQxISSU0jd3L2LtA2cFAiYTclQ54VNtQyUZ8DdkACbDYVXPYEdCcTcWQmauM0Pl4TXk8TUQo0Y4rzb3gSckM1MHUVZUYUPLgCNhETaSgVN4YWTCojZX8TSkElTpA2QqD0RisjZzIjL0MTd4jTYvU2bkcyPqQWYFQEZ2bEbIQ2ckgjUUESdZ4Fbik2ZSMyLtDEZ2szcjEjTFQzQlEGdGY1YxcCLZkCNt7DQzEiR5gmP1vzcXICSVQGc0gFTxPjM1.GS03BQyEEcP4DN2vTaSM2UlY1YGYlSmITdigGRwHlUqnUUnMELvnjVGsjVHw1Xk0DRpkmQhQDS1EzQwYGdLQyLmUyJ0kiXTImSsk1SHMjVwUzLQgTP50DRlY0SKcUYFUGbFQmKzLCZH4TYtTWLzXkc0TWMpoEUZ0FMuQjcRoWUOk1YM4DRBkFawDlbqMkbyXlVIwzJ1jiaMICbsMySuUkSgUWXybja0v1UyQTV0rFdmMUc3H0JBQ0MtwjV4.GMqkSTJoUMUE0SZgGNLU0LFEkbPcSUyDSPqD0U4bFdiokQJkDcK0FaNI2XkQ0X2T1RxgSdtAiT4czUvbGYKsDaxEiVIkCaoAyQ4ISNIMjLzHTPQc2YjoFcG0Vdw8DL4bSQZEDVnkVUDYkcZYWNmgUUy8zUYkSbx0lQ3MVXrQjRpMFLxICZsUSRz71atnVNucibHI0SHEUVVAEUAQSd10zXXYDZYE1QRkiYLkjQMQCLxT1YgcCb0g1Jkk1UvwTR2QmKTUFTZYSQtACYAkGbPoTNwrRQmM1RTQGSro0YRUVdiMjLIk2XwQTdDU0T4PSV5kibSwTcxLSX3olcAg0TZEEdPIVdRE0QzImYok1RtbkLqL1bvkDRDoGMFUVSv41LpoUYTEjLyUSPSM0YyTicEQiToYSZUEmXjMCSq31cwXiM5ElUYQ2cBkic4cSQVokSsYkXHEFZVQCQEszbvo1LLIDYmwTSTITXoM2PW4lTMoTdvQGcoYWN3gWbJASLHITNyTGMV4BT0LjXBUEZyAySqfmb0sVbJAEQHwVPvQDdTcVbzsjb3f0YGgTbh4VbqbyMSIEctXkUNolbuEVNhcWSAQFZiUGSYMmUOIja2sBcYMCTyHlXH0Tc1.kKtT0aGQWUtzFd0jELDkyYU0jQWE1bTkWaYcFaq.WQAQ2R38DNncDarQlc0TUNwMTdOgyPBkycTkENDIkPrElZyHEU1sDaxUEU0jzbwYjaiM0YykTdnU1Qg0jZp0DLGMjMnQVVqbDNiE2ZOEybFUFMQcjaoMTT2MkaNcDVjUjdYMFThwTcCYiYWMVcxHzayIlKkEkS40TV3jVM2EiMNAEbjM2a3wzaCkEVNA2b5cFS3.kUtPjR4gmaZQkUvczbmwjMMMDd0L1RwTTQwXja1sBbAQGNiglX3XSUUshLKQVcAkTR2YEatTUTkolPi8FbPsVTwT1TKESa4blVlEzRNEUMMI0ROczYvMiViEmdsglTtYVYsg1TVcGVFcEdKIUP3jEY07zZOMSVJg0aEMlXUcEMw3zblwVdwIDcoIjYuQjMqjUbjcUbMgGNYUmXrMyPwfFQL0zJuklKk4xbLwFZi4lcNMlMgoEVgkWL03xP2.2PmMlU2IiQ5wzLGoWZzo1JtLUSxYiMJgWLyz1YY8jU0gCTVgTc2PlVpQkPLkDZgYmUlgWMFYEb1ozQ4j2RtP2SZshVy4jXOcCcCoWLOASZDMTd2nmMqXSTvQkPWcjLlQGTzQTM1gjP3HTLhAWTV4RbEIGaoo0ML0jTRkGR1IUbU4DYYozRQMTbNM1YQUjXWAkawkFV0HWVqTUMQkUUVYSTvTkKEYCSlMCLvc2PkoGYGYlXsk2b5cjPZgzbZckMg81Lvg0cybUL2ESLDEicPE1SwwTLnshVko0aHEiSOIUMng2UiUTMukkMsMVdnUUNybidhITSiA0PzXiUWUyZLIUayHkVJIyYLgmTT0TT0flM4A2RV0jVOYURVA0cEEkU0fVanYUMyDiXjgEQgMVQDolZrIEdqHlaHYzMSQSUvbiQJUCcj4zRGc2SQElSrgVV4IFZwXiKLAEdMQlKpIUZyEEZLUUR4g2Jt4RamMVTtwTLmICUFclT3MWZpg1SoombnozY4AENNkDQUs1aqTCaWoGcPQkZq3zPC8DMGIDTmgVQTwVbEgWYPc1cJwFTIQTRj0jRp8lVqIUYlkVR2HlK3MDUNMmT1.2QUoUcKUSU3kmYjQkYIIkRqHyZqXmcXcURFkVXCQzUy0laPA2XyTkKoQDU0gFSmAiSWYUVTEDZrM0b3PWaVojRkISTXAyXuk1UO4TSvb1RoUlTNQENKg1Z2rVTkIFURMkVsQUMIQCaBclckUESSEkYDUiPrQyUlYEQ4XkTzs1PxfTMoolXqo0PqEFV54VMREVdEcEMUUSVBYiTTslVq3jXLUlbzT0cYkSNUAkdBwVYlY2J0kGaloUS5E2JKYUZMwDYuMER2bUSxEyaZUTVw4lTpkicHojbEgEa03lKJgWSHk0aqnDMu01Mx0VUtI2UkUCNC0FQs4jSk0DVEU1a1Y2TEszRYwjLmMSNVo1bPMmMSIyXv4RSpQzUYoEQ2PSc2gVY3QDZs4laCAWVx7ld1nFcRIjc1PES0zzTs0VYTYDVrM2QvAyYp4FaTUiMwLDNIEjUuIlX23lT2b0ayc0cz0DUFMEbJ81bXEUZ2PUSHkFd33TMocUR2klPwwTLyn1QvDkU3sVTUkWPZYCcjIzRznVMGI2JqTzPuMTc3Pial01RoMDTtwzPWkGQSgiXBEzYwgjUynlYR8zPFIybzjFLvECL4jlZVkzbtfWUAYmb2PTUt3VYxITYBUDRO8DV4vzPuYyJEshSY4DN2QTRzsTYkoDYSQlYnIUTtbWMHcDaWIGR13xSsclTZsjR40lYpgWMsEkMjECNRgTXjcyYEQVdvjkdCkibnUDU2rhQLgScU8FU3MDY5IEQNASVAkEaCIGVSc0aVEidN4xY2jVbuETV4bUZH8lSjAEdpwTRYgWaW0FRPsRU4H1ckgkb2jGZqXzckEkbvbkQDcGcM0FLtv1ZjcEchESdO4xSSMTVwczaqXWLv3FSPkFbxcCN2bTX0bjT1oGVmUkLFkTRs0TP4HyRIoDLoIUPSQTanEma2ISNRcjaAwjQZMmSHYkPgglQ1DVPzLUcnMzMpUTUwjzSAclQJYTYqH0JRolKV8Tc2ozUVgUMYAUVyUmXuE1XxD0QpQlLm8TazjVMH81QqYSZz3BYgQ2QIUSQtAUMXg2JMclQrc2JtsBQ3MmPnQlKtD2LiISdnISVXkiUBI2Rv0VMyACUCEUSE8jdtsjd0n2c3TUVY8FUI8jXGAiYv7VTzQDQFUiVLsjXzf2XkYUSHojZrMiL4QjQxTSZlASbKslKykjaHgiVnMlaV0TcLYzPQEzMRcVTMg1Y4Mkcxo1LtTld1c0P3XWZ0IEN1nDLUwVT13lQ4rjbXYmKsEiLXcUPCI0S1EUVUgyUpQ2RtUUQI4TMDgmYV0VUjQFZLwjPk4FTVUCMukyTqMVcXglMqHDMDUTS13VcKUVZqTzbuYzcv8Fb3LjZKYiaWUzYQcmLIUTTpIkPMolPrgUbCkDN2AycwTGSSoDNBAUNuQCbz3BY4vlVZgVc3kCMOgUZ3gVNzY0RVIjUTklaVMUYjI0LgMjXxcmZM8lT2XWQtcybEMVTy.kYqrDROgjLnMyRtTlK3UmaoEGa4DUV0nFZGEFcTMWZUQ2St.SMGombZglQRMUVXQGMhMTdHo1XoU2buIkQ43jXrMjRmo1XGM2MNMkbKgFNvAmUu4lShIGd3DVZ5oVLCEySVcSQmA2LusjRVcUR0TUSnITUGkiYhYVRkcTUlIyQg0FdDImLqcUV4g2QyXyRyTjSxUkRRgzMp0zbEkTPzLEaiEiSoICZJYTTksFS2TWYWIGdycFLXYjQLQTaIkVQ0M2LLcDUVMlV1rRcE0TbqPjK1rDLqQSPzkTSskjaxbkLvjUZ5oUZEEzQtolVIwzJFshSmwjR1b1StPjcoAUdLMlc3A0YQcmYOcEMnczJnAUX48Td3zVYW0zXzTVdHkSMis1XBMmdToVY4jlUPsxPPUDL2UlSSokZCMWRxD0XtDWY5cDdUYFY2MENWEyYNkVM0XWPQQUMooVQZMWa38VQNkCZ4jlM2jWYDolTOsxSVMSSgcSTRYTbLIiQ4njQrcyS0jib3fSazESXvDlUMYScvslRQIVLswTUJUkL3PFYZo0bEAUXFk0YwLCSMg1PQY0SzX0MZMkSw4DLNYmK3blQvI1cg4lQxb1P0EEQnITQNIUUMIzXZUScX8zQ2XmUvI2QtYDMIwTak0VQ0XEdswFVR4lY0UmYCkmYxbVYvbkVzslKokTaPgULxYUXPcyQYkjRScmZGIiSzD0U4MFcSMFNMIzM1XmLzDUS1byJYoGNWcTM33xcZMCVzTUTtPFMUokMlIFSl4hLmMTL2fSaN4VZMc0YQI2YjcGVwYTXwkTNzXmSBI1LukGLlAGY2X2TIshasUib1bCYyICLmclSyTlUtXjT3shX1I0XugzXyU2aNIyTxDlLxbVQXkUQlUTLl8DcqrxUxE0ZgA0UvzzR4jzaC0lYiQFQxETU2MUMOQiKXIlYFkWPWoVLCYyRBkzc2nkTUY1JyfDLt0TY2YjKTw1LqTCUwjCY2fkQPc0PPUlTwUDbMYEbJIDM3XzMC0VTRg0Pr4BdsMmcVESUU8TLqoFUwU0PYYFbwg0PqfWV4.CZzc0XSg1bQMFMQIFUUgFVo4xZJEFZt4FaPsFZCMERzAyU1b1SsgyLn0zSybyRIk2cLslcIY2LsYmLxfGRhEWMFgULwE0XUIGVBEEYAkCdygmV4jDVqgDL4jyM5E1JQMmP40Vczo1aJgGRIsFVtcjKmYUROQVLpkkZv3xclgjLT0VQwYSUnMFVO4DSt3DbYYlVzcTXs0zUHkkalgkP4AkdyciMtUTRTozTEcFaBUkczLCdJcFLHElR2EiU1kCTV0TNDEDdnkWS0gCUqrhKjA0UFokVEQSRMQkU0gFdig0PRMzSPkFaMEzY0DFMJwjV4HzXz7lPiklMNcCczjEQwbERvLlQH4DcAYlU3PTV2byU2kmTjMlaKMmVig0LUoWYu8jMvEGZ1Y1SwgyYBUlPKIGaUIzYw0zaQoWd5UDY1EiK2Ukc3XSTvblYwDFLxjSMGYTcwrFSZ4RYA0Dc2DCLEkGQjQCRRQzLxsBREkVZoojQukkdQY0QvA0YRcFa1k2QvY2ZwElZnMWUCkjY1gkUGkGRT0VQNc2QtzTR08jUoMkK4L0QqTkdHQjSA4TLyLjcVIlc2A2JiUychomd3T1Zqrhb2DzUzzTN4AyPLMiKFcza3o0axXVdwMjT581QAQlMvUCciQjd4rhULQGVxb1a0vjatjUM47TctT2USU0av3VNmYiaB4lL4DVNXAWcVkmZwTDczTGM2kDdNk0Q2XUdFcWZMMFcywFNtk0SKY2UNIELKEkLygFSKQmRCIWaYIkPqfkLSQEcVoGUUwzbTc2Svc2RGYELTQjQoUkdw3FRZcWPEgkLwIWUzXkdSUTSDgkUgQma5cCTmAWduYUQ2gEVUgzTxozXpE0XmkVQCU1ZGAGM3DFMH0DM1gjMrISdiUSbMYVSX0jUZcib4nFME4RZmMyMC4TdWYEakIyMzjGU0wjX4rFSIAkcX01P2UEVRImXZEiPNcCLvYjSyc2atgGTVITQ0LVQUg0JTcGVoY1YmEiRTMkVNc1JUo1JPc1ZQAkQOUSRSAGc3fDQjgmR1sFVTQiduoTdtHzJsw1JL8VRtQyTuMDVOsTcTMUMKwjXsUiTxMDLTkjRx3xUtnFZzQFRjs1JxQFZt7lYqEzTJYzQm8DNokDYkMWV2LmQDMGN5UlcBETUzfEZwLjbv0VbYI1c5oTVWQiKn41axHUTVkDMTklcqckZGw1MrAUMHkURysVdJI0R0kCLyHzczM0MVc2PtEUYKEmXmo0USQFYAQiUi01UTcDVvf2ZGYEVxLicrklTj4lZLk2QPMkR5AWXlAyP2nzcugiQ3vFS4PFTwQCbB01PKsDTwIWSQgiau0VQlsjVRk0SIQDZFszUJsRaLkFcmMGQm4TbDQCTR4lUSMyZyYWZwUyRwUUUBoGQRcETPkVbhASXmokZCgkdBQmXQAkMFcSYj8VPooVZj4hL0fyczs1TAIUajYWL2YVVkQDQJg0T2nzJnsjVAMFdt3BVSA2L2DWaBokRqfTLok1QwnDMuQiR241Q0MzX2LGUNIWR47zZEA2UDMzRoE0PV0FdpEiM2QibXEGbh0jUvj2Q2sVPNITP5QGax.2Q1UUNYkkMzQzaFo2MOYWbNciaNYiUKo1ZAMyUxQyRPkTUnQzJgkiaB8TTJQ0cuglPybGZHkzSmcmcIUiMxj2SxMSdz7VdToVYUczXXEycyDiX4nEZKAyLwnlPSIWXRU2PBcUU4UjXxAiXyoVSYMiMVA0XqEDZtflPJoUbtDzQKA2UlETbKoTcrgVVFoDczbjZ4LDQQcGUAgFcpk0XjUzMmoTNMAyPyIDTLkmTw.yT3gkSRElcQIVVvEWdYolP1PETHsTPWkiZvbFUOwDYFoFctoEQt3zT0fUSrUyQKQEb1DWVp4zYAMTPR8TZiE2XqrxaXIiLQM0PikVNgEGYC0lXGYSdq.WUMglQxTkLUckcHQjV401PggiVuklXogzPpEGYD4xc4AGVygmdGYSZFMla0PmKRw1Py4DSuQFdRkCVmMkL5wjdAMFY071Ut7jL27DMvMWPrYVawjWPAUTaWMDVyT2bxDyaAsBYHUiUAQlam8TduEmS1cVNrA2Jw0jZqMVUSYUctcTc2EGYjoUUKciZr8TdOoUXQUjUqwjSEY1aWoTNG0TLJUEV2giKAYlK0T0Z1Hzb4HWTZckM1TycIQTd1DWUlcGczwlSzPULSojX4DTaVkSd0b0J4kib1rlLBwzRu4lL4QWSqQkMBszYyU2LAYiQz.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.WQyoGTFY0TwXVMtXDdW8Ta5MzcpoEUI8VL0sxMBgmUFkGb0AkT1PTQUsRR1Q1aqoGdWIFQXEGRToDc0f1aFAiciISalkFUTkDNUgzR5UkQhYmMlQSMJEyR3LyUXAWYqkiVwrBaNg0QFMDUgoENDIzY1DSdQgmYwTyPvH1TsIyJgIVN0j2MMgGNq3ja4YTLrcCVzIERAMlTIYkK0U1TTIGMZ01U4PzPQMkTtoFZ2fFdrIDawY2ZVoza1UEMU4zPQUCclcWY2M1MP4FdgEidskSNvfFTiwjYj0FZYEkS4TiVTgzagoGZlk1bTkCMoUCbtTycrw1R5UmQnomVDUSU3UiQnIWQyEUVqYjQiUmSsolPoMmZ2okZW4xSYoWcHo0MAM0bpkTapomUJ4hV1PCZzkDQgkSYgEzYKcURPoVNtLCcwwDN13TdHo1JowjYDYkMxUWQHcEMv8TLq.yY1UVa4H1THkyPxPER2MTa3nVYsQmMXEiapckRD4ld4YzJow1Uj0FQ34FT1TDZOQzZzk1Rzo2S44VNJM0MRgCRtEkb27VL3U1L44TVXAWcxL1Q2E0P3YCLYIVPkYEQ4UCUNYWb3zlTGAScDcVPBk1T4TSSxPldggySTg0UwrBSQY2PmESMKI2J0nzM0bGdokSN3TUY0D2Q0HFUhMWXEozb1DFQV4hTUgzUjIibS4xc28Vaq7lLK8zPCcmZl8zaMMSY04Ddy4Dang2QPISMKMCc2gWMxISL4QlZ3gEaz3TXwYFZSYkTtbmL2Ejdpo2LBg0MgEWMDElQ07DaykTaiMmTrYWXlsjZ1rhUpsDbAoTVFgERHsRSgIFU3YkThEEQnshQhgiUBEjM0vTcEgGMx0lbHMVR0E1QygDavUiMJIyLMEEYY4zcN4lMQI1XiUzQCYDUFUDYhkiKxkzc2MmM0M0XYYWX0AmU4DmRnkFRNk0bzgDQqnDQznWZpUTTusBNI8DdPY1bowzRqYVQ2T0QCQGYZMWPOQlLEICNyHFcv.mUZk0MugzM4f1TyTVLvbkQJcjS3U1Myc2Q2IETncEVvDjXzfGZNYGcTsFL1fkLYgEcyTVaDsjTvQWU47zXSIGVpEULz0FV4TVNH8jLj4TM4jjZ4YCSZMUPTEyZNM1SGkCdyMmdmQ2TWoUd5oTPt0FbUYSXGsFNikGbiQlMX0TYUgFUWc1TzrDUYIWMRgFTiEzPwTyMwDmYzYibLY1RrYmTyPCaZ8TPVIUTxgjd0X2RDgCQ2n0XzcFVF01YhoGdjg2RZwVZhshYKEiTCUmcPUTdRAEYFMka4b2SVcTVv3xZgcUXK4TU0H0YqEmctT2ThQSZvLyXvfCNhgkcSoWMKgmcybSYSkWTMY2P201M5Y2XtnFZEQTMS4DRyMlSjQjdHU0aDYzYBI1Qj0zSYgzX2TmQkMEQxPCLskzTmAkctcGNgIlc5Y0TYYDdzkGbE4BMZYibWwVXYACS1jiZyQGTuMVct.ybhEWdhkzcynzYxfEdXYjdYoVVqHkYCY0a0LyLqPDQNISRw81JFQlL3MWLy3TTIUiaJIyPqTjcwfjS0rhU5MyZBM2PwbFYAAUVioWXLc0ZAEDLIcEbhwlMVkmQzQkVGoWZqTlXhYkZ2rlLZIDL0LEN33zSRwTYA0TV0EkSxASTSIWdVciZnEmQ3.2S5QESTUiR1kDazgCSwokdyXSNJgDMyn1UrYFbiYVXwgzaCAiM1TiVggDZ1QlMmUyJBQ1bDAmZBIUXUE0c3giLsUTNmEUZrQVbXwzSyEEY2IEN0HTM2rRdDoFZ3jDU5MyTAYSPAMiKy4RZ0.kZAIlRIwzTJAGNAQWTtXibmgyU2LyRGMiKtIyckMFVnolU1DFLx0DZoMyMnIGQngzJ4oEbxbybOYidXIVdYUmXYkmKtXibRI0QT8zSxE2c4rhYyYiMn8DRzoWa2PWbvQkYH4zZLo1TPQlZv4lZZklU0UER0szSwbFcRQWQlIVPzc0ZxHCSPEidYUiPygiaYEFZXcCd5giaukkdtbCRvn1LB4zZ3fjayvjKSIiVUYicBMGSzUFcPMWXXgVbxASUMoTcWgCZyzFMwXmRDoWbCEUPMUjc2ASbEklPIciXJQDT0gTcUc1RmUzS1UEdHoGVrciXLg2JDkEURk1QYkCcP4xS38VTLQiV4QFT1Eyc0gVaX8VNWYzX3Q1S1TGZ2PTdBEVMoUCVL8zL3U2MFYlUgQDaXgCbUwFYEcmcBo1aCciRkIiUYAESAg1RkgzUtsVPRYCaKE2a2MiULYjUX4zM2EyT0YFRScDS4TjaIMWM4flaIokavkya4HyYvEjbZ0Fa4oDTgcidMY0RSEzL0PTT3YmSNgmX4kDQMYFcFUkYK0DVyvlK3DlbooTZqrBR4vVVJcFQyQ2Uh4DUYkkMBolSAsTSmcFTUIUUNAGZxc2SrIiLSAEUvDkbzLza4v1RqkWaybGaoMCMxnER24RLPYVRVo1UvEkPhgzP2L0RqfCcPUlL3o2QwkiTvsBZPQybtokdWMSZRokVAgTbWI1c18lL4EybGE0RnkGVHMURKw1RVgEQMcmYP0zYrUDaMwFUQg0XyszU5cSYYgSd1T1RswzXrkUQKwDUNESdvrlZPEVYhQSS2j1ZuYWQ0QVNWk2RWITPMI2bvXkcuEWSpkVRvfEbFsVYSYlLKclVWslS2HlQUAkZskWSyDyc3P2XxbzL1LzPEYFVIkjRIUFa5E2RjQ1YtfzJxUjSAgyXH4jcBMUVhI2JzUFV2gDaIkDVWsBQJgkKYUzJSMTdtLkX43BYTESL0PzbFsVV4HSP5gzP1YVXZoFcwkUPUcUZlAkRoMFVJwDT5UFb441Sro1cDsjV4AUNPkFd4L1bsMEZBA0UvI2bCkUT4kGbMwDYHcmRq3zaBsVP2rVYA0jZtPkKqYmSwPCNtjUXEIWZzbWVhEDYBc0T4.ER2XTLv8lRVYENy7DZqsVasElawbUcPYmQpACaBozPtUVSPEGVAM2cAsFURETSOMlayoUPKgzUOMlZDszQIcyZyslUqshXGMGZxXVcvQ0J3Y1RwjlQpwjTSUGUmAkZ2sxYtPiMv.SNxPkQ1oWaWA2XUETUX4VShI0SDcTahMjXPsDMUciZRUFVsMlLYk1JWIDQPEja1j2SYszb1f2cEclKyrBbqnkSwvFNVYCSuUiKEgSbB0zUkQjS3n1QK0VRrIzbSQFSSQkZYAUNH8VTssjVMkkRKshMCI2RG4Dcic0cn8zQyshRxsDTvMSX0gjS50lLZECT1bDSWgWTNoUM5cCZqIiXuUCMKIETtfUV1blc4XjdZUlXsQFaNgCYFkSXgEyMG41PnUSLDMERzcFcWUCMgQ2cZYiRv0VdHQiT2fDbDwjQHsFNEEDL14RbXYTVIMWcgkjX5ElVxHlYqoWSzb0UD4TSyjWSBImYZE0ars1P3kELtnWLyQEb4j2Y1sldmQVaGslRjIkMDozTqklTO8lKjwDR0QkXvvjaRIGYTgSbUoGV1ckRyfjagMScMgSQLUyS24DYpEDQkICTHMlR4MSNwfkUBIUXCcVZ5YENtMUPxEzczokcqPFVP0FQ03jKl4BMToGNTMjQQAGUkUjU4sjbgU0MpkmY0bzMyn1TucCdBcjb1HiRZsjb0M2Y3vTSXczRkA2PMsjc0gSaYYENi0FM5A0SGkWTLIFL5oFZL0lXsEFLyP1bvrVasUyQYcyTNo0JEEVUukTX4czJQM2UAESLSokcn0jcUkGaxDVaTIiLQIEUosDTNAGShYFNFoDZ4LCUxMkKH4DYoYSPYMVaqkFd2AmUP4jUtUyJikjZjMCZholL3DzbCg0coUDYNACZGoUPTsTcOY1TggiPO8lazc2XnMUNtcFRFQ0X2YVRDQSZ1jjYosldBcGREkmavPDVvfGax4Ddog1QgI0ZzfjYLIWaP8jUvYkVuUDSps1YC0lbZglZ0TGd2bSRGs1RhEWSLUybYwVX2PiSggWdnYUZ4MjVYQjLqISUToFLSoGZ0.EUBQSNDshblIjavfjSogVUNcCQ3UVNFkUbWcidtLWRqzzLnU0YWYDaKo2RiUDbUUFRFkVT2rhXLcjUCkza0TWXsMmXZslZK8lYFM0XYY1JWQEZYEFQFYURFYmQiEWSswjPNQSdnQyX1XmZmUVUjkFSQQVVZkSP0giLv0lKg8VVAsxbUMFRZkUPrMUPwHEbKclMoAidsEGTvLza5gSbTMUUkQ1Mo4zajAiLSkFczPDN2cVbKslRqUUSAsRVznDS2MlPPQlRYUWaHMUXzH0cOEzUGESZ5cWUqXjY4rlb2Y1YLYzJ4YTcEoDSV4zYl8DM4jGNiQkSRU0XxrhQOoWcwslaFYGayMSL0nkYrY1byjkRxzVUAQ2XUYUU0PGR0LkcVMCUqbiKqbGcCgGVkoVPAg1SrUVUnIWb1U1UvgUSo8Tc1QFVUUTLO4VLzLCS2PWNTE0XyEkLWwDaIkDLUkDUwbDSAEVLTY2c0jWRzfic1HCa03FSPcCQtUEQk0jKjUkQvT2MXkCStYzU1b1ULEVM2sBLFEVR3MVN3g2RGMyTCMkVTgCTN4zZ5U1YtkiTig1Jw.GNJA0SjgTXXkUXHETXAYDcsQTLZMycyYkK3X1YQM1YuwVQjkCNjwjdGIkLZUSTrEUPXg0UzMzL0gkcUsVZCAmKjwjYDU0Q2czcNg2MtczMN0DbxnzLyjSc4IyQt8zbtYjaDokXVYjXqgVLxEUaw4VMSYySwb0Q0DiMyQ1StglUtYiVGkDU3n0SCUWdy8Vbs0lPWQ2TCYiVOw1cOokMwIWNoA0bVU2XkQTd1DWL4f0bU81bhkVTgYmQHImRNsRbDYkaxASUZQEZ1nzPvMiUxYWU3jldrUDQW41PtPiUzklKx.kVEgTctbCTtfTYpcUaTUFcXMGaHcVYBo2TyLUYPYjQFITTJQDZuklSWMTNvoFYwT1U2kyLwTCaAMkQgImX3b0UgozUAUkLAYyc3ozXvjUS3cUTJkCMiMlPWAyL2sTNtbFZgkVRzoFSpgURpICaJMSZnYzXNUyTVcGa4YzQmUWYiczYxjmYhMGNzcmYtTGYBIjSgUVRz4VbNIkSYIFSycUTUAWcuUlYngFQqsFVkUyZkESLZojUwHSaVcUVOUmQPISRWIlVRYUc03hYxYkPYgTQ0zTSmYidkklLwjVQ0sBMOgyXxgkV2fEUXcmXhkCaq.WLicTY2oVXksxRzDTT2AiajACaKITNl8TXJ4jLNgzLjcVLrAUT4oFVngSY3sFaN0VVZgmXgQ0XvI0ZzvFQuMWc4DEZAozQiYEM4HGb30DUV41LY01MFEWYDMFMgQTb5sTPJUVQ5AySuEmSn0lV1rRTLYmRv3VZ0rTMsgFQSgWSjwlTGYlM2vTS1jTUwXGdTQWLsUyTDoUdJkTNMkCbzoESWkjT1MCTYIkbIEScAQFT07jRO8lavIENAE0Ro4DSOolTkYza5oWPkshchY0TT4FMsI2RBcVdz3Bc3g2ToMEc0YldRIUYCUTb2k0bh41XvXjRFcEdz.mKME0QtYidEAmTqbDLlIjbxLzRlMyTkMTcUkWXLYzYRQmdp8lXNQWaKEVPIQWc5kmUVclLMYkbREDTygiR4klZ2nVZgUGTJQCT28TRmMUVnEkYkEGMkQGN1f1cDMUcQEzaBgDZNQVZlICYowjRMsDYRsRcKkSYBUTNR4DYTwzMQcUblASZVozPFUCLzTGYL8TVBI2YBE1LkMmR3A0L4HlaDM0P0YTNlsxbOojb0EGTwMVcxYWagU1PEA2cikmaZwTUComVRgiVRUidvjkRT8VXTYDR0IkXigDRCIzQQo0Yt7lKvDWa3QkLvfkYg8zbto0Pq4DYvUUXBQDcLMjP3fCYJ4VROkEbUUENXAyTAcWZ4M1bznmbZ4VbVwzcpIyL2QEQgECU3jiXtQSdQM0ZCUGQ3XzcwMlL4QGRJIkZzfTMIIzQSAUcgQkczYzbH41bS8Tcpw1cO8TQooUbtTVZS0VapEDTCQTayL1RAMWYIkkcNEzYnQlPCkCaD01JsUGR2L1JqYVbKQTaDYjUtXkU2PWa2UGQh4jRPYTapMyUKICMpQ2Pto2QvP2UjcWPoQUTxbkPw.iSJACSDQ2RNQ2T0YVUPcCVlgGZNUSSA8zayUkQYQVd03hVJUlav.SXqLzbiUGaxjTZvT2QPYiMtfzU0EUXBEEUqcTb1.iKvUCS4jVNVszbtHkSwLkLUwlbqA2U0EyTiETQLAGQybzXvPUXA0VTDIEYAg0cqjmV03lKmkCUDcSbY8FMUgUZRgCNsszXtcVXqHiaKQmPMsxTnEmUgUTTYYUPzQzTZk1JwX2aG0DbYYjcCkTT14zURcWZ3fSVWsRa131ZyMjb1nDUhIlLSszJpYmS1sVNqrlaiACRNMSRFk0JlcmaushcjgUSOAkTVQTaNYjMgo1bYEFcrEGcSIyavoja43jXv3zc2YCbLQ2MAcVcScTYqjmbncUNJYSZJEUPRgSdOYkT2XCUvPGT0kScBMGcD4TcwgyQ0o2RkQzXxrFdvPVTxUUVqMmKq41Q4Y0JFgFVSM2LEEidIgTXPgjd4oUZGUjX5YFVBUkavElSjQ2btYDQtLlVz0FbJYmYTcCYhgjKyQkcx.ELLMiMSUjShkGboomRUglUH4VYrESVKUUXLISZyfDYnkVSA8FSLMUYiQFMIkiQsMST1TCMtnDclUWXwgzUyIGY0bmQyLCVikkbAklS2sDcYM2awLCQZ01ZKMkR3jVS0P0UH4hcBkEVKMiZN4Bdwb0RJE1cKgzaPg0L4QUSBICUvX2LzPFY28zUZ0zUWUWb0PDTuk2PLMCbxHDZOUlPWQEcow1SyAGaxLWSLITNBcVVyfFLrcWctnUNIIWPBYzZPojQIYWSnwVL3UWTwIUUugWRtk1UYQSXyo2L2.UYDwzJSUjVqnUSTIiMqT0aEsVYWgGLQUWdqgyMW8DTDoWXPoESPAkPOYUPSYmZUkmX0.mRjg2LKomc1r1QkQzZWIGcTo1bvbkSlcGctTSMGo1JUISQXAmczQlVzIiaB8lX1HkMIUiUwDERqXmYCclRFM0L4rVSOM1ZjQ0SLM2cnkiPTc1UnQSTjYWY0vVVYE1Z2nUQWQSRA0zT3E2SIcCMrAkU2glc2rFRQkFRVYFLRMkcL8FLSUTag4lMXsjcAAiZl0VTSkDYPUFcSMUQVUkVnIDS5kidUIWL0zVVpcERMUGdWE1YXUzYlgWYvEVduMDQkYWLYA2YCkkUlgGLwIFaYAENHsVV4o2PKk1MtnUTPM0TU81UQIzTvkUXAQjZ0E0R4AUbjgCY2LEZngEazLzZvczTiMlT2EjPQgTaZkCNBslMzEUMvU1YpclQ4YkTg0Dcq4xZOgWZyMkcvXDNEAGZwE2P5Y0P0PUdAYDYFEGQoglLqH2STgVaQITMtHWTjU2cBI2URgiVXYjTBkFNmUlUPwDMR4VbrgzbtL2S0XGSRE1L0PmTHEFYjIkdzDiZZolPxX2MvoER3nmMgkURmwVXSQ1S3gSZIgjUzsFcv0VdD4VLE4FRIwlUtsTTX8lV2nkUEQFZLsVPyfiMGMSaIQDcU41JNoGQNcyLyfiKGYidhMjY2I1JgEFVAcVMRciQG01YNICLzQURlkSTAkWXtTlcYgENxkSX1L2MhQ2SH4TdUQkQLA2MwT0c0fWTQo2PPEiKSM1SicGRoUkYEM0JsUCQJYlTUkVZIgELrgjUoQ1U0fFTl0laq.WTkcmP2rlT2EkcDIGYWUyTI4jbG0TPVACYuYiK10zUjMlVBYjUAgUbicEYXMkTOcCN2k0MzLTcQkGZx.SLRgUMHMGV2HzSFgmZtT2LXkWY4HlRPM1L20lSYM1L3.mMhgEcDsBLr4xMrkla2M1SJYjZoIWUZ8DNv3FROgkZokyZygGZUgyZqkELlkWR2DTP1AmZtozZyTWMoYySvLjcVkUMlYTTqjSL1TkPyYiQYE1ZpElYMYlap4jQJ8FNtcCZWYyTzHiZuwlcHczUx4hL0jUZxnmMsozJ1j2JrQ1LzUyX0DESGU1TYsRX2XFSosjQvDURvzVc33TSq4Ta1szb3ASNqfiX0rTQk0VdBYlSnMVLNMGYXsjQN4BLosxbz4DRznTNgszJSAWVjc0Qz3jKXQFSznVRRgDZOUUR4bjSNY1XNc1ZJY1QgQmVlMlMlQlL2rFUg4BaNsDRY0VUiMlbkg2a4DSdwomUw8TRXsxZ44hVPQGL1vTYSkSRtLVVAITc2fDdtcUdwvTR0YEdTczbwXCYsQDdIQCTwwFSGA2UycWcwrTZhEFSUsBRt3xb1cDUZYzPUwVa1IWXMEjbTAiM1Hjato1b3gVPtnGNhcmYBg0XwEkdvYja2TSNznFZYUlKpwjUGEjKPcDcmgURlw1awEjXBAmZTIVXQY1ZXk0ZT0VLwb1YqkFcRIiMV8lcTEmKHECV0YFQYcGdxTCSHMWURglTREEZ2DCLvbiQ08lZzTGcmk2bXoFb1DVa0UUQUESM5c2JVMmazk1aOkCYjcTMtAiRz3xQWQSRB4jaQIEUoAURjkCT1EVYZ4lURMCN1IGUho0bQU2LvkUTj4DM0PmbzQyPzE1U2H2RTQ0MxoldzI0Z0LUT10lPZkFRTEiVDkVQPkVPqHyUX4jXoI1c1DFM3cDMzrVXzEiaxsxRBgkMNIkMx3VRqAWMvLEMZUFSSMWPrYmKEAWUG4zTQAGREcTMq4jdhUEVvc2UtMWbsUSNBkFMBAGdHciTLkGaociaJcFdtQmYjI1XoMDUNISbWAGbTU1bFIldTwDNDElLhkTa1fVTuIlamckYPwlK2UVPM0DdRYEaRwjLqQkLromb2YUMEI0PGkiSoACZDYiVwrVLxsTQ3UyT4kzTikVVGkVV2nUPx.kduQzMtQ1J08TNIAmVkQycwgWMzw1bngkRzHCTNECLJgSdFIlMwPyLoc1JTMlUnEkMwnjT4XWXvTTMvr1PRM1cyMFauokawTUQpI0bJYCZ3YFQPMWLzQScngTYtcVaRMSL2sjbxoWbCIyTYIyagESVhI0ZwbUUXA2QgoWTkEEVzkSa4E1Ry3Db13zLZQFRAwTUyYjSNQjQ3oGTEUUSyoFSzgiMAMCYHYTat3hcysTYEg1L1kTa2kDZzXDa0gkL4ozQ0f2bEQGZnIlSRsRQQYkUzT0a5kjRu4Bd2HkcucTa4MmbzLCalY0aAcCcz4xQwESXnIzQVUzJBEFSGoWTxTyUC8VSiAyTyfjPqYCRrQVMIQVUqTGLXIGd1XWaHEGRn0TLpclVDEWQTIlYqY0an4zMvbmbSIjM2HCZvDCc13jMXUFVMUzcHMUVNMTYKokd1fWbrgDRgkyRUgzSwvTX3g1UzkFa0TlSxIiMRgGMqbSLQc2bxP0cqUSLYM0TwgWX4TmdDEDQ0.0M2wlLz7DctTzMmgmdwXzLrwTNvsTQFYkMUESZWYjKzrBLDsVT4PiSCMVUk4hPCcVYwHyMyLjV3gDYxn0Qh4VQ2cmVpIGUtEGaLUFUXUGcxfDUyUUTGYEM0AiTLUmMZc0RHImXOUSUmEzbkkjSX81XNgkMyczcrEybVQFUt3Vc24RbCEVaiIVS3DCZrsFMzHERzfjPhMmL3wjMGYzQNQCdscEYowjTA0lQyoWdqkTUIYkVEY2ciAmLqLjREkSUSU1XEc0ZxHETrokVRITP5ElaygGNKI2aJMDQRoEUqwVQlgkQOESQmIUaU8FZhEkdswlZEETNVc0PTQGLhQTXtI0bm81UHoUVPciMAg2ZZMlZDshTlkzQoMiKRYSTAAGNGUTXsc1MhkjSE8TQqQGRNoldRImZjUCTRo2QVsTclA0PxQFZ0.GQsEyXQUFQn4RRGoUTwQldwD2JwUDMz7jZ4fjdyAkYp0zbEgidrc1MqgDdlUEV0fSUpgzShMybFg0RWQzLGYTT2g2SKczcA0FbV0DNoEjYvbGV28zRJISbY0jSvckRMshUxrFSY0jbogGY4D2UEU1bx8FNk01TlkDaXMGLwn1aJIUbtgSVjg2LzYSZNAWNLQFNjYDaAcFZuIlVHQGd3ImPoUUTr0lbXE1JTkyUPU0QxMWYyfkV1HlKlUUMwIza1XiXXQiM3oUdXgUZpETPRomRoshVIsBdwgCNiQmXwjELLgWPwEiaqHUdGkkYMEjVTECNEolYHszXlYSMqE0SygkcVoWUyn2YqgFaOElUwLUaQ8VQNU0ahMTUTQSTmQUXsshP1kjQS8DURc1PNAEZtYmSgMmQgUmSLUTNvnma0TCSgIVcssjUyPmaZIUQxLzSEI0XWQFasYUVwckd0IDMxv1MVEVQVckVL01cSwFVIE2LIAERyg0PUISVncjLUMyaOcGbzjGRwHyPgQzREITYzkmV4LGTmUUb4fSUQcCRvDma2cTM3D0JGcUc0rTSpMjMDoTPjU1LyDGYp0VcPQlaW4BZGoTThsDL4LDVFAURJgmSAUGToUFUXwFbToVYHkFZ2LzSvfTMsU0UgcWaPYGNwbmKwMCSVokdG0DNtQ2XuMUbLkDVzXmRkEyJFgGQzDUQNYkYq3lQUcSXU0VazMERxI2SDUGaAYCNMYkSL8jbxLmbUgkTKgkc2PTSHs1Po4DdgYFYQUkcqAGbEcicHYEU4nzR4HmcA8FQMwTXXITXJg0axAiS1gEVDk0cyEEUSQUaTEEYgYTQPQDb1zjKrglK5w1MkgVRM0zZtEDULgWcAMWZuIjVIMkUBAiXlUkMho0TvsVTFQkTgUyUrklUhkkbNYSVLYkV4njdqc2UR0zcV8VS2DmLtDEZxUSc2XVb0TESI4FVnMCcw3DTXMSZNgVStjDdsMjZqbyPvgTNx3lVJoTNYUVNLM1XyolVKsxZyEyc5gVdXEiRWsxc4EjRm8TMssRYqnzPp41JZgjP1MmdtDVYvQET0gSam4FM2EWQv7DMPYyb0AkRGEiR0o2L5cCRpEVR1AWb0YSNHcDYlgUSJUUVxjTZMETPgwTRNIlXMomMtnUZVQlX4v1YtYEYnE0MEkWaxY2YEEULGAictPmPtkzTwPSdyczZPcWR47FMl0TbA0VaCwVSyfiUy.iZzDSQhQFbJIFZpI0Mz4zLG4zUHEUQl8FMRoFZzXlaZAkV2oTM481J2EVayfUUqEUNzImLvc0aqgjQuIkQkoDLzz1MN4zUmkkPWMiaqfDaw.UaZUjT4ojQVkkUG4hZ4bVMqH1XqklVMkWSqHSRWE0YqTkct.GSmshVI0VUFoGUTc0UY8jQPoGQ5IzURUialcCU3PFdm0TbPgTSU4Ba3rVN2cibscSLXUmPSojchU1LGAGSyTWVrYkPA4jXxHCMEkiLKklXJIEQtT2RGokdyjSTtb2aOMyRFEFVxnlXYAkS3j0bsYzUskmUtfzbTgiYxU0T0gDLQU1MrgFUBMCaigFQ4.mT1YzUN41PyjzR1gCV3DDYzEkMV8FYUUjYU0zXAk1PWcGc1XFV0HjPvMCdikicF0FdRcjcPczJ0HFdhIiY3sFMKAWXuQUc2fidnYVNgYWdhEDaxIVd3PzQiUyXHgzaNQkQIoTaLgkUlIjVDcTZn4FR2.ETy4hbEIDUT41bi8ja0bmTy4DLAImXgcTQ3M1LoISUkUUTqYFVWMiXXkTPiQCZyc2QDAWS3LGL2rjauEiVqHlPhoGLpIVTSMVVy.2b1DiPrAkY1wTYUkkZ2UUYqckQtM1QggSaS01cCkjcBkSSNgWVLgzPxMTSy4zTtfCMZcCa1QDQyI1QgYFMTQjZk4FZZEkMvj1cmsRPHE0RwHycMsjSkIzXlkWXlU0LngVYmMFUDEiPyDjZHQTXrIiQyUVT5gzLZUWNzLGRmgWLvP1a1LkTBk0SJYVMxkmbX8TS3DEaF01XNIVasYldwgiY2AmbycWT1sVT44lVkIkSBsxT2IUM1XUZ1MSV5M0PpEyS3omLuMDcRk1UBE1LWQlVVMiXxYTYy8zLIc0L23xbZUSRy0jKoI0TXQDUpM0QtkTU4cCU1HTQ5YWRZclX1EVUmAyaTkGcx01S0kiSBY0MxbkXtHWbXoERzMCQDMCd2TSQCkzL4j1XUUkQug0Mn4RUhgVc2fScB4BNDUSTxcWNT01YtsVUNMlKN4RUzMFYE8zbQwDMYQSNwPzMFkjLvDCMVYiXyTmZzYzZiASd0HFRrQSPK0TRQUiKtgVTBcTR5MjXGgSMVMVLrkmd1oUc4jyck8VM0fGMBACYyTTRmIjdXYFbxL1JtUUTM0VUU81MDEFUHYVRBkmKl4BY50TUVE0bIcGNQwldI0jL5cyZuISUkMGRW81J0wVQuciL3k0YxUmbYwDdvPGQtEVbjojRZAyX4shKnczaPsFYgEERwPSdLAWQrYkVLMUTWYybJwzM03Va3kCR5M0cxQiYVIEZDoDdPQmaGUCd0PGSsw1SwYjd0QkaJkSd0XGRvfiZWcjSusjSC41J3v1cwfkSgkkTkEEZFUEbGQjSFszXUMmYjIVSwgjMNsTbKQUTQcUPwHmcGkla3nFQKEmaEYDLZslMYo0YzQWbn81SqLUQ0TmdyQlZ4UyLPITNYIyQzk1cqHWL4gmRFIUUvj2QSoGMjkGTvrRctEzQQMCMqsVMAUEUnQkULMWRzPlUlsRc1H2apolPWYDd2TFTz8lVIUWMToUNjICdHQ0bXEVbDgUb4U2RpYmVgUiTvDVNWIzaUo2RVoGdAYzZ2rBUyMiVLwVQvLSR1IiPIEyMDMjLikiUqkWZVkTdhYyTtvlbQkWZ3TjdkklPI8Dc1IUStfkYxHzU37zZjcVdgczSzQjKwzFNZwDLP0VZzISLDIzbPcjbv0FQmMCcPEESBslRTkjTV0DL2fDLWkGMNgCMZMVRzzTUMI2ZKAiPL4RV4ciVxj2cAEzaZMzLLwFLZMzJ4HlUyfzXN0jSkQ2cPQjLxbzMGUlPCUiQFg1LJ8zUS8FSm0lZ3rjR2IiP0bCSrkGb0Y1XiAWa0QWUGAETtbUS1fELSkmZDUGbyjVTvTUaGgjLw.yUNA2cEc1LqAiVAACYiszYPMkPvkyMTAEQxoFTvrVTqcUL3o1PDkkKKU1YxzTcNIlXT41b2fDRF8FSI0zZ1bybzYlLugSRW0DRz31SgMGUHElYHwzM1zlM1EUSiMSSvokdt41bq.UMXQiPuAUXiI0YPM2azHUTUoGQAYTLKQTXhclXOUFduwVTxvTRzI2S1gja0.2J1MmK1rhVwU2awciYwQ0T2nVXrYVbZYTd1DmSmYycAUjPAQzazASYlQ0c1o0S1bzMC4TV4LGQ0nUNyrRZ43DQOsjQqT2M27FS3sVLtsTdEEEMwjjZmkmZmUzJzXWcJwFczI2XvDmQBsRdgUkSIcFcx4jRAEFRxDVVo0lSBYjc3jCUz4TbUITZG0zRSYGVFoDYtQjKZwDVBITLtf2ZzojKsMmSIkiRno2To4lQFYjY2T1MlYCb3I1RqQES4cVd1YWXmUGNsIjSvnWb0fUNWk2UwY0YwcTaWMEQzHmb4ESN5cVLMk2LRE0c1HUXKISVgQmX2YDamozMHwjL0f2bXoVP0LCYiMVXJQCNYQyLtIiTnMkLQsxawDWL2HkMyX1Q1PSMtASPocEVmMyZJcCcTUiRKgCYOU0UwjySzMVcSkUQvUUNIgFVGU0QwElQhIWRggycGQDMvPESXIGQ5MCdBYkbqojXKM2SqjiKMMFZYkiXBUidRQzU1j0QWM0JP8FThImaqESZ1TWYzfFaVokQQ0TYNkGZ4U1RKUmULE2QhgGNnU1UykTSTkCQZgCc07FYuEmTNISQDoENzLTXrsRXwAiVrE1RyQTSQUiZtfGU3PVQIoWc4oWVrwDLTsjVVUDYvc2XPgCVPACZXU0PrMUcokFQzoENwvVTUcDN1LmRXgUUUEmcPIEVOg0cAQEdzfkYtXUZ0PmZY4RRBkFbpQidvwFZsshX3TUQiMycnUCMqP1LLg0cggiStPmMwT0ULg2YpIickIySpwFYEwjRn8FdoUkQTcjVLkVVwYzSPg0ayfyRv31YMsRZY8TRKwTc3jWbzHyXSkjYMgSdZMUNogkMkklYU8VXskjMLMzX3HjSZESc58TUhEjSHA0XtQUb3LGcxAiYRUSVxcGZTICRU41X1QSYLslPx4hbDomXgUjVzcUQocVLZczPX01MGEGYBsFTVoWSzomXwE2TogkPmI2RjolUT4hYCMlQvDTTEokKTQmKroWTJcFRMgiR2gFN4b1bXMiQtzDYkg2MTUWbvE2UGMCY2ElVwo1a4E1QlMSLIQzPnUkSXEFUjA2aUMGRQo2aFkkcFYjXmYDRCsBSjszLYwlZMI1RTMEYvbmREIDLjMWSIc2RqbjTxjEVRQCRkQVVAwTL1LSazYFNSQVMZEWchkWRAkVaZ81PO81ZRshYRUCQiMTLZ4VNyzjKmcGTtojLiQyRwMFQZw1LWYyQK4VVwPWRCc1JIcEUzYmYsMSPTYTcigkSmshQrAEbXQVcPklUx4hZxkWb1wlXLQkQYo2XToTQWMULBkjcyrhbtbTTBo0U2szYwTjZ1o1boshRzQTLS0Db3kUSxHGT48jb0HUSYIULkk1SOwldJECZJETMjIEVxwDYO4jQUkGZ5EjZyrzQVESN0oETSoWLoshLFoTTxDCUFgTUQQ1MuEzZnIlUiU1YGczYNYmdt8zawfVSlgWdzQUP2MFUSAyLtnTPikzZoslRpU1ZG4lXCw1U4cDNYMSLZwjQzcEVCI0QiozUqITcTkSRgcDLHg1RWYSdZ01RqMTSUokdysRP1kiLBklTqglVs81TuglMD8lKxb2JpwDMnM1QScTUxU2Rok2cVYCVQMlREAkVgA2LMAiRhgzUvkVSW8jL2vzaVcSbkYjbiQGVVwlXVAybmUDZmUTTUACMmwVNkQmTD4zQYozQ4bzZTEGYAkTSEYGRAQlYCAGVHUiRyfyU1.kRoYkRCkUZzQkRpwja3bCMU0VQv7TVqI0btfFN4MjPJIEVs8zRNMlTssxLNIjc3EVYoUEbzDjZ1PVa08jXJMTSTkVZhoFaMkFaybTQAISLkwVS4LyX1D1cDYkPQI2cVslb2YEbBwlSqYUPZ4xRTc2R2.idiUla2YUM2jTcqXFatckLHUiXg4DR1PEapUTVjkzTwnTcD4jU4HUTBYzY1HFVC81YAECY1giSYQ2MocSV1D2aiEEbSMDS4TScqHWYPIWRmkDTtkUP3fTZUs1QQAWSPMWPssjTS4DVtPSVHAULlwjTNQTThIDLxXlV2MSPIczUYgmUKQCYgsxaC4hchk1Qo0DMIwlawfTXJkycyrFLq0lMlQmd3MzR0TVLtjWQLMSMmkTRpsBaynlcwnlZlkiPzPSXzkjUvjmZGIUZoUDUA0lVYMlYIoTUEwjMKo2LqDDaAETb4QCZOgCYuAkb3fkVVgTQ2nGL0PGQRECZ4MFTnsFTwrlZnYTU2UmYJo2LxkzRVcjbGMkXMAWZC81LDMmYgYjPRgmKjMGVuoGUMIFV2YkYrkzPFYCUrQCcqHmMuAURMMVMPkGdLoVYk4xQX0TUloDbCkDcVI2YRAidwYCVvsFQiYjXIIyLOgiPLc1MxTEVqUGTwP0ZgwVZEo1QUQ2PtXVVDYmS2Y1RmEibzTUPtYTbAozLQ4xLh4FS48zLzTmRv3jQ4wTPSACUkoWTzbycz8zRxIFT50DatXTbBMDaikSQDU0UzETVzfkdEI0YTMmMxQUPS8lSTcTSPYVdhQCdt7FNi0lLp8zY0TlcugTb0E2Yz.0Q1n0XmojXtHVShM0QPY2JvYGMwn1RQMGaBcWUYkEbBoTaUMSUygFYxgGRYszRQAmVGoTahAmXDYDRpoVTL4hRh4jbGYyYWgCRjcGV1UmKVYyXncWbAkzbSM0TjclUyDkbCIiXngVUsUkblQVTRMyJGUya1TiZI4xJvkFSXAGNU0jagEEQF4TMqczUFI1TPESSmgjZ1nGZKsRLx8FbAQzSTYlXXU0cvHzPLgSPmwTTKkSYOY0SXkDb4PUbvgmVLU1YBEyXSUVbBECQSYEaDM2brM1bEYVLEklZy81LiUUQrAmYoMCLqHVLLMCNhEyUm8TVuc0UwXiXLEWclETNiI2cGk1M30lZ3AmcJs1YvLzbh4RMxIVMkomVGAiMloFQKMCap4jaIYiVYsFZk0lK1cmQGMmT3M0LNISYMcFZmsRNv0DT2sld1EzMKQmclI1U1LCckEzJBgyaT0DcZsBLNgSYIgFcZI0LAMGVxvzJtUFNs0zUtsFckYFc5YCcvrFcl41SsUmRxXjTsAiVZMmSuUDUWcmd0X0PwoEM1j0T0wDRsEGclQEQoUiS0TibpYUQNMUPDMUMXoUbE4RTGYVd2LTMRkkSvklcRQWNhc2M2QVLXEjSrMFYtPSNRYlQO81SuwlSw.SMwg1JJYFbRMEY4XFY4XkMXsVdyTVRSYEalICcVMTXJETLpcUPRgVYJYEMIslQn4TYG4FbMQCcDsTcBEWbEcjVwUWd5Q2QEY0QqnjbxfkctEWZxPENjsFU54hTTgELzUSZwH2J581SmYDQvkGZwk0U1LST4DyPyYjSlsDbLs1YKQSRREidVYWXk4BcZ0TLqIkVDcWUGU2LtvDYXcjdLI0SUshUCUVL1cFRVQ0PRw1LKUzaxP2P3nkdTs1TvMWQ1QyStAySPMTVlgDbkgkVzkDYqX2R2QmTvEzQNoTRoMlSvE0PmIDcucVPKUyXy4hTVMUMusxLqTTQ4DmMWc0ZBI1b171bPIUc5giXRcCSGE1Mm0jKigkdmgyRRIjZyXkSowDMC4hao8TNx0lM4TTV1UjT2MiVt7FQKkTcQkkMHklKYcUM1L1PtkkKmY1JNMSRyQ1akoWL4gkbQUSRyL0PyTlXv3FUyPTMqPVLzPFbvkzb1LlTKoDUwrDVWY2SgwlL44TVTE0cKYTURYjVqH2QsYiXHUUXJgFYyn2LwkUS1rhM5gzaX0DRhEWRXIkaKciUvPkdzjkMyHyPW0TaLEiXGciSxMDVBISTrkVRvMjY4rjP0M1YJglYqcFaYQDQ1DTZsIDQmA2bWsFYkclc2vjPqHCazoEcpEyMuEWPtjDLBAUbvP1cIMCQiwlQXUVTSkVSFAkZSEzXVcGNvjjUGcTMv.UN2LyLS4TXEwDc1bzP2bCMqjTUHISdiUmM23zJms1R5czJzDjPXckYL8TazwjKHsVMJUSclkzQmgWMU81RG0TY1r1an01SPMTV4YTUqHURiUSdAEiPSAkbVcjbjIiSzYDZ3YUXoQka48jROMTXUc2RFg1ZpcCSBQVXyfmMmE1JIEyT3AUbnEFVMIVZicFbkcVLFkjYlYkXI8lPkQyX4XGbyP2LZcCb1Pkck4DVns1Pnczc2kVcxIGQVAiUMAkT2cVYBIERq7FcAU2MhkmbGM1aSIiTvMEYGIiQH4TdDwzQmkyXqcjX1IWXmUVNqDjRLMEQ2HkKCEiKFAUY0UWSpsTQzYVMAI2aKgDcZAkTlQmajg0XuwVZAMjdiEESVMlM0H2Q3AySPAUZiISXPQCa34DYt8FVFU0Xx.mRNU1LvTTbMokX2wTRtrDTXE0LCMlPxzDRI4hbqIjKwTUZsEVTtYSNVgTN2kGcL8DaKkjQU0jRSMyRKIUPyQ0LyXWTm4RbqXTbkE1URYTRYEjT1rxcznGVSYGLNcCVkkEQoYDTrQUQWgUU2gibrYEYAU1YNElR2AkQ13FRvbURIIDZCI2Ru8DLJg0JQgkMjYlQRkVLkY1ZDEzbv4xJ3L1SoQDVr8lcN8FaBc1YBcUb4nUYSIkQRQULvIGQhASS1f0cEASMqXmbncFYMcyS1bzZxbiQWo0PToDYq4lapEzQNMEVrMFaGcVa0MVSwEGMJgmVPgzSvLiRlY0cNoELmEGSgkURHM0cHUSSHICdYACcuUCRtAyUIYybzgSVSslK1U0PXUVcXcVPP01byUVRzzzZqfyLOITdg4hSTQVcwYlbtUjX28zSqwlcL8DYAQkSEwDZhkkan01RxX1MDIEcJcSN28Vc1bVc0EiSXYlKYo2cnITaQc2bvH1cwYzRkcUUTczRX8DRH4xQtLjZZICMmYWZEEkK4UjXHYjZ3MyXpUFQjYybyo1JJEjZGQDNMAycxT0cBMmSlQmL3Iicq8lQ2XkVOcjP4kjaqQVNKMVZhkmQmE2Uqs1T0jzahIWMXwFZRIVS4QUQok0J5YVVlcDcTYDRsQjQNQiSuEVPGEyYUUSQyXGcwTDR3MyZ50jTHImKGQGV4MWPPQCVzfEb10lbjcSXyYWdAgyJ1sjaroFVgMELkQkXQgFSHQiaEsTMOcjQnY1ZsUySYcycLAEYsQEM1I2RGISPkIyJVk1aXolYxEkZMUWZHcUQHgGMZQkUvIjazsDVXgVSwYkKy.Wcso2ZvDGMzEFQxAiLDQyYjIWa2kDUr4hVosjZxn2c1kTPSUlYZk0QmISRuUiQiAUV0PkKggFMsckbEkUP1nGducTXu8TTyDyUgkVcDYFQFcjPzDDcC8zQIglcGgyLQAUPWA2b4QzPMc1Y2ETZsc2aPs1R3jyavIzSvMSRlQib0blKvTkKx01L0jWc23jLkI2PzXGck4VQGoDQvfmZqDjbjkDUFEjUqYVVYwDY281TFkEYsUmTWwjUz8jVvkVLvTlTrISRFwTXUMmMw.yZ3szTTETYAcUbS8DaEIiMxoVQ3EzQ1gCQEg2b4YlQnISVwI0XsolPUEkbFoFcRIldJsjSFAGNzYiMOUTMwDjVuEkSPciR2sBdYE0XhMDcNIlcAcGL4DUNhwTMY0FM1QyZ4LSRybVcuQ2JvrzQZgEZtD2POEUd5E0JSkzUwPkZNklXFk1Q4.SV4cGSxQEa3QmZygVauMWSP4VYnISVQACMYc1PzfDNvA0Yz3zPI8VQxjGT1zlbpMWLPIiT4jVXwIDSVgycBEyQWQDMwHiYvwlcVMDL4HmZMElMZkiROA0SZciLSQjP4nEZho2XiM2PwgUY0IkTxgVa1IEdtfyRGw1avciPJYGNN8DbM0jSKICTyTlUkcELBUmbhUkLVMSMBwTM4kUMQMjXDMCQJUER1wTdJQzbpI0YGISMrwVM1olZto2JnIVaRcSU5IjRL4laos1S2kESUMzYAA0LOEjPwPVcvTEZukjQnMTMHcCcCUzQybVczMzaZEyaFkVSE8jQFcCczk2U2AkPKgEU20jSpUDbKkyZ4MScZIGSjgkRwHlZZcEVXYlKKkiVtnUNgYDb2XjMzEmbT8Tc2.ELIMDcxvFaG4RM3rRQM0DMvwVRYESLtwzXVcWXVo2PGkkb4bEd1kiYUYmK4zFQyDES0kjVVsFZzfiKzPkRCIDaTQWP3MiSYcTUAYTPIQEVIgSLLYVUxHUaHIWPRQCSoMkaNQDRkkiZpQCUNYGSpMkSL0FMzU1ZhUDSzUCVqYmZwIiVKEVahQmU0Y1XGMlXCEVaDU1SDU1YW4VVZ4jP5EiTxgESWUCUhcSdwgiSzfjQrQCczzFZy7zMyP1Jwwja0XWYyDULJA0JlcjTTM1YyQFZ0okKuYyQyDVTNcybtb1RgYSLqXkSFAmM00TZ1jiKEYkdiomKiIWNsMiatIVQ5EiLjQGUFQCQZciMLoVPuQULxLmPCgyUngUMJo2a2XWbzkDQ3.EYOkTalklLgMCSCQ1LvDSMzkTa3TFVOIjLybyJoMWQrYEVzY1J5cCMpgzbvMGVOImc0nzbx4RSmYWNQMEdKckRioURXIVbvIUXSgyS4jEc1IyamczYlQjKVYia1EGU1fzSzLDYPMGMhcFUigkbJo2XGAEUJ4RNFQ2b2UWT37zJAEjauIGbI0VdgQ2cpkUS00VdwEUXxszJhgWZVMTdJQzPuoDURAkZO4BLF4VQqLEStkjPEwTNQgFc1DGZUA2XPYkPyAUMSkSdXAmQ1rFMtcjUFkmMRkjZ1XjZq.2cvLkLzLTUGYmXisxSvfldQQlY1AGVUczTOAWRQkkQxA0LHElaAY2QtrFaBcjatDGZRkVR4.mc1EzMOoUSyblT2kWREMmTOQSUHoUaswjMO0lRvk1Z3YWchgCN3g2UYkSb4IlTlI0RxIGdg8lV20jMOISRYUEbIMmXvLUV3P0RBYmZF01XjcTNJgmRwwVTU8zMkwVcOQCSq41cIsxP4f1T1Mja2YkLyLGLxImS2wjc1kkSRMDSrEkaHI1LCITU5UlRrYibwQEah0FclQENnQ2cNE0RlMCRqnlcrQGUhAmKscTSCYEbYI2MBkjXQcUbVklLwMjYFgGdjYUUBc2bvvDaxfmTBI2YEQUPMYTMgQiLuECT3nUa1jSdBQVL0fFVOo0QxQGbUUiXDAWQwfjQyX1Q40TdAoWSvQSUTUiPmICZCAWYQ0lQLs1PNg1YOUWMhglYhETP5EGLNU2RhUjcxM2YEcCUhomXVQlQQA0LpIyLoQULk4RMDkSVAYGZPklcVACdpcSTigEdTkSY5okTs4RVrs1Y0MCbF4hPTc2byHUcTkkMtc0Q1fjTRIVMVMURxckbDM1SzE2XgQUMSkCaEMCQzUFZwoDMWkiXgYVVpQzaDklPmUjbTYTVYYTUBUCQrckcr81S0jkSBckXHIyT4bTQOsVTzQVMWMyQGAmTTcjVnMFTyLkav7zTpwzLlkjK4.0LmQkbO4RXMElLB0DbBI1LQkScyHCY1f0M4clViA2boQzXw4DcWkTRPkEYLYWVtwVXwPGaXUVVs8TYsozLysBNFQGNwHjT3UjKlkicPAGbxU1PvYGUocUREICZnQTYBEEd4LlZvH2PAIzLqoUQKkicPITaI4xLYM0az4Vd1jWNnoVbxXzUGQiUvcFSiQkYtTVVAoFSxo2TVczRrMUbAoGSw4TNzIySzPScrQyPRckQRoEZMM0LtPGSlUDMgk0bKUSQ2jWZvIzU0DSQ5IkdxIWTq.kTTwVUyUyZSMUZ4UFU2UyUGkkQLkUN4fTUHgjQqXTZ2XULrEmLQMybtTEUwcjVAsVbBkjSQYibCczLYMGS3MzXxEWbmQ0QBUzZHUERQcmT3nGTqTyLDIicNckcPYlP2EDQJU2TMkkLwUVboQUVswDS3rzZoECLCIWVZsjdXsjMvolK3LyRVYVbhkjKQUyPVMkatjCVCEyXvImYQE2aOQyTOsFLYcjYT0DLnITM4XlQjgmQmcTQMomQ1kUUssTdHgkLwQWRQo2UZkTVtwjTgI2TQMmPnoFczQlQ2MmSHUmSSYlbZcVZPwzcFAWRtnkXVMSXUkWSqXTM4nVdxcEYFQ0JJgGRCImVw7DV3sVdsQDcKM0ROAUaRIScDojcUU1ZhsVMz0DbggzTWQFYtgVVLITbMgUZq7DTGQmTy7jbJ0DMlglKug2bxTWaqsBTXgUNnQmaZ0VYMQyPBkCS2IjZQozZ1oVcHQTYPIjcwclcVYVYrIVMLU1LwomVjokcYUFZwTTUZciTyXmckkFVZg1LLEzchQ2PEMiP1UTPzXWQxPEZHYkXvEFRNgFNXAiQvs1REIjLvICSBg1TBQmSPc0bzjyRVszX3PlcwrlTEkjb5g1JxMzRFgGLlQUbzjUMwXmXLAyJAkUa3fzSFMmQ5EDL4PkYYwFT1gGRvM2JBYkKgYVNRYCSgYjQ5AkQy8jKqHDRMUmVCg1QMkmcuAmSOUDT2bSSwLjZxjVRXMCUg0FbJQlQ54zL3HDczbSXRgCVYgmXUU2Y3rVbvfjakYybtAyTNUiVEshVVomb38FdwHlXE0zYIIDajMyP2Hid4YGNrEjbuECVLwDdZIVV2HyM4bDdRsDMoUGaNMCZjY2bkgGd1jCcHM1UmYDL34FZ33jM2k0PycSQ1LWTTwlKHU2Mw7jT0cGdyPmLGgDVu01ayfib3UiXLImKQQWNwDEUm8DTXIkcoEUPF4RYlU0SRoUSuYUZlMFcXYTRjQTaWsTZqrVLN4zLnAUZucUSBkCbSoVck81Zp4FdIk2R54RNCwDYQg0QjAEUQg2UvcjYUszbiw1PM0lS0fCdGECUhMiQ10lL0w1RPkEQRoVYskFNoIlcq7Fd3XzJGUybyIzTPIkY1nmRhIkdngCUmY0JLsxSZUVNQc2L10DLqrFQEcEMUQUL4HjYjUENSo2cvYEdYgmdKQiMqbmct.iM27lRioUcU0VQMYybBEmLiM1SZsBQTcFNCUmLy4TR0YzLHUmPlcVTXESPV8FMmo0avk0RLgDV0vFQikVTQ4DYoIEYJAUXJ4zR5QzRHQlVyMVbyckZvY0c5YDQyMTLrcFVvT0bKUGLmcSaLwTUDYmZqfEbk81TvjlcCYVdZwFLAM0ZtESRpQSZVQUbYgmLA4TYNoGLyE2PS8zPSQlRucDSKk0TqMTN4czYMUETJ4hLRI2QqY0T1UCYEA0MhImPOE1LhcmdtTjSlETNJ8zUGgGUgIDcg0FST4TSOglXygkKtLlVGYUcU0TLZ8VZqQGMBImSUkDcZYmaqICUgUiZ1fEVockSjE1PgUmPUEycVkkZGgSPp4TcwwjR1.CcMElbAY1ZFoWQWcVUyMVQKwzQD4TXhAmaxozSPEiY3X1QrMmLDMlRWElX33BU4YFT5cFNzE2SMcybgsjRDEjTKgzTw7za5sxb2IiZrcEQikUU2T1LCcSVz.SaWw1ZE8VL5MiLVE2XGEiPXUyTKMEQqDlam4jRkcSdkIVaD0VPSMEVlIlYiwjLMUCZqHGUlUWUxLWL2DUNwjybrslQCojcqHyM5cVMAkWMicjcPg0a3bmMEIyXtMmTvYkQrA0Q1DDdqX0aLgidwczPFoWPLszL1EiZtj0c40VXRYFTF0lLzoWQF01RYESR0MyMGYTYTIVdDUFRwL1cBolUTAkSwISYEAyQkcUbIolXwHVSHYzXDQUbko2UZgGZYkiZYICZzDDRjkSYwETZKMyaTEiTwcCLVg1RrEyZrgjTJo0YBgmQt7jQRklanMGS3D0JzEFbH8TUtXzUnM1YhIFcSczLrYTUOklaKYkZ4DmZYUiPvczMhIjQRMUVNYEZvbDNgUSbtsDN1fVUxIkUXAyTls1TDg0MEkUb0QDSTMTMqbWYZMTRxIkQ08lP4PjQgI2TmUFLqTlLlIiSrAEdqP1MzLlSwbSSj8lP4wDZsQTXjIidDkFd5wTc3XSUoMlXZYVNx3BZ1XzZp4VaREzTx3zb2AGU2QDdzLzSvkUNYkiRzQ2YAMidnEzYLIFMPcldFo2ThQzP0I0UpsTaqQSbjo0UUMVbMMibrMmXDcWQyEGTwETM4nGdhQzQXQmXDojP4bUXmkCRu8VYqDzQo8FRz4BS0UDUYQETlUGZ4sTL1nEZ4AUMwIGbH4zUxzlcZozZwDFbyMmV4cFNTUSQEk2Y4UVTyDjaisTczDjbqEURKIma0YiQrImdy3RMFclc4XDboICQAYSPCojTPM0Jz31bS0TdEYiVjMTZBETRJwjYhE0MvolamMiaqcEaB41MCQSawkySW4hLS0TQhAWPocSRZ0Tdg4Rd2g2XkYTPjoFMsUlMYgEZ1kCahgSamcWVokyTqrDaMsxUTokS1ImYvUiLnEzRYQCUKI0LDsxZUkDLZoWdjcVPF0TZgAUQqf2RhQkQr4zYVASMSYELKETXJMSaO4BN4k1P3bTYQgiL2IGZpgUMykDVz3hKhoESZsxUZgzPig2JuQENZglbIgWN1bVUsc0atkSdoYSYM0lc4bUMMICVzA2ZkUlc2jDMJQTdCU1J4T0L4gyPUYUZ27TLvX2Mwo1Tyg2LgUTT1nGSOgTSwXmYGg1T1AmRNoTXyTlRWwFTYIETQ0zUEQzLIQCcJQVUHI2MOUiPmkUUnU2Zk8VX5ElPCEiSEMzJSEmRLEjThIFNms1JPAmQpsFLK4TQyMSS0QGSEg1MznUaZgkPzfzSA41JZ8TQUAGMQQUMtIUS58lY1U1SFIENMgic43VQ4vVPykWdowTMNISaWcUY3DiSEoDazPWZAQVNzjzRZY0UwjSX5cGNQw1aFYUM1kzLgQ0UZMDMq8zUhcyPwUkKocCN2HVdscibqk2XnMVaPMiSgo0Mtn1ciAUaWEyRqASMCUGVBc2T1MEaDw1SqX0POACTQIEbw.yR1PiVoMjTx0DMm4lZD4BQtLkQxU1LN8zQygGdso1PBgESyAyZyDlP3k0YqsBdYEyUCoFLV81R0EGQrIFLm4BZiYUTBQjQDMDZoYTL4gCNwUkSz8FTXYibZ8TNVIiTR4lPlgmQqvjTmgEdCoVVBkTcTYDVVYCUWEyStDmYYYFS10TMqQlMww1ajg2UEEVXvkkMPACa0cUMxomRoYzZ1oDRsMUT3P2Z0I1MVIjT0YGdxk1MsAEcuslRtgFapozbYACbXYkZGgFThAiUC4hMBkFMQIVZBYGR0XTbu8ja0I2ZnISa3LzQuUURAcERn4TNYElLHUEZ33ha3rzRyTyRAIjXTk2bJMUTqjSTyHWZxXWUpE0UxYmbk8jXHs1YqoEagkTSHQ0SvkVRzzVbS0zTqIjZVQlbOgjRwL2c1fTM1XVUMkFdQkkT1QWPqDyPScUcsMFTKQjPJQzM2wDLRMGUwPEZBkUQZEiciACTv4lYyTyJi0Vc2M0bjI1c2klPGojVg4lYNwTSwjlKvkTUvbzTpQWUxz1R0n2TCokVBASUpg2RQUUazHCZWITUgMDSHIjbSUGQTIWTZgjQGQFbBQkT2XEUvklKBMVPqH1MZEDSqclLOITaG81YzsFLiQ1Uv8lUyDUXPYiRtYVcGwVb3jURwXicSA2a5IUaHUlVOUjSyQUZKASVpwTYykGc5w1SVg0QkckT3vlYNckPXcmaXYWUEgWRPgCM1XDYwbCQDEza1cyQO8FZ2QWarg1Y0YCdwojPlw1ZVYlRUkkXpE0XxDmY0YiXxXUStX1MLU1bRI0QB8jdAECYgYTUrYjQKEEaYQiYqwDbZMyRtkDUy4lcYoTQmUCNXcDYxbWaqfmX38FUvfiKjYDSNo0b4jkS3kGZqTCcyb2TKw1XWAUNXo0c47ld1.2SjIGN1r1YtTmSzjmRKgDT1IkcvHzaO4DcxbUbB4xSrYFaE4jVHAmRs4jTEwVV2gVdKUiRgojYWMCdnQiSTEjcGo1PIUzToMSPBokaNU2Z1oVNzUkMMcUcwHkYBIzLznkbXYzPgASYCQGM3I1Q1MVSlgCUH8VLP4BRCQ2XlMVT4YjMyzlVFMidnozYio2MvX0MBcDcHYTQwglMqX0XEUTYycCRyYVZIYiV2fDQSk2cEcVQpQibqczMComP1IFb3DGYlM2bNY0JtPDbDkiduMVU5o1XCkEclI0ZnwjZ3w1auEWPiQjcyMScQg0Yocma4sFNPIkUFgmUAcFRxQjLxIkROoUZjQCUXgTUv0Fd0LjQRk1YAkGMvMlMqXScHcUYzshSQgjV4LlRuQkLlwDN40VUx.SXogFR2MGZZITRwojb4ozY3XVatgDVQcSL0HDNAEEVQo1ZDomarsjQxXSQzcFLYcTSJEDTxr1XVsjZ4gzRBU0JtIVVTEENFcSXKkUT1slaokyZMo1YYo2UyclZFUlT5EkV2fmcQAybGglPpQFL0LkVSYzUmESLYElZzISRIUFdzHGU0fTcNMGUkUCLiQVTJYiQPUVanMWSyMTNo4FaZU1QJ81bwQlZXg2cwHzaXEFTwflLUAGdREEZ3YmczA2ZRUGQM8zLsolagkTX3Q2X5Y0MqwVYHESRmEmQwAGSvEFLlI0aw7TPisTckcTU4rDVic1LRclTs4VbTQ1P4EyQNsFcCEjKFklMng1bSA2b4.SPmMiLYEmLx81Msk2Z3EkQw7TUOkFSL4hLSs1MFsRMk4TNMUVLCo0YSY1cJgiXOAkSvIWSwUEQr4BQSc1Ziw1MU4TSRolS2wTQw.EYsckYHkGQvnFa1kjZSgkSpkSMsUmaN8DNxEFUgYDLvvlSxnETqH0QtjmazbUSMQmVF8zQTMDUE4VcVg1QGgDYps1RM4jZGwDaWQSaDs1RjoVcpQVcrYzPy4FLsgUPKolKzTCc1EWcCcGZkYTdpMCQ34BLh4Fa13xJqcDNQIWURc0cqQ0RQkzLZklYtPjUi4lPpUkcUgiLjslXOACTtDkYxEUSq3FZO0FU1f1cIsBR4j0LlAGNq4FSEIDRMY1JqnVS27VNkQjU3AkY5okUYoFbrICNXs1QKoDdOkicpUlYK4jaXUTMVMlbBQUN2YCMTMVVpomVJUFRVgGVSIzXQckYQ4zaPMWd5EjXsIlcmkWV0TFbycEdDszT3D2XZ4jMuUGUsQyRWE2MDEzZ4DVMLU0R5MTQBcVUzLzPsE2UHUDV2g0ZZcDbMYWTzP1bzAScxLWN4E0YzYTbyP2U2HySUs1JHYTQwEiZzYzUzjFRO4zJQg2SsMVY1TWNHEicikyMJIiZHEUR4o2asM0MyLWLz7jdmQDMTcDZzglPEoFdigSZlUCRCg2SKIFY4AybqkVM1UmaVQzRJsDZEkzaIIiduUDTsgjZtIDRIozavslRqc1bR8lLvnFNvMmK1cVXXkUQVM1LmsVbQgFdIcUbDsRcqDGUSsVTNkUTVImcxfEU5YUTCkGVyAiVy7jdI0FNPslQzHSZ2PFUxTCZSciM3wzUgA2cVcjPycVSTY1QigTYGgmczk1PNAERWAGZi8zSHIGSpkDSDIGaqHVT08VQLMSVQEzakA0MEcUcxsTV18zSyvDMrA2MYglL5UVZmkzc0TFQ4XiZMo0UkUzYGg2bJgUU0UUbqUmS4TiZw.2St.iRPAGbHQ2LyXDMXo2UMszaNU0XGoGStUiZucCVv8VUwLWX4LiLL4FN1MFRvDTUtA2L3QWL28lQk41bxXCdMoFUkkWaC4zQ0kTVi4BQHEkUoIkPrUFU0bkLtDERYcVQqL0cXEGQybyPlYiSSUDdqL0X4MlZvHmVqz1c5c1ZMMDThAGLMkiUSYyaLcyZXkGMKI0UqEScoYmbxXUNxYSaAAmRxHzPWUDLw3jLzHCR5kjavMVMZk0YQolKXgVT44zXss1TiUSRQkickMCV1cVaUsRSMEiUMciS5IiSFUUPG8TaI8ld5YWZWUkVwgUTqcjKxICLQImcNkUcPACN07jdFQERxDmPQ8TSKojZqQDcYYSPWESY2bmXqkSNuQlQpMla2b1ZZwjck4DbUQjVzoWR4DCU1H1LvolK1XzJjYTPZ0zX3LCZhkldw3DQNoWcCQ0SicFNuciTNEWdxTGSPcFZtYkVLkCcPYVcv7DT5QidrMkU0jWdyIlQHUES3M1ZoYDUHMlQUkzLBUUZJMiPCwVPtHTb2YGZ3Q1Qos1QHIWTjMCT38TdJ0laoMSVZkDVxMiUGAkQtzzSvw1TvMmXVgDQ4IEZgwFdBgGQ1sBUuISRQ4VVZcyUwAUVCc1QtvVNFQSMyfkP3vTdzslc3ISUzTkdloVLhIDMFo0bVkUXzomToMUc2XjMJYWNHEWNybGZjQEZSAEVIQTRMEiVvEjYr0VP4vjQ1gyMnczYqXGc5EGTiQmdEYFMiMjZJY1QAkiPo0jXyg1brUWN43BavUycCMCN301Pgkzb0PkK5UCd4M2c2LCQrEyJBkWanEGR43TXUcVcAY2aNMmax31Xv41Z0MDbTklVkk1XmgCd0PVcLIyM1QVMzEiKWgCUnUiS4AUYgg0al0jSioTYYQlYzQkXYsldqDDTwHETLMFZGkEV2gzQ20lVIcyYCoTM2YTLyjCd3j2MNITPpkUQEEDZqPFUnszUI0zJicTXM8VRhwVR2HEdushKYUWc0oGR5sTbTYWT4Dib0.0Y5YSQiY0a3gFV3QyUkASPLoGUJo0M1bjRLgTT3LWRXQFYJk0XWshcZIUR5YGayHlRRkFLj8TU0gCdUIVbjgWZIY2bjcEd3MyLWYybi8zM2MSbZMjPuk1J4QjL3jCMHgUSHgSNqLyczbmXQYGTOYVap0la0c2UgQTSsETPNQUTyQkPZE2QloTNCQSNzfkXhsVMtE2Ur4FTL8jXQ8FSN0VZ1Y0M4rhbOkVMIQDbW4TSDYlT4IyRJw1ZK4Dax7FLHUlVv.GZqjES4TSd5sDdUEyarMUN4T2LqUFQDIDRxElQroEbOoWLnojbw4BRkYCL0sDUM0lXyLmUr8Tdg4zTL4DdPQVUiEVaoEmdJc1cxLDaikTczDmc0blYD8TPoEkRQ8lMm0laI0jLwMGZp4RQgwDRWUkZ1bWa0PkdIAGTJ4zJDgmZE4VYwzDVZgSZGwFY0MmMGEUXwHSZBwTTq4TP1sjL4rTY0cGUNkyXtPTLN4Bdu41JxHCLpMVUIEkLI8DS1TkbLg0XkAEcnAmTGUCV1kSbQgkT0ASQ1IFNwYiY0IyTn4RRNIzbj81Mtk0XsUVdpkjPtAWLVM2TOg1MtvTSBgldlICTJojUpEzZkkENTQmdiE0bYIDVSEUZvLiTvQzcyXjdnESS4PVMvAWcFcmS2UGSyXmMqX2P40VdsMVaYITVjMiS0TkaWMyXY8zc2jlcxYGdF8FTyYkYtQUV2.WM4vjVuEUNYclcBkVZHgUa3HTVTIWVL0lLwMUXYQldDElKp0DUjEja1E2XEkybyYzSW0VMDgicEwzaXEkTqE2XsgFZvglRQYlKskmPNMGU1okU4XibXQiYH8jTyLWQygWbGcmStombFUWRiIkYuU0bYclPDoTNHszc0P1JHYiKxDkduMzQZgmRhkld4PzUKgESQ4VL3TUUjg0QJMiLuczaAo2YtnlXhsRMTg2MVgiK0jSahUiVzPzb4.UVxQCZTcESUcEU0blQHwjXsUlcvb0c4LiXQMWatMycso2MPQ1PtPDaMoURrUmVmUjLTcCSQUyTN4RUybyctUTSq7FNZUjMjUFMFcVTRcDZCo0STAmcNESRqUGVu41Ygo2ZtTCbQc0ZJQFRKU0RrI1Z2XGZmACTHgUd3wzUqLkX1LCV2HiSxEic4o0anYlclAiVwgjXlMyRlsjLicVY1XlRnAmdnIka2IFbNYiKFkyZO4RRLwTPzYCTx3RSWY1aHkjaSkDbl8TVg4BQ3nVSsE2aOc2MtjFcho1avIVRBkUT3LWY1QTb1YSVzwFVxP2cu41RioGd2gSNvblRqAkbPUTTxECQyIVN18jKPkGTjolQEc0ZDkTcF0TbvEFVNkUNw81U2HTdNEiaHk0apoVYP8TMMUDUOIESxjWSwcyLRkid3Hia3byTwfkRRAiYzzzUMMVVy0FdBIWcO0DVPshaOgEMJAyXHgkXUElS4UGMFUDMXcjayQ0b4EFQZIiZxIUNWsTdyXUTWojS0XiQB0lVtc2XKQ0XHUmZwbmXmMmY0MmaiEkX4PkVzfmRybGQk4hLAAWPuYDSzHlUqIlUIYCZ4.2S3.SPnU1bHsVdJw1Xtw1Y2r1L4clRtXFR2DkSPkEcwLkP0QiVloUXmE1Xvc1LFU1b23lSlMVbzMGMlM2QyXVZsMSL4g0S5Mzb3IzLGETUvT2YwXzR1fDb3UyJIMicLYWMz3hLZ8jPC4jKyXzR3HFcvLlTJcjZREjc4ozc0Yybk8TcgE2P2XTL2P1czUFLiQVTsoUaHUlSCsVMIsFaBsxP3LlYIsRP4UDcBozQmMmdkICN2HFbyYmPlsxLKQWMvjEQqcUNMw1T0wDdB4lLvE2ZEASXOgUdsEGb3AWRGMWMgg2YioFUYg1U2b0XyoWUY0TTR4BQykkYvIUd1MzLSUFRCIWLGYjdTImQSAEarY1SPIicnMGQuMmdgISZOsRbDkFQpImPwEFdzQCRzQGNpQTcN8lK4ozP2LkbQgjUQ8FQUoUURkSbyPkUKQkT1rxU4n2T5gTQvrhckYlUlY2J2I1aYAiRRMmcCc0c37TMigDb4D1Sz3lRqEWcMEURHEldq3zYRAEb5EmPqDSVPgiXOMCRvbkd3wlQxYmRvgVatDWavE2btASaW8zZtnmYx7lYjM0Z5ACaJcEZ0A2U4.EYkclSqICVt.kQtDyJUc0awEld4vlMQgWZ5EGdQcGa5wFMKU1R1U1a3sVNJEiT5UzMNEjbxTkKKUmduAkUz0zSMwTNCIyRGYFRWgTUBUjUukUVy7DUyEjLFESZwTjTsI2SVU1PyPCT3fVPkQSX1kWQzDEYWIVdXsxXzDzZKQWNE8jQhgjVUMmTlsBUJckU5shTncmLvImQvvjVTcCU3nGLBIzQ3L0MnYlS4gjdBYmQ3QjTmwVMH8jR1gGcvTDL5UVUwEEMM4Bcz7VX4PGTyHzMz3xYoc1cxAUMWwVTFICb2c1JgM0aOclUzrTYUsVUIEDcqblb00VYwoVPBcUYoU1R2wFN4sDaLISTSMkM4sjMM4xUvfDa0kjcEk2YzYSY5glbgo0R3fUcxImQ1DUU3rTX4TlMqIFUqsxTuImRAgVPxbGZlc2Xh4hVRE0QO01aNUFTrYjR4QjTXkDZH4TLMUkT4EkL5kCTJEkQ37TPYAkLNYzUlEiTtzjQzIDbWQTQEASRtQmb4EiKq0zTzDkKAMCNCkGYFQGczYDVrgGdUIyUK8Dbrk0PM4DQIgCNUkzSYkGdugEaX4RdjszMFUkT4YjMTACQVciVi8FdSg2Z2gEYpcFMIgUbpETQxLWN3DDUAk0aqD2JQgzJ0sRSuAWMCshVIEjTZIWRDcFdVEjXMU2QV0TXpc1QtbDcQcUT4fSMDMzbnESX2cEZjQ1JAI0M0fCYqHla4EFc4MkUEIEYuMiZQcGZtokYRsBTGczPtnFUuojdoQlT1IzXoIjay4TPw4VUvc1XIUSNoA2SzUkXtw1XmMVSt8DRZESPXQjKrkWamcUMpUzY4nFVrYDMLYDLp0TZNgTbzgjTqkjcysVZ2sBbRYFZZY1LJkDTvDWbUk1QO4FctHiLqXyLZQFMUwjURQDNKUjSSQSdlYzZ1ETR4DmSYk0PkwVVQMSV4o0aBslXDM0YzXWYREUVKoWcGEjZqLUbhIENRgkXo4VX4jFUBQiTVEFSIMUTDIDQ3b1QkECRxczcMMzMyvjPWklcZsjPtcWbgQ2RFoFaMkES1zVYqMES3jjMZIyR581JzoWUwHFbVUiMUoTM1n1LtfycsEzbGUmXQ4TQx71JZEiXZIFdlsTPKoGSqrFYXYCM2PmK3ckRDYiUt3Va1bmPx3xSVM1a27jKygSZPQ1RLAyYnkScx4Dbv7TdvcVdmk1PCgWdL8lP3XzPT41UjEWU4rDMSsjLAwlX1ETMIYzP0HWYJYWXGAmL3Hmcl4Bb2E0bv3jTjIyXHkiZDsjdlsFMCQiaFo2LCkULSYiVQ4TUjMkdCcFQyclXqzzLFMFRDwTV3oGVIUjLNYkLmISQ1Didxn0PY4BN0MUNqzjZpI0a1bUS0njRrsTQ5IVRzUjVq8jYgk2SLQjZAASM4nURwLDVncjT0ImQxPWQXYCLQklT5USZXgjYKUkKLM1ZOYlL2LFLpYSTWEzaKc1SwTkTOIEZ0bGc1jCRTUkLKUTR08VY3cjS4HDcAcCQUQEaBgUSxjmVhU1SAMTSLMCajUGbEo0ZBgkL4rFZLwFYggUYkgicF8VURkGUyrDTwQUXvIVZzUTMHIzTxUlPxf1aqTlPrUUMEkURyYkaoMlK3ECNqfzTI8jXxjFSvoGbx3hYuQUdQgGQ18jPvjyUxIlVqczZrMEbv.kShYiXGQ2TZkTYxEiPSMjKmoVPyM0ZYo2bgQ2ThMEMtbUSKUkM2EEdvn2ROY1ZvfjKmA2RrACRRMTbtfCdCcTLtASdOUENnsBZsUDaNQTSMAEankjL3fEYwk2SZQTLqLzSvYEV3ckdu8lUh41ZKwjM4H0b141PkcVL1ESdxkmRZcyLzrzbyLWdQgGQIUmTxzTVqUTMBsDY2MTTFwVVn8VS1fEbzMlXjcVRtMDdT0FZK4xagkUZXIWVkc0a5USPzvjTYYTT1U1SOslQooVMp0zLkEWXUkGbHY1JiUiZBIFYYgSXOITRoUkZ3IzMwAmZME2S3ITTkY2PI0DS3bGd4gkSNgDLt.EdykySXokQMYWagczMj4xSgImcScURlUCLtclcxLzRzP2J1QjbAIVcz7lMyDTQH4RUTAER4YmaKYEdPcCV3bFVpEDaW8Td3DiaBMENFc2UugSa4bGV2b1SgsxRiwlbVoVctHUXRcGcioUZjMlYngzLNQUbD8DTkoFMKUDbqXEbRQlb3MzcyA2S2Q0YPYTNlEVTEMzRtImVTQVQooTR4rFYHkjKMIENBwVbFMFNsklRG4TY4PCZ2PkSzY0cV0zUIY0ZqwDc4b1TLYkT0UiXOMFZMsVYgUjPScVR3LyMTEUTCECLLYDQFElbo0DVwPlXlAENWQ0RlQVTQMTNz8DZnoVNggyYHkkR1nVLXQVd1YlUtQmUkQzciA2UIwVdkAkZO8jd3HDT2YkcBc0Y4MTd1.Gcw.kRZE1Rwj2aiETbhcybXQyYvDWcyMicXojV2ITL50jLKcjMZEFLkMCdHITTqHzbmImRW0lcRIUTvbkVvI0TuEVLNMjRpkDT1kELDUkXzjkSkEUc2.GMMo0PVYWYgYicAQkPVoEU2LGQiEWPzTVLgolZIICM581cOoWc3HVUrIVPzAmZ2sFTsgWXkQSc3klaZUSXGIGLD4jL2ImPFYlcqIjYDc0SqbyTCcWVNojLqnDbGQmZiQFMHoDM1nVNlojLLgFRx71LQ0VctbTUQUDb2UiLoQWbyEFaPsTYy3BYq3zMj0TZDk1SMo1LtfWXgklMrQ0cUkFUAImXXYUSMk0SMgEVD4hczLzYqA0LxgGYDElQ1LiYvkUYDkVXrYkLicCM2QyRzjmX2rjRZgmVnoTUXIVNJgUP2nkLrsBYR0lbZkiMkkEROMSRWgVTjISMwXmMz0VXhojUIgzJCsjMxnUQ0LFSxPjPkYTaDsVMNgjRWUSSTkDTWIkQZMWPkUkb4Q2Yt7FRnM1aVIETnwVXSYkUMgDYCkTNoomYTMSPBkiRznWTkMGRPQUXkkjMAcUdSsTPMQWNzLyMsgmQtIDQv0lai8jX5gTZCkjRogyYK0zTHIFMpMzTTUjUuQ2LAwDc3nmaKgSc1LVTyrBdUg0bl4VTBIDdGEyaAgDcxYkKPQlM4w1aTAkZ4czTKAGYQUzY14RZosFaFAWSOgWd1TVPBIzTlkWRyc1RhQTUHUWTwPWZAIFdUcSZXgjdpEET0czJ1ACb0DFcUEzSqXmSOg1P1L1a4XiZhE2cBYFVG4lUi8jVyjjMMkjcqcTU03BZqDiXZkyb2jFbOgCcsckau4BZ3HTYhwVTw3BR1TlY3PibD4hRAIDNBkUP3MCb47TLwHSctcEaHMGYXcGVQczMpMGcZ0lKLwlZ0oDNxETVXUiKFkFN1oTbpwDSRoURjYGMhUVQ08zcsIDZMszbWIDSyX2bz3DUrUGZvLVcDgmTukSNtjFapQUPPszPmgWS4Y2TsokS0DSL2zFZS0zRKIkSxDyT4YlPNYWc5gkMloWNoAmLvIFNtQkcF8lM2bVSxLUYvjGMtDDd2AUZWIGUHQkVmUWZy7jXxU2ZV8jR5cUL2HiRpcyQOoDVyYySt.mVpMEcynGQEwjMYkVQzQTdr4jPvsBb4LGZi81J3r1MisBYoclLTQFLVMGZEEmPwkWLHYCTyDTdZYCdtXCYFImXmQDc3giL2X0TXoGdy.GRXo0aYYSQmU0SkEVVOMzSNESYxbmasEEdTMzY13TaJYEZmUWNxYWStIGR5UGYvzTPqPGUvn2bX4jViMkVvMCTBEjd4U2JyLELwv1PyMUTrMjTqPDdFkzLlACU4EiRq8zcZMCaHEzcyDicNw1UygSaqsRTx01aTYjZkUkSEYTbtEGM37ldM0ld1EmRqMCdy0DVnolPuYySGAmSCICdSw1bzc2ZNEWd3nlaYckTpozZjgmbqLELoAEV1nVLi4RXDslbzLDcxnmKwkUc37TN08lbKEScBkyJt.2RGEVU0XUatjjSqvDLt3FLo4lc0UWcnMibjsTMwclMYkTdFUCNToUb0TCctTCQQgDNNU0cpQ0RGgEb4s1SLg1LqcTLtTyMlojaSgUYvPFcH81b0TGZNAkLOMySpk1QgASVVI2JKYCQCMDMrYEb3M0QIUCYQsjVhIyQKcTcYgjKJYEUJckXvrRdJslUtvla4fmTZETcBEFR1H0ciUmKHc2X1cVSXkCaComZzXWSIQVPQgUdyTiVOQVYkETN3P0LvDTPigSayjGUXwVY0c0MDcyaXgkUiAmRDAiavLDZJYjRUk1ZTMmTwsjdZk0S1oTNIkVRKsRbOYTRi4lbgYERKwlagcjL4o2T2PULUUjVJ8FRkICUOAGUyXUZKcWMogWTvUET50TVCo0ZP4lbtjUP4DSNPcTPJg2YpcScyDFUsUCRxLCTyczciQFbHUidC8lYJYlMYkkVmIGV4kUX1Q1RwHVQVEFYTUzJgcUctQiYtElSlcCUggEM1EFNAEiMD4hKRwzaOAmVtgiTEIlVF0lXtojSJYSNq4Fb4kVM2PDU4o0UzfTTWkjUzTkSYMWQK01bNgVTMoUL1gib3UDQ3HCal4zXTgSVGUTRwLjUoczbyMFNQcjaqwjMIoEQZgFcVAEVr0VVOsBdCQiPWgSdmMTLEAGaWsxcO8zbwD0a3MzJtjCVxnkbQMWRpECUznGRvcjaso2Ulg1PqLzbnQWUNMkbwkkQ1LVXXUyTtTGVWI0ZBoTQ4QDLIcVT1I1QXc2YgEmUm4TSPYTVxomRPYTLzMVMuEEM5IyMZYkbhkkRkkGQAkFauIFcCsDUqkVdTcWSxUSP0vFVYQWZRgiYz.EZWokdVcmMlMzRo0lSPojaMElTH01YTAUbTEiKoIyMzUWMR0VT2HUV1oFM2f0MIQWamY0Uhc2QskyXLgEYwI1YocCRGU2Zrgld1fGar0FRq4BSro0QzLDUk0VbCMjbWkVP3.SaiETUYQyZtXWUpYzZSMzUYMFSQYyJw0zX0LiLLcmL0wFbME1Q1YERooTbrgTPwQkTzEkS3kDbBoDcyLkV4biatPCcjwjTRsxMPECMiYldrg1U4o0LQ4zSGIkVT0DdtoVU3ACMiQlTKYCUIQlVssBLhAiXNYDbloGTHECLooVSybTU04TZIYjLtQkcXcybQEGM2YlZTUjLDIlbtA0YQkFbQIiKFASYSEmZpQSZ2I0PqjjargmU2XTPjQEZR4BbM8lMYImTT8VRicUcCAENRImRzPUcEUUcrkjT1rBN03BYogWa4fzTxjCTBcmUw8jLBcjSjMWY5clbwQmX2vFVwYFUzXSaYsTLwIFZlMlcvb1YsIVL4LiRRAWNh4zQJo2ZPUTQqUjb2rVVOkSVwvzRwMWdqoEaikFLwTTP1E1MuYycyjDatXkXoY0PAgSXO8lUwg1TQcCc3MFcWUlV2LVNQAkX23TcTYFaNEkM4TSNl4VUL4jKFQlcy4jQ4TWNEEiUZkkZ4zFdsUkMQMCUu4zbRUySjsTTHElUrQCQwg2J3b2PqcTd3UUYXISYxHGU5AyYIkzZ30VcLc1XtXSLiEVSi01alkUZCcWRYUla501UUoUYtfSNy3Vd2wVP4gSSLIjKNgzZXA2YmUGNwTjTWEGT4HGNL0DZMwTZOYUU4jSVvQjK101aoEUZIYSSzXka2oEN2QVT2PEQpACQygUbNgWQ0TyTvPEdOUzaPYEMoo0bjklYRojdL0TY1XETrEEd5ombO4lQGMSQkslUqkjX4njdy4FVDwDRqrlbCY0UhsFYPYVcSwzLXcybDUyQyUkYxo2SEITdtDFN5AURKYDamcUQPAmP2cjZ0IiQWIDZmkTRQwDb4PEYMYULVIyStnFb13DVE4RUPU1RkIkTP4TbSMSMyr1aHEUTqQEUDgEZTshbGgScxgjbLgUP271Y1XVVMwFTZMGUAcTb5kmPOMSazYSQvTWblEWLFEkViEjbyYyZgAGSDUjSHISUiUEZoMmYxjDRAAkZW8zbDQVN0Y2PwgyL3QDYg4VSjEUQ2HDUwMmMyE2clACa0PFawbjR1wDRHsTR1Q0UQkTViETZFolRhcDRPQjM0I1X2zTTG4DbrkFcVcFZzb2Z2gDLpQkclQVbKMEMWU1XUkFdMgkbDkSQnMDTXYyR3DyMCg0TOsVM3cGVw.GVFEVXwTGd4DVV0jyUukyJMMEYGcVUn8TVOMkP1PmKRszaxLlPZYTMzMGZ0vzP2rxX5gmMLcmU0fjXJUTaVAiS1TFd2QEVCQUZ3bmTR8jY2ACRSU0MrQlUiIjTGU0PzEUdm0DazH2TqfzT0MiV3shVmo0btAERuw1Xvj1SsMkaOsFcEMmMv3xYSYjYVIzYzIWcmQib2c1PBYDSio1LBkGSxIVPlQkUDI2Y2klQksTLCcTSiojZjgkVxbyUgEVQt3BZzbEdksjXZsRSxPlY0vDLKEFcxD1a0bGUKYUThUEbqMCZpI1JywzM4QFbDQUUxHiMCcSVzbiVOc2b1zVatUFa1QzbmQCYyYEcK4BTIImRGkGZIgmZUAEUzkyTzT0U5oDcCYmV1EUUIc1STojbDo0b4IjULUUZXYTSzcEUxUDb1UCSgkDTgUGTyfUdXgSbgsDZ4b0MmIzRVQVPKg0JYwTYvbSTkIELYk2P1c0PyASarQGNtHiai8VT5U0bQgDZBACYksRbvomXrQ1PTImaTgjbQgkPyH2LPUVXAg0bqfCYusDayUWQiACa38TNyI2MwLCTyU0RSshcqg2TPoVUqgyYxoURlg0Rp0za1TELvH1U5QlUPEVNvUybXYFVl4BTRIWLw3VaGgCMCQ0XAkyZVQTLxHzQkQjRhgjX4.mYjETdrsTdggiS14VTRUFSVQiarAyctLDYynmPybWaSIzYvsFNOISSzsTcE0VZso0SMkTZ1zFcKQ0Q13RXp0zRtnVS3jySOI0Uj0lKIw1cLQCTvsDR5kiKjQWQJQ1clIkdIcicKAUc1kUbCQTR2XELtfjSrEzXRQGNSQja5czJ4giduQ1QWYkRrcEdKUiQv.SStYVLioWVg8FSIcGSwDUbzUmR4EkYtDGNr0TQLYjUtAmTnMzYEMTUHYEZSQSUPcDRTwFYSo1JwsRbJkyLFQUThkFZwvlSHgjMhcidIcEblkFSPQlatDWMCElQyXka2YWRR01bHk2ZLMzZtgGMPwDSJEkSyflSHQybwn0QkAUVZECNvfCVGc0cZIUYvUkYlMEbvbSQV8FNjoGct8FdjshStDkMw0VVZYzJkY1TnwDcXYiSzM2Zx3xP3c0LiMUUAASMxMyJybiZ3HzJmIzJ1DCU1LDQtYjStHjKAM0JFACVpU2TyIkVXYiKrMFN2c0X4cWZ3PST4UGaJITbkcGT1j2a0U1Tt31Q4A2TNMlMjkkbHcVMZUyPyQEMHQDajQDSH0laOsBSNAyJVMTTGgWS1jVPVESdvE0aJoDSsIULFQzZiYjQ3bmUtfyPOI1Ql0TTuQWP38jMPImTQgENNcSaOUFUFkFUTUldwY2JynDVSgSVm8TZskSM2TzU2LiX4D2UyHUQjwTPFUEaQIjU1LUU0UCduQ0bUAEaqbDTEsDdrAWLYQ1YrACMnwDLAMGQ1Dya4n0SEUkYnYzL2k2S0IFTSMkSxfkXlI0Lg4hTuk2QOgGNTYiPkESQD8lMmAEdCkmXDkSN2E1TqY1TqTlQuQVLNM0MoImUigVYAMkbOUVPgcySEYSTqPmU3njU3QSZigyU3fTbEwlbrAyXzPGM1LkdJcyTYMUL4gGVFIkRpYmYxkFQOUkdGMla48Vd3T2M4jSaDUVdvTkYGEjdt4VagkFSJk0TqEDT0k0MqbmSzLWQBIVYgUiTAclSMkjS2EFS5EVL0TCNQsDYqgCSYUUdWM2MiEmZSQSSAQVawbTL40jcTkkbqDlTzsjbwYCT48jTMsRLX4FdEAkbyPFcwACN3cCa1IVQgg2PXYjLmMyUx3xMPITaxL2Q4fEQKYiUSICby0jUgYSaZkSS4g2YIEFboQmZpQUZxkCUQoVM4.iVh41UvUlQiIjVtsDLiYmcq7zS0.EVrIyYzEDbBYUbkkyT4T2YN4DVssxRBcURJkDZqPSUDISc0gDTU4xYDcCLUEmXpUlXwsDLUEkVXQWczbSMz0zZhkCYLQGRwLGNQwlRw.WSyTlXYEWS5YUXoMjThIEc0bTQZYUXmgDaCASRLYDLTYDa0QyZzsVXkcFcTImRkwFQAcDYgoUPzsRYh0FLTQ0TFQGQVEVTVAkYTMUV4Midw4RS0gyLrYmKFY0UDAyStg0cIIUPwYSYscWTGkDcVcCcDEFMScVdL4hdOoDc1Uidi41XrESYUUEbgI1QXIEaFQzbr4RVqnWT23jXiUiMV4lM3IlTOg0cgsjXmEFbtfyQpgCRMImUDMDU3YzTHA0SHo2X3kUZP8lXZ81ZqTmcX4RV2sxM1jFVOM2cDIyJTcUY0QVNE8lYzjFRxslXt8TSJIFUPg1avTTRwUmLtLTUEgzQzjjL2D2bUYWcgoGRAg1XrMSP3YldX81XTcmULEWYQMTRYIkRGMzX5YyM4TGY4gmdFk1X2MidlQzcwUybr4FQyjjUxnTQwUzbScTZ2cTbuwVYlgTR3M1JIEjRUsjRVIDcCkyUwn0RIoUUqMELPUkdUAiLUkycJsRLtQVNCYUNhoUPkgycFQSPmUFV2AkKtjiQ4oGa1TWVZcWTwklbX8jUOkmUV4DRyLUZM4RLTEiXw7FVEcEd1MFdnEUQxTVTOIUUtLkQRMTRQM1Jw0TNJckVuIjTmYTQqv1cuoGcz7DVTkkMvr1MUQyRIkDVxo2QWMEZIkzUCIkaU8DQyfEdNglcQQ0Y2jTNu4FLpkWZtPjVr0zJxwDb2UUQoczY0ciVHICdIkyaYo1SyYzQOQEd2EjRqUDRMgUb3Tlc1bCcvHFT4MUc44jQmYkYo4TarYyT2zjSW0lYyfUY08zL1rFT1k2ZkUiarkUPFEWTis1bwLFSSMzMwD2LpAGLwfidx.UXIMCcNIkRjMUQKMCa5gFZJYSLtHCM3XSSNc0bGASLpYidKwlLyASdoYmRDkFMUklTxbmZZYTazHmUQgDV3DTUjUFSC4TS0.GaDIWLHYSLS0zQicFSOMlSooDYKgVQsEVR4DGZuUVSqD0RswzR0YCdqEVRGYUdnYDNXgjKmIVXA8zTskjbzgjXtQVd2bVQ1MTdSUzbQAEb1IVL03RdvU2YBMzbkkEZhMDVScVRWgScJUFaVA0XIkzLkkTPIwlLDAiVyQGRIQldDslVPUEQ5cmMxrxaQIWYGYUcGsRa3EESzvjVFgWLTcDd4vTP1ASMJojPvs1URQSNAE1cLsxbgcSNVAGbzXSRg0VcDIlQoEybxHVXuIWMLQEUwLUL2nzcrciXIQWbyLERMUiSYkjTuE0JNI1ZLgVZvHSMV8lMgIDRhkGcwHyLSgSNjY0Q4bSMtQ1XqkDTnETS2jWbtszLNUlLFM1R4Q2Yso2bRshXWozQHQkaBwzUQYVV3UUYNIWV0Y1axL2XzMiPQcjY3PkTs8VdKomcjcGd1XSURcETS0FVH81Mk8jbxEyTpkkYTkWPNgkayIGSNgSRv8DQg0lR1ESPZwTYFUCYIIDdAUTQQsRSMIjdoYDU3XkYMokZtH1UEgzS3XGTggVQY8DYkkWR2fEbT4xUTsDdkcTdQMTQ4PzXLY2YCQyRsAELzTibmsFaKcmMBIjVYYSZrAWP4sDbjsVUTI0ZIc2QXUUYwbyRSUzc3nkQnIVSy0VP1HEcqPzQv3lVCQlR5wzcQQjbpMGdpAkPmMjZQYUTuc0a2kjKsk2a48zT3ASa5YmTDs1YT4xZ4LFTXE0b2jlVzMUbzYkaqPSVs4hcHcTNmEyRQMTZ0AyYy.UL4IEU4YCMX4TaNQFSIgyPDsVTjESSucVQ1jWdqrxb0Ezc1.WV5ISZYMVLgc0cBAyJGomLkkWZqHFdqTyRQIiLZEiXJcTYjYTcKEzRsMkSlcyTjMURzszT0MTM2YVVjU2ShYTTjMyPksjausVa5gVTJMELEY0XGoUQVIiYxjWUyYzRTgjQ5wTUOYUN4IyLvjCTFckMDY0ZZYja2jDdwwzStc0Y4bTTC4BL3PGbhIWMtfSTTcmXxzFMSoUP1nER0zTc0fEMOshQTwzanYkL4jEdx4zP3cSLNISXrMjXHkmTKkCSKETQzI2ZCUmLqcFMJsxJYMWXQg0YjM1T2o2LtUWRNECduASSgkVZqj0RK4RQocGSz.kXkk0axomLoUTT2wlR0LzZB0zTtjmd0jkT2nEcAI0T4bjKigUVqk1TjQ2biYDQRsBbGkmZs8zR5sBN5cFRBUmYpYzU1HibRcEUBcEVgQmXRk0JvcGROYmbrgkYtYiKicmLFQDNhYmRBwFVMcld5ESPGkkK4EWRWg0PynUb3kVSU8FR2cCLkU1Th4BTjAUZZIUTwYyQHAGREoEd1sxL3kiQqPSRzL0Xg41cHUiMUQTZLUzTKk1cxfWL5IicRkjXZQDQ2HmUrgTcKgDcFMWMtrjT4cVcpAiRAkkVKs1XuwDVrgTQJo1b2ElLtAUbjUzYFEVMhIySxjmYOU2YU81TMwjUAMmcYIVUzYGZ1UlP1kiYzYVV3.yaHgzRSEDY2wzMGcDVYcjViozXWcCcn0FaNoEV0TVdy0DR3.CLIQlSNMGToYEMyzjV0HmRLMFdUAkS33FTDYDY38TRKAmYr8VL0IiQG8TYzwjbX4lRLYVUiYjPsQzaDQGcQEENog0LwcFZvslQg0FNEYERrIVasISLt0zZBAUZOMVUy0lXxwVVZwjcy4TTYokd1sTLRgDTq4zQoQUZ4ITXs8lPzQTX24hTUo0chEWLyslLDIUYqYzRsszMyDTNuACVyz1MzHyLMACQKQWN1H0STEyLqIjRv3BMoAiTiISPtPFbF0VZG8zUScCZMEiRuMiLNU1UF8FSjIGMXolLHQDVB0zQ1HlSMQUM3sDTjEVQUkWQNM0UxfDLZMUUiYCc2IEUR0jZ4f1XZMEaVcUaxHjR2IkdqoUThE1Sh8TZyEkTuEVSno1PQUVMoslQMkkZgMkRnYkLhMSNxU1ZOU2TVk2YS01UmgVXmISVuEyM1rlaTUlM5AyQvPCZogib3sjPvsRPvvzbxHzZNMDd1rzaAUFSMUGbIUjMKwVbhITcicSL3s1aGklXzzFLFIEdvU2P2rlVrEjT4kVXZQURuIlT4TDdKMiRkgVaq3lVLcWcoMScVcybhMUMSM2TXIzcrQTL1UCU3HSaYsRcvDScpEiUKoVaz3zMsYTPqolKyUEL171ZXQjTzXVXtEkazfiL5gla0bkYskTQv0Tczjkb3MVSUAEZDMSPDMGR3cFRMkGR5UEcGkSX0fUVyDCUzIFMNc1ZoszQVIDajkFYmIFcwfjdRQTSSQWUwPWMvEVcI0VNBczcBgyXnETdjokRXkEdtYTPmMlRPAGLiYDZJokMMgWZoIiMTEyaB8zbhEkKVkiKuMjdpQyatHiY3DEZzoESkcGcPcSVpEGbYM2PSokX4.0c33zQkcEVGITMlAWcrwVVZMkcCcVaZ0lP5QWSOoUPFMmYB8jbx01Zm0FTSclZ4HTR08jK0cVRTkialc1SvAyZ4TURiklZ2MWTtHVP1b2YWYzPOUEL4jVbvHzLzXEazomZDkiXzUWUicSbHYCbQYVSm0jQ5MFcJomcIgiamsDb1QCdzjVXXM2MNEFYKQyaWcDYKsxJ0zVYx7VM0UybCACVVcDVxEjPUYSLvTkT1Mzb1fEZB4lbuMkQF0zbEYzTgY0LWkjLyv1MvnGUyYmcnQEdSIVSmoVYHsjSQkUUJYycxfFaPoDTJ01YQclSQcCbXQkL23lXvgya3MCZ5ECdxjCNqLDcJwjbnEVXpsjPnYFVUg0YY8VSuwzSyTERuUDc1bGaMgFLjEEcqczU3jFa3PVahkmTYUES5UiQpUTXwT2STclZuMWPHU1MWUCY30TVTcGVz3FRHMUT2MGbM4hKXgDTzUCR341aYgGNTAUQ3gkTqAETqPjavHTSDIiUNAEZXEGMncERWICbws1bPA0SNYyLOUGTjkWTGsFYyrlUs4jZlo2Xyg1M3b2SrEVY0wTXKU2auYiP3HiZ5MlPzEFNQsVMKQDRiQ1TYgmMuAULRI1LXUzPBgzcpciVF81R3QVUCE2PPgUNz4TUvwjQGQDciolSSAkcVo0ZOo1SWQzb1gSLsoGLzAmLCETQrcVN5kkS4HSXtnDL5ETQFYFNtcTQvEUTmUTRAsRNA0VTmAUUFYEdEQTQH4jS0I0Y2YjPpomUrYFcWIyPqvjbr4jPQozLWMCQnIlKFoVcvLUb5QCZQg0ZUgFS3clKR0zUjQSLgAmMtIiVtkmVAklaiMTRvTWPNUmdHkiaVcTNSA0YIkUSZYES5sTdVEzavDzUuQkRukWPFESPxYURgAUYpoGUmcDYwHFYZ8lZlYlXBokSIoVPogUb4bVULcDdz7VMrcVatAkLYYCL3oUPTgCUlUEUYUmZAMVZMcCTzHyXJEzbEs1J58FMTE2aKIGcj0zR1kTYzjiTCIFd2Q2TJgicqjDa3oUdDACQns1ctvlPgQTYvEFNHEFMZgjaWgCLq.CLmgmVQUVROEjRjEmYR4RajQSZDgmbqfCMNA0UEIFQ1PWTzwlR2MicUokQEkSX2bCcRsTXxbzP5kyTVEDVh4lbZ0jPRkzP4jzTvsDdJgUNrMSbhMWcTQUPBQ2TnslYyfEU1oUMFQCV0USdqolPskzJJwVTTsRMp8VXikzZxHUdHMVXtMEUz4xbWEiSGMWZ1XyXEkjMvIGRKsBRDUUbZgEVg4hRBcWd0g2TEsBUXgjKiAGT5kzU2gkd0kSav4lMtPzU50jQu4jTDUjTjYSMLwVdEEjXtXENyHjdKE0JPs1YCYWPHgDZ1XTVCYULTQSMkIjMOQWaHM1LFMyMZUVPkkUcA4xYVglQYsDdVgGNX4VYBIjYAkWVjcCVzTTZzUGQ5QlbmM0U4TicwjyXvnkVogTVrUWXH81UAg1b1XUUkAmTKMkLZQyJHsDSqoGbtDzTicTRlYiP3.UYGsFUDAkMJMkd3zzXocybzPUPQc0Q1TSb2bDZJMSb3.ScLg0UtbWa2jSdzcmL4IjLDAybJ4FUrolbKgiQTYSUBkEb4EmZkYGVtXlLLs1RBAEQ4n0cyYkaog0UwkWR1PyUtLlQuo0MnomPqwVan8VQjomXAQUQ0ImMCISZSQjY33RSJQlSJ0FUvnWbGUUYUAmXX4VQzUiKNQCVHgTXVEULr8TRQ4hbngmbiAkVSIVPynGd1kSTPQyJFsTcoMWXhMyawf2PR4Das4jUy.kKjYGQKYkY1rzYFcFRBclSvgDawU2PkUSSK0FUBclTYUlYwXiXvgDY2rxXwI0LLckMZQGTyIkXQMzSD4DLSoGQDwjKsQkYSsVZFUWXMo2R2LlPksjdVwjKKIlK3g2JvT2cBI0QT4hd14DT34VMBomP0AWYIgzXzgUPHUVNqTiblYGMZICSCkUTWolY5A0JXcCRZ8zMNU2SPklZ3vzMlY2Y3kjTpkTMhMiZnsxL1HzcsMkQyrjUwoTNwfSR2gUdusVcIcycNMkaqnWSBoEc3U2RwHmajQEVqUUS3zzbhMCYFsBbMU1Uyn1P38DSy3hUmQ1Q5kTX4TzXqUTLBQWdRckbDgDapQ1Mq8lZ0k1cvk1RoUGS2ElTnEFbOczal8lKyL2cMk1Pso1ThMFdNUUYgYFbYMUQiYFTEImLvYTQ1YWMwPWPP0lPS0TURYVRFECV2nWPWEzJ1MUNtbkdUYFayHyYyT2ZzT2XMQCNvbkXqbGSzPTRvUUVhUSUpYWUMsjLFAEYuEjLtACLOgjUXQGdSICaYYlXDAmavAWbB0VU2oUVjEkbyIGdNMSUgMkYqQ0MSQTUYEDbwbFY3QmVRQSdwImbJ0jU1TlZLcSd0slUEYkYtcEaPkmQx4hX1shKAQETUgzaBA2MRYiYqH2LssFMsU0MV4BM2AiKZQEQxMjbhUDRFMEYFA2Sjg1U4fyPVECcQUCL0LWdzQzYSIzTi4VNLEkZm8VcR4VTFMzaBQSc4bjS3oTRP41cvASVPoldu0VYmwDVPkmawHTZ5okKwI1Ui4DNMoEdBM0YU0VNqnmc2bDdFQGNAQlYukiMzYmK4EmRZ4DbyMDLzsRRLclVJYSSNgzYnU1X0wzbmoTMz4FSjMVSjIzPDUjXpAkVwfkLqPjc0jUTkM1R4LEc3zVapMFYkMidNUGSTY1ZTI2Q2ESRGMWRDslPxICcOgEStYTM0XldgcVLsYVLw8zPzPiLmsTZUIjaT8TUgoTYIISawoEUzX1SybibQoTLv3RNvIlbzIlXHcVTVozcnQSbM4VMy0zcBAkcS0TUUk0XHklRNMyLBs1Z1LUbwAUXyITXmwTYGgWY37zY2bzYYshLPkldGwFdrQkLT0DLVYFU5ACcMgGc58TYjAmTmgEahElUS0VTtbzcys1ZPciVXM2LRgCMHUCU17lM3EVNRM1JqkFc1f2QgQUNYUTRQwFczQWLx8TT5MTLhETTngmc1nWamklbTkSLOQldjUENhUWVrwjZxEkRtIEUOUmY0AmXzDib0zDR3EEQy8VUpMzcv3lXv41StIlPUcldJEjbybCdAckMEQUZqE2Y3gGbAIkbAYDcZoWXnshcTgWYp0VUuMjXqUUaXECL4Y2Y0flM0.iYwcFaxc2PqgTaHwFUMMSREM2SOwjd0.2ayHiX5AiXkcTUSsVPmEGMkUTXpMzMGYVN2kVVskEd4zlLyjGZqfkS4XibyA2QzsTayEGYJ41apIWZ1TlMlsjPXIFU1bjd1UkcnMiS2MCLMozXYQlZqk0Y5czc33xUOw1TnUzYRUDUzkkTwoEbFwlMvLCNtQCcOUiQCQkVPQVcJ8Dap41MXcWL3.kSlcVRKQDMSklRtoFR1bkQw3FdX4TSS4xLIw1Xv7zYpQSQlUzLRglP4LSZQcUXNYUUJYibvYyJtgEMUk1JGAELyIEQBs1ZNgEM1b0UEsTVhQkR2.WZEslZv.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.SPuoWa3bzU08TYtvFU0YlYwIFRiUkTZQzLyQEZIYkKtbFU1TkXyICbq0zP48lQlIzXssxYi4DVlomdPUyYLg0PxgCaTUCV2UWQtgCSz4hPMYCNIYjQvDjKh0jZYgmKVshY3jSZx.UZLclY0gCVQkGLvXUSEkUUXM1RvbTTrkWX1PCbYMmXxfzMtLDLFUFUwsTa2sBbkE1bL8FQIkUdKETcyQTT08FNJAGbqvVcEEDZWsRQyMiZmQjbDYyXE0lUxE2T3PySMkmaZQWMtLicqTiZCYiMlQyX0kkPEEFawrzcykmbLckTw3FMHAkRoo0L2g1QJsFLnESanMWXDUVUxf1L1bCaksRZrkTPjEUYDkSY0sxSrMDVoIWap4RTjUTPqkSPtkEbwY1Xh8lX5U0QNcGYFAGMWIjPgsBYOokdzfSPToGTqbTVwr1cLslKuclPxb0REkSavLTZqgjK1zzJ2oTSz7FRRU0U3UVN2LVLLcWaGg2JoIzTU4RTpoESUsxXJg1MuUWd2b0YwzFdssBSnUzUuQ1cO4TRM0TYKg1P1AySJ4Rc4AkQzgTb3YSTKYzTwc2MEkyctjiVHgGLPsDVWg2UXElPqjka3g2MhUiRDIjZ0ciX3ojXQoDVtPiYlkGM3fVV4EUZhACaGYGdnkiSPkEbpwFUWMkZDUEaHEUbz0VVw4TV3IETZo1ZwAmR54TRtfzT0fiL1vzaxTSdJc1X0IUNxo0S3HkZt7VcUwzPlQScDwTNgElS3MWU4UVS2nEdyDkRyEDZ0kUaUYyJZQkLnQVTGgSRIMUVxgjLGQEYSMCS4fiQ2HkPtfSVOUmMvQ0ZmcmVUASPXoGZAkDTRoEcyHjZhIUNoo1T2bjTDUWa4.iUXAiKH4DcJQlXrQyY5clTwD2S3DkYxrjRGoEZq3lcNIDbYcTLqjUbzXCayjjaIcFLt8FYVYDcZgSUHUDdEQiRIYVQLsRYMkTY1ECMZkVP3Y1bFs1QCgiKxrDQ1XFYYMVbQoWZEIkMPcCaY0zZqY1SRgjUyXVUDcGTosRTQMVVsYmUmYSP3gULZgSP2j2Q1ojTyTyRtUyb0YWX1kWLmklPyDUciEzJokFZXgSPtnTYAgkMQg2U58lalkjVxEzZukyclMSNn8zLyIybs4FYzQkY4PTVKgVZM0VLVM1JvQ1ZyHlYUQ1XlQ0crI2cOgkTxoEcq7TSZcmcOgiMuY2Lqc1RyLVYOEjPBIGZAEmZVoDLCcSMvQDNQkyTQ4hYRkFRVokS34TTjkFTucGS3T2PqclKzU2boQkZwcVTYk1Xy7FNvU0b4PiZP4TZDgWZ10jPGsDNmgENpACM4QkXVk1UyHiSHIEQSokdy8VPGMiaJ8lSLgzRBg2TWQkPt3FSi81QtTkLvEDRTkFTKAUQEAGcKkUSOshQmQTY2HDNyDSZYoWbzv1ZQgULDshcvEibsI2ZGQWalomZYIiTxnFTYUSbFgzUA4FdCsFYxLGNqEjYtk1PIMTPHU2UBYybN4jSYYyT4fmaL4FNqb0LUcGYrcDaCMDSEgVV54hd2cENHQjU0r1XBIjb4XiPQUURhgmc4EiUWslV3g0UEoVPTsTQvQUZ34lZqHzX381M2DjThgjPo8zQxDjZO81M4rTV2PSPgUUcG0TRDQkaDE2RvTTNYYGYkAGTFkSTwITLAgmX2bFZnIVUpsRTS4RPQIlZwzDQRkiT2wDbCM1LzgkZBwVXuEELrYWVX01TBUDdVsjav3jQ4XlMQE2Xi0TRywTRqrhcHoTRiczYVYkcmEWLqjiPSciURE2bnQEL0DFa2PkMOgzQTQ0LhcGbDUjarIlVNUSShoUYzYldxQjMHQDQCcUPlAiMxciY2flTSYEbFEDQOIGNHQzXAslbKYCSxjicyYCNwzTPwHSa2PUapcCaWkVZ2PyRpQlZKgmdvn2JEIzYNcFaUIWUyf1RsEUcz4BT3cCTPMzYS8lYzUFNgY0RjkkY4HGVQUlcJkjV0IyaKMEaAQkS2.ScwPEc1glc2nzJynzaLIWc2UlXHEDUrIEQy7jMlEFcGQld0.0bX4BcRUSViUDcvUkQAE2T3gmQN4hXDsjdXUUZAIVawD0RF4DV5Q2ZBYjTmE0agszRmQ1aIozZxXEbLUDdqLFcVI0S0.iVAkVbswFaDI1Rvk1PCgWcOszYsMlPIciSwzzMAYkbzbSSnwDQDsxJ0.SXyQ2JholXT8FY4nmZ0kWZYEkd1DFUqcGYTsTSJcyXFQjPq.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.2RQAyL0AWLsMCVjM0JpEjMwslZYQiS1IlXpYUT2jyRzkVTj0jLM4DU4n0Y1M2TpQiSNYVZvPSLAEUdKIkX2nVYBg0Mzcians1LtQEbgw1TDYzZq4RSzvlTGETQGwlPJY2Y18zZ0fWLgUWRrklLoUjX3nmbiMWPsM1MBUCbWAGN4vzQIAGUS01Z1c1Y3ISbQYSRKkjRvzDb1EDSk4jYtXiTCMUUUoDc5QybgIURD4RbWo2LxDCROIkQPU1c481ZgcVVDAiRogVPDQlY1EybDwjVuc2Qvo0JnIUTJQ1UrUDUW41cugmYyrlUCUmcxDWNt4xLxAUd3.WbNg0SP4lYwX0P5gSdTslawEiLlgiMxXzYEYCTUgTd5gTNvE1ZqzjQy3hUDc1Y0IGRGw1YkElbMoVTiEFcuIWaFU1YhwlcXglbmIjRAUGQB0jXt.iMBQWPx.SQ4jGMBQETZEmQ2UCbEcCZhkzQ2QEdCcEUP8VYqjELkckP2.SRkcmdyHicLYTMzrDR0bDZzfCNVomVlokL1oDdEACMlkGQ4jmKSkkSYsDTIkGQ3k2TqAUXBQkTLMibsQ2QlgGVQYmZ5cGbj0Tb4f1MCkmMzAEM5EVQzHUNtXmUSgiZDkFQBsTMHg1XzjzMGoDMCEWY4QyaNkmc38DY2kCMrYzbHQTLwUla33VTuAEMxYEcLgTSy.GRmgTQw31a4QmYybUNzTjUq4RLio0c4TWQykUNpwVc0czMGcjVEciTVc0T3LTLQM2U3Tya0sBYUAGdRczPBIDdQolY1DWcg01YhglTWYVM2XyZQcVMMIULFQWa3cmdzDDT2PFSyoEQ1PVXJUjcEkVLAYmVC8VNY8DcWY0YtH0P5EmRXIFTDwFZzElL5sRcWcyagY0Tr4jUQgkS301cyXWStrhPFgTQNY0LSEyStgyMTQ1UqTFQuI0SJg0QOkkVQMDQxDTNtzDUpsjMQYjSvcWTvf1SGshVn8TZmYTPzTWMyHiPtnzUFckZHMGM08zZhY1XoQFSnIiZiQSLMMVPGwFaz8zMRw1MskWXlwjTBETbqPlYxIGTPU1R0H0T3b0LOE0YWQESMckXR4DMQk2LzMmTsA0PKwFajUSSjQlYwYjLtnmQqrhQXUTP4P2RFECUs4lZPUkPUkScikFLFQ0PVcSaxokMLkiQxkFM0P0U3rlK3T1ay4xS2Dibm4FUggFSTU0SwfEUKkVaZEEdX4DZvgSThkVV3TFY4MkQH81PXU0b0nDTrAiZMM0RQ8DaYkmMNYiTn0zUiEmULEGSzP0TOsDVm0jPwQFYqPGNFICY3.iP1.iLLA0RvAyYrkVdo4DQ2cGblYUYz8TUykUTwLFZOw1S5IiRYk0XDcSSvg2SsUVUZETMIYFLEo0Q0nVNv0TZtLmYqfTaqjTLL4zYBszMyIkLIYjYQ8DLtXjZvIjXCAib3r1TVUGa1nGdyI2YvXja5UWVqrDTi41JokTMmEzR4nmQw0lcqTTPq0DTgYWbookZ4jzX4.WNmYiLnoUMRUWPxMWTrMVNPg1ZIIiLN4TT0LSRUQWQ4HzYwQlZnslZt3FLmoERwgCc5MjUxUzYUojYJglUA4zTZglcV4lRrEyQt.iXUc2cRsRbiACUwUUazXkb2o1QzUjYzD0ShQjR3bkZswzMX4hP30jLpE2S0QCV2LDMmszJyrVUK4VR1cmLw8DL0PSMwEFd4EjKlYUSX4FSCgyb3MDRx.mQBACcFY1Q4XVYQMDdwDFLwwVaPo2cqcSdMshdyjGdMIyc2YSPWshLRUkVHYDbgYkL1bVcNgmYjgUakEUPgokKMg1MXUGLTcVQHYFMwnUNZ4hb0I0TOIVUtb2SxDWXNwVNu0VPVkERQEkKuEGShkCdBk0YHQDb28VRqUCNqg0JPkkYXwTV4fWbUE0LTQyQvwVdyAEMTgTLzAiXtXiVFEWdEwFQ3okcEszXtPDRFkmMzXTcBckXh0jbUQCTx0ldXolbCAERPkUXL8lUy.kXLMEdVMCVjkiLngST2wVXiASaG8VQVITNZgVVkElRwDSSY4lclYSRAIjKtUzaRUkVzPUUyjWRzUDVIITaxPmYlEkKRg2U3DlTWMiX0gkUBUUQUkkc07DUyH0MSkTSzAGctXVRN4FTEckd3j1YvLkUvcjRCMybtokZQcUMJ01P2HyRYgiQsA2QjMjKvQiMy41TWMlPZ0lShEFTqjkYyHTQI0jUTgWZMY2M2.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.EQqkDLxI1PjoTYDcUZjM1XRYENTkDdsYSNGgVQwEyM3PzU3gyJEEkYok1RK8VV4DFbQEmUjQFTsU1L2wlZTg2J0jkUTolSSYGLVsTSBEVT1ImMBsVX30TMmklTXQWQHUTbhMjb4klUBwzPuk2c2oVdswjZEkDSyLVaTgGSAICbqnTcy4jKDkWcCg2QGkiaqYWUSk1MTsTQjEkauYWUE4hX1kiZqgkTDoDbVI2cxXURFEGTOEUc3jjYt8zJygWdyfCbvnWXw.SV3YzbjYzTwXGQtszQxn0ZCcFZ1USNxLWNwshPNQkRmMUc4gCYwckbwDkTAEUUn8zcpYWPPgyZF0lakklUTgUZvXGMqjkbXkWUGIFYLMkTLc1aV4jRhQVaNsRSA4lbJMiPPoGZgMlPNEVNscCVsgTViEyT5sRL4E0QNMWaqXCbvXTNxD0cRECYyHkPqgEZQgkT3LVY2ImPWA0X0XWNwkSLEkGRvLVU4DGaU4Vb08VSPcVS3HkSYACaAEVd2Tjbwj1SUMkR5cDQGQTT0gmTJk0JZoTXPQULgQDNuYjP5EUbxLCSkESbtQDUTQWZM41ZGwjcynGZyQ2UkAUVq.iZEYWLoEjbXcGMwDTU3XEbOQDYXk2T4shcQgyXwsBUtn1UAkmZ0jzUKUzUiUDUTMldlclaOsRUuACVXY0bXMCU4Q0cqHWUGcycjoWVqEVQvDTPPYjaXQkUp4jQ1.kM3H1cGcEdvrhQFAyQvvFc3HlPPcFSsgWcDESUZEkQkomZrMSchYWPNEVS3Tjbz3xXpIlRUESM3kWTgwjUP8Tb23zTMMUMkkEcp4lZ4jUVmcjVs4lRwMCVYQzXswlQCMlVjolUNMkbKEDTPMmZTkVXVwjUOMmKRUzbm8TZjIjZsoFLq.UcQ8DVIQ2LVIjKYITdjsDVBEyJqU1cUs1MYEGdNQyS1nUPzb2SBk0YmcWThsTb0PmLoISMUM0JWEjPxEVPtD1JIkSMjQ2ZwUkM30jKFYVcXUDagsVRnozPKokVwTSMx.CU18zLFYlZrYEahcCTRcjc3n1J2YUND4jUgAyRGU1Z3byLnMyavE0aRMWLynDbH81MLQ1aOY2ZtHUMNoGTUgjLqrRTK8VT1oGTmAyTxkGLRIlR4IkdKshbKUFdK8lLpM0TgQVPYU0PUIiU3HTawj2JvIkK2UGYk4TcybUZHgGNykmRBE2YLE1PFE0UQgkSOECLkQjPO0zbC0jaXcGToEUajc1YqL1c1L1XncGNmAGM2XSTD4DYUozPs0FMvjWaOcGb3PiLvHmcHQzZxHVSlQSVmMDQyb1Q4ciU4cGdzkTNzMTX0nFbKcWcFQlT0jFbuEDZ0MUd4v1J2cjRo8TXzcyaPcCZ3PFTnkiaoUVQUUGNXcFdkkWbV0TVYYEcwYFSqMWdXA0co8zLK4xSzEkdzblR4fkbq.0M2PFa1wTZ1oGMvcSdo0FNEASLvn0YAwldqQmL1MGQvMTQIECbIgyMxX2LXcWPw4TUEMSbSIFSogSNjcTXwP1bSQ0PiQyUCgCVggVXlQkYkQCYPYCczAiM1UjcTglSxLWRggFL4rVMpwVcyTyJrAmKjQCdSsxXFIzP00VLVcSMTkUcB41b2TyXkg2MjImS4nzSLICMXcjbxDGak4BZ2TzQmIWYsEkYI8zc4QURRsFTN0FVzLDcFMjV5omaR0DT3f0Y1HSRLkCZgUVdZoUZRo1L2EkQZUDVZIDMBQTSr4FZHMSY3oDcQEkYgI0Ro41ZYYzRlA2TjgEVZcjSg01bA4jZ2PzMhkzbOIlRVYjT1nVQmQCaWYzagUjUwb2LMsVdnMzUNUUU4kCQKQEbrQlK1EGcXITZ3TiZrA0QIoUXMgWYZ4lXzgzX4rjaxU2ajIWPtEVU4ImcEMDVHEGTvTCS2cGS4XiLXAmKhokLLMFUiU1bzEEYZAEavjESxDmPsw1PiIiMvLEU4QUXUo0LvUmLjkVTH4lUDMjSVw1TDAURxHkc3fSVF4RZvEGczTjYpQSavTlXrcmXmQGQlUiUnAWcIsDZ1H0azvTP0UyYDQSSrUEV3gmX2glTnoWaRcmd0wjdrUTZjEzZz71J30FNtUSUocWPRkjUNIUMVwjQjAGRHUiM5kUXgsxLAA0XyPzMJcld5MUYxMFY1IET58TLvTmM2UCTMUjQ28VMUcGdzMFUWkmVScFRRQjYYsBMTkSVDY2SsESdNokaGA0SrYFZ4DFLiM1QwkFQyTjR3UVaCYjSFMTblITYwTkTSshX1LzPwjWSGA2LLE2UwHybHMlSxYCMHUVZJ8FM3olMPUTRwg0XzfiRwTDL0.0JqIGRxPiUwnjQTgzP08TYBkWQVQ1SislawgUQ1jUMSk0JxQkcvvlQN01TlEUTIQUbkkmQtHEcxMUTWgmSRcTLRUVZqfVLUY1ZKA2Y4XlRxbkStHmSkkGLl0VURY0Y2IkciEWNtc2SXgjMBoTMLIlT0PESGM1aJwVV10Db3HybCgmcrIDVQUUTqQ1aIYEMiMmUvTFREgWTrYTSY4zaU01Jt71QScESoEiUQgVT5IjVqUjMToERjgjdOECLjk2TZ0TVB4jSvblKKICdPc0TMIUL5IzatEWVqg0RzsFSi4zMC4TSHwTMqv1TPUGTtMTL3kVVsola0c2b17zToIGcDAiZMETLqPlc1bjPqIUN3PyZCQURRclLY0FLVQ2XAMVSvDETLUEL2klYFIGMHcyMmMGVrYyJSc1SEQVRAcWPVQCUAsxXX8FNC8jZzUjTLs1csI1PEojbOcGZxb1Uvb2cT0DTjomP0DSNucVTNMjR5wTa5kyJXwzSBkUStICRz3lKJ8DLPAEbqHSQxP0SzH1cwQCd5sjUyf1apgVQvfCZ1M1agokUkISb4DlV1QTNAUyTL8VZ0XicqEkX5M1RxoUdWoVRCcja4kEZFQmVGcmVKkyRqTFRYMDdjsjXZ4lLK4FZMM2Y3LDVNwzXzTTVAEDZ3Lmc0nGRF4TXM4hLtQWROAmcKU0L2.GR1nVdzokX0fUbOQzJhcGUNgzSYMFaikDVYo2UWgGSqcGMBA2XnslXHkzZGkFaO4hQwvVYtU2PvYldGsRPk4hLlg1TWsjY1rRbnozLjoTaVoTNXYkMMYGUV4RSAs1R3jjd48zJtomKGQWR4nVdxUVN5gkbVYSVOUmSyLUSjkCZiM1QxfTZGIEdIgDVmESPlYTXJMyStHWavYSUpcWc4sTVs0VZKUWY1QFLJY0QOQTNpQSaUAWPtT0JKc1XvfldzbEQ48lPSg2aVgiL1bkMvMmZxUVLogWTzfSaLsBUzPTaOsjdRYiLiMkP4rFNIkkKI0jTrkENyLlb3XzROAWNRQTPt3Da4YDRCESbwjTLyQFaiICZBAGdqbkKWMWMAEGThIEZmoDQDgWZgQTXuwDLyXTROkCUuckTFkWMNkUPTQiKqAWVyLiYNEWdSISPAoVSnMkLLcWMOcCay01RtA0bOs1al0lQHUSPyTzT0rTTtjVU3IjUHEEcyPySIM1SpECU28TP4A0ZtYWLvUERrUDZD0FcBIkQSc1RgkiLCgDUGkmLY4VSNoVN3LGNyYCTn0VcpQ0XCQyZyEzM3wlXQg2c0kjKjclMC8DQC4hav7DYyUyP2omSRUWUnciK4IUMmAyY5QiKuslQvHkK0zVMvYzLokjMwg1Uy7zYrshMqoDTq3hcsomVz3RNUk0YqPUb4EETrE1XOYlPzLWPBgUYSYkcocUQwQ2b3HSPRI0ctkkUloUP1HUZVEDdsk2TKI0UE01cYESYZcybw3VPhYjSskkLyblVyYGajUjLps1MiEjYqTUS1IiTyjWcnwVLyAyckYVLG8lT4f1YuU1a1HkT5ITYqkWP2fTa0IDUooDavrzM3Lid0HzaykWNxgUS20FLyshMK0VYtLERlEyPpQENnoFZDAEdJc2LDE2J4kGSmImZlQVbuwVTPkTU2HCZDcSYJkSXzTzJpIFcSoGdIM0Um4DMOEkdkk0YnEGcwUzXYISNzHSSv71bZcyJColMZM1U0HVVEoGb1L2a1PGV3.USXA0TtHjZhg0RxzDMtLmRkMWVGIid1n2U0slZukWYqPTcAMFQnA2SEsDNCkETy7FcBczTTITQRglRr01YCE2b3XGayI2X2YVTl0DQngGZDQVNxHDTBo2T1c2XZMlKwgyR3XGb2MiRy81YuslaFcCNto2a4L1T2LWNyHVS3cUPGMCaEgyMAQEMAkVbo4hY3HTXKYWS2.2XgkmMhEEYTE2SvQlKWsBU1cTNnAGVUkyXUIibKQ0ULElZH0TZLsxJx0VRYUmSnkVXm4VP0sTNRI1RwXVLCMkTZ8zMBUCVzf0UkIWdwbCb2nlUFkULkQiPy01cg41J58jLvclSv81LsUmK1oDThkjcVglZRUSZ3IDLHczT4MWX1nUR0TCdEY0cyjmYn8TVw7zSLYkaxDWQtAiaqXFaLIDUqMVZ03Fa0.CcHkWSlUVZvEiMRAUbm8lX1gVSxsDMTgmR2IUNWYCYs0Va1EkctvTdwL0ZJ4BYL0jQpkTQCEUaIE1PFcDYUYmXZklPKMUZJwlLKIDdxIiLxLGTP4xbuE0MgsjMmEWcXgGRno0SnMkVMYVMoUTVxPGZ2X0JIQzJwkScTgFc1QDNyfyX0TCZ2TGL0DyXyrhTuMGSTcSPuUSaS4VYwDmZoQVMHw1T1.iczESLmsVYUIUMYwlP2zFNyTzLVYWd5cjVvjjPEQmdrwVQHYDR0cWbFoFUq7VMuwDZIYmb1zza4YjPO0zLqrFZ1MSSTI0coACd34FQDICVyXUcYo1PYozXgkWb5M0SoAyLHcTcBciPDQiR1.UV0fVajoDYM8jT1oVP4QmLw0VQMI2Y271UWQia3zlQIk0JgcUUS0FNr0VQOYmMZE1M2HibRQldY8lPDIFL3YDLtfmV3.SSigWPik1P0IlMnYCNOAkVggyQ3QWQYwlYoUDMMkTcIYURqI0ciQTcwDmaWkUZnAkdjcWUKIUTPgUUJYGTqPlSKwlSVM1clUmSyvlbtcFLGoTVhkTRNcjLXQCLPwjMVETS0HWTmAmKlYyY0jFNDkmZwXDb0oDLiwla0LldZUSUlAEVSkSNOESaMISLLkTXnwVSzHkKvYjVZwDdPczQOI1aXUWRhgFUIolZCwjXUojQNYzZZMWduUWNxUSaNEicKEVLAYiRXg1YWo0aSsVTtYDYrg2TRgSUNIETyYiV0kTUTMlcQE0RCsVMkkWPN4FTIoFdgcWS2bzckgTRKkkZRMTU0vzUFg0SukEaQkEaPwTY4IDQJIyaZQFSU0VZCcmMssRQIIlV3nTdREzRyDzb1PldSkkd2s1T3byXVcCbjolM03BapISbBgyawkST4slXMMSaOQSRJkWNMcTdyXiKhMEakoTM1bjYME1JvHSXm4DTHsVXqn0SsoDNqPkVWgUQmgldt.yYwr1cvIVVRczU2U1Z4TibtTWcMwlX1TSUrAkKPo1TZU2XH8TTtkic3czb4slSqnmXybURv.WbjwjKhY0X3biYYAmPO4RXFo1XZIkKQETRucVS1IycrUUTZkyL3nmT5EFTygzXjA2a0k1TyoTTvbFU2bjXVQUMp0DQNIiKFEDSzsTYi41PBMyJNgETXkUVusFRSwzPMgGYOEEMBEldyL0SEcWLWMkP2zFYhQ1Yx.iMDEGUQYzTzMjLmgzLjkUUQgmPxrDSqEjQwXTPqEjLyH1bnQ0MBQ0TPwzL4n0L2Tzc4cib4YySEYWbHkTZiQkbqrFRY01ZYQkcFsxUvnjb3cTdgE2TyPESpolRLIUVwMUbWsjSiU1JVglZioFcEkSYHQ1SyIWZNkSQIUiQCYDVC8zUxHCTSQyLuEiS0HzTH0VSZkzToESZvITdsIUQKAyb4XjYMQkQDcSdGQSay7DTwcFV2HUaislap4FTj0FRIo2QU4DcAMDRqAiUwfkZVMjTyUFSx0TbFQCTioWVHMSN3fmS1EzXtnUSTQjTjEiVYYkXUQjMHYjV2fGQHMCTCo1LIsTLrcmQ3DUMZM1LsQzQhcUYXYCVwfWMyoWLA8jbPEVM0nzMEUGTOQVdtjFc0j2X3DEassRdHIjSt3jcvEUPl8laFwTYqH1SJU0SgslLOoULmoTV4fiYWMlYvgGS3sDdlsBQxLlKSMiYtgkbFMDbZQCdl4FLoYCaQU0XgoFNWY1T0kUNxPVLyEmTGUjX5IlKqD2RWkzMukkRrcEZUM0UyoWVZw1alw1YZsTVjg1SXQickQkchgzauozMG8lY381UIczbgYyYL0lLFMSVBsBcGAyTKw1XuEmYxk0JoAUaXsBYE8zLXU2YNsDQuUiKUclYQc2Zh0Tb1XkKG4xUH4lXA8zTzrlRxnlYynzPVkEUIQWYvYTLtMGb4DFcnMVUmc1PKEFN2YkMx7jXrMCYToVNH4RTMUmTHw1bZ0jTXEyS1HjcWYyQg0lLjIiKQYVMtDVT3DFZ2Q2PXcUaNciQFomPk0DTFgiblE1JrYCYDomPRQVXXAEavU0a0QkS2PEcDYSRoQjQo4TLOYSYoIlSDMzSIMyaiIUay4VXLIkR4UWM0flTwjmMhUWdBgjZugWNGwDbIw1YssRZN4zQLozRPIkKx4lctPkPtzlSYwzTToVapQScvcUXr8DYSMFTzEyc2klMw71RMUWa1MTbPQyMskWVJUmXJQzUEYlK3IFVXYyY5M1b0UVb4cUS2slQ0QFS1EWXqkkZEgTYhMjKQMmcvgWPgYTcA0DYJQ2S1oETu8jT3USTjIkPEYkdRoDVvQCcH4zUlMVX2fkSjYiVSY2PjMDY0sRUg8lZrIVZlgUdSkVTiYmV5MzXNQkTYoFN4j2bGkldlM0XnAUSTsRSJMmapImVq3RPXEmXvQGS5YTPvrBVsM0ZOQDQ4PyJtT1LwUySQEzXwgTRq8DavbWPAQUb2P1MTglYFkUPx3Bb3ImawP1cjcTUYwFQKA2R5MTTq4DQoUkaTIDcH8lTxXSXtgjKmYjYvkzQ2rlZ0jWXpQSSQMVLXMiRKUGQxXUb1fGcoMkX4AWbVEibhw1MKgmTwrVU1j0bGUDc0sBSwn0T3MUNTEjYg0FMVIiK0XyX3bkLXsBLWEGR4glahACYrQFZ0QiSFU2SqjUMHY0RNIyXTgWL08DMyUkSZkSZWwjLIkmalAiMwIULKA2YQsRROYmZuU2YmgFRqo0bp0FY4PiShclT3.SZu4jcmQ0P4vFZ1QUTz7VRRkFMtQCSzgVRgIGUSsRdqMzRgo0XJkmM4EWSxPjX2AUbVUCbYM0cq01P0QjLXkGNLojZhESawbmZDYTT1gUPp0lKh0lUJIVLTIlVKgGMWYlaHcTbYgDZHcCVXEzPssRZ1EiPRA2YKokaEcmd1LTRoMCR3bVZngid1jSPDEmTzg0T4UWMSgjVpkjVzEDQlcVUhklRAoTZDoTXucURQkVM4clV2.iSV01a5ImLvDTQ2IVTYQWSCACd33Fd1YEamY1XxEEQUgSdKUVbtgmTmwDRqXlQwfGR0QFRqgGTnUiUPUUUwjCUOQESMAUbyXyQwcDZlYUYvokSFkzZtrRUUQzQ0TiMB8VPZkDQlASSwQULtESNRIVdnk2cFM2TVMka3gkXkomPPwjb4gTMAoGcuMUVTEUQYQSTHY2ZJQiRvYjbKwjV4LzPh8FdykDM5QkbiMkQ4gUXHkjLyAiSqMEawLDS4czL1DySv4jZUcFLEwzRqgyR3n2PnM1LJgEaxEjYUYDa2IVZlIjMqsxb4g0cogEaWEEdZQSNSUTL1cyMrYlavgGazLmZFEWPPMzMqEkQpgTQtMVSGI0UEEDTT0zXI4DTGkmK1gFZrISZyvTTsEWYH0FQM4zJqMCbJcWdkQVXR0jLvnmStflSw3zRUI2buEycWc2RsUWMoclPSg1JG8DLToEVmckTjw1LIU0aqTmav4xZUgSX4DWUZEzaJMTd5QFULsxXq3jMt8TLtQjT1oDVWsRLyXlRQUDbIsxPw4zcxLlPJAGRlwTT2DzSqsDcPglT2b0bWIFd4kSPmcmXRgiUHY2JTclKnsVbLokYxgiaLETLBUlSUkCT2cWTAoVR4cWYEgkaAU1LBIiSkMEM2rlYIMGSKQGN4Y1cMkyckQGZNsVPtoVdmshZgETLHETTEACS0EiULcybDkDUuACazHWPQgCRGkGLUoVYWYkKnkkaEE2QtLTQKczRtbVZhImK4HiXxLGbH8DV0IERMMEMqjkVqAWZuglY3HDTsgjVt.mblQiMus1MmIFc2vTaPc2LHIycNcUUCo2ciMlUWkkSM8VTuYWLJk1J2XmSoUSPXYTQ4IGVyn0bvo2L0rTby0zT4YSUAISQ0vlVLsTYOomayzVVw0laB81TPQWTjk2ZjkzcgAWQ1b2a20jSUwjR1UjTWMzQKYmZX4jRVYyRGYiXhMmVvLkSFYzPhkUSQ8lT4zVPUwlctbSTuomLVcCNDEUT2oEdVckbEQFTkUjM1olZPIyT1b2cTcyYvzjKEYmR2MkLMYENtA0c0AUU0T2bRwlQzsFLwfkXjgiRO81T0okR3cFSjkWaSMVcYEUa3sFNZwVa3YVbOM1QFMiVuMjQzY1blUiSDUVa20FcUYkVvLyTXkjc3jWZrwjX1LlbwbVXzPDRwETQA4RTWgiVjIUVUkFUPcUSAI2Yxs1MyLEVVMjbtIWbtfmRPU2as0VakckVsAEMtgWYzc1YuEDdoYzayjUXSA2XDcFalgiQzfDVyMkTwnkbvo0JmoWa2TDRHUVThkGdsk0UCYETznERgkUURUSZOoTY2YiKl4RPuEzZ0UWZV4TSVUEMyMiPEMlV1MFcOQ0U4kCUuc2T4IyLQEDYxMkLxXFYVoGV3PFM4oEVvXjbIMiX44VT0E2RHk1cxk2YQEUX2EGYNETTrMWLoQma43hTtIURwQzRxTmazjFZxXFbu4xXtMGQ1sBM4IlRnQkVzbkRXgSM101agEkdwkiYF4jSYYmQzzDRj8lbwPVd5UTdSMCLC0FUiQlL3sFL0fTXF0lMAklbRUWLGszcqgEctkVSKEzLIUkZ5gDaDgzJAEyc3E2MA8jQYUyavPmK5kCZwLVS1PWZx3xQtM2Y3HSa0QyPscGR1IETIwjX3Y0atj1TxoTRyDTUQckR1IDUqwjMFUDcsIWLHwjMFokPgIVPRkmVvkGcwDWYL4FYBAEauYiPt3xbtD0ct.yRxg0Tj0zXlICcPMmRmAWXvT0UzEFUr0lLWojdn8zU2ISV4UmcqwTPUMUZOcCbxL0SK8jPwsBUA4DTqMSVMUiUNszMUIzTDYTbOc1PEITVMk0cDc0YO8VNgkVUx7jT1kWTloEZ071XtTjPoI0Psw1Z0LkPQoDaVMSUsk1JwcSVvQVPvPjLQszcUAyZlUlaJ0jdkcVLWYDQlwlck41XIkycE0VVu0DbvYmaKgjZS8zSFgFbZMVQ4TTYQEDa1MlP3rFaCQkPSMSRMM0XQkmPYAiXqPTdxUFV30VYMU0X0k0bXMzaDokXv4xTSclQMomLyHCQz3TViElRFcWZt0TbtUELhQWQnIGZWgVZqojRQUjbwvVaTA0ajQjdB4jcmwVaQQDZvzVSWoDcgcTLHgEZ1EGMBAGQ2bjS5QWN1oUZ3M0bzIWUREldvQVR3jSXwD2bxjyYtsxPhgmPXIyXqc1cH8Ddk0TR1YFZpImbvcTSqIWcOo0JVAyMlojahUWQzUVa4gUNYUzQ1fzUwvDNEUidGITLUshPQIkRhUmPQMjV5wFTwjGbRwlbYcjLHU2STcGbxHkbqLiXmciZIwTSZQidCA0SsMmaqoza0oVLMQmTx0VdTMWd4PENZM1Z2UCMtkFVCIjZQgSP3AGM4PyTuoUZiImbF4lanMGRM4VVw4VRmIEazvlRKk0axX2QEIlS3klSPUTQ4EVSZEla0QDd2Y0U1cENncycx0FNX4DSV4DVSMUM4U1YZMzUvUjdlojaHMja2LCRAkGLpckV3jVRIIDSQclPl0jPLYEcHQCR1IiTOQGdRc2cLcFRucEQu0jKlM0P5kiKqTWb2kVMBUjbpEiYGkza3QCZpIld0sVYtDDVFYzYxgEY2HiYNgjVQQWUMIyXZQVL3XTN1L1SoAiRwUSbN0TPzczQ1MUVAgWNxokSSkWb3PWXlEyTDwFUtTlbybEUTUiVLgFLYQ2QIAEbSgFSq3TY0TUXOk0XMgkR1rRdGACTgEFZAAUcy.kMDAGYYUkbIE1bwbkKMQDSRkWYi8FYpYkXSYiP2YDZAYVbkcFU0oWUBoDRvbzc3UUYMwTPigiPno2U0PyRPYzQtXzSnU1JJ0VQY41ZvIVNBkGR0kWat0TRtbDdSAkVpEWdIEjQAgVdF4xTi4FRLgFVw4RXv.2R0DUS0sBZZozZtjETo81L1bGQAYSSTclKOEUMq4Rb1MibZYlMh0zSCgDM3HENtIFajI2XHsxRpAEcJQkbzoVa3PST3UDbTU2UAkGctg0aqv1Q3f1Q0cSL0njSvnGdJg2Sk0DY4Y2JIkjTz3lM2PyT3QVdHYibGoWb4PzbwwzM0.yQ1nzZogCR2nDN3UjXFE1bw.GNTI1TRU0cCYDYqEWL0kWNyM0YIUEN44hZHoTRjE0MLYVRnsRUogCVYw1Mtf0LTc0T3MyZMcEVDY0XkEEQBwjb5AGL0kWP54DbD0VawoUVOo1Y1A2bvEUP0XzRrA0LW0VZy0TPIYmZgoTXCQSQTwDY4YGZqUGL30jRII0TQsRZqMDV1TyRC4TY3MlTT4zcwj0SmQybwLEVYMSYxUGMUMGdkEGYpwjMDQVSUcWZh4Va3TELwHGL2YELzYGav4DMH4jZSETdVkmT3UzTRYDT4YSMTk1J5okTmcUdYMiKHYmcnMkYpoVSW4jamoTb2kDTvblcF4RdnsjdyDiZIsDc0A2YvTGchYmKycDLEEDLvHEcxHldrMWTNEkbWclXzMUc3bjaxjzR4XzMj41SDczSjQ0aOYWaw3zSJ0jRkckPGgCRwomKpQWVkklUrUWbPMzat01SZMUMHQkR1cUV5cCb4rVdhIDRMElaFkWXUI1LhYVatLkTvkSMHISbUIkRlgmXzQSUoAEc0gDUGciYB8jbXYUZgkiK2MCdQMEZsgESOk0YyMlaykUaWUzQDIiYgYiKZEFQxD2PXojRRMGb1L2a2EEVnckMI0VT5kiLTISNQEkYmAkSgg2bXkiThIlZOQCM4HyavLkY3fiUNEEUVoVS1T0PsYjVPE0QmgyZt0TPZw1YhIVQo8DNMMmQqEkMyEkThMlQh8jdDc0cs8VQtolTz.2UzDWRks1TGEURuUWT4vVVq.ibVITZNIlcSoTRNozJFkUU0PTMNEGbCIETHcTLCkDbNslcsoFQlQTNBgkK2PEbEMEQZcSVo4hPCY1XZMEYFEFRLM2azUCZWIEaEokXR8DSiE2PVU0YhkzX3ICd0kWMYkmMCQkavImUFY0RlokcGUia3MVa4kiRMgSc1HDYzw1JHUkPkkDNB4RXiU0LiY0MtXiUvomTNETMX01Sj81ZPETbn0TVxkmULcGQ0TyMzshUK0FYkUDct41bNMVTvXlSwoFLNE0LyHlQxQDSFAUL50zbhoFNQgjc2njLJYDcxD1b0bGdAomRwjUc5gSTzkkYT0FY2LycCg2JiEDN0ImUvkmTI4BZLszYWQzQuslQOQCcwwTaX4lakomK2EEQUshVrgWMBc0MuUkcuIkRFMWZ1T1cYw1LlkVbGYVbpUERoAGRZIlU3XWTMkCa4TDNho1aQoVMR41PtcGS1D1RysRQy.iXyHiRJYlcQ4jU1f0QQ4FYjcicrECS3ETTG0jbrUzQscVMx.0QxbkMJM1Xos1ZIMSQrc0Xx4hVxglbzTkZvPVPz7Dcuk0UGkTaL0jVNIFSoIiM1MSdt.0cI8lYFwlXwTmMno2R4T2S3UiXEcyZ0HCLMY1PKk2X2HDNUcTb2cyYEACcvsDRw81ZnQWLUMDdwUlLPklR13VZzbyX08TM3HiKqkETDg1MkIWMroWZsshU08DM4PSPoQkLDshSH8jLiIzRE4DQj8janQkZ4kiXtnFbvsBbIo2ZL8FVgYyaQ4VNt7DavXCcOslX2fmTy0DZ2fWawc1YroDMFE2bh0lSSIDc2PWayX0QMQTYnoEahwVLr4FSFYWMyACMggmTFkkPVUmbQcGbEkjSOEVRpYkULUDQTcWYwQSYz.CYxLlSu8lKokWS5c0cMIVXSIGQzDyZCITZtglSUY2UoA0MvQCVwfCViokV4fFcpcWQ5YDVMYGTk0VcAU0Mu4FcFQVSkkiRtrjbPIjLDwFSrQlLYslKJcUdzkkQQEzU1UUMI4xUvLibZkyawYjL4Q0RRE2PK4DZRo1bIglSqIUTzYEcZ4xc0X0Lt.EZGMGRlkEa44RVGg1T0oEVqcWQAQ1X3okY1LmZGMDcOQWbnMGcH8zYE4VLFYmRxEldgIyLJsjLvH0XqIyJIIGTgckLpo1J2rFVj8FNgUkX3k0c2Q0PycTX3kjPDAWNLYld0cTaQgmXOIUN24hPRcUPy0jYs0jPGAUdvnlYwPCSFw1QBUDQTgiXWcCZKQFZnomZ0gVP1AGRmEkVvEybzI2Mvkycw8FcDkDNtLUZPgiXRoTRlsVd0MzQCUVM4zlPiMDQGkSSSE0cCYTTIMkV2EEbCYDdDYmdH8lYYQCalIGNJczRUkyJFUUP3H1LzbETJwDQEYjPkMVdlIFduEFRyQSPUYGZiITbtkTSvkTYCokctrDUwLmMMo0bEM2ZYkFNhcSdjU1Pnwzcy3jRlgGdpEEVlQka4ImUz.mQgkFZGkSLoUWQ0PTQpASP3HSR0HFS4HDcS8lL5UmXo0zSE0jco0jQ2f2RNMlRmo0YFYkZ2j1JBcmTJUTTpAkcQEWSuACb3TWY1LkZwYTVmgkPx4jcxUVcIczMTAkYu4TZCgWRpYTRBUSMZM0XEk2c0.0LMUSU2ECMOYiVTEWZmY2UTcVVxbmMJ8DMVwzLYgTZX4BTvckRSc1JFgiTksBcGQVdncWVSIDZYckUwkFSWkUSzgjV3f0X4QTMwfCZHo1TJkySjU0Q4cTcHYCSBcyX5cVLmk2Q0TSZQIiUAASXAIlVG8DcL41ZosDQU0DdYgSLt4Vd13jX2nEQvLjZEYTd2bTLCkUSMUFcFgDRggDTBY0MkslYJEULAsjVO4FMv.ENPY1MAoGRIkWMiclQ07jLyPjX04jP3cVM00jKPkjYX0VP0kzSMYzTuUTdZMVSwTGdxokQMsjX3IyLNEUYVUmbyImSmgVQLYCTwHFLroFLtMEYAYkUUkyLBcyTyfCTJIUMGkUVOQjUSA2XqAEbjglXk8zS2QiUQUWSAYESPEkYLUmQtMDYxjkQRICV33FZS4DRPkFNGIUSLslR1bUUYgGMtA0Y4MkXIg2TCYyPMc1Uy8zT2oEdqYCT1M1Zt.0cXYiSAgTX0DlTDQkZAgDNHsVa1PzMhEkdoUlaRE1ZQMTPZIGRmEmVLcSbkQFQv41Uw8zUVoUPZUmKtz1TpQFZHMWMq3jby41b4MCaXACVBUmdvgDTO4lV0EDcno1bQY1bqHFLlIWbYk1LznGTFk1RLkkQ0ICTCk0UxshUMkiQSYWMPcELvkmd5E1XJMjTxnmZzEGSxo0Ytnkd2XlVxwlXMImcuoES4z1XWwlKDkFRvfkdsETSsgVLnkTN1jjP4MyUWI1SvYkbnoUSIcEUVAGVNQWQ5QWZPU1P4MEdiA2ZJQGbRoWSwzlT2UzX1LSYA0zQ2fGYk4BUwc2X37jPUckcIwVawfVLzzjcpwDagEVMlgmZoYUS0clZ1byMSAURzH1YnEWa4XTV3PTcAIiT2QzarE2Y3cjSSIjSSQGaMoWMWUWL1olaMolTnY0Jgk0Mqk1P3cDQWM2bmo0YYUFZ0MFQt4hbkkVUPkmdJcjdNQlaQ4DYE4DMLEGNTkjR3UCcvLiLlsxb1HEMVMFMvTjLhYFcEoTPPYVPXETVuYEVCACT2ESLBU2QEU0LiUFS1YVRXcWc1PDVvjTRtITdxTmX0sRLjMESYwVVDwVLLozXoUVaNMibZclX0QCNNUjdUUWLyQWVznjXhUmbw4jSTc1YhUmSP0jYVQGRzU2ZusBNLAkUVgkcKgFauUkbTg0bLM0RygTVIc2XoslV4vVc3TyQ03RYjE0Y1TjM0HSToQ0T0bTMW4TaPwTbogkXW0la4wTMFciXmUiSOYFNtHkKJsxJ48zPXEDQs4jQPMCMBMGLy7FarQjRIczQn0lSVwVVzXDMUAyUq7VTwPGaSMTN3PkQKcjZVUlYqU0TGQidKk0UlQ2ZsYWMtvlMnYVURglXnk0PkQiMxbkcxMlVVUFS2cjcYclRkUEN3fWM0z1PsEGTkgCSp4TLIczMzg1YTclMLgFUiEUVo41bKIEVLk0U4LCTzn0LEIVTqHVT4gGTtjiZjEiUgwlSLUjXCISUKwVSV0VQvLldMAUaMYVcLoGNMUUYjU0TqfVUWMWNRYzYzQDLrMCQWMjc5gUU5UlKJQGdiQ1QrYCQpICdPMmdqk0RxnFTREWY0gyUkgUQzMyXXo0P4sxbGsxLvTTctfmUAsDYqITYGQiVS8lTgETUyD1LwzDMJUkXVEmdnEyPJMDV2UUY2clankzS0gSPiQGNUgGc18DQMwTXEAEYqbEZisxLSoWNtE1LO8jTyQzS2rxLHMUMZgCVtbibxICVgIySoIEbAYkdGMGVJo0UtbDNYgVdlAEYqDVRIo0LxkyPPEVVqL0RvcEUKQEUyXFdgAyR3zDSzPiXT8TUqYTT0jEVyDTclYldoEkSxTFVG4DLkUmXHIzRKgDMEgUN3ciSzDiQLA0PwXWUDAiXZYWTNUET0rFUvXDcybiMxLGcWQ2a3UlPv0lS4XDM0Pybk4BVgYCM37lV0ESPkklQlMUSBQjc4byXhczZhY0R0EkT47FVtESaqrVQJQDSvLjcPMlLzgVMCkVc4sxMqIWQncEL3z1L1nkaLUjbzj1RjIFLmoEZ4UCVg8lMQsjcqj0Y1.EZloGaRcGTtPScCgybXQlVz3BSG4jbyoUPTUEVpMSTtHELlglPzQVVVcEMDQkUVUjQxokTUgCcJwzSmUUd3H1SyQyP3Q0R3YiXNwFbCQ1ZFwlPHUzMtUmPEglKwoVLtgmaFIldnMyUMwTN4QzJZM1alMiK24hLyoTT2zjSyHVaSoGVSMjZIAySoY1XtAEL3ISPn4xZ1XTQtP1Y2T0PKA0S17zUHAiLtAWc5QEQvb2bhUGU0PGNDoWY4AkPJ0jQzE2ag0FTDsDNk0zZzwzbRAWRuISaBolZsUSaIklS0cSblQzLPAiTBgWRoEGSrojXkMFTXYkPqLSPBoTXqjTQyIjYLY0Lsk2YvEVLwYFcPIkROUiPhkVQ1oDUrgiKhQWTKEmTMIUPnQmbX4VdBA2Z0QCUqszLPEkQ4fTa2z1TPIkVpolL1X0a4LyMLkkMnwFZ3YzJF8TV1o2S2cUL4g1ZhAEb1A2LTwVSw.ycKU0c40DYpc1SkIiYBIFSNEWYoUjYhkmUlQyMsYGR0IVd1j1JR8jVRUVN1YGYmQzRJsDLDACV0cEZPIiMqnjY0fiYWYmVVgFaM4hZsETRyYDNyg1RwL1Lv7VTQUyRyIWa5MSRpkEMzA2atAyaxbVLqQDRL8lUJA0aQIiRzflKLEUQsA2Zmc2Pmo1MKQkLlUCYtnUSM0TQ2YmPLIDcSUyQE0lS1HyPLMmSVoGdugGdOgiMJMTdEkkLvf1SFEVQRIiRtITSmETV1gibIA0YZA0YHAic4LzboYlPvrzZ0vjKEQmZ4.kdxnUXHY0YCY0QHQ0SXolMgM0TI41YlQzSq7DY0EVPQAULoMVM2EFZ2HFUIQ1apQGTqAESukTXDoFb0YkKhokRBUidvXmYKMjblI2SFUDUCM0bJQlajIEcxESMBcVQrMmLmoDLIYDV08jYhIFShcyRCU2XQUEbwLWNQQWT0cDVqHTTXETNkUWXKsxaMkiT4kCQ2n1agoDZ48jPy0TYGEDaUQWVhE1YGokR5QGSWUSaDQjZkojXnUUTnI1Uw4TZvnjUosjVQ4hYxsVdEgSTQEkLkA2SSomT1EiMFYiVqnmUvYTSncDZ20lZjkzTMs1RUUUMwAkMqn0RzUSajMFZ4n2RocEa0wFZAEiZIoDRqbkVPcGQLsxPikDVBwFQ58lcFkSLAwFLxP2cuYVTE8zXy7lZh0jSRA0UxoUMHkzUlwFLmE2SgAUdDEjTiszLvgyUjo2aQoTMDAkPKEiZTUEVwnFVpk0PxUjc1QjPzQ0ZwA0UlIjSOUUak4FdgQkQhc2a20lVA0VTqMSM1IDNXEWXuQjQggTSOE2cy0lKzrzS4P0amUkRzMFb2gTbjUSU1EzatUWV54BMjglTKk0Z4PGc2TjQnkjSzoTb0I1T4jWPm4zbtAGNYECSN4DV0cWatnWMpISawQTRvnEY1UyTwz1ZQc1QwLDTwLyYI81MvUmP3QGUkkTZGwlYAsVbi0laxgDRocmdyAUZGkiLuQ1YhEkQR4FaYolXnM1bYkDNmkCL4LDayXULm81Zv0lbiUWSFcFdgsDSvICVHYWazMDcp4xLPEyR2XCYzvDLRIyMNAGdXIUV4cFT1sTSkEmRn4xLZgCMUgzZXIWXoI0LUAyTswTPr81JqgER0XlcBAiTHYWbXkTbHoTXGEETtPzZTE1MQESaoIkdQ8lMOQESPEzSJoDT3j1SGsxa5IkYxgEdpYiVv4hXqPEZp0jdiUFYqPCU1L0ctQENNckSsAyJM8DZqDCYMUCZIIzMWMibzbmd3YjaqzTTSUmX5YkanIFdocEZZUSYzMlXQkEdVcjYwbCMvIkTgM2UKsjP0vzLgQWLuckKMU1cq71Q2MyU1MUViklXnc2QVEFT3rhRmEVX0MjVOUETyfCTXYUQPY0TyM1Zio2XW0VXtHFd4ElLWgWa4MzbWEEagUkLYgGblkDTQYzLRsjQ2bSLnoVTngGbQcTPxDGUAwzYqQmUJICZqMWXTEDYLcSbFkkYWETStHlYoM1PUUmRvglLWQmKlEWamI2XyDDc0AkZ18zL0U0cx4DcNUUX0DzPzHEM4vTXJoVYoYyc4jDdHUFVtISSKM0Z4EzLqDFdlQzJqIjbXgTXyTVcgg0LncFQAUicSY2PqgEdLkyMvfjaXs1Lzf2J4HyXxY1S3UmRZcjQ2HTPuASLzLCctDDQPszJNIUb0D2QtM2MJElVYQSQIQ1XtLyZQsRM3nVUCcWRCMTdDoWYkMUakYmTmQCa1nUdtbyX3U2Q3XyJD0jXzEURM4hMIslPAwlKq.iX5cWNukyaC8zY2MULXYTMvDkdzTCRgIWMZ0FYn0FaNgEY2LzLEAUdzjjTzUFRy0jLqDUNzDkPQASRSsjVicVaJkzbRYDaMQidUcSTvL1czbENYQCdJAGYgkyUG0VNyHFT3QzaAAGdOgSc54ldJASRREUMyEkb5kyRnclTPYidwnDZmEmUxwTQ1DiRyDjc5kTQuoVRtrVNx0jYxzzbTMUZmMkVoQ1LSUjMGUFSjQkMwIWdDIiQKIkV3T2XmASPqUSVj81XwfWZkIibzDCRUg2M43BLUokYDcTRqwTYvMWYVMGQxUCSxslPBYyMJImTzT2MWMFMnMybGAkXJMkKjQ2Y2XUXFI0RgACNowlUWg0Q3MDZ0Q2TvsDaiEUUBIUX4jFT2QWNvHiL0I0MVQkKwMTQ4QCVybEUlYSdAgmc4zzJO8DZlYmX0UmLUEmU0kWVMsTaEMkTx.iTwzFLJETUGAyYRUmVvI2TkcUdvshLJUza0k1UzbyRvzjbUQEYhglU1bWNUczayITSqT1TvXFMgckXkIyRKgkZ2cmYYUzRtbzQRIzUj0lREsRby3hTXkiPDsDYnoES1bSTIokUpglZAo1ci8lXtYCRJ0lLNUUPCcETCcycIkFU3fWdGcDMuIiL2IyPKEmdqYDaFUjSusxU4LkSCcySx3lYVISZFQSLi0VbwblKGI0brUVZXE2RyMVPUAGM2QEV4DFUwsjKzbCNzsRSmIEagkEZXgzUv3xMyHDRNciKVcVN1vzTMU0cNkVbucFYBkmcqgEUKkmbOQmT0g1Zx.GRX4xJwDmT4Lya0ImPzbzPG8VXjcGb1MEMGU0L4fDdHcUY0PSUZYmXMcSdGsDSp0FRHYicEYCbZMWdr8laIgUR2szPqXCaMUCZUozYjslbDgkbyEFdxwzYzkFVigTL2L1U2c1XxnEM1TSVWkyTyvDLDAWbCEidZQ1XOwjKRcDZxUDdU0DZyfUXnQVVVsxS0rzUiM2cIc2SMU1JnQDaggSTNAEM2.USR4VR2bWa0vVVSoVb1fCdyEFREQSQx3TSqrhKDUiYogWXyL1XC4VXqrlYsESQqHDQzDWcwMkQ2cGQqrBZIYVMqI0aLIjV1c1Jy7zUZ0TQiECUHMDbYcyM1kjYZA0M1HmcIQiLtzlKEUCTUYWULoDSVQUU3.mbiUDdkMCcFYldtfWXiclZq.Ec24hKWQkZ4MlKS0lMBU1SoUzSSk1QxYkURYSSzTUXI4DMicCLAU2aq3Vd3c2TLIldgEyU3MjSt.2bLMmUmQjb0TUX4nmQoQSZ3LSUqQiLzY2LwTWSHgkS10zX2E1J1.EZysDTKY0Ut3VTN4zLznDSZ41cFoVX4Q0LCQzJqDmY5MGYxLVcyTzbwkTdyDTV0ASaIciQxLEayLjU5kUNQc2J0kDdV4RbrUkVtgSLuAWbq0VX3DEU0f1bE8lUmIkcRQ2XYwTQB0zQ1XGZzPFbJUWVG4jSyjTUrYVasgCYEwDc2kGYysTMHokTqvVSyc1P2nTRHcFZkMTRCESZzkFaTgCYmQyRjgWTmwjRvYEL4QSUyEzY4fzUIUUUpMySrcGT1MTPq7DQPk2ZyHSMzHCVG4VVRcySRcWPiUUXvjyJEITTHQFL3HiK0oWZZEDQ2fjMmcmbCkCVVImRvAmT1cSYvnEb4MDLzrjSzLGdNYFQuwVSOgjbQAkSGUVQUMzJY4RTsIUPwk1Yn4RSQUWLQ4FRKgkT5kma27jSI0FQ2.iROI2bvkzQmAma27zMK0lMQQjRmklSmY1MEUWQWw1MH8ld1TFV34lKZAUXMEzRtnTYXAGdNoWPV0TXGQiV1jWTqcTMXEkV2b1ZEQzaz71crIUPkMFNgIiPA4hShQlMAclP0EmQZkTL1c2ZvcFTGkELtAkRiETZ3vTYJgFUIciVMUjbVYFcxcCbLIWR4kFRtXUdYsFRx.2Rzolcr4DNNUGUzozMXclYwwFU3cUSkUSQC0VTOUWVuMzMBcTbhoEcl0jUMgFckUlLOA0Swf2J3gDYq8jaOUFd5USRXEUYYkzQ14FMMshY17TSh01SocVUHM0XFojRWcUXZkGbJUFYjUDSzTVMq.mc4rTSkgCSjMkV2PiSwkjbykVb3QSYrgWTKwTNJ8zc4wFYRE2R0zFSs0lbToGYzUkb1Y1JiUjU5QmMjwzZh4BMockRHYSNJEkcXUiLs41JxYCMm8jdmQzb0TDMkg2PQkSUTEVPDgzRq4zc5gWM4ESagUWZCIWNgYlS4DyMUcUXyfCUmQkVjA0ahAmMkUCS5shS5QmLlUERSQyJBkUVNgGd5w1RPEVaXAyL4UkZPYCUksDLzfiKgM1T3b0JlsRVD8DZFclcG4FdsQiPSozSio1J3fCRCkUMMIERkAEQTgUdqrRLlkUbggSRSkCU3A0JPYWXSA2PhImQqfkKlkWXTckX4kSLVkUb28TVmgUSOUCczf1T44hS1PlRskEUvQkRqjVTGcTZMQzXtAiYnQGL04RTUcFMwMTSm4TTqUzb4nURvQzJSgCR5E2S4QFSmU2a0n1cAIkQHklVSgzLiMVa1HmPwDFV4XVY1YDQDY1Q0YiMvsRawfFalgTdzAGVtHkPwgmTtElbQI0Q4DlR23xS0f0XLomRm41JAshKkgSSoQSXpgCNkgTUL4RZvjWVyDSZjc2SBgjZUozP0YFLjEkYz31aJo2aTkWUWE0RFoUM1gGMHYjcCwDUYUFVjY0QoQSNwnlc4rDRRMFVKozQIsVZwk0J3kVZRYlK3PUZtIzLukTNnUjKXgDTOMzYLEjZgcTbVomVWo2RVMGUCciVWIiPUw1SOMmZCU1cvPCdIwlTC0TPJolQPoWN4wDct4VSJEVZNM2ZUkzLWEURoQSRmc1L3ISNgIjVo8FUIYScwHjRhojK5oVPFMCNuo1X2UVPtnUZFwlUpkSaXUlKxY2a4ojbTYyX0P0cKc0UmszXi0jdoEGa3gGUvYGMVclcVEGctXzMyb1JNMFNpokPzXDVQ4jUFwFRskCQnEERuAmKkA0bgQSdwHSaIsRbx4xJRUVXYcGQtoDNFYWY4fVTyn0X3L2XssDd5Q1aEgCbFciZ2o1JgYEN2bWP4I0TTQmZFcmUvcWdskkdx0FUUkFMUYGNqkldgI1RqYTMOYEUwTGc47VXJ4jcq0DUxDEYyXSZxMmU2ImYVECUQkVNZU1UkwjMzzTLZMUNvXUd1fSZj8lRvM0agkSNJYGMIo2ciwDTqgGVtMjRTsRTLkkLogTRPMDMTc1bHYGMu4RYsEFLDsBQmgmYpkTNVkEd4j1RsgjREclR4IzZVYkZ4HjSSolPkICT2T2avk1Q0EUPCYmLxsVTzPkbxf2SpwDasASVOkmUwo0QQQUbOgmLTUDVIEDMIA2JvfUPTk1ZyrlUtn0LEYkZCEiSWcCYVUzXMIiQRI0MBQ0Y1bmdLICMpc1PTklT0zDQkYFVwoTMusxPhUiMXYDMIQFRTQTatbGMwrjRQYVbvslQlAiLjszQjkmczLCa2zjSsczS1LTcPYzcu4RaPc2SJYzTtPTNmsBczEEYqTWMnQTYh0VTmMWN0rFbwf0RBMUZSIjTtckRv4BdxXCSuYET2kjXT0lVSgCLQ0zcks1TNEyUxYUa2czbjISahEScIUmQ4MTMpcDcJITY3UiTv3hbtI1cxkTLoI2M4f2ZtrRT2vjSJI2ZuczcTAWPPszMRE2QvjkV2rTVhIFVgUiSy4zQywFR5MUaNgTPn4hVmUyZ1fTMXUmPZYVZqA2c27lTk81MqckbDgTXMgmPvM2YFoGT281bFAya3fFZy4lMyDCUqE1XvoGVDACdwLVYlk1ZzjlMHs1JTQmcNgELoYWcNIDVH4TXHUFL1UVaz.iYrQ0MQozP2QkR5IVXv8FNswjZmEzR3PGN3bSTA0lSugCQgUiK4biaMQjRn4TUB81PZUCR1AiR5kmX1fDUxPiKRImSqbGLtI2QZgERw.UYrolbxjEVlAERWwVVxQUV3HUQxETYPwFMkojYA4RZZczXuUTRGQSMG0TdNoDTn0zbnkETo4RTuU0RiczM5kmV1jSZGoWYyPVQGYWLEUzSqblLpMCU2HWLSgSLtI0TMYSXJwzJE0VZIMkMXI1bGMlZ2b0UAszMwESZN4hUm8DcvYkPSIlMEcWSm4xcTIlQL41RZokZXglUBgzctoTXwsjPFMEQBkEa5YFRQwDLvzlRgA2Z4rDU0olc4kjdikTStTmbTYUQTgFNPMSNnQzJWYkXZ4BUYshKwIUcBUkU1fkMt0TMJQUQOUEcmgWbsYiPx3DdUsTLsMVN0EUMw.yXkY2J5EVQzzTTuUERnEEbWcSRQQkPTYESggmVyEmYFwjKqPmLzjmS2kkXiEWLqUTMHoFZg4lZ1.WbAISdKIDNGoWYkoETTIWaEk0XPMkc2cjX3szSSg2UBAUZpMia1MDb4ozLqISbywVLAAEd5QDdzTjK4szJz0VYyA0JAcENKg1Qxf1UucVbOY1Szk1S1f2UogVYtjmSqHUbqQjKjIVbgQyQZQTLWUSVG0DRyQUaJwFQEQzM3bTTH8TRHQURNgSQuYiSIESdjYjbMYFUlgkbHgGdhUzP1LjVnIUTOQEMVUzXssBNCo1YNQzXmciSlwldQM1JBUEUmEDTTYERwPUcK4TRkYFRqjjSAQVdJY0bwEFS2bEUrUjYLE0ZDsVa1T2L4DmS4EDcqMEMpECNIAkbyQUXlkycj4TYKM0QuYmZ0cyLgokRxPDbh0FZGMDYRwTTVMULE0VckkmKgQjPzM0RE0TZxMzT2clTQ4RZJkka0zTP14zZZwDcxbULkMVLNcCYEMFaQ8VRtwzMDkDNME0bVYkbiglSpElZuQFNsAUYTEFUq.GSt.WbWgUTyUSUjc2c3sBcYgWVEEWN0Y2aC4DLOQiX241cmgFRlMmLmMGTA8jZxnmRBYUVoY1LKEWbPEGNxU1cusVNXIVM1gGMDI2PvH1SmwTSEkUbTkSQxvTS3fyTLAyTNYiYzjDdYAmL0PDTJIDRgQEb3QCLts1YzjlQxPFbgkkd4YWTtbSMvUiTFU0JAEiMq3zJ4vFcO8lXq71QyY2U1bDTqsRa3EWUqg2Q1EUPgEDZ2fTVMgmV1M0cDICcKMFbSgiRCkyLEUkS2gGZVomK0zFdBUyZm4hK3bUPF4ja2XFYTs1YhUGRjgzYrYiQkAkLmUmTUMGYx4BTCEiVwDSLwL0YnU2ZpcDcyn1S4jURZMmKPMkP2Y1bFElaEcVcXIFayAWVwcyM13jKmISQrszTPE0LqX0Q3fzbEYkdOwDbRUTZFciQn4FN5gyaNYGUCMEZggVQEUiKFc2bN8FZt7FYpwFQkg1JMQlQgkkLt0DM5sBRzcTR1jkZ3sDVtAEZyz1SKkELLcTSWMERBQFLi4VS1rFajoVLl81Yg4lLugDUSUDZIEzJyY2b2gUV0QkbD0zLD8TVkkkRDkDTHQCZ00TXhkVZDEER0YFS0PEcucjM28VNvPCc4EWNRIGNgomdBUyUWQScRIjVt8DcEYkRiUkRHIUXtXDaUAUaXUDYUsFZvn2Y1wlS2DSZU4FUWIDSsQmczHjargGd1LmUxLibRQjZuAWQwkibF0DVBEyPBolY2USTrwlbSMmVnsVUtEFZD81PnY2bw4DclEDQywzcZMGTR0zXvQjb0LlK1f2btnGUF8VYkIVa27FT00jK3QCY4wzPSIWaQQWPzozLrMCdGgDLqcjM2b2TigDdykVbEM2U5UmUv.mc3wFV5gUY1wTMLgkbyEyZBkidtw1cFMSYznUSy.WTYoGMvIlSUYELuIlL4Y1RqzjMwHzMYM0TJMmMiYkUMEyUqwzLMAWV4IkbHM1TJ8DdC8lZxTzMLQmMpQDZUQzJD8VY3slMYUWMt01S3TmYogCQ1XUZBMFM3jkaHQVQwjyM2zVcMIWdzcySJckajcTbAklR2j1bosxTq8VcOcmTxYmbK0Da1UDbDMmKwTVMYgGLDUjP0XFT4bzZYolYSUGQAMER1QGboQEcmQjdx.0MtXjd2jWNvPlXDYGMDwjRHU1SqsldRcELIYibo4lTxYTcMA2X2M1X3gjXLYSNvMTUDk0LFkENyPSQSUWLYE0ZUMEVgY2PzLSb5EEQM8DNg81JyoFSxn2SgQTTVAmU38zPDwzJ1QUMzzTZJs1YyHkbIMGMqbGawMTMUQzTGAiSTkCTXsTMXomLkgzQWUUaScSPwEmZSYjaI4xUvk1UGIUTBIWVq4jXw.yTBIjagkjZzkiRZQidFEVSl0lQtgldu8lY4HCNlE1c1jTPwPjLuMicwXVUtj0LiI2QrMmUgEEQsIDaywDRPAELuYUaQQCapQ1J2QiMFIDMlISbpMlUKgFLS4xMuk0ShIySmYGS4sla4UUViUkZh4RUO8DQVYVMiITUPUldZUTLVE2J2nmYHIlQwjWaBYFY4bCcYU1MuYDV0H0M5cWMJASNwISYnETRVwVc43DTvD0PpQEdyrTXEUFdQI0b5EyauYTdvEGY4ITRLIFTIIyZ1gFLOslYKAELUICVyglbgsRLoEDZBwDVIsFTPo1YrASapwTLvcVYJwjbUQGYPkmUwb1bCEmMyg1QvgDYgQTXzXENwDlLXEmbqD2PTIFS4YjVmo1TGEGQgMCRDIkRvQCd5UCQIolMHshSUwTbSUjM1XySMsVUycCMogETvEWaCc1QmICaDcEMP8zLmcSbXsFQNUzQjsxcUEkVsEWTTgVNkkVL2.SStXjQHI1UMkWTUQlS2rBMAwDc3s1SZsTLBUDbYsBZ1AUUuMUN5oUS5gWNsQVbWEFbiMmTtLEdPclUvg1LG4jRDEGT4n2RrMjao0TYqYGRIcTNLkFNjUEYxLCatIyaUYlP2DEd1XSb3kUUSUmaqzTVtTka0ESVxkEUKg2UmMzUnoTYRokcP8TbvEWct.mUNUSYOYjbiIya2UmKVYTdU0VN0T1RvnFYIYlSMIVRtUlUCAGZX01YTgULXMSZ2giT0vDbngCYGcCRZozan0ldJg2RyEiLzkCMgMmZ3cySoIEchY0bTYTXLQTROshLtPjRGEDY3AWTSYTcGEiTm0zUGkzaXUyZMsFM24hRq.GU3jiX3ETNk4ja2gSSy4RdtvFZggET3kyLvbFTqXVchkSNXM0bU0VUxTjb4jjYM4hTWojbwrBazQEc1cFSigid3kjSjkza2bmPMEDdEMFZ43lKDIEUmQkbScmQxPDQ1UTcisFcBYkcygTTlAmVZQjRNYVVgomaTQjYUITTtbyXKkWLVklS1bzYzHTMvUUQQQEZOUGZvL2ct.UZyPSMK0jcsIkVOIVdHkFR3HjbuMTZEEVPrcGTSIjYEEEQwfUbCQWNtflL3MiXEQ0XOcGUzcVdG4TQJkCRnIyPvXkdOwldvEyQTIFdVAyLtoUM2XVLwHUb4gkbSEUNhs1RBQkdo4RLoIiVm4VLyLUXtECdlEjQk0FZ1DSQj4RMigGRkwVNJgDNWolPkUDLRgySrgmMFEkdPg1R5YSLlQlSKU1QyQERzojP4PlQ0nTVREWdjMidKsTdQcUYxnjPVwDVJkCc2Y2YAYkLiQiRZU0UGkWSyDWbIIjYLQ1MyDmS2bTYRESRWYzR2E1Xyj0JugCUvkCYXcDZWc0PTg2bIoFYSoGZyT1L4fDNhY1URAmKoc2PYsDbAIGY4wDcJESMtIFNl01PKc2cyTWNOcUZzE0SOoDUoIUcwYlMJolPkc1RyTGZ2DGL23xTJkiTCgmczDWN2DEbqQVcZg0LRkjV3YGcMYCYgkzJEQlVrUGNEgGVYslTZElThUjYwcESkg2XjEyQ4wjcsYlbJsRdEITSykyZ2PibLwjPiMVaxrxXggza4f2Tu4xaKMDQBEEa5ICUlc0TqckRuMFLvEVTyYlRkISdTw1aNcDL1UzRqfVQXAELoYkVCU2MzImTN8FZ3nkdHkiQY8zP2slLykSZ2EGNikVY4XiT4I0Q0jWYnEiQWMDMBYkQXUzThAULFoVTqUiZA4zXzojYWASUAg1MhoTUO8DazLmR4nVYykUMzjWQzbUTm8ja0PjPKIlQtAUbgAiPrgUUKUFaHMlQMwTLMk1JkM2J5MlR0DUdho2Y5w1bFQ2cAgUZtk0Q1QiStcVTiQjMP0ldJkGdGkSPxXFRWszXAUTc03lXssRaGkWZYMSQvTVMpckLoEUXhYiS3cVVnImTvnUY0bWNWMiVZgTMjkySqcFL4MlUN4TSrkiSMgDVYMSMrcVLtACNAgWdh8DTtbTT2vVRvUCQLYFMCAkLhUCblAyREg0S2gjR4cVRZIjM4nlKZAkMTY0JwTWXKYFSHMCTwk1LvLkSvkGYXEmVMAUSjkiKPMSamUTSlgSc0cSbUIyXYgUcrMkUXcGZjISLZYzcwbiVtTVcm8VdzAUY0TiUhIFdUc2LFcyXQ8jQ10zZZEGUw.iZzMWYpE2ZA0VVoASby4laGYGS4b0aQszQhEzZhIWSybTahoFQ5gWSyM1Uh4xSh41TX4jTvTGVs4xJqHEYKUlRAECS1zlatjzPZIlQ3UTS5Y1T3giVybVMtnUTvHmcNAiSTo2aTIldVUTYwwTRxjWbtEGQBYlUJUGQBYmZpIEVM8FVrMVRoQ2XXEFZlkzTLMFQNclcW0FQ3Pjc5EVNlQ0byQEayPUaSglLnAmQxDySjIGcIMDR30zbpEkXOUCN0PCdkI2R0TzbMQzbL0DRgAmSgESRIYVR5oGMKszUUE2Jo8FRx.SbUkCd4L2MHwlS0PEYwsBayvjP4PSPtojLgkGRoYicgIFaKgmKz0zP0HVaOECZGMjMSIyQUcWM5ImShoVPBUjbAgWZiojMh4zaXgTd3nmczUzM1EibwjWMzAkQVclYDg0UxjkS4nEQ3XlPzkjYKQiKYEyUrQiSIIELComVmcGdPwFaygldpsFdxsRLCMWd2LCT3HUXkYVLtEWTqrlbyUybosjLvQVdxQ1UZUDQh4zMIcTMt8lX03xYlASNoYERgk2JVcCdCcFTx3jTlkGZqnkXJkTMQETPFoGSqkiZYYlcjYTR5IidOIGNU0FTqX0ZJEDUKI1XyAiM3T0TTYTaZczQNEkdHUjQm0lVXUFcug2TRYVbH0jcXomU0kiPGEGTIUWUpslUHESQtEWUNc0YGoTVwb0Lj01MFsTaAMVXjQyLusVVZMWQg4haDMzcxgjPTUjdTAGQw8VQJczMUASL2DWLTgiRzPzJEcDRgAUYIAWY4giaBQDM2YFbtPSamY2QGIlXR0TSqIGdZAiVqg2ZOoGUSIWYwMkVTgEYHolbYgDLVMkSVclSEkWXyAkLyEWLNA2QQMjPgYSMOg0Z0LWatwVb1UmSFQ1PAElSy.2L54RVBEyMPYjM5YlMHIlXPwVRNo0JogDSwPiLVUCYKg0amMmdlQ2aNI0aIkGZybVYSIDbtkibRAkYZYCMxcER20TMZsFaKoWMwwDNBo1bg0zPCIjMNAWQigmL1rRVAY1LEIVNJQkKjcESUEmVVsxRn0TZ4AmXTEjL2jVcCQSSYU0TpMTYLQkb4oTXLMjcZMUSUclbmEEUtESbF4TXtbTV4HCN1.WXgQjYNg2JsQyZ101PuIVT2o0Y4kGZwjmKtQTM0cGaUQjUFgTPug0Q1fSbqElRUwjXWkSR0byZZojLTE1L0MEUyrjbIMCLislaVQmVNo0SCg0ZW81TuAkaHM2RKIFRBgFNzfyYgAmMtsDZyTUTFACaSMFRRoVZGIjbBUDL0TmUho1QCwTcF8TSY8Dam4jLxUjT2LzJPYFZwUDc3jmRtwlRXUkPL8jS50jbrkTav3javHGT4bTNvA0Lzf2MwHUNv7zM1cCSjk1JxcyagQCVjoGYxMTXvbmK0HSSYk1RJIDdQM2M4ECNiQDNCEDUKc2YQkURHMUZ24TZRIjVxblZoIycsIERiMmR3DCMtUDNOMySIM1byrVRRkWTFcVd2kFaSMTMVclbwLmTtsTSZYjVDIVMRYzJiUlXEE0ZvMTPoo0Y4XDd3zFMtIlb2kGZ5AEQQQiLjIFZLwVSqQlZU81TKQ0a4TEbzQSMzPybj8jaHwDY3ElVzX1YzM0YNgiK4E1aiIlRQAEYLUCYvcSNNc1XiIkKi4hUCcFbK4VPvXUawkzLuASTIkTYCgkTRYScAE2R2rhKOIlSJczYKEkSTgUPXYVXjE0YUUmMTg0Yybja0vlKFoVTTklUw4TQWMGMRgzTrAkb1.CVwE0RAASNCoDTPYUQl4VZ1rDZxkzcgQWc00lSBoGSiQSUx0zbtgiLRIFcyrDR1AUQlIFMhgWXAs1LwzDUUk1LWQ1JyDFZwnkPBkVd0vDcxYiPGkVbRMWNSYlLZs1YF8Tc3AmKGcTRzYWaKQEY4TSMwHzZNASQNcjYssTdEIFSUkEUy4VVKIya1I0ZYoFcnkEVoESaxLGb43DMV0TRrsRRTUSP34BbBITckAyUvk0JFECQ3PDY0HFZmckL581Sv8VPEs1UIklKx8jT2LkXXE1XDwzR3IyRsUFNj8DUHUTSFo0bD0TXyYSU0L0RtfCNT01JRclM3LyStcycso1PEE1Y0PUSpE0YCQGQEgUL2AGZBkVb4vDYxX0csYlXOsDTXQmTqc0Uh4ld3XjKp0zb2MkUXsxPyfkKFwzPXYSXicjRIszbqH0YAcjaRQGcRQja2nlMwQkMIkmRngCUxsVTnEjPqICaYkFd2MiLQYSMxDkS0jCMxDTNsEzYIQlMAckUNoFYEQVbXI2St8lSRElMVYUctnkPxjTPNESTtjlbyk2RRo1P2jSPvY2axUkRSomZZQGS0IlSyDiPwoEYnISPlEWMLkFYZs1Q3kWMjMCL0MEYxzzUToDSRg2YqQmRqXkPhokcxwjdnEmXpA0YtAmPpcDbx0jaBUmM0kiK0DmZh81PWk1cqUGdvMEbWgjbl4DLOoVXzsxS5MCU0YUYY0TV1HzMoUkYDcWXyTlUQACNlEFMqI1P4.CRJU0Zq7TbjIEcJIicVM2QZI0bKkiVwcEUP8zUgMjbtL2YzsTahQEcwXTYwbUXvHiZSwzSRIEYFIyMuISRBkWLIokbAU1JmsBQmYjKy3FYlAEaSY2M5QiS2MFNlQmZL4BbrcCcyPmSygFSEQVUBcja1gyMXACUyciQ1bzJgQlQWgFVt4TMiACa3nWcxDVZiYGbXsBSgU0Y3rFV2LFNIICUT4DS4HjYWoFNhYVNT4jbkYVXr8TPukSTEczRXUkMKISLg4lKyHzaWE0RIcid5oGSAICaI4jSy0jYgQ1MZEjX0w1bOUCSRcib30lT2EEd4j2cyfUY3gUaxszbPQ1azwzb2MGb1T2aoIyL0MTaiciZy8jdrcUVxMkLU8DLokkaIw1RE8DLPMTXqLyQQ01R4DzLhElVBQyTgY2MtQDdjMVRLwjLCYGRL8zUjISRwg0cqzzSvAySlElbCQERvfzJ0n1avczQzX0ciUSL10jX3UVX2AWcScidQ4zY3jUXzLmSRU0Lushc1IlMxHFb5QTLZkzcHYFcKUSNqgkaqImKtQVZxUURVYWdYE1LJU1cN4RSTQSNh4hRSYDTQwDVZE1anoFRLwTcVETThcyTrYyMqkUTiMmZAokTYsBT4g0cyMFLq4lMMg0JGgmKmIzbLQEQ0MyZXIDUIkDM4LkYMQDcvUFYEsTMTImKZgjLMU2P2HVQDYGYxkzMv0VL58DZzYkc5MlZEYFRwEybocEZKAkcT8lX2bjSsQyLw0jd1zlQ2oWT1g0Z0MTaMcDZxLjdXkSUrASRPMlXIMkYK4xMYMjVMshYnU2SMM2ZFk2J3.CVCI2T0g2XCo2PUIWLvM0b2gjKWckZFsjSxo2UJkVagkzbXcEUiICYOsxQGE0QhEEdqjEaREkPFETQ5I0cC4zXUIyavciKQA0ZwvFZ2g2RTcUSJI0cGMCdxQkU2.kZ481cvEjZzLUSBkmM2f2YxYlRsk1TFIGZRU2cBYmSUQ2YiUlbDgGS3DSP4TEcP4jQBIybqcmbBw1SCQjU18zc2XDdwkVcXgSXK0DMCI1YBUFTw71QVUCdzrhL0rVSFkyMvEDb1.2cM4laJYmVVs1LqQWLyUUciEWVIcSVTsDQ2jkc3LCSYwlKVEDS5kEMmkGZvDkPUcFSFwFMjUCZLUCUugWMsAkbSgSPR8lU4P1P5wVVvT0SJk0btzjThE1b0vDVPEFawbkVNkDdWI2MAc1c1wlLmkWRwIVVTMDMqojSSkyRv8zJGgmQLcyRuc1aqn0M0UkQZkULCMGUOAEbZQybEMSbm8lRq4DUGAUNEUFS5QTZKIDZ001JMgDZk01Svg1ciQkX1cDLncUL0XCVFU2U1QiVxEGR47VZWIiQhcEQEc1SzgGVzokRl4xLZc2c2IzYvIDL4TDTmwTdLwjKhYTLwLiLHESbwXSLpgldWA2PGwjPgE1Ru41MqXSLBozM1olUXIENGgSREM2YNQiSWckRHsjTVolb5kVYR8jUvo0cq.WSJMEY0T1as81YsQ2RogzUCkGV3rxQ0f1TxUWQMMzXSMTciUWbGY0cWEWdocVRtkEdnQEQ0zlRyEiQmUFbmgVTkclVSYjL44zR2cidnESPOcVS4gGLxTUdiUWYwklUsc1RLYGRFoTZVs1YvY0MzLFVtYlMpQiaskFR3IDNzj2JxQ1QEImVZ0FMmUWVy0DaNgkUUkTR3sRTjsTUwkzPLAyRVgTNLEiQXkGazfWXLETYwLUXt3zbBc1Pq3FZmg2XZQyRFEWax3zQiYGTNEyJ30FLyMUNVYkQQkFLr4DMhIjSGg1aJgEL3YlcHgSRH8lVTY2MN8za0fyapM1UJYycUQzbOMiKGIDQy.SY0cCU1A0UDUmR3XlaqozTk0zJuQza1YiMhkCQiAiUzciPw4DaJUDSooERVkkThMTcWEidrIFQwv1aBwzMiAmYhs1c2XiaNMWXtDTaR4VZAUmSqUVbwXmVAUUNncyUWc1MVIld4k0LwUFSY4BUzU2LqYTNtDTbksVRjMDciQlcK4jXuMiS3ACVxQWSQ4TYtoWRt01L5E1ZzvTYGc1J5Y1bNICSwokbMQlMgkmazjzY0fFQOQSSkE2QzbEa3oTXmg2XmElaI4lKIgFL2bTTAwjLxgiQW01c4b1ZjoTdHcmKFcFVVQzPLMkaW8jdJokbNYGS2PDVvY2byrDdkU0XZIVV2sRb0r1ayImVBoWaE4BRqPyLsYjK34DSgEFQ13DQsESTPUFbToTX1gUPEcSMswzcLsjbLUSSrEmSsIVagAkcloUdrI0U1kDMRQTPisDVsMGRDkVMLEFVzQyM4.SPK8TU2XERIYCcGYTcnoUQw4VVXgzUBYzQ3MFM1cCcrYVbPgkQUUCMynjR2jCNPYVNjMzJvHmPngjcrkUYJECboA0LnEyZuYUTKkkQMI2XxnFQTYja0g1QHY2XgIyXLEmU24lbtclZRIyMRc1Q5QSUJM2UlMWX2gDNDkFcocyazgzZUQlXyj2JqjyPFkiUT0jXvsBSzAkRu8VYtoFbvQSbLoVLvTFcrsjd1bzZ1f2PTAiaYEVUGkzMq3jKUkSRWEFVhMkTS4hZSklSy31R5EiZok2b0EGSkgDVUU1MPQjLJkmbjQiSjoWaHcSSBoFbKsFTgImdxQyZGMDLWgzcCYyYWsTNK0TNEYCZtUlK4P0J1IEVLgkVQMEdAEVMPETVhsVPJwFUsUlMqIUMWYVQVQWM2LVa1vTLxbiQjIVb4MUatAmX3XVMGMUZtDzL10jYTU1TJImStDkMwTEUtbyJ3HWXPIGTYYTcvU1UmkjVm8zUv4jRv4VQEMza4olY4YCMtzFU0A2QVQDZWgDbBkCYIQDYAclYlciQvYichUDTtbmS3QycFgTatL0TtIyUs81LxcFQwf1JTczToQ1bxImKmIlTD4TNVI2SgwjbTgWcUwVaXACLKc1TVkEM0QkRMkkL5QDRRQCbBMyRzUULI81XkASQrIWdNEkQTIkUGcVQEE1cksDbpImXtYCZt7zJ1XSaZE2PVElXMYlMiYyYTETQrUUbwTlKD4VXx41Zl8jdQQyYhgVMKA2b34jSQQjZ4nEdXQSavD2XjEmQMYjY0AUcBUlP2fVdHA2QSMzTSUzU3TyUjMmVzomKtPEY2oEbRQ0JhcVLwkmXwnzZoI2ZUsVcIc0Sl4jV5cWY1bGYxfCVEECbGYkdKk0Jv7jRCAmSAkiYFszZsg1cXITLZo1YlI1SLMURnM0Z2QWXgY0L2MDS5AkYS4hYzDUS4fERCUWLVgSS0M1YzIiYLEmaR0lawAWchQkawUVRYIUXyslLAk0M3gkUiciYxEkP1Q1J1gzJgQlcgITcusTTvkFNyY1ZtbkUxPjbyH2P5EkZXYGVvU1bPkzUDACUI4DZrgVd4IyT0c1clQCVXklTDU0UTEUSKACcXITUybiPAsRZLglc1MCRzIldX0zRZkGSpglQNg0QMcUdV8VXhEiLtASNt4jdAQER1cSX4PVM3MWdG0jauETRwEDNiIjayLyX1sxQykTcwn2Mx0Ta0LyXCACbnYFMyH0ZrsjcREDMBM1QAQVaq.Ua3XlaKE2JzfjPzn2MtjjdHYVNsQ1a5QUPKo0a18lUZgTTm0Dduo2UoQiP1QiXtMyRAojRv.kUDAyP4cTY2Y0JDQVM3HSd1jmRUkzMYA2MggTcFYja1M1ZXkFLOcFTQgGdJkGV4PVT3HVaggDdyL0UwcVVX8FTzPFVy.STwEmLKYCNggSb5kzSsEzaEs1RgUSY4MVcskkcRMEaRo0bDklQwIUViMkTtPGS1ElZwjlQhkWYocGUSkDVY4BYU4VQ2X1MzHSUuE1btIzQtg2Th8DcMczb5gSMJEDNnkUMQsVSqomdEQGR0fVVzcES0EESCYkSyTWcxQ2UPMDVLYiQxITVzn0b0PCQSMjPyYDVyzDaIYCUNEUX1.CTBcSUx.2Zqn0U2TjQ5U1aiIVT2blV1HGTtg2JSojTVIWLtzFLGM1PDcUSxU2XyT2cxT2TxMFcHI2TlwzXhYSdWAEZXwlY4j2RoQyLREjUvDTRpI2ZGYDT2Xmd5c0RwPSQx4VbGEzRoAiPUo2ZK0TNxfkPZoUL5U1aCAEa0kST44TdykTXmMDRhUSNxvjT2oWL0nkSRAkTu81J3kEQPEEcoYTTQkWYZgTYgoDSmYzZzDmU5ImZVsjPw3laR4zcNoEY1U1QpsjPFckQ0okQqs1S2XTVxDCNvk0XXgySnc2UEIUYlEiaKgmSLgmTz8jalgGTnY0clYzUjg0T5I1Sm0jVIoWN0TWdmokSvwVdtHjXnYVYEQzLJkkTrMCL00TcDMjKTMDRSMDToASdwrFYAIyYtTWYKUDLTI2RO81MKcjbJMzbwz1TKUSdHgDUEcDaPszYgwVViEmRy7TUhYWULYUVvYWcEEmdvE2ajACNnMjVCoTdRgzX5cTPRQzcrEVVOsBa2DkKIwzXkgWMromYu4xP4c1JSUiQKQiKgozJzI2QCcldqkEUtMDZmUFYzLzbXIjd4jCSiYVbwfmdMcGai81RlYDV1olcwYGZynUcUIGTuslYBQldJgVQugVRAgWSJkFa3DDNMo0RiwTRXIGZzPVdAMmZzjkQ0AUbiQiViYUXvg2SC4lY1rzJ5sjM2TjRFcSbUYWY4TmMioVX3ICaAsBbPoWLpQCdrIkbDslVY8jZMkEYDkyQyX1RDE2a3cyM4ISQP8zR2MEbxzFYLU2TWYUTPY1LIgDUPcjYSU1XTAEaWciPgI1TgoTcTszLIoUZMYDMhUiY2fGYtk1Xq0zXqfFa3oDVBwDaRUjUGEjaY4TSvrhatH1ZhYjcpgDQq4zXuETLiczQw3BaMU1Qv3VRC4zQDclUpMGamoVTvHWTI4TckQjLqklMjsBNEQTRL4xRjckMq4RR3MVT2cUPBkmPTg1QYUzUMU2aTUCc0UkY1fmbOszSxTWXEsBcRYCTmQSUHsBL0kUX4cTaGsjUOgkSKUlTEEWNvkCRAYzbwYEQSAWQFYTXDUUNAY1ZxfFYh0jVGgyP2b2XqrxbEIDYznVbxQSRAYzZRkVZ2jzPxgjdqQGZC0lYGcmZ1HGMtLSR07lSpEGYFUUc4nVYXIGa4clT5shRyfUQhg2S3cVRAslY3HzZIIycQUCQlQ2MnkDbuEzLuomZmY1TO4ldnIjYIMmduUGbxUjZ3k2LvkCLwfyZ0HWbtrjT04jQxUEVrISdhAiTEIFU07TTF0FNtUkPpQEaHg1PRMSVJEjPEsRTioDNEYSdmUEaQEUP0bWdEcFQZMmdgcERK0lQhM2PIw1Z5EzZugUXlUiMvgVMGYzL33xPxHDZjcGbYMyJqwTMwLkdzkWSUgGUFUGND4zMCcFT4nUSFoWTyk0QlETaXciTIgjY5gSTMAEaOo1JNQ1ZRgFdyrhKmkVcikyaPcDUWoTMIw1THEyJQYzcOACZjIjTR81b5QkLCUTPZMCZQUmPt.0Pmo2aZU0SzkSTNMDbBg1XvUUbyMzbzf2aPYzbREGdkwTTRIUP2cTVEoDLGE2Z4zDSKY2UXU1YTs1a3QjVrQjZRsxRCoDSEU0XrAUUKkmUwQiZxTTYJ81SyozM0PGQSo2PukVdDQENJcVN04DNmgiZ4fiaOIkYqHVNgE2T5kmQxT2ZwkFYQciVMQiQSMScwfiUSYiYtrjKlcWXngUNRI2LnYyJ3fyPkoUavcWMwAUcqQlLSAGQmYkYYQFTEAGSqYjK0fjTFMCbsk2Uxg1MHc1Y3.GLZYVTuQWRwfGQIwlaG4TUQQGLsUVLkkjZAYEL0U2QvMjYpUWYk4lV2.kTVcVYoM2Poo2QscVR0IkaOUWLgwFNEgyYuUGZTMEaFs1QpYGT2fFTNAiZCc0cznGUxUWLUUkTT8ja3ASSqMjSS0FU0XkSvElUSUGMMgEYvwTMK4xQlMVdHYjPwflRqUCbrUFSTQyXr4jUiIlVRAmLLcyJigELTQlVw8TbtHiMpsDUPkEUFcyLhIVZ4D0JtMCVQgGZ0z1PJgTMXYTUycUXybzR4j1JJgEY37lX4PVdXgFQ0T0aoUFMzTiaGkURSYGTg8Fcz.kMzfjSJcjPic0anQFSz0DZSU1TWwVahQCT10TLsgVdAY2QQgTZ3USQWUWL3LiYI4Rd5ojKJ8FSuMTPKElM5szJQITZMYiMjEGNCo2LPUEb1c2J3TkcZ8lYEMUM3fEamIlQRgEano0RE4zR2fDdtASNqIiVF81JqnmL3U2QEgzZkgTVB4FTTglKmICcHoGVoMmKq8TN03xbSkUMJokQs4DVqLidyn2YFIkc371UqjVQtbUUHgiP3UiVSkUZBAyQCwjQ3gkUvsBQqb0Pz41UqMSXwUjaEMlShkzY0sVahMWRg4TXMAUTXQCYw.yTsomQWcyXsIVSy.kR1YUMmoDMgslTIYWYEIEZokiZl8zTLoDcRgDZ54zXTYGTokzaUEyaXwVXlMSNZEVMJc1Lok0L34VXUQTUFElXj8TZlMyZzX0cUIGVNEiSzXidNUjK1PjarEyRCc0JlQTZvwlL0MzaPgiSmc0QuIVPN8zUZw1MmEDZZgVTOgVPNkTZ14FNqTzQUI1XrUkd4ckSlwzYD8zL2bCZFQDM1zTUn8jd3Q1cVM0TEcSUwXSdjMWQzEGNwDycqvTdyszLJsVdEISLqPzXzfTd0LTcrYTMEEyU30jck8lXj8zZ3QGMjAiLPIiQXYSYtTFVmkUP38VXzcCYZQyczX0Tp4lSycDUsAmbqglQPIGamU1XKIyRv8TShgWXzXUZyLWNFoVZAIUd3bGSwIVZPojZvIjdTMmLLsFM3LVcMQFdEEmMpoETzPzb2fEd2QiRQczLrQ2TrkFVMglRzgScgglRUwTLnMDV4DlX0UjUZMiTxnjSFQTZhwzUxjCbPolUSIyangERLElVIYDMzXyZFE2L3QzQBcWZ2EVbWYVazPkb0cDQLc1RyTWPy.UPJgTQzX0XxMkRPkUMls1aFkTN1UTU4LCVWAUYEkEL1ImMxDVYtASbDkmZEkmK1EWMnAkVWoWcvP0R3QGR17VVj4xXVIlZjgVTnAWXCciZzr1LXQVS3PFR4MCM1.GRxgDYzYmSroWRF41Us81RwEUV3TkcPE2avYTbHsxY0TiTEcER2MVTxMySFw1SBwlZyIiMhshb27Tc5giPzDzSgEjVg0zajMWbOMlPNUWNxAmaWQ0L0YDVUQVNtUGUMElYJgScGoUYqkFTRo1Jl4xRr41Plo0QyHGVh8FMvXWMJoVVWsBcGglSM0jX3Mld4XUYIczbrIUZHcyJ0Y0ax4DbWYGRhI2UYQGRxnWV1zzZ1zDYnUDVwLTcvgTUUcWLMETQp4VNrUSawETdkIEazLEaGESUB4FTAEmLqMWbtPEc2sVVLwzRzQmR3s1PpcTRwDzb4nTYxL2PCM2LRYCaSQDbhQzTxMzLsITU2fzSFslQWQjUMkDNtYmRzHEd2LDYhMUVDwzTCslPJYjTAkUR0H0XX8lUlQ1aXUlQXkDROgkUGcVNLk2TZETaV8TYpQCTFkiV3E2Jmkib4cTQkYDNY4xTjQTNtECYGA2SMQTYLgyUvIFMHgVNx4lcNclK2.SaQgUSq.ULzI1ayzDZwYVcvokPAQVTnk0YVcVYSA2RVo2cCk1R0sDRBUEdI0jUJEUPQYFN44lZJUFcX4Rd0IyL4cySFcGZ2.GLSsBRsYlXBgSRAMGaDYlb1MlXAsDUzbEdtMUPNc2cpAyM1DSbxgTVAMULBkjYyLlb2I0QIMiRxEEaGk1UnUWNyDGdP4DM0.0TPIWMucSN4QDcxU2JLUWUSsTNVomTDgiP1TSNtI0aggWQT8TR0UmcDMEbNUWTNI1SwDlRCElV3XiYNsldDYVSI4hVEoWSDASaRMUc0AULwQWa24TQpcDYZgVLBI1PQgjZVUWaLQTP0gWdYIVYpISdvUGY201Tqj2bw.GUB8DNDMEN1Y1PSA2QpIjdlgjTUUWZ24hXq01JAUGZxf2QuoTaxszP3fGZHkya1kmb3EicGs1JoU0LUcSNS8DaHQDbTMyaMEmT03BcZoza0bzJL4zMtXlP1HFVQQiTQUSalgjZSMyLtoDSMASVBkkSzPiTJECc08za1fTZmgjSYIUS5kiZgAkPCQkdLQjc13RYMwzZ0fSZ5gEQy.GasMlayPVaAclQrg0LIUVXx4RTuMTdCcka0jGRKY1TAM2QnoURHgTZkMCbHgkKg8VdgwFNHEVSgcESyXkahQSXUEmREM1PxQUQ2f1cRIWTuI2R0YyX4k0T1EkUQklRy4BbRslMrMTPVEmLro0UqX1cy0TTugVQWIGQIkjYnMWUF8ld24RSrIldjEUX0L1RvAEaFICVx8la5MEQW4jYy.kZWcER1rFSwkSNHEWPxfkKSUjLJ81QCwjUIMSNtYkX4EzPMoFaK8jSxTmXkElSJEVaQoFMwf2PMMWYtsjPSAET3EiY34xZVY0b1YmRDk0MOEEUDAGUzTjUVgSR4kWNCc1MIUkc1gDLMklbiQCdDUFUYcVRQQlRxbGbGQjMQAScVUUN0z1Su41RkglPMwFTYUyLFYDRtrhTVgkd0k2JmUSLHQWQ4ImKzjGQrgia4kycsgiPN81c0n2ZLEmSUEmc2kyUMUTQRMyQAM2TRkFTwrhdsASXrkja4QVZCg2SrUFVUQkasMUYnIGRyo0QOojM3jjK1s1JA4BT4IzRkYzQ2z1X301Yq8lKBIzaKUjc1.0QMIiUiklXvfjUsgEbqwjQukFbwTlcMk1YWISb1Ejc0PCZCglX1UTREQSZyDjQvTUX3PUbA4hP4MFcGAiVvLkYOQGZlAWYMEjPIIiM5kiQ33FRsoEU3v1YKoTYng1MGgSRqTyUxblKPwVQPQVdxbGY4A0bx3VbZo0RyYzU0oGRus1Y4c0TSczXE0ldiE0cyAiVVYTME8TRr4RT1fUavIEYrImUVsjRZQCdyjkPqPFNqHkZ3AiRz.ycvcWYLUjUNcUPZETMsoUaUMVSEMTSW4BSxnlRRE2c2EkXtUWSzPCawbFS3LjTGg0aOwzMpgGRhYUdUc2RPEzaWIkQFQ1YLAUPSMWZZMVXTQmLgQGa4UDUtLTXu8zREYVR1YybOgCbUYEZz31MiomLSkiMZgWbrwjZ3DiXzvFRLMSMigzUzYlLQgjPNElUGwVSOsjcLUCSI41UokiVNojc2cCdUIEQUs1Qx7TdzjDS3YmTGQUUtr1Y1sjR13zUwLkTUokTQYGUwX1Tq81bxfmQCshP1YEQi0TQIMlaK0FS5ojdnsFMO01PD4zZRkFUTQ1Rxz1cYgENrckYGUDSgQjUYITXzUWStMTN4UkPAAySBM1PrYFRocFL4rVaUgmZ081avU1P1fUc3vzQyUidAMSYXYWYSAUYOo2THwlX4omYEo0QggzTvHzUqYSaYEDLF4zPNMkPyjjZtEEUwfzb1bya2AWcW4lTFIjQ1ETNkEFLwUVUqT1ShckcK4zcNsFYH8FLtgyJkgyYzgSQwQlU2EiclUDT58DSxbkQ0nmdMUVPBM0TncDUVcVahwjREQiP1HUXAcVZ4jiLwP2avzDMxo0aZMWLv.iUMImSgwjUoITRDcFRW0Td0A2QFMTaLkiZlcyTqIjX0.WLIUDatTFdqc2RgUzQJ0VNX0lQqzFMpU0bhMySCM1PGEEdwklLA0zTRYjY2gzJhAkRXcCaUQjcxPCL4TVVWo2YNU2J2Dkd0TzSKMCQRUCaE8DRiIjTxgzM0EmUOcVUgMybwIFTm0lRqPyRZUGbWwjXBoWNlUEcOUjZt.iKJIDYy0jLE4RUiQTVRcjYEcTNzjiT5glT1f2SZUFbEACLsgmUJ41cGAWYvzFQIMTT2HlPAMCaDYkSybCNIgjck8jVjs1Zso2RF8DRCcTVr8jV4byLKYUdx3TQ3TDczb1T2UiUDUCNRYVdnQTc4o2SPYWLhUicls1ahkCSLQybGUiV3YlSWsFcAo0Y3YmX2olZA81cD41aXokVTAEVjQ1RZQ0XDAkMUojRNoTNKEFLYcCMIwFaqX0XT4xSjMCcGUCZvwzLms1MTslaYQTc4gEdxbDcJokb0XSYG8DdjcmdIISRTsTXvsVaFgVZLgDUFAibOwTLWgmZlkERtUyUGEmTzfFazHGLvDyP2PTTskkUhYGRPAmMZwzY1X2c3c2R4PCdFMGcnAmKj4jXx3xRYg0PyHWR0DjT2UVcNM2JHgjM5gGNEcCayDlSZ4lQXwVMIYjQgAkRGYzQM4lPH0lQ2gSVuclb2HVbMYTThQEbPUWdJUlLwfVYQ4TLlYybDYTYDAGaQkTMFgyZhE1XIMDLW4BNyfTT1MEQOsBShoEMmYVRQgDRoASS0sDTWEGYzrjUw4BQIoVUQQDUw.kLJcFLuwFQqzFalMCYZEFVuEycrwlL37jdXshKGQmMIgzLtMlTzjEQG0VM1MCVAkGN0zlZH4jdJYTavUkKKMEbKYmXKEWaRslbNkiLlwzbZAiZyPWV4IidEk2LYY0U1DCbIUiYvcVMmUkd2D1R43BLQgSXzDDTVkWZJYTMuMCdzX0XXMkYtMUZPcTZhojTwLWXLwjdTEmZwUSV37TRmoWUMw1cvYzQDglTgUUPjMlVZgVNtfyQDU0YCgFRukSLzEmYu0zLyklT2LiaIYEVg8jdVQUciMzYlkmXjU0bq.0TjkyRlMUS3Y1TVold4.WTJgGQXIEaxTjXlMVawITZREVSY4haXUCVFkSQjECU5ISaGMDZSEFQTAka2LzLtvlLEMkVnEkYT0lYMYUM3H0QiAyZvzTTzXVZIIGU3jiPzYVYFAiXpoFdAMFL2bCQv8zTxLidPoEaDI0ck0jcmg2byXjaxwDY0jla0QFMG4hdTolangTbxXEYKoUXhMmcqnUMYIGajkjUxbTPjEkSwTmdtXGQKcDVr8jKE8jdwrRMXQiSHAkYnUVcSojXt8lVr8jPhkSN5AiXPMkSxLlS0shK1UWTZk1UmsBSskCUhkkR3ciU3HUblomM0rxYSMEYx0lR4rzMoUlRVITVJYDasgCZ4oDMsc0cCshd28jVyMWagkUaHQ2R4M2ZKE2XhYTMGYyP03xQFsjPjM1bJgVV4slKlImU38jSqM2bCECTrQGcNIyakk2X3YmSTAmcjU1PNQkKjMGTwclLTgmXocWRSUkL2ASYzMFdQgiSR4hQHYlbxgCLS8FS5MVR1DkQEgCTTwTPQUCaXI2axIVQ0.UM2H1PrUEQngWS3TjLoEmMuMCbv3xSq8FYEQVU4biMn41JhIUcwUiYD0lTvTCLh0DUB0jb0MGSjgVQo4TUEMkdIAGLOEkVtnGYzE0Rkg1ZBgVS1PmSsgjUDgiTUo2Syj0awfCQuEiMgQlSzjTLOY1UTo1XuUjcgkkdPACTzE0SxMUbig0S4I0Pmc0cHo2QjY2To4RcRUDctPEYicFL3DkdY0jK2YTbSslPAkiaFk1XZclb1XTMgkUbNM0QFU0SMk2MoIUN4sBL3QlVuMTLyfFUtbySnojREUFTnwzYvTlcVcyP23lMsgiKs0FQ0Y0X201SMoGSh01cRQ1PYM0bZ4VSOgzTyMzRXUUdlQFZMEDRGY1TrISPwn1cBYjKVwTYSAUZ0gWSgslUkQmdsc0SjkSPsMDcNMWalYERyDkdwLFR20jZKclLHYyYSImcyA2MtrRX4XFZ48DYwPyQC4lKNgyYPYkZYEjVIUFYyw1J4XCZ2MmPRsFNlcSZwHCcmIDb4jGUnUzMIM2JMUmTp4hYvTCVUgGSzjzbiY0UhYVQwYVXggyUv7TXPIzXwHUSpgFQAkiV4YTYDo1a4UzX2XWQuQUU1rFZqXlUQEjaj01cuUkY2fVXwnlPlI0btIySRcWdGACdxDCTpQWXRsTYX4xLsEWcVciPO4BVo4RLrMVcDMzXuMmLuwTchsBNqXkTyfWN14zaNcyUhIWMU0Fa5klTCUTTFgkbJkjT0jWY4rTX4MWYJgUd1LSNI4jX2ACMrYWdwgWb4jEQB4BZqITYLEmPigUYn4DaRYmU0jjcmMENJQ2JqLSZ4E0YgM0Uy4BawLmYwo0SqMzbBckbxPGVpMScsQyRZYWYkAkTRgyQzHUcokCLLcGNoQCLAEmU1X2MqDmQM4VNvnURTQCMZEzSPYlRtgWYzPlVwgSYSMTTUY1XtjmbtTWVtTFYq3VXsMEZDQlXJEDVjkWM0fzaL8zMLEGZhYiYQcCaVo0RhACSroldRETbS0VVZIkXjcSMRkDN2M1TAsjUpomSwD1LrMiPAgySlomZOMUPygiXYYFVEUiMuQlazMENtQWYxg0ZGEEM1DENTY1SsAiYTI0MJ8lcmQlLtMULT0DbV8jLNYjYFUSQCk0aGc0XEYiLWkSSqDGL3MUUkEkLxHWX38VSgolZWUVMDQkK1jlYxjzM4LSN0EVPzEmXybVdGIlSygDd3wVYMEVR0cWSsMTQkQFYo8VYhkVPkoTRk01M48TSvbESFo1cOImRHMDR0nGZyclZ3QCTqbzQF0zJYkzQN0jayPmLyrRQEAEMqfFSjMlbE0TSVIVNtcjXxfjcWM2cxPVb1PVaxr1My4FYy0lTuYEZ1DiTQUkKV4TMBYiRkUTVuU2bKIWMq7DVjkiLnszXqcCdtnEaIslKxnlT0gSTyPCbjIkSZEVXNg2LWUFTIgUQHQSQWUEaNEjPpckQMQkSME1Q5gmV0okXYMEMiAicK01cIsxSoMlLLcyPnIkZJQ1RWYzTvzVXvQDckMlcq4xXFESVYojd0DWYPciTDcUUu8jQCUVTwPVU5YEYvMSa3IlZrgVa0UDd4kjVvUlbYkEVXMEd4kjLgozJQIELugUd2.CbFgCb3v1RwM2TtfERx3hdEETUg8jZPMzbzc1PtYzbMoGV4fmZBQjaJ4zXAQVR04FMoklVEMzZyM1Y1bTXhECVvkSPFoEVyjyM2fGdrkCV2ciMqjVPBoGY2cDV0UjKwQEVlEWLtjkdBAGZmQSQsY0cWc1YoIVLIM1RSoERUEFSqA0MRIjXjgGTCQjcgkkdYEGa0QmM0HEL3o2T2zVYNMWZmIWaQMWMxUSbVgVMRUjLG8jajYlVxrBViMGVoU2bDIyMKQ2RgsFMMg0bqr1Yr0zb1ElS5QFRWczM031ZlszZI4BbqsVZ3gCLrElZFcmPqwFYx.iczDjdsYzaWc0RToWY2ImYXYUPqUjYMgSbVMlMzM0UyETUlc0UWsFL1AWP4fCM2b2RKEWQOY0XWk0ZUIGa3.2YAojQUUiRHMzQOAiMNM0QIQjVUIWUNUWTLgEYJwjcHkTcRolXrQVN1QTTtXkLwXmX2.ESn8VRNYjZOQkcxXFRz8DchYSaBwjMVQEdHc2Pzc1cBMkZUglboIDdIgGMSAGYtXVdVU0QBMTZ3rDRyLiVSkEdTQDTzITZ1LScNI2bGAGYBgUaPcDLyXGdKo1QQElc2oTcEUTcsMyb3HjPBgVMoIGVVgyPgImT3UzJSEldGEERJokPgcWascWdznDZM8jREgUMGAib2LTV3rTVZAUTEg2UoojROsxaGcGQt71ZqIyTj01Tnk2azTCRCISaUIkUjcSXPgkd1jmL0TVS2DlYO8jP2QEdWUyXzLkQUwlMj41YzrVUuYVYyT1S2H0MVkyS3.kZNolcEM2TMYlXUEzJ4k2QOAWY3jlUz4VVWUEUzA0X3YFcCcDUt4DQlcTPNkGSqrRcLcEbw7TXREGaWEickYWNVsRXUElTT4Rd5YFLwo0YX0TQzfWP4oGVlYDbqDCUPIlbvbyJZAWLDQCRAUkbkEmSTgUU5wFMF0DYsISPWomYHoVVtHlMJU0X3TlaTkGbgMCcDM1XQciPBU0JqrxcpISd20FbtUWb0YCZO4jVtYEd1M2MmslXxblSrYCbxrlb13VVUcmLvI1RwfUYGYDcJYSXhwFVUo0c3AWazzTNqIzRqEVcsAkUXA2RVkmaBoVTqQTNTc0XEgELiMiZnsxLkMyL5QWTpACY0D1P08FTxDiMqkSLMwjTNc1RwIzapczQBQFZ1DWMzDCcvTTVMcTdWYlSWQzXZYUb2gCa2MVPmAEaLokTtXjKhMkcqIjYO4lUCQWPPo0Y3IiTYUTbpYSRhkCNUMURTgDbC0TVhY2SSQDZkgGVlIVLnI0SnElV3IWS0H2TokiSjQ0aUglU33DZ2LWX5MjZSslSybCaTclZ4AmUgMSXpAiZM8FTGQjY2AGLzklXuEUXiwDUqkzZ0fkZ1UiP4f1P4L0S20jULECS2DTbxnkTxITaxgiVFcUVvoVYq3lPJUjVN4RVuMyPJMzPjUVVJcWaLsxb1g1ZvnDZUgTUvnzPSgiSvLDZjMGT4oDVwcyPgAEMyLGZ0PWdvQTcwTUdx3FV1XDaMUURt4zbAQWdX0TbOM1ZqHTRwAUZpsRTOoUL4E0PNEGUK0lXo0Vb1PjPRQUZYokP1rFLNcVZ4zlal4RUYUyb2bCZRQETgo0LyPFMnMERAQjY0UFbJUCROwVTHEyM0kSXFYCUmIjUDQCYqfTYOUDVPkTLyv1R1bjYGI2TQMCYwcTSTAmPTgmKyfFT34jZ4T0Tyvlc4IkYu8ldxfEN2PkU1sVNuM1UJcUQYk2PHMWLzgzY1oWc0slXMQjLmgjK2n1P0I0MBUFUpIkRH4xbJYyJSUjM4IUToQlYiojMzH0UV8DQjYDbC4hR0wjaS4lL5cCY23BLxPTQPIWPZg1Rw4DMqPVP2HUcgYUczT2SisTcrIVNJwVYDIyS4QVayk1c0fEN1TDaPYVT1AGdAkCbQc2Xm0VYrslMHMzSUcFczHULzglSNEVLSUycFUUM0UkZqnGUhkmTJMVc1LTc0E2URISLTo1bZkWUrQSTK8FTC4lVlkCT1TETKA2b1wjZ2EWVPwlKzjTLRMUThkFamsDLzIVUFECQ4b2Tu4BMRoEZigiVIQWVMUVbqrBSt3jRxEDc2fVZWszQBgiXyITcG8zXYQDavYiQi4FaFQmZZokQXYWY1YyTswFNBISSPYiZlgTM2YDbF0jRTEVSLo1YtoWNNkmPQM0LnU2R1UyJ3L2YzcSX1.CVG8VTEo0ayYiY3oDc2LyUBcWX4wVMCckds01ZoUjKIshUv0FdUQVbzU1LqPmU1EGNwXkZYgmL4gESQ0VbuMkdrcUZpYzcBgGNWwFZrciSqIWSVY2btAGNtTmSWwVUxPmdkQWMrkyL3IyMqAGLDUTZxHFVFI0cMg1RDEEYqcFZ3AWUnkVRyLlMI81RxcWLMIUSVM2PZQWLIY0ZlkjbV0DR4k0XlciUkgyRAA2JPQzXqM0Y2fmQvfjcMsjY1Y2LjsFcCElSyXETWEGc1.iRwHmaykma3ECdYUyZxXSYFElSlQTPBckYUkWSWIzXKE2MvH0T0HDUyQEaBwFSyjUNCwjP0fmKOsjQqwzM2LTUhcjVQI1PTwjK18FMzPSPZwjP4M1bgEWRWEFRIElVVUWNTcDMNsTTA4VMNQVdJU2UHAUYNgzQvgGMTQ2PAYVaOshcWwFYBomatnDSXkjayLTNhEyajEDNwQVTHoDRJsxLCIlQ2YSM47zJCwjYsAkXGYSMhQDUvMlasgWYgwTSCQFdqI2StYzRDQmUoQmP2wFRngGTuo0X3.CUEIFYGYCRDgDNqPDLGcEUoAUM0QFb1fyRmM1UHoTQJACVAIja4jWSIgzURUzUZAmPFoEaqjEaRsjX4fVSxHWRQY0QTgzakg2YDQSbjAWZJoVTpkkQikjcOwzMWQ2JIoFYwbGdvsFQpokasYjKzfzczYFMHc1SzoWX3sRP2HSV04zJT0lbjcGavQjRMcjMhckXGMlMP4VaLQVNoAWciQ1btzDcCwzLNAiP1AkVgUmcy.yJ4HiR30TdvQzQZoTMmcEdNsFaZwlRK4BMjgmU3PWankVQIgGbyfzLSsxX2jVaQkzQy3DasgjY3PSL0kGSvIUNRI2PrIEd0.mKNwVaYwlZyYiYqQmZ2fyR1EjTGQCdwn1LSgVT5ITZIEiRG0zPls1TvLWQGA2ZqEFa4jiLI8DVmczaGsBZzklMwD1X2YkVhElayvzc3EUdBMiaOMCVhoDTyIDZC0VMUUVL3E1PUklLz7ja1PyPmU0cjM2J3MkaUI0TOUWNzTVaFMlQrAWZLYibBQDaIUiX1P1SrwjQ0bUPGkWa4TFSRoUa0jGZ03ld1DlVTkWVEgSMZUiZCYiZzTUPwgiZvQzMPUyMzc1bmAEMmkiR2HyZskzL1biUHgmXU4DVvgTRjAWTNclRpomaBMyJ04TVYgibZAUZUcld0ckZnIUL2UTMKgzZKoVRL4BVmojMtPzJqcUPxomZ37zJs4BMRMySig0RK41Y1AWM2jTUJszTEQTNVMCYLICbPE2XGYkZpESMBcWTEsDZzIGZGkCLBYjRVk0QU4lS1nEVyT0ajgDUQgGbYU2PIUiVvoTTLUjYKc0TGMjbhcSUvMUSTEEM5Q1LNA0TvfGSSkmShYCctgiXB4xcSICYhI2MIkDNxECQ1H2XPEybWk0MAozROIlQxUUQocWN2QjM4X1QTIzXRQDUxM0TUQWQT8lZWUjPwH2R34TT3.kSuEkLi4Fax.EMXEkbxP2Pi4VdyLyJtIVa3nkYqPVPmEGM3ciZno1UIQiKO0VYKQERyAGQIgDTww1MpgmVqfGRUYURnMWR3vVLyn2PoMTYvrxXsYTPGgjLtTiS1zTVQIyazbyXCwTNo0FSIUFQtIiZEgDbYAEYOgkVyYTNEoDM0olKDolXVMCQWAUNhIlTvIUUPYTVo8VQoUCb4YGYoMjRh4hXpY2bNYUXlAUcBcDdOoUVFEkQrMVQUojKE4VUPsTP1wFdZgzP14VVSojT1fFLr0Db1sRRZ4xPrcmQ2UDNwsjKyEENL4TLxjUL1MSNyckUyEkSREmQIwjT2HmVGIjRMISMP8lXlwjMlslRUQmUA81JLMEUMsDThwTXs81cQM1SVgibn4TLEk0UycCaVUUVwEjUgEVYWMmVMEGREM0Xr81LFcSM4cUZxIFNIIzYwf0cX0FUlkzLIUjQxgCYsQWayUCUqQUTtL0bRcyYJQDVgYlawXkZw8jXOQDdxkkM4QVNLUVd4szXhczQW8DYCMTdJQGb1LjMrk2QioVax0zLCcEVvDTZAMEdiUGZlcEUyUjRKcVL0TTXSoja5ITdiA0J3ICMCElQjA2RGciMkkiZ1DEbsMjZJA2JoU1PtzVURMSXZAUYxD2LWYlVvsTaTETaPsxJ3gzJyj2TT8TYsolbt3lLLQEVyoWXjQjTxUVSEITS2kTQQECLDUzJY4jXoo1Y58zMwUUNDoELXUySzHSctoGNVkVMy0TdjQDSFkFSHM1RkkSR2HmcnM0JJUmZyYkLhcEMvbESwECZ4biSts1MAMiY43Rc2MybjEiZqDyRO4FQXwVPyMGLgYFThwjSqMTRWIFYPkTdvcUTVMTMtXWP2gycVQzT0wTQ0HUMNITPvMjSDwlYSYyUBAiVRY1azbUQxwjLAwjXvkGM0rFcAc1PygibXMTSPMjXSQCLvLlYxXCbNEVQWQiY5A0J1Q0TL4VNhUVQpQUMQglSP8VSgIWcUYCLFgTbKEDarMlU3TSTUMWYNoESUsjcrAGQqTjPYQzTBEzYts1YBQTPj0DUIQUQwUkSQA0RXUkakojUnokQSkVNWAmaEUTY3PmZ4szLxUmMJo2SXM0PAwzXk4DNzPCQ2HkLEYjUzfUa0.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.SVT4DZjMjSJ8VUBEjcNESRgc0JsAyLrcGcyYSTNMTatrDYy0VV3DDU4UDQPsxX14BQBUWbXQ2LYI1RuUmMvvjPkMjcSY0PoMCQqQ1RtkkUGcEcVgTPRsjZ0LDbXoTTiITN4Y2TyXFUk8jZzsldNY0RqkkTJMlPy3VaPYjb1DzUIQ0JwcFVl4FRl8jaXU0ZOojP4QWXUw1Z2fjaqnlVG01R2rhcLk2PFgTQEkkV5gjSXU2TzHkKAcjPz3RRDoWcIY0cP4zcs8zaDYFYSgGSkcDVI4zZvDmbr0VRvv1Tqg2TvImPVojUCMCa54BRFgjRQgGZ0X0czIkZrUGNMUEYYIjLv3DTBshXVcVVwg1c3k1RikUZKITQVUVLvU0JYIkdKc2SkwTaOkEVzb2aYkmP1jTTqTzbLACViEWSkcyRZsFNngVURQCYkAWSCsBavXEajICRlIlLAkzZY01Zj01bIMybWkVbvb2Mw7TayX1bo0TdC4FMvjSRKkiUtQ1XUoDQQkjbBUiYTgFUyXGQvfiT4ITbnESZ3jUT2QDMpACSCMiL2IGLS81QHsDV23FUQ8jUPo1MBcCaSMmdFUmS0LCTxAmcKoFch4jbWEzc3oELVQSSzLSMFgybpEDLJcDSP4hZHIzUHc0M2f0LuQSYoQWMyjTUAIESQIldioVc2I2avUmLXIDZJQTYqfGTx.WYYYEaNYTNlY0QrMiaVEkdikmQFY2cmoFchYVTS4zTxfmVqUyTkwjQEYzbRYmcGMTLSETcucEYAMGLyDlTIklK3rzcyUGbjwTV3XmVnYSXFkmZrcFQ1j1a5wzZoglVmk1MV41RRgWb0wFc3IGbFMUdok1QZgEVvDFMME1ZkUCQX81QP8lb4MzX4vFT0fGTJUmLw.UYrMlP4QUdigTbYQyLsQ2bj0FRqgVMIIiY3njKNUjUtUzYqLETRACNZIzYlYiS13lUVElU0wVYLgkYUMWM0shViM1Ppg2LioFLzI0JmUFY2.ib1UEQxold4IyPtUTa2oFdosxXnYEcwICb1nWchQzUXUyJjgFMBEmcvHTVznmTv4VL58DMXMUUSYlTCUCUqbSQBA2MzQiT3HSXvI1PKkldJImZ5E2Yxb0PmQTQyb0P10TXVc2XsEjQkcmSv3TLHcWS3YGMiYVajYmZHYDcoElXuciasQkVokiYJIzLLckZ0glKNUlRgEUXmoDchoDZq.mS5YDdwYiTNYWdqLmSr41Yh4zbEEGdNUCZwHEaFw1btDSRRcGNYcybqjGSWcmdsgjL3fFLnkTPWMlRwYES2jlXGQVRus1RqrjX4v1TVICbuU2UoIGMQ8zYvQ0ZYEmRFAyUjYGR1HyPw3DMrk1RzMyM2Imckc0MvUmY1EWTwUWMOMWR1bSYYMTN2DTUxDSaKAWLPYGR1kUczQDRwcia5QUbng1J1nGckUFSZY1TwcEMDIyZxc0S0sxaZklXKAkQ2IEREcCZQoUbz8za04TNvnkZ3IWQqjDTGYmMuw1QoYkLVYlcw3VXZMyRQUTNtTSZKEWUzHDdM8jQMYFLLYmXxYmPtMyLEgUcGgmR1kUNSAkdwLCZvI1TkYiKqQjM2PjaxYTXEwFQ54RPOoza4MzQuUyRSMFcJk0Y0DCSwDyJxbyZkUFMk4Tb2oEUzfFbGMSMUglXAoVb4sxaqHmc3DTMvrVY0oTQnczL4DDNtn2Y34lKXoFaPsBQzETZyfjd0wDY3bUbuEicYEkY34VUzYEa5ciStkGavbSUAEScRMzcF4DVyrDb4bmZEMEYPMSUscTSrUlc3fmcLoTSvIVVtbjPK41ZrEDMjAmStvlPybVPxMVXjsjckk1Y3HmYgcVRl41JLoma2EyTpEETxrjZncycZoVR3zVPsUWdYYVSqjVaEwVSY4Van41Py0TSAokTrMUVC8lQG8FYtH2MqfDNDUla0IjbMEDVMc0R43jZrkDLgYVQoszRiQmd4YWXTUVLwkzc1YFYBkURTE0J0cmSu4hY3H2QQQTYPMycLAkQXoGQ4cGa14zY5UEdsY2J30Fa3QiXgUSUM4ldVwzcpUWTU81ZqbFVEwzLyUyUPkyXM8lP13xU2w1PDAGUS4zX0YWXuUjbRMTNnI1SgQFLiYiLtzjdLMGUUk0LzbGLx.mLMUkPHkmdhk1QPoWYwITRZgiLxbzQwnkMtLyPNMTYPgCRVomVqQWS0o0XhQzSkQjdRkCMHU1PAMzPzvVVRMibm0lShUST4TVXLICMqESLYU0Xokzcr4DZD4DYMokSlAmPKYmdO41SgE0MUsjPIoDZVUzXTgzR3DyXvQ0a5kWSEUEVoEkaNkVXYAETyblLhEybM0VLlMzXkgDUZQWXAwVSIomP0TmLhUjRToVbZQ2XAgTXYQmVJczMQAGUKcTYp4RZy.CRYoEMnQEQYQlP3PjKVY1XY0DNHgTZmgTNSkGST0lPWsDLCIFTOIFa0QUXOsxaZUVSQM0JvUCazjGLzwjKTciMuc1MwU1SqTEMFM1aYkSctXSbNgmMvnlP4njaNUzYBMjYLEic2EmP0PTYsA0PK4zXHY1MYoGV4bGZ2PSLiQVLSECcTsRV0IySLIDMm4VcZ41ZIgEM0LGRWgkZGkDSQQiduYzbUU1RuQDVpolS3METXIVUqPyYz.UVv3xc3PmMvYyMZc1Z0fCSx31LWMDbrYSQwbTTU4TPzTlZhMTXxnEVVkzJUUlQNESaWUlXRYkSEElYUUmUJoVdSMFdqQFb3ASNKUyLyEEdLAWXZETXukzYhQ2Y0MEU5sDLucEToUEdS8DNncDdMkkXvIkTQEjc1nkR1kFcPQycioWaDQCcoYVQ4H0bzbCRPgUYJsRZYgFTr8FNpc0X5ElZxUlMDMmKVQkXv.kL0E0bWMUbFYFMS4TTqMzSLclXi4zS3cmPBkSUXkGVSkiY0j1RU81c3gTQ5EFMugDRzISXGkkZCcmM1DGTWQiP031Y3bVLlwzLAMTdBQ2M2AWQvLmSzMVVXYVTMYUXGYDZvf0LvHzQtPSa3nWNjclcJESYpgkXtPzJSAiQZ8zLLMmQswjQ4kDdAA2Z3YmP4zFL4MkcwTyLPsFSLQ1UXMkREkFTrgjS43DdvImVAEEdwgUdTA0cKMTYnkkS3HTdI8VSYYySWwVX1rxaKUmV4TSUNYScPQEN0.UdwHUbLEWcWITVvj1R0DEZw.2aFYCTloWLnU2XIgmQKQWSHMDdtjUYiUURkwjKJ4zcynDVA4RYxgmVv4xP0DkPAUVctbyPUMycoYFZgc2XZYyaiYjdSMFcEMyLyUUcj4VVxTkMrQ1Qvo0atsxbSwFUPYyTSAiVAI2bYMWL2oWXVEVdyLyQ2TiSwETUCQSNikmVZIVQzLjSZICR0XyZO0FNzczZRMzbHAWXZMCYRACSUQSU3bGLDYTR1UzR4gCdXcDLz.GQqMzJNgkKGYSZXAmMzXTNrM0bybmYOEUd3.yZLcFbwEFatI1RzwlST0VSwQTMDQyPxDSTpgjTqEWZEQzRhYiVTsDaHkzMLk1cqHVd3jkQ1PERnIiSrIlPrEUQYIFYgE2RDMkcuUkc1TmR13xJGMlPRkVUFEyU4flaIgUSNQEZvEVRsk1ZwjFMIQ1bRIDdIkGbw0TSX4DcwPUb5Q0ZPczXynkKnUzaZIWXMkDM2IlMEIFS4HTYrECU5oURScUM0o2S3j0MqTWYBYGSP4xbyDiRnYiQS4zZ1nUaskWMy4FUnIkbYsTUxUybRUSbhIDQvgFYIEkaxMWTwP2bMICVZgVbuwjR5YFQzv1SVYWU5YVVUUyTrcFcwMWY0L1U0jzRtsRNMciPhEGSGUULzjVcTkUL2jGbhUkdWMiUsEkV1PSQGMyQ3IWYJgEQ0PVaVYyYzH2YtQGdKEzM2XzSI8zUCMCQOQ1LhgEL1PCVkY0cYY2U5wlY3YiKusTa3kSZjshR4DSZwAiUj4Fbok0X1H0ZMsFZBMVR0oTXqXlb1glRMgTTusVXoYWaTgjdGczUwYGNBk2MPomP1MmX1USZWo0TxHkTpIDbwfkcqgjSIMSV4ckY071aqwVXXcjVvoWQNMmZhQ1ax7lS1wDU0sVcDAiRsgCU1MVVMIzQPMzXwHTdOcTUqTUcTkVP3A0MLAidiQzcsQFaSACLzAkRlEiSAMzMP4VXrYCdvM0StcyQBcEQ3USV0HVR1nlSwfVT241UhETblQkRmcEaZU2Q5ElcrMWd2HmZ3QDSukCLynVUgwVYQEidkUCMYcCTWMyZI8lT5gzPzIWdhMmPZACVEMUdzL2MNcUXNAUat4jVOITZMElZjokK4ITMtQic1cSaKcCYwYiMSUELZw1bLE1TCAEM4nFbtA0ZRUEUzXiZYolL2kEZwg2ZCYkMnYlbvYGQhQlXxcWaxw1PlMid5sDYKMTZBQFSBQ0UNUjTxIVVJU0JIkWZYQ2XAQiUNIWSqLGS4vFcToFVAEyJwDkQoUDZyLCTsoGRjoFU2TTRYIkQp0DdkQ0bUA0PKUGMXUmUUcGY4omTMwTPO8TLOAmcqAmKMgCRuglbUYCaEgzPigmSmMiQwL1XEQidA0DLKgUbm8DRxM0c4kGQWcjU3o0RXEyPtoTbqD1Zy0VVtglVCE0auUVNC4TXtMia4LVNvszLs4xXqISZswFctEGQtPSaTQFUtLGaWoja3AGS2PiLmglXzECNYczTRcjdvszJUkEQqUDNKcWZzUVPBMzQQkiPtXGNsUFV4AycTYkMAYWZuAid5kyUKIVMHYEVx.Wd23xaVAkXy8DM1kzMHIycFwDdlkibQUma3rhcQgGaYUSMwb1MtEDLAA0SFgVaqcSPTMGNxwTapkFTK4hbGUiVVMkUTUWVLQzUU4VYwcWYScUXz4TcQIkXmUlZAgDavEFcynVawnzXQo0Z0EGM3jiKMEyYTwlL2.mcPkkZwc0cZQWb1TGcSklXBoVP3P2MHcEL3zjPy3zbwX1aV8FZEM2RCIzSSczZVwVZmYldJ8Vb1I2MYw1TqnWbtIEYQkST1cSdt.kQysBMIwjUvnzTDojYp4BQYImTBMUUCQycFgEUCsTTp41U3z1YWAGbFMWXIASdQACNMcDU43TNxPkZrcjaUYUVIkkTRcjPuElPMUlXIUFaEU1YD0TbVAkQqozc3jTV2rBcyL1PzsTXqXTLQIySyHlYFkmavUENowTSkUkKvrFT3M1bpUkLZImKBIjPtIyZJcDZX0lLQUFcU8zTM0zMHs1J4PUcgkELSU0XWojSFk0aqIlVxjCaNwFQUgUU37Ta2c0SxT0JHgjZCUTTGo1UjQmLDkkdYkkKIY2Tq4FTVwlSvj2RocSUjMTTAUlQEA2cx7TXQIWTnomZwbiKDETc5cjdt7jRDACLmMmY0jzRqnkRTUDawAkblQkLIcGczfGVxDGYrImSzkCc1wjb40jMMwzRoQVQlgzLiMGR2bkQxQ2MoECaG0FcMckYPICY0clMzQyLgM1TsclKF8lS3s1bIcWUJISbvPUSo4hZqX2X4LyPIgzb0fFLpgGM5MyQoM2bu4RZCwjQrkiZFIjK3nGT3YTRq4zMnsBaWUUVEQUZoQCQvXmZAAEZuQWX38VTtkTUygGMG4FS37DZSslb1TldPUmXTEGY3HyPCgzYzv1aBMDa18jZqHldtX1YKQCVVMjLwkFc5o0LygCSzbDarsVVzIyLQgWaUcFYyY1axbkS0gDQ4UESjAyRvjyYGIzLrcUS4TWdJYmakgyP3ojVSgid5UCRZoWVxX0S0j1SwMGVzUEN5kzZ4.SdIwTbhkVSxEES1AWSyrRdXIVUUIGUQIUVHgTRqkCRPs1bHUEU0ckXpszUNgkRr4hTYk0Q0oTSBkGcOczJ37jcGEzMx81ZgcWcDQmavjFQZQGSzbSdGIiUUMGcikVYHQVSKcCSKM0YxQVQq8FZYkiXEMWPSsjRxHycTA0cuoDdsETNVUmYmMFSrQjZAk1b5IlQ0MCVKM2bmkEayHUV4TWSpMUQXgVb2biMJICcyMiayMzP3.UM3.WMsYybsETVB4FSnYGZ3bVa1wFM4rBZVYCcow1PVAUZxMTXTMFVqLiUCEjRNUiLVsFQyUWNRQlVV81b1kTdvoDdnQiQiYFUN41Sps1TDECa5ICLCAybDkWMIMTXwnVXtvlXtgGTyACNMEUVwTkY2ojYxQGMIozJv.GQKUjPMMlawQzcPshQwU1SlwlUxPGYC0zMN4zX1sTa3sBdF4DSHAUaOUlY0YVcn4DVyPFTGIWdLEmVwP2XNAWSDUTYUkmU5cDV04zatnETCE0RRMVXxT0SHMFUGYjZhMmT1sRXVIGaoA0QqT1YVkjc2jCYxPkXloENNQCRjc1YmklVyLUVqTDbp4laH0lRxHlVCwFYAMictPzR5AkMBcGMwolPQEUcDQibyIVZCEzZukVRpclTUwFTqHUQtQiRz7VMpkzZqEmKiUSYtoVTynzcuEkUNQ1MZACTzjkR4IybVcSVCUTPEgDV0YDY101YroGbsclaFIlQAMiYlMEY44VTokCN0MVXmckRpYETPMyJHg0b3TFSkUWX1bDNKolVIEyRwHmZtnmMFMjKZE2Y371UVgDc1MyP3gTMloFbF81bwgjcgYWQSoDLuUWTwEiMvnUNlUkcPciX4.yTDcGaQQWNYIDbPAySpYyYGQiURkVPxc2Z4QSSio1RBczQVgTaEM0PWYVaJMSdO4lbxYEVVsRdU4jbwrFRybSXM4RU43VQxjiV2LDR4TlTTgENMojVGwjLXMyavYGZoAUNGUEcz3zLKshaNUja5EVXKIyTso2Y4LjTL4xJU8DSGYlXScGUo4FRWIlZ2EUZLIVXJokPLw1Ry3jRNYiRUYDa2.yUnsTUJUDNUcEaP0lXDEFRXolPYoWbnASUIgGVjMjSKAGYoczZ2LiTy.0UzQzbUo1LhgiZFgyMuYlcA4TVjASPikUYYMFQociMLUmUs8jVpYjdOIjREA2TKoFLCMDd1wTYHgUNOsxPZ4BVJEiXTUSR4EVLpcDYNQjb5QzZJczPxoUMwXjSFkUVygkS1wVTtbENMM1YysBVzsxYQkkM1PGVCwVQwEzPm8jaQMWcZg2R03VTFwlXB4xMFc0UJ8TXxH1M3IlLAomM5EVbj41TDI0PIYEV4vlUVoEVtckdi8VRLkVSpEybHUmZy3RdyDEVJ4BZlI0UwrTLZsxJtXDYRQFUH0VNmIjdzQUXtMlUYoFLyHkcLkCRmIDNqT2JEYDTAk2c4EmR00DdI4RTCgjPp0lSrQyJPYDb4Lmcv31Mq3DcCMyMv0TTH4xPS4xU3bVdNk2Qw4DVV4zcpklLl4FRTYzPvQmU2gCM5I1blshZPk1LsAkLqYiaqDWV4LDTsUWP2fSUTcTLRkSPE8lPwcCTAUGLvY0QFMTLqEWRX81ckYVQqbiZFgWPigCQJIjKLMUPmMjaybGLykjR1kUN3YjVBElR0DkSzE0RxQmVjYUUF0VN5wTZvPGcxXDduYkcZEGSIc0ZwHCUysVcvcSX4AmRJQjUhMUZBA2YYQzRHQmLAIyRgsTazgFSiMSVushKDwzLEISUKUzXLkjZ2EkYWMzLvPCNsEzZ0U1biQid2IDcZcUZiQTN1jjR3wDcSo1M0rDQ3bEdBgmLigjcmE1JyM0QvcTYB4xXQ8DcusFMIcict4zRtgkMXciTgAGas4DMIwjR2IVVsUVRhMzUyEmQs4VVN4jQMUmd2.0QZ8Vdq7FLPc1QCUkQx0TczbFSvEVMGYWb3cDTvUTLyTiLBASZgImbnkCcvoVLmklUO0TT3nzUL4jTtElKqT0ZMESYncCUgQ0T44jQsk0YYYDYmUSVtUibqcySkI0U3XFbsQDayXVbMgkViMiPqDDNqP2P0nWaHsDNqbkQ0Pka4sFUlc0LBAmXvszZDMWQSwDbD4hc1T1ZlkWdq7DUO4DNGIURw.UTswlQWoGdvzVNPEGL2vzUZkELioDR5YGQqcWdJEWMIMVd0vFSBsDcT4BQIIzayASUGEiXqUGRWgDQIYUQBIEdmYicX8jLGUEaN4hLxsTawv1YiwVLvTSayjkTwQGaznWdWYScFQldhozJqbCamcmU2wVdq.yLVIlVSYzSiE0azU1XBYWbPo1a54TXB4FaLsRSqgCbNkjaVoDVZMmLGs1Y1EmdikjUN0lXznlcpQjSyfDMjkjctDURtnkRUoFctzVaQEmLj81XkcmRYsTaqfmU4HiREgjXHYTTDgWMIcVUgMlZoEUV40lMTQjXSsjdgsDT2XlbyTkKoYSZJ4BZEQFdHIVMLE0QkcELOMFTqHWa3DGVFEVXksVcFI0YvDSaNYTZzQyTn4FYDkCV0YGV14xQTYySjYmUAAiLvElX4bzXWQ1MPEUZhkDavnzZQMEb0LUbVYkMoESQwXiRPYla5ESQxHzSvA0MOIyLS4BQFQidXwlaqPld1vDMiECQp4VXGA0bRgkTjAUdF4BYxLGQYwDMkcSRUESMJkDSWkSVYkTcGMzMOMzbXQTLHQ0R1EEZAU0QyAyX1nTMNsjYAczTY4VPzDEYDsRY4ECcgEUUSM2PqUmQZI2LF0zLPYDVrEGZDo1SAEkVzPVTxHibmYWPoc2QkI1PNIVRz0VLKEmZWkUQnklKY0zMREkPlMUaSUmcL4TPigkRT4RXtYzRiM2L1EVdvcSbsEWT2XCN2QUa4giMDUEZNMFcmoFSjA0cQEjPUklcAUCZ2UVVBczYxjGUwEFY5MSQ4QVYUUjcioFQCIiTtASdXQ0J1T1JSElSTM1czjUcK4TRk41cVQUVCcGNh4zMn4VcvIVMmQCZJcTQPYGd5cFTqIUYu4BZwHDbyXCZkgmclg1XogyPFkFQxrRd1U0Zl8FcKQFVPsjQhkESuUGT2A0c2gWZgEkcqIGVkwVa4.0bxICdPIGYm0jS3kWRVwlSNEmaAYiQWYjVW4hYsMDczDlZoQlSH0jZFw1XGIVVhsxUWMVct7VM23DaoolbFQTN4wlUnAmUEYyQu8Fc0MzU3EGUygSYOMUQHYzPggGRy8FYRUGSQU1Ywj0Rtbic4HGYzYCaTMjbpI1U1jWYSMSS1jUSkUiM4UVTKwjUN4BU1Q2RyLDcEY2X3j2PsEkYFsxLAEmUQEWUZMWaHYiVZUybwHUcjMDTWUTMVYWbYgWYlgyJDIkTuwTSsIVR0UjYscCcWMlKMESRgkjKRE0LTklVsgTUlQSQJAENRMTcZk0J2LVZO0zPVY2LJMiQtD0PVIyaJIDRtHlZ1gFbXI2JvEEVnQWQNI0PsgWPw4VZPAWctvjYiI1PqLFaoMSdLY2TvTjPpciS5cTULg1SZIUMU0DUVMWNJ0DYVQiXoMVcybTTnMWL0ASaCgSMg4FTAYTVz4jaiAiUrkVVBIESZIlMSciYVc0LNkWaFgTaXgUdVsxL4TGTPc1TsESMNsDUwTzYG8lU43Vb3YGLwAmaQASNkkUVJQSME01S34FLDQmKSo2aTMGStEWPAoldAoWZig1U0H2MY0TSHcWTrkUaq4VaxrTR3PWZpEUQwXTaLUFb1cCU2czazEEZyUmXmglV1bjUFETbvfGauYGUxLkdukWdAcTPVozLjgzYkomKynmcnslKP0DZOUERHY0LNQ0XvnEaRk2UrE0Lwk1ZzUDcCMybDUlRtPiQmc2JJMmZCE2PUkTM2jGa2PVYJkkXHUSPvzzUvsRUJsRROUVPEISc4AETxg2YFgDTwvjc1ckdUcyaUI0QkcTbPIjRvfySSomX5gCcqQ0PEo2LJgDdisBZy0jXLMycqwTavDjZ5sRaRUTaUUlUB4xST4zSSEWdvfSVswVb0AGUNwzLSIzRu4lXLIWM5cmRYcSajomdJI0RswlKrwldDkCay81LDgVMxLFbwr1XHo2YsUWbqrlTnUVaXEmUtoWS4oWNyYGczY0MqgSaBczYwgyU20VUtXDdGsTZOwVaSEDVBomU2HUXY4xYjQCQrU1cYEUdyHTNnkWXOgiT2HCUxYkT0EWdtE2Lqk0Y1EGaHgiaUUkMYkGbUQkPHgGM0UGdkolZUgCURM1bRkVdvLjTzcSa5IFY2sRaRshRsIDU4LEbwkERybyT4DEVvkDVsACLFIkUCcmRPMmSGYENMACcKgUZnETPPolT0EjYXw1JUwlRwYlZpMyMRMiUx.kQPckV1jWPSUFS4j1JkIiY2LWMVcWSwD0JTY1bZM2QtjVPNEWbyb2MrICMUwzbvklczz1LvvVRkEjTRgDSJE1QokERsY2avfyQS0lXVYSbxfScwkSXlgzPQcjR2DCL1bUY1wzQo8jS4fUczoER34RN2.mSHgyXoglLqIFL14lV28VNrc0ZUszbZ0zJtXzYXMlbIECTxHCU0IScZIFcOclShc0MDI0Xyb1JogycBgSZ2QmKEIlPPYmS5ETXqslMXIjdBIFawoVT0k0MtzVPxHUPrMVV4bDa1kEaDIWMzUVVskUPsUUa1UCLKQjUsI1PNYDbskyLoUSbncjZtgjSEIGbWUTQw.2Zw7DdCAiMAMkVQQyQ14VazI1JIgjKYwlR2oULEITNFYjUJgVbuIzZDkGQ3MiTGQyXP0zQXQiK4gyLAECNvrhLSUCN4DyYSQ2J0TzLLYyQvIjcUcSZxUFZUMyT1fzUN8jcjUUL5kWQOUTZHsDLoIVVHkyT2UDQR01ZpEUShUWcEYmTyEkLyYGUmoFLxb2XMETXZM2avYTYWUiMk0TRpk2QgoWdzsxUP0TMUcTQPYlP1Y0ZzXGTrMjdgIUMYklK1sxZ3LWQzAUdXglTCMDSlQDdmEmKP8FQU0DdC8TdGk0R4HkLhIWbuESZWQGS4cCRU0DclcmZzLFUTg2M2LSZzMWbT0jTFYERV0lUicWV2E0SsojZQMTbQMlUPEUZlclYxUzaMo1agciL3.yYEc2MOcyUzX0RnUFYxkFa5EESOQTaYkTLo01P2HTPCciLhgSZQAmXpUzJTs1Zso0SwQ1MZQVN0IjUv4xb5o2MKIzTFUWcUUVdg4hdWQTcZ8lKEMmbHI0cpUmMFYWSjciZWomUscEaJQVL4LUMPg1QRImLhsDQAAGUyDCQvETdtUDbLQDdtA2RsUkUxDDaMYiUzE1Js4VSxo2Jjg2ZPkibxP1aDA0aNMWPyXUNQMWMKQSQhMlQKQWTmgldUcVMoMVXwgCSogDMmIlPSMzTKQ1ZE4zZtv1ai81UGMVcgQld23hQPQTXAAGbzjSXyfEcCYkdGYzQIgFVE8VZBslPwDELkAUdxoDMjM2LVoFdogVZ1gjK5A2SZYDY1UGM5AEdycCMvzzZ3MGNwgia3wDdPgCRrA0JssVXTgyUyn1ZCETVtLWTDYTc4flYyYDdhkzat4FS0vFUWkVR1LiUQgyYUAiMHoVUAkjMJgUdNc2XQkEanMUVtIyX0EGLXUVMEkjd4PSV5Y1PNcCV0MTXr0lTlEFVSMFbD4Rb0LjchQCMPQzJ3c2XFM0YHs1PzkmXlQCUJkjYmEmMwH2RMQWUu41Jp8lPW8TTAo0PkcyJwjSLxcCcqICMmMyJQkETgQ2PhkkLDEGRFsxRR8DRsQiU1TEZ4UWQComTiMkQqITSEMEb1XVcXMETFwVYVkkLp8jMFoVTu4RTugEN2EUMSQENgIkQvbyTkASMpUlPqLDRvk1MIwFb1X1SwDjVykzQHIVTh0lVHEFRvIUVKcGS5IVPJUSMw.WaislU3cWTqYzbKMSapcWUvnFU0UmV4DTSDEmMxTCYzg2PCQlR1vVNq8zb1PEU2sRTlMCS4nGNvkWdNYDV3MSPoYkU1PUVrMTbygmU04FbzPkPyUCMFcyTznWPDAkLSojS2kSYS4jSroTYLUmRPcSZqsxbqHWZw3RaZIkPFUVb04xT5QWTy71TGUDS50VYhcVbAQGLQcVVQ4DURgmTNQmQrgEMt41TIgkaJUEYxkiLV4lTVQCTYkTbPYlaPEjPQIyQSg2MFUkd1c1aQICVBE1ZFESXzYTVwshR4A2Z1UlVU4RdjgicwjyLZshKJo2RVAiTtsTZqYGS4wFUGgCZCU2bVokMoEmaN0VVqE2RHgmUtTlcJcTViE2PxrTYhgzX2n2SzvzJH4RSlk2ZDAWYQQULtfFQ1QmYhwFVOElYLoDT2MST0jTNGECRqU1JggUNEUVZEAUP37zTrQFRw01Y04RZDwldQE0U3vDSVQWLlQyJCMkcZcyPKMVL5YCVPYlTyPWbtPUM3QjRAolXTIUbyTjYCY1PqYyQXY1Q0g1btU2RukFRyXVTzjkUgUzTyUDZCYES4bUcmQza2IiTYMVLrMUVZkTLUASLhQiTg4jQUQiKZgCQ2QVLko0UYsxSPozQY0VUZYyXrk2LO4jQMYWPooGZwzFSyLCQ0DmM1EVQ3.iPKkzY54zJqvVTPcEdvsBNNMSNvH1cPA2YZcTMkcFRnU2ShMjP4kGY3glLsYSPAYFQTYFUHMVY0DWdNkSS1TjTxLVUD4xcxkTSv.yS241ZNMzUwIkUygTZRkkSyzzRoQCVRUDMvgURqUUTSEEczsFcokmT2MzRDkkVQgjP38lRz81ZuEWaMUSbloUSnQzalw1PAQlMOMCc2YVdxo1b5EGcuIWLxgUYYYGbvASTJAiSKI2bDMGY3TVLTISUYwjMTQUNnMyQnMUPD0zJqEVUX81JxY0ULsFc0s1L5YUcxsFRHIyLmgSbqkCSAUDM1vjUNojUj4BbWESVBAWMVoEasY2aIk1M2nzLvcGSwcSXvTmPXsBTSslPtrBMvLkUrw1cEUSLEUCVuQUT4wFSWkUa28lRgkkUxkDNUQ2R1slMQozJYo2MzQVaLgEdQ8FSQsVbJIESyIEUTMDbg4DUG0VQtYDR2.GbRUiLm8DdVgSYoUVbOYDRA4lMIMVajY0QuI0MR8jcwsDdWIWZEklQNkCLYYyaGIWVy0TZukCLCcERm4zMCUVdkY0QsQDTVAUTtTkc4bmMFwlZzMyMOgVNCcDUtEyUsgzaRcycqP0Tq4jLi4DaR0lXyQTNxLldvHUSZU0PEA0SS0VY2kWUBozS44BbsYyavsFd0gyQWIWbCQVb5QFR5gSRkQWatcGMuwzYDk0cxL1clISbHcjdqc2SMUWc2fUYCMyU3EiLxwjZNkSZ3szaxcmUDgmQvnGVxrDTGIyXEU2bYo1UZ0VXmYUXIcyaVMEYkgSLSEDbCkEYiUkR0bGVkQidhEGYqH1LxblcGg1ZjkSSToTbXECV5kmK4fETZIGb1bVcYECRE4TaGMybtXCcq7zZmgDTxfEVy3lSRgTMPsDb34jSr4haSMVPoQkT2sRLgcEYjE0ZzgTMqPUMvnVRVQVPusTUScmTKclbtv1JA01Xsg0XhgiMu8DRmAmcrISU2gkZZQmMsIzYHAkLn4RM0vVPWIyTxr1XUU0LoEUVtDSXwEzciAEdDs1UEo2QLU0Sj4jVuUVR0LFQXM2Qo4BRvvDUUIDLH0FL4rVRGsVLG4lRTU2PiE2cgciSyn0JQkUaNQmRGgDMBwVVw8FcJUWbAokQGM2MgIGbso2MEwjd1nkYUMmaqoGb3TUY4oWZq3Td1Q2LBkFMGMlLxjSVzshQuUiR3sTYkE0RWMWVOkCRwojdyf0PgIiRz41aWgEMmo0azUlSrMGYqjCcUEyQscUbQEUNtoEQvzDawQVXFIWXwXlTEUiS4XEZyw1JWMVMCYFMrcGU4n2YwDyXAoDQhIiY0XjQZo1TNIyXgkCVhQkPzvDM1k0XIgzXWUlXwIEb1DEcqkkZBwFM2MjRxLDaocyZ2LmQMEEUjQmLlYVcVslaBUmZqHkaV4RSy0DYqQSROoFRRA2UxDzXQIFcIMGdjYybK81Q2YTcTYSTkkzTJAUYPECVtcDdssDT4YUQSYGdvPkcQkUQggEUHszX4P2TCo0TCUFZzEUczXDdxo0Tw3zUIszZSIzRhM0ZAY1UznTaqz1XL4jd4jSdwbiaw0jbKIEZZozYqYiPxTTXocGRZ8ldmM0UXIiUwEiYFMUSmISaDMkYVg2QwDTbGM1UjszJgcyL2bkXM4BVAc0bTk1c5Q1YqMFT3X1RjQEZsIVV1ckURMDQyjjSMg2RRESZTMWZYsTdAc1cYECYqI0YlEScvn1JQYkUtcmRuImMqEVNEETcHIlVIUkLzY2a3TiVtTiRswjdkojSB0TXvsxZFUCQv.GY3kUbCQzMgM2PxsBbS0jKWMjUVQyQqHTdQQyXwPSdNE1LNMTNOYyZqfyY4nDSKEEdSEjMAcUZhMid5sBdhkkdUU2REUWNOQ1YPsjaHEiLQIURoIzRrQGYIsRLIk2JUckQ3.SNKo2RSsDbTEjb3cDUyTlc4HiQX8DY3oWdvYmXwMjKuIyQ3jVb40lYl4TakElYuolRvMEQ0njX3XTTXQVSJMVa3LEZqjEcAQjSiczXZY2Y0cjTXUyXKgTd0DmVk81YvkUP3T2PzMlLpUUUroDUncWXSU0Q2fiU3jWNGwjS1QzPngVaCIFMjQVQKYyY3LFcwnUMH0zY3MVPiQic5gmUmMTaFAURhYzUxXVZpUjUL81ayEkPCMjRyQiaLsDbMgFavL1cvoWdCEyR2vVMtAUcgYmQvvlKXoFdjYiQXcUTpMkVmMUdqLWS1njK1XTXQUSQmMzY1XCS4bSNPIFdk4VSx.iRSESUrgCQzLjYUoWZQYFUgQmKl81JxcFdJYiY1TDL4jTMZMGRtvTQUkCYoslMxHVXgsjYxo0Qp4FQvg2Pj8jcwoTdGklX2DTLQIWTwMEQsUDZUEmbJYkPog2JL0TS0I2ZUQGQy31aTMFMnUCc1H2UpEDQUESUwH2cMc2cQQFStEzczH0XkomRvj0QDwTRC0TNXgmK3UjM4ImXvfTbgACYVMGMqESdw4zYpAET2TzatXlVts1U2.WUzXmYoo2c14DSs0TXNoUaHoFd0T0UjkGVvUSXvclSHQSP0YDTuIEaLIGYngCSXQ0UGYETlIGQh4jTNk1RLkjMv4DUyHUPyoGQk01JiUSaYcFZN0zXociTCUkKOUyc3Yja0flahEjKtIjPFYFbqHiTvU2J5QUctUVU3YDN2I2TJgTYkwVSxkWLlIGa2TWV2X1PtPGT4DUS4kVYWQSMh8DMBg2X3fzcvjSP4DjUuIjUHIDMw8zXJsRZRcjUKI2JDYUYnMGckE2TTsDNIgmYEMybhM1aMglUos1YUUjRY4BMuoUVPMUQJYCNO4Rbx0FNokSawnUcNYULOYyJGQ0JOIjdnU2TSYCVwE1biMDUzbUPsYkaDcWcmokVznkLBg1QyLiRzoFY1b2bUwTQOIjQIQ1T04zZxUDd3UFSVciakkCYvAiLGgzUQYzR3w1Rio1Xmk1RmokMzf2JUUzPw0lXxgCL1kiKQEEUmoVMxoWXzIWcvcid4.yUiAEUwTTUNEjXmoVTtHWd0fiR0jiLlcjR2TTQqolcQUETnQDayYkLL0DMXEmZW8TTucjUXk0LVMVdnQEdMQUUmkzUWEWSxjSPtH0bkQzUyDVbZYEcvoGTScSU2gSXis1a3rxLpkWaCsVMBAmYgQkdtcDbrUkcDUmaQM2ZZE1Mt.0cPcTcr4TTuQyUvkmdFoWZxwTXCAGdQojMp8zZwYSTwvFc14jbPUyRWIjdjAEVkYkYQ4VQxTjTjIlSvDiKlklYznDSFMGZnQ0bjIWN0.2L3TiYq81TqIzXz4BQ2M0PvnVUkg1auYmM5gDTxM0TskFQRQkLxTWZIECQn4zUHE0MPwFRCEiL3Y0UqnEZYMWbDIEZsQUPTgWby.CREciTSMGQwkSZ271RHEjdqTCbqsDLjcUYr0lbznUV1HTYQkUQRoVTigGL5oVYwbCcqI0aCoFRPc0PIgmTY0TY5E1XJQzZQclXsQibz8VQlwDLJ4BLVo2PAokZtLlSQYFVtsVa2sjazMDYvTTZtsVRDglaoQ2ZuI2ZtDESyfkdvHzMUQSYBkibsoVQAcmZxTWRCASZFIiSoQETTkWdUMDUx7jPhw1PwzjZyXWVFcyJmUzX2bWTq.CcqElVXgmaSImSSEGQFgWdwIEZkclcqQ0L3gDN5IiZ0HTMs8jVok2P3XDZ0LDQSUjX2bmPyMlSwY2PzHjQRQWNjUmZvM2Xw.WPScVSqL2c0gWU2UjKyAiZjoDM3TGT5w1L3MmLH4hZvLCRoMlZ1fDSHgTd5QkbKgjMB0VMyYTcs41LTQ1aisRMXEmXtTkRNMjTJQUYNE0LyUTQ38lanEDMOUDdUIWbBU1T3X2avXyZ4XSR3MUdAwTZkEyLKo1bZEyUwjmXBUkSQE1bwrhYkEWSJciSFYGdDYWNFomVzIFcIgyLwQyRqcGNgESTtDUUyHWan4FcD8TX1cTNqYmS1IidjIFcP0jZgMiaxTFc5UEYVkELnUCat8zJBUTYZU0TD8lZKACML41agk1MtXzQwPUXXsjXZMVTAIEdFMULWE1QMEVLFMzRH4lVykFbYoFUEgzQyEUL2gEU03lXwgVUyM1PFQEL5ITQqoVd0TDUisTcFo0S1k1T1jkStUiVlQCQ2ETY4oULNgCMosTT23jSvnjXx4zZsQGcpQkdkokZCY0Qz0jULQDNEYVL4nVQnkiSPcVZtHzP2YkPPsldgkFcBoUN4cETQokdBUkb3n0YYkCbiEENWQVVxjmbXUiUqYlPmY1T2k2MJwDMjc2XXQCVGEjVqsBUqnzXzPSQDcCZsY1LxjlUokiZ1EmMvEVazblbowzYpUDLkgyMNYVTxozc1Y2XhYlZXI0LuoWTqsDRZIVZyMid2AyPSoTMyoDNSgVNHYVcDYmYlcES5ckKrcVRC8jTYMDTPUUSxnjXAEVSxcVMkk0LDcicyUETZckTrk2PokVUmMEMAkCcngCTynDLkszQuoWTRQ2PTYkT1T0MqYVTxXUUmYUa3bDUKclR1kSVwz1Qt.SMyfWZW4hdDcSPv41P2HSVSEFYDMyQYAGaRoDMmYCVFgDTrAWazIVYwUmMz7DcXYWSWs1U33RUNgUc2nGLBkmZu8VMNYVd3wlR0HjPrYmTvrxQ33zSvgSPAciULYmMvsTZhASc4jVcxklYNUlaZMmTDcTLDQkc3bSUIM2RgImR2s1cLMWVNEGSRs1SycDSygDSKEDQqkVdRcjLt4BLM0zcgQSRpEUUxE0XKkmTWM0SrY0YvHzZngDYgc2TXMWdOgCV0v1Tmk0atQWXnMlSIsFLwH2a4PzQ0wzboQGaXQ1QEUTMkQzUDoTcycSXzjDYpkTVAslTjcyUUQUR0bTaPgWLlUVLxslcxgkYV0DThI2MqQVNgMGVvElcy4ha3gmdo4hcNMjMAE2Sr8jKF4hMHcTQmkWcnUjYNkUVCEEdpgVaWAELWYFdTgUdtUERPwDcRQ2aIMVYIQUU2XDNTEmSMIFbgIiRFgSZ3I0LzvDcsQVdwUyc3IGZXQlQM4xPqUURAcyURElU0fWM3MmdsMUSNUSSt3hYzHjXGEELZYjY1XWRBAkXS4jbBQTUN8FcPMlQHUGMSYzUgAmTnMWYCcTNwQiYz3DTyj1YJYlUjEUNGEVPzwldy7FQQYmLXshbNITVAMULYEiMiUWNNM1Mz.ycMszSKYiassjaXMmRvoUPJIVcvPiaC4FYkUlcJoma5o0bIcjZ2jkQyYWRS0DUBQWUs4lQS8VRGAidtsxU0nUNhEDdoQCTEgEbFsjPxHzZNkWL3Ijagk1QzAWVgMGNtYjKJEVQkEDM3Pkd0jzcXcGdVEzX5slYp81TosBRA4hRmcTbzYkLmwlPLMjdMgmTscCUWomLwUkL4sBV2gFU3bUQEAiUxHlZmkUQpAWct7lclkFSnQiaqTyQJM2UnckbxokKn0TLwYFctAEVR0TSqQjQIISLwXichQkPwQTYZQWcxHyUJ8TTIEGbCoUQWEjaNU2R1vTT0wVXg4DTYglSB8FZNoTPwrhLVYGUqwVUyYkZEM0RNc2TPcmL2EkS40Faz8jPhUjRL01Qxj0LDojKDgkKVYCNTEWcxsBbRsjYgcEQQsRYzQyTzjmY0EySY8VbwPWTu0javkjPUUELxgUNSQjPEokYFo2P2v1U3UFcUEzbiolM1AUSvYjZuI2cSw1QngiMIciRGY1QTIkZzoTZl4VR2.kRNQUYYMlRTE0b2kUP0rFQW0Vd2P2LsImbtXDbMUVZE0DYw8TQCgGYCcDNDozMTMCVpMmLKgmaDI1UygSYtDFd2YCdRUzJWcUSpI1JZMiZU41YAQWQAI2XOUlX2.0UGMjV2TyUyXkVTwzJpgGN5g1YAQST17VX1YzTxXlLzcDN5ASYMY0Lt0jcCgDY1ESQznVawnTamElbFkGZhYVdAkSYEEiRnsRNtc2TB4RSqQGMsQGYyPVUnEidNYjMlsDTJwDMHcmSYMUaF0jQCI2RwgScI0zbucWZq8DdAcGUREWYJUFTpg0RIIyPogmYzTyQtEGQvPiXwoEL2Ikcrg2MkckdnMid2g0SMIUcBkyPHgibH4TPs0TcFYWXk8FSLgTXRsRaWozb1QWZwUyYwcTV1kGZsoESXkTPDcmUvTlXLEUVrgiTqc1ZzfWZwjkVmUURC8lQIcVQiojPhgUc2HUTK4jdRITbWY1PygUMHIWXlMyMHEVRQIiZxbUbFM2PiY1XNQWb3MkSWUyJpkSVFwDbsI1bColMwkyL13lc2slVWczT3o1JoIlZDgEQtXUdBEGT1.0RGkFZ4cVb23RNtMGR2cCa2HSZQI0bYYUYhYjL0HDT1gyL1fGQCgVNLIiL1DGdjQkalckXREyYLIDLVcGThcCSA4Fc2cFYuMkLpoGdRU1SociVyDSSVkkQxfGYVUVN3DjSI0jZ0A0Qp4hXTc0b2sRTIgzJr8jT23VZhkSb0PFUygUdvIyPIg0Lk4xM1DVZQYERzX1SvciV1QVNIYGbVYiMLgFVuoEN0PGbynjRmIjKSc2JAEGMLkDd0o2SL8TN0gzYzQlKWo2PRkCNSMVXVgFbpkyYxM0cVUGbyXSVvfCdJMmTLIGLt4BZgUyMznVPzLyQPgWM1QDMuIWXMoVTqkjM5IGRkU1MkMEM3MyRYMyUnYzL2U1LPMFUu8VXYgkXQsjR4M0SIYiTCoVY0LCNIsla1zFUTgmRoc0X1DUV4LVM5IzQ1UCdAoUMIc0J3IGaQkTTuUWPqjkVGQmL1QWYgU2P03jLMIGVGIicwwzbqfmZEcycZMkdBACSpgzJJcGQv.2aqLSM2YVUrcFSv.iMOYmP3MzYNg0MiYURHUGL3QTVjsVQGY2b10TQJkjZKcFcnACa0TldwclM4PFM3vjcRAEUPUUcnI2RvcTdGMjY0Y2Ml0DR4bzcxfmYZkUUUMmZp4RSY4DY0njS0DCTtczXsA0U1c0PNM2MVEzJKQlU23ja4YVcAU0TKwFS2TjSxQibRkUd0nlUOQyRrYDbLozcJgkKRMyJQkiYDkEUW0DcukmatYDRtgSVVIFMxHkXucGMjIGcUgFYDcmdykUdVsFalomVXkDVKcGS00zTZAmM4f2b0HlcsEFRhYmVpgUaQ8Da3jmYqHUbSMVTmglPuwVZzbSUtfScQUVcqXGcysTQwLSVg4VdzgTdEcCM0TWRqcSdJQmMBwlVG41QAECQ2DUc5YzQD4hStAmPRklTFYkKz3zLGUkKSETLnQ0UG4xStXVaNQjKQcURMglRlgzZPI0MpsBYyokakUTTzcFTAcmcqwlVAIlZrEUQiYTatDUbrEULtgkMCQDaFk1agMlYnYGSyTySnAmQ0cFTOEVSy3xRgUSah4jQpcUPLkkZkIVRTYzLyg1QOgkZtslL3gSMvQiZZQ1ajkTdLY1bWgTZ3fGbBkyTvLidKQjaGUEQLgTXuYENqDWUCIiMyTFQPYyLYcVLxQ1bQMmT3TiLoIjbpwDZzIiKqgVQmcWNnM1aV8VTyMkP4szZpolbM4FNHMUaIMVcHU0X0zjQswDVkkUXoUFQ4kyZrk0LV4ja3LST4AWUmU2RzXlbYYkVS4DYIsjVQQlZ0cEbk0zXGYTQQElaEMETwMFZh4jLmIUSEMzSsglU3LiUlIEbvUiRxs1UxTmXxgFSOokZ3jySXMmYtU0U3rFQDozcXYybnIEdFgSVEQkQDkkUzMFVPwjdTMzcmMjaEoTVkQEN1jVbrMidQ8zJCAUMkQ0TJQ0JDUUR4jzbkcibgYEM14jX0YzRqDDSNoUYmgUPYsFRnEjczkELBcFYM41M5EjXwMVZqcFT3klT5gDbr41XDwFcBgVdpEkXvcWRowDTNcTPUM0XPsVM2cFZ5Q0S331c0IGMEUkSvf2Sq.SU2XySjU1Z50VbzHUV2DlLgY2b1HzZCIkQDsRRSAScigVZ0P1XNUkKPIkLqHSLWETb5YzbCI2ShMySDslMDYSRQoUV2k2TAQlTxI2U3jzP2AiLZEyJQUTNtQUX3UUYPglLHYlMYklKzsVV5IWPLk0aF8lQ4EmTAshM40FaOMVNnkEY4YTVKQjP2HTayDlQkkUdYYVS3fjb0nWSyU0Mp0jc1bTYv4jLtjyTy.maisjS1XiTn4TStMFaYgiX1ImMv0lLLAkXpAEbsQiMmUlcUM2Mu01J54jZtIWahY0XAcEavQUVpAWRtQ1Lx8jQGcSR3T0LScFaOQiXzACdvEkYhoVU0.CQp0jcYklcTcVYBMEQNYDRkQSUkYiRYYEZ3PWaWgkUwAkVvMzPxrVUgQTNRgWPVAiYkIDU14jYmUkZxHWatzlYuMiRpQlMicTSxv1UxkyXgkkb3DzUzXGVt8TX3I0b2fGUvciUI4FVhMiSBUUYSU1aMEjXmoGczgDLXwzPHMGaSkjRsAEQLAkYgMUdoI0RHAWRYgVVGECNYYTdMkFTB8TLlgDLHk0LzsVdJQiL3TWNzEjPOkVT4rDb2PiY3QTVv.kdxvVaCYUdTokYGw1QpESLqPkbigjavTDMHkyMYAWQ3.kYBUlPmgmPWYjXJI2cvLVcnE2ZJUWSxUSaroTVIISY4Q0QxoUV2LGc0H1UyjTcmkSNs4RMrEVS28TLxDWPKc0U1.SUykVYKM0UjEWTqkkLXgVP2cmPGUSX3MDRXEGbRACQz4BTQkmaWA0UDUmawsBSn0zaToUXuY0ZYoDQ43hM2.SdSITPzkkZPEmQjIiLiQzcYwFQJEGN4QVax7lV0LlYG8FdnEicSQWR54TNwHSPTMSUgwFLDk2Y23zTvsBNWQSYA0DclEUdlk1ZG4hK3j0PHAyZ2ACRhIjMiY1PrMUZBsDa28zcNEmSrc2MvjkVq0jbZkEUkojTZ8jbBEmXnAUTIc0bOEkY5wFc2XGQxPWYw3jbt0DRq0zZjoGVmYVVoIlRv3RSFsDM1EmdSoWXuAiLicUVKUkVqfEd0oTL0gERwHkdXgzJU8lZIshTTcjSXkmPrYSV1UWUAIVc4XULgUSZpsjZvUTVBsRXEsTZkcWc2wFL2XlVDASNHY2cjI2bqL0Ry7TSPYlcGoFZygyTQUiX38jMmkERzcWXTgTMh0zZpcjUNgGQpkyTrkVdtQTTkkERCIiPybWUwfjcWwTQNUEN1YjTpE0JpQWLz0TQVQSLrgWZHEDLzPVUiE2UuUlKyMzZzLCYDk1R0rzczDTQ3olPvIVSLEWPJ4FYIglavYSUrAiKqYUSUcEZQUGcMEiZUkWLocCViYFVN4FMyEiKpolPgwTXFEzPs4xagUUaQgjUQczJloUdww1Myvjbx8jLtcGRqMzRVgUTYUiaXk0MqfWN1DGUq.GLyoGMjYjSwwlXpcyYV8DTDAETyjGSlsRaV4TSAklPxUlaDMDLYsVS1DTbSEmMNUUQPMiMBoWUCQ1PWESNUczMwU0YLcSZxTyLNIid2PSMDYyQAgSMY4RbScUTPAiPUokVW0zcQoTYTUUXyMzcwblcpkDL3XFTHkycq4BQQkjYAIDNuQmK5MCYxTWZPkCYAIjV1MzQSgUY5EUUPg1UqrjVGACTKIkY4.SMwAGZ3P1RU0jLxvjPUkkYoISdIIUc3kTdPEFQ3kiPU4FcJszMWImQmkSSSAUPLgzUh0TTAkEZuwDMpkzZiUmRW4jY3HkQVg0Uyg1cmMUMqcCSqIFaVQ2RBYmTvkVXqnzL5cDRzYVVqMDdoQjR1jENso1RwP0JnEmKnQjc0bFamokMz71X4b1JxEVSFI0bhUkMnYDa2HFMjoWQzjyP20lTMQWc37lcMk1YiI1JRoTcroUT3EGQrI0aUoDNHAmVEU0JpMiM3jiXUkTS58FYCQGSsAmVREFb4gkMwf2UnIlZwXDSIIEMtIGbMASSVc2Y3fTbq7VZYo0LH8VLLYTcV01SXE1Jz4zS3Dic03zSyUFSZYFMP4zaFgCTmYTY33hXYUEM3zVQiM1XLc0bOgzMxkFUks1MxX0Z00TS34jciglXy7VaREEMtHTROkTZMgDSksVZ1QjMykjKOIiblckT2DiasEGN5kjPjETTEgUTAQ1QWMSYIEjdIkDLBMyZlIWUSwFSqDmYxYjSpgjUN4jPREjQwkDdlsBUyI2PJcVdXMzJiE2TAIzTl0TLq4Ba0bGNg0zJwUyajEmLuAUXwHCZG0zMUslYtUiRGoTRHUiRgYUN3vjMzjSTyA2UYgzYDEzPK0FZxLiXUkSYXkmPUUFb2jmP2gFbmUEVZETS38DT1shaJcUNKgyc1DSMA4BVlYDUkgkSUMkdJ8jRiQGNmgGLFIiX1jkRNMTXysFMkwDTVUkawbGR4MCUUMzXWEkZDMDSxTTRKE1P3cVbykyPisVRVIjcAUzMpUlPIMSLuYyUtIiPjokYvLSY0YUdKICM1YEcPgyJqXTUHMSNDUEZwclTFMSLtEkR4j0JNIWbYIyZg0lSNozatgGN43RXJ4DUqYWc2vTY3DULJ8jV5cUc1MDMzoFZMUmVCoEZpYmbzo0JwIyMnYlbmQjTJE2Ytj0T27lUzjUZHslbVQ1RZIFaCgUQSYGRRkVUnQUQRIjZK4DZ0IVQwcWTGQSRQYTNUEWRo4VREUFUvPCUgUVZOQTNzPWLyb0TGkWVy4hUCc0P3bDbw.SYxIVciYmYxTSViYVaT4FbwjFNyXidgsjaWYEVCEmc3cDM0f1aA4jRzXWSM0DZBAUMvIFRU0TUGAmdVY1PQYicIsDYIYzazYTMPgSaxgScwDmKi8FaUUlQtrhYwDiMAA2Z2ESSlQSdv01YVEkcpAyZkACQUc2Zt0DRZAEZsE1PPs1LWYScRoDYTE2a0zjQhMjMQ0FS3wVd10jQkESUAkELzLmYUkCQUISLQUSRqkiSBYSUP8lVlgiTRo0UScDUv0lU4j0MyYlR4IkMFoDMGcScMIVNQkDSM0zLRsFV48zToQmQJMCLEEmZ4PmS0QSMYojTPYDQKYWbqkDdJszUwrVLgI2XtzTS0MCLAQidkYiY171Lx7jVuYjSTU1MLY0ZLcDTEE1bnoUQtIyS5EWXQkyZRk1bBIEVyrDV0s1a0rDRwoVLCIDZJIVVPgSRPEDR2AkPqcGMtLlQ0HEaJQ2PBkTTo4zLv7DY0LVbP0FNskSaQM1a1LScpUlSmQCMCsVR2.UXIkSTU4BancTNPQzZRQSMpQzT1IlP5QjXtPCTBQFc5c1X4n2Z0bFTUYkUwjEQIszasklQsETNNU2Y1bUYMMSNxnGUA4RYIk2Z3oTRGAWP4QVczIicPoVdPgWV0ozahISY0fiaEcySro2YKYDYtfDUAU2SnI1bSUCUOcFTwLkaPEjdj0VMncyUkY0YvbFclMURTczTyLEQt8jSMgWLCokdQQ1SKkkQmEiTzc0P2jEMWUkXWECbqM1cwf0LQMSTLgDNQ0TLAsTZvUkKwEmP3.kUrUlZlIiSRYkVwnmYqM2YqL2aEIENS41b3QyTUQmKjk0PmE2SPQ1JOs1StsRStrlS4LiVuMTRmISYvMlalQVZ3jyYkEzTt3hRoICLP0jbvIFbrYUS0kFMvwjdQkmYCUTQ3UiSvTkbE41R2gzUromMyLELDQWNqPkUwczYQ4FZokkZNYVcyYzaWITbvn2cx0VX2LSTgczJsUyQyfkSDkmMvfST1EVUsISS0T2PJQSTNIiK3A2YVsVNMczM4sDVUsRYRcVY4TGb4rBQKoFdzTSYsUTP4H1Z1EFR0EVSXI2MhMCYUgldE0FTskWYHkFboQDRqjDbockMHQlL0rFM0sTNyfmQsI0PyYlMPMlZHUiPOYmM0gmXCAiYBslSncyc0jWRz0TRvMVVL4RZEMWUqsTdNklXtPVP3fyXx3zYiE0SVclPWMFMwLjbi4hSugla2jiVuEmaLMlLuIUZOo2RtglSGEVNPEUXiUmTNcicN4zZy.2PMc1TCACNhYUTsYUaoUjKzTmdUcDY1zDMxkzZm4jSYITNNAWbjUmbUkjK0c1ZEwjdEQWLqHVUEsDM2nkSsQidmU0Y0fGc2jFcBomX58FNoMiUJYmL3EkL5ckSEYDbD0lMVUmQVYUdOojSPoWYDMGZOImVtQySAslbgcWMpQ1LzDGSrEmLgcyc3HzUzwVSuYVdEwlLmwTTM4DViQld0UWNPgTTzUkVlkWVZgkPOkVNrwVdUU1SyjGLYICTxA2S1kFLxHkMVAGR1fVSQIFYH4lR3rTbxQVcmEkX4IEaxYkSmQ1YM4zTyozQlcGL2g2XxUzansjV3jETzImSAUWRgkiPYgScCgkZRoFZzcTV0cTPngCTUMTLXQVPMkWb0P0RyXjViAmRksTVB41MLciLBEVNNwFVEgWcFUDQyclZUIyXp8jdWEUdtvjdvblPAkUPzbyQjEmTAQSVlMDLyDkSsAEMgUjR2EFasMlRLk2P3IFU30lQsM2PWwVMiYzc2QWXrcyYQgkPikmbTYENv3zTTcjckIiKYIVTyrBSx4VMBkWaBsRUiAUTIAWQ1.2YQgDcNAEM3P1PogiazU1LnMWZ4bid0jUU3gld1LScvoGYw.ibCckYxwjSCkCSjcSbtk2JHEFMMkmcTIlVScGcQgiKFMValU0cTgVVYIkR4okPvgDLxDlStgWL3DVbqMjb1HiSoEVLEIDYycCRkojPuEiUZUULqgDQqLiULk1PWUDdvb2YRImTPczZAA2LUEyJA0lZ1s1XGQzRCEUZvPmUqI0Px.yRqz1ZOcyMlIyPqMDNIM2Y3f1Q1kDZyzlYNIyUlU2agkiMvM0UvQUNwHlXTk0QPI0PwfiK4HCcNQGSQU2aQoGStj0ck8TcyXUa0b1JznWVxXDaz4BLto0bJoWMxjSZ3QDd1TDSzsjMK0jbigSN2TEbXQ0SXYzSvMTROEldOEWYgIFRMoUN4X2Q38DUxYkTn0VMo8Vc3M1JxjDaTIUU3QiRpQGRXMGStvTRwbDakUjXqwDRsQWbp0DM4HESnoDMTomYhEjSUo0bt.2TiEWdWAUR5U0ajYTU0czboAkTC4jQxQiUzXTNTwlSJsDU1fDdoclMlwFN1jTbxI0JxQUayYFcTgmZ4.GbLkTZG0DZ0b2a2ciMyombtPkZHQTQVwjRzoERTEScssRVv.yYtrhcGg0b2IVLzXSZiMkbLwlRUUzPTcGYlQEdYYjU3.SZ2UUUBw1LNcyPhQWQDUmbYc0ZUYyJvIlcngVQzIUQyPGQqs1bxrFZlk2LqM1TyYCbIIFdMcELDkGcvPWNJE0XN4jL3Q0RjUlKAczb3vlQvPWSpkkc10TMuYURy.iVK4hamoEcEYDcSgSTtPFSHcSbTYiPnAET4wjanU1RQkWYTolVVMFaxjSa4EyJ2fiUWUSaRQ2Q1bUR4QDcTYmPxc2R4EELxA0JJ0lRuIzYznDLA8DZwfmdRM1TjA0SUgDRlMzSwfCVD8FLP01JpAEUYUCRwnGU2oGVWQELJYVY0HmPF4FZhwTaZYEZ3YFbSYkZDYycZkVbKQjPyfVcxXGZsoFQQQlZIIkY4PVdVczTwojXEAUViQkUNcVPvHEM0wzL0QVVJYUUjcmV4jickc0LzMUVlcEd3YGRZACaSclUZgzStXkdPUWX5ACUG0lbjM0JKoFaZETdS4ldY4DYGMEYAUFNEAUUuITLwPjSgAWbRshLjUVT5UGUvPDNEAmVNYiQ03TXgMGbYUFbvESYEsjMiYzclkUYqMkZ1cGYzPDQsoTQZMCZRwFRjIFLLY0YnEUREESbHg1JLkFMvYkTwLyb1UGQLgCcxn0Q0MGaJEzUAYVTYcTb3rhYVY1ZzDGSmozZ23FQjUjRgQlc5oVb3kzLsIUXJ0FaGECVqMCMKYmdNIUZ33lbv.SagUWZZsBNSkjanMGazDTNKMlYOAkKAMkZIo2UrgFVrkGVMYzLnUTZAkWUw8FT4TVM3EDQtcja4H2PvLiX27jP4LCNwIkcQE0P5YGa4UWXwLjbNE2QYMCaBoGZ2IzL2YFYykicjQ0UJg0XWMCbqMFbyzlMosVNOslU3IDUlcjP1PFSYIWdDg1LK4hVqbUalkUVio0PpcSTqU2SLElQPMCUwHGU2rRNHAyLUIlYzHTY3UyZgYzbEokVEIlQvLSatnzPHYCU0EkRNIzU3YVPDozUyXCbqYWU1YjSKkVVvc2aEcTavbFU5kUQDcVbocGV1XTLwUUTGQ2RxbTMj4RSiYSS3YWcscjK1jGY5IkcT01XJkyMMAkatYjdvo0Z1fGZkMlKFAEYlo0TEsRQvgjKLMWcogkVUEVU4okQPMTQF0zL1kjL3DVP3zjPsIWPXw1ctQzRwgmSQsTZrYjRLUCNwjWNtDFdKMELtk2Q1TUPrEFTDMTbuUFcNI1U1MTVLgGQSIidqAGStU0J0jWL2olakwjRPklRGcWMkEWLyPjdswjZEUTZLcGVKciKyUVVjYVZYcFNPAUdnMWayfSar0DSOQ1SX8TNzzjLrsjQAcSbzTWN4o0MD0lXCYSMvIkRyjUPWgGUSQyUjgVN5QDLxQycSY2bx.0RtrTT4wVX3.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.GZnMVZ3byS2XzJ3QmKAMVbEQiPZsRUI4zRCkjQs0zRvYWc0XGQ2zFd0LiTmcTTtjjUQ4RYoQVNPUCQwgiSwMSbk4Rd4D0SoIDM0HEb3o2JNUyPAAWT1b2XQIVbXMybAA2UxkmR1TmYi01ZxIlYtjmX3LDTLEzPTMEThYDQkUmUUsBMN41YwgWRHUSRWEGaBU2ZmMTbJc0UigFQxgDNWQ0J3DkT5M0PV4jZ2bjdzg0L1TkPkUSQ2YCYZYyZr4hTEIjaJUjY14DVQ4RMAIzPB0TYrsDT0Pma1kDdKwjM3ICaKcWa2cURyjES0L0PrYkay.ULYM1RiEER2fTcAQzXBkEUvIWNPklPFkTNjMjRq8zQRkVbZIjXzYEQvrjczkjKJA2RyIyPSISb0ozP1DmKp0DNs0TZTEmctMFRvHWRgkmd4jlbJ4hSDMWdY4VLzvFQSAGcGImcy4zc3PyTgIzYoMUdxP2aV0TT2LyXzU2SIMjPqkVdkgjK4jTaRwFTJsBS1TFYZQGYoUmaPESLCMWPvTjVCgEbq3DQpoDdhElK1fmRnQGSR0DRhYkKY0VSCAkVl0jTXUSUh8TatLWZlQ2JJElLvoUagUjXqc2TzfkKUg2JmQWPzfGTSgWVqnzJnEmZ0slQi0lQtT1Rw0javwTTt.0QiAyX3MFZO4ha2LCVtg2cqoEcBMjV2sDZuczJukDY0jibXQFR4MGcz7zcTkVY4gVRB0TbEYVLncDQs0lTDojUxb1bVMEa031SKEGaRQ1QKQFZCAiZlkVNLQyMSUFLwnjUxE2M1bGU4EEc5IiMMAWMzszMVEGVvI2YqfDMuUkPwklcwTlYwXjKvnkQiMUTwolX4XSSyzTMVgWaVklY2gzZzzTUxT1QiY0JyYUQybzY2o1JWUURAUFT5ckMUwzSNUmY4gVdKgURxU1bPYCbvgUZFITM47TLKcVQqsjQOolc28VLHYld0fDdVUTYTAWYlw1PA4xLDQSRyMlTFUyJIAkZ1HkTwPyR2YkX4.CcwoGRTszPkY0bQ0DLgw1bpgGb3cWS0s1ZNM0UrciRXg1LHk2PWY2RwDiLikGLwjVXKYlKZIVLioFTSQGcoMjdyE1LMMzalAiaR0DdjQiLQUFLsMmPlgmbmcjVs4TQIQlYxMFUXgTao4TLkgmXj4hcWcjbY4FMk4BaBUTUwAEUHsBUuoVXXAmVzI0PNEWYkAkYHYFSJsDQpolMvDGa3vTMWE2YuIEaDc1StXSTqPCSwYFSLwTaL0ldicmLzEGZAUmYmwjPqfVaEczUznVQA8Fb1.GaZESMxTjLBE1U20jZz.2avIjPwPkPAI1Zv8jR3c0bQUmQtTlZDIyJ4cEa3jGYzE0PgMGTRMTaMgyXSgCUuYULMUzb30VTRITMDolZ1L2ZuQlMpUGcwcjUng0XMUjaOgTNDcEYkgkVMgyMQQlb1AkVPwVMgIiYgoDSMg1TgY2U4gmV2j1L2MkYvTSQPI1PAkCMkYjYWolZAshMCsDZtQ1TYM0LO4FazbkSxYjZUkGLhkkYucmTjEWLrs1PtX1QsMENmk0aq8FY0HGazkDVOI2bJgyYowjZYUFT0r1QDkDMMgzYxrxQ2bWTMUWS3jkU2wVa2jDYKoGS0s1czAUSmoENMglLxImVJUlYVEWTSQSd2TkVs0lQHokbQEzRzYGdMMiStgTVqEVUyTEdQIiaH4FSqL0Q2sTXMEURYAmVpkkL3YkbxPFaQYFaMkia1LWcoEEaSkTaDEDUB4lQQslcE8lc17DNOcyLvUTQjQSPSw1M3HSdwkET3T2RGgVPsMiYskFY1MWXy7lUt7TQsQEU1PUTwElawDWLUEUZDgmXig2PJkTV2nzRJIDSFQVSuQySZ8FVJESNqEVMoMTRiQ0JMUzXWMmZEgVQXU0JjUWPUc1U2cWZoQDYqM1YFYUXko1UOkSYyj0JjcSPlMWZjsRSvfjZ4jiVrkjTKEVRDkEanUiU3IlcYoGQvDzRwgCLxQ1cPkSZ03VXXoEQW0zQuUULDshUmA0bPg2TBsDMvclaRMyMiwFNCQjZwEWVwPiZDMiRQIFYQUyQOUkMqcmRDciTP0FQHUDQWkTPwQEZxMURzUGNSMWcYAWNiQTLmI1R0X2ZgwFdwcWRzkkUyojSYQzSlgUP4MTXTgia2PSYnk2Slg2coIUTMkEa0QyRxAyXEAGQCkzc4jjL2HFYSYGNxDiSDEUYwg0LLgGUukzRxzzbYI1Z5YGM04BSZQFdynGay8lSZcmQ3n2Jx4hKLwjQXMCc3DFMosBcOcSQ37VclIlZZ4zZDIEbq8lYGU1Sl4lV48Daq8TTiYTQhEUXnMjQtbGLuwFRsM1UwkjbqgUU3jkVNYScqYmVBkWY33Bd0gzayciXLsRZvf0avYjclkWSUAGLLkiLYM0L3QGa5EWTiwFSgQ1QSQ2bxjjQOcUaPACUv3RapgmViIjVycSMtrlcSAUNIk1L13TanoDMyk1UzwDbwbDYkg0SwU1XPomQ4wlaBEWbvYCRikFctDGc4gjapMGV43jSHUVMqczckczPDEEQSIzJtPCazc1bvAyM2IiLqY2Pio0bxTlQtTTaWcjPjcWR4jFdHAUT3EVbuAWcFMDUqk2QZIUa1PCZZQmTOEjYzD2Y5EWYqITLGciK3nzcx8zPvLEckU2btAWT4UzavYETCkERTASTq0DSo4xXKQ0JiEWcwokRiAWcsACUucCV17VPkclSZI0PJkjU2.UNBUFMRUGbZUSS3zjX3LmdJMUMykzbPUiZEMidWMmMxTiUDsVMBsRSFYFU5UjRWYDZZYCaMEiKMkjZRMCRR8zR0QVRwPyLOQlSEokLDImTnglavvVXrYEcjMCZI41UJc1b13FTLMTNr4hQUAiQxkDdGMlRBICSNA0PssxUHEUTMEjYsQ2bjgiX3fTSrgzT5kUXwTFa1bFYwgEUN4VQk4DYZciRkEzcEI1Z3YiTiImTwb0QzoUanU1P37VSHsxSx8zS1E0cgYmalojK3DCT4QlKtHTSyDSVUg0T2rDc2slYyYlRTA2Znw1USkmP2nGZMgES4vDQxU0ZYQka0MVTPomLjE2L4jEL43hSyvlXw8zXyAWPtgkVrAmLBsVRSk0S0HjYVcGR1LVXocyc0QSX4ECbVEDZtA0Sz8jbgcEMUgiVqMldyDTPvLGNy0lPqTGVgUUMtXVNYIzYvj0UTASSBMybxHCciUEbzAUUwA0UvfGYVsRSWQjRQEWXiczbqXzaSUiL0LSag4BQmMVL2clVyElbqHzJ4vVVsgkMLYjVOgVMO81UzcUQPkWZ4.iXqPSdSoTcpQUZhoFVQcUcu8FVtgTN2XVPSslbwIiVNY0TFIVY4.CMpgTXxkzJtj0JPcCVp8DZIQSNCMFLAkTVjkVcXQFdZkERTk2T3DESPkyMN8DYzTyM4UWT4clVFg0TzjmVtUlaoQ1RyfVXxjSPIUWLtf0JLkFQOgyb0bCUwrBYyHWPLEGM3XiUqn0RYAmVKkSY4b2MNsRZ2LFTiYlTDgmdjElMscjSosBUUkVXukEVrU1TkgkR24RUqTFLXoWZtL2LxvjdkwjVxUWSwImQhclMyASPzIjYMkCVjcyTMUVPEgVZvYSQ0gyckMzUxDkbYUGRGIiV1LUL5czb4.0L1AUcXczPl0lYtIjdFsVbsE2UUQVZGE2PXslZOEVZhkCYKcVX0PDazsxJzImcvL2YBgDamImbucjd1jyLzkTdWITM44xQI0ldwHEM3ojQ1UWYpI2S4DkaGQURVgTdTQGNzYCZpclajYkb4wjL1IjdrwzaOUVayozYVUiXOwVPqTDR1fSV4gzJUMWdBcUTzcDRVkCVkE2UggyTZokRiIUVwHiZ4bjbHsFZ4DlVHsRb0wjKpcWLDsxL4ojMqbyMKoDRWYiXS8zT4Y2bTQCdWQjUDsBYq8jUNQlTDUkdq3FRyf0a54FaJE2LXY2Qz4BVtPVLtzFQyrTZ1cSL5o1c5MUVTozbJE2ZzwFStjTXvTCSJAWMK4DaGACMMYFcgM1Slk0M1jkKg81SZkGaCEmaqXSZWYzJFUiYHgSa2UURUYidCICNTY1SCg1JpMlZPEjLQYTVzIiX1Y1b5sTNU0zLQMVb3bTMtXFTXcjQ3H1XUk0JuY2TzIFQnMCSCk2c30jTiUCbtjCRFgyLqXDa1rjY3XSV3giaLkkY3ISbjMSaEgiLmcUaL4VQAMUTzoGTBAGVJshM2D1bLEFQzP1XOsRPRw1LHEyYUc1JnoGcOcUd1s1LxbFRwMlTznVdNczXMU1LWc1MGoUSZMTL1bWQREzchIiXIMiZ0X1bvTWYsc0QpkiYPkjMEszTL8zTYcTUpQSaxQCNvwzaC01RUYyPL4zcxHjXUcjVFI1JZY0bmsjPuc2MugELuQGNPMiTv4FSq3zcAQjZvzFSOUUNWcCU0jUdyn1cW81Z2gybiYyXko2LYoWTog2agwFUXQFcYkUPqEGQqLkcKA2UrAyMowTRGgWS0XGauMVTP0VM4gkKEU2JsUDMAcSUXc0YTslK54VN1UGa2AUP2MkdWUGchIUavMTdSgTaCUFdqfWNPUUROglSmsFZz4FdMkTaywjc1vjXRMjS3fENjgjPUUzawHkTyIySwwDTNslLBI0StkCTMMlR3klPpkUTAQTUEA0P0sFMCIGUv.2SyXDQVI1UJM0aCMSQtPTP1XEbrIkcAEFcY81Ugs1L4slZUMmXvAUZzPiT18FVjIjUEgibDgGRKsDUyEEL3DjPRMmVu8zJw7zcEcUVBMjRCMSdiw1MO8FbIITSuEEdV8FREszPqQiUhE2XIEGYDQFcQMiQiIVLoMiYxgWPKkiR47zSXk1Q00VR3fWTDcSRmAWQzg1ZygETvXST1UGcqTSVNkmLyLlbuIkRRQWT1MzMlkSbjo0Z2LmSWcldFgSP5sRZv81Uv3RYzQiTQMUbzoGQ2sxToYCVZgCQF0TdKE1LNcTbEgWbDYCMA4TP0bCLQ4TXTc1SkYTS3jCQkUEcJMFTu0VZ2IlXpMjSE8TLlITXsASUGI0TA0FZynmXOQGTNIlVvnESHAWZUc0btMkaXkSYAkVbPEVc0QmYJgFSO0VZt0FUykFUq4xJGY0XhQiL1TTdqQzPOMWRJ4DNrUGU2kjUrYkXwoUXwYTR4olaDoVSEcTcI4FatTzQEMTarUlUhQ2RF8TUpgkXgkiYIUTXtkGdwYERxQVb4EzMSQFRWkGLOwTaUcWZsYFYq.mKS8zaDIGSoIDcjQ1RKklUnoTS1cSaBE2PtHkcWkyPB8lQZIVa1UFbO4BTLEyQiUUL1Q0TzEiQXwFMwrDMwYzTHgyYNYmSxczZZ4xSWAWXzXkZ0wTQSImT2LETzcWPIElcNUDZTYUayUWbHQDRt4VQL4TUWoWR5kSNqXUPtcmdzPWMyUDcvIENGMyXXQDazTFYg81MuIFRw0TTyzjX1L0XSYFakc1bZMFZRkTaBkyLg8lSHYCM3rzYyjkS3XFRyDWTQcVSGMkb58zL1vFZ0DSTyImMJkCbQQWVGgVYKUVTlETamUGc0cjTkEVNSYkSqPWQkU1UHwzbKckV0fjcPIDN1jmLmE0PxDUNRMWVzXjcpgDTkE0YWUjQx.UcQ4VM0EUTxgidjgiTwkGbPMjblMDdA0lLlMWPw4RZy0jKSgmb2jDcSolTxz1PIQmPMQFR2UUTpIUTl4VbsM1Q4bWQTQyT1jVQyE0b0.yXmMVcvXGU5w1Z2XDQzclVYYyM0cGZqg2UGUSZzLyc3cibyojVVImbAojUVoWPPYmQk4lQvD1PRQ0JpwjZOY1QhQlPiI0LZ81b1EkQ3cjMI0laR4FYREmPoojSLcSXD4BbVsRRmckUnUESYETZ0Dycq8jV4QTXYMiR2TDU1bkMz4FL0EVNicUNQsjQpIjPvUUdNIUTLkSarI1Ys01U0wTXH8jYXIScwH0cRk0XIQyUtbiP0TzXHcUSUgzRVUlUIshQmUFdnISNtMmXzLUNqUmdjYzYL4DbGIVTg0FVt4jXtPFZ5AyUxbkTmUDc0bkdKcSdxoFaK4VRIM1PIEjdqQDTJI1Z3rRNvvTbyTVX2b0UtsDZSIjZzcVQ3ESMLAWR5szL3TVa2bSUrAEMPgVaLQzJgMESO0TQGMTdCkmZqjyPwrlLGQ2QmkmThcEYVsFLA4zTqHSZqcWPmYkVKISbGojZuYWbwTiY0jCdGAmKrwTX2DiLgUENHwVcZElYKEzY5IUMtcCRAEEcv0lP0HWagUzbHgiVJEEc2LjUUQCSQQVXToEcuMlYCYVSqP0QXETP2YCdJEUVHY0UrYmPhoVZu8FYNkDR20VctQkTukjR48TVhYiSPcSSMkkbhA0LxHGRrIGZCcSYisTbPYUUhASTYcjc17lYzkkXPIiK2gmM17FNgcCMCojKvbjK181LyzlKOc1aXYzMqb0QJUlcIUVVKgUc44FdmYSN0MCYxPjbUQjXXgUVno2aIUmKUomXScFQx3DdFMTUxoGYtXkVvMlY4cjLtDma0Pya1XVcwslM2fUcNkEMEQ0PmgyPyLiXGAyTrgGdM01LMc0ctshYqvVbyj0JrIiTpYyUyHlSPMDcCY2UCQ1bzPzYyPyZxESYWcVYZMTY3wFb5kGbJc1bzHmKmkUPybVcEcDcYozTKklZTAibHM0ZEUVY0n2MoMDaRYVVGkERyEUcvPjPyM0MVgmaHUDMMwjZ4M1PFEVPuU1bvkyPGQmVlAELU0ldncVQmQWVqoTa2UWRL4xJSc0TAkSYkcSTK4xZwPlQXIiLosFYzYWNTMDQ5wFZRYTM4cjK04latMiXy3jXm0DVxLmKLMlLpwzTJcGcQwFayHSR13lQFIjRNUWMwg0Zy8lbQciKNg0R0UlSL4hRhQTSYUlKqolQYIiTxj0cmAkLrQUQrElM4omQJgTcyQzL0MUdvDzRgAybrYic5UmcYc0a4HDduEFSzPkMCITbSIWLSg0UQokRhczc5okQY81cskDbXQDTuI1LWojPiQ2aXgkSFElSRo0Zj8VXDoTMqPWMUImSIwTbM4BRXwFMk8FTME2SWsRUtIFSvUlKDEEY5EVNMomQjs1ZQsTakcldB8lKtDWNHImSzEUbmsDVUI1Z2UDRWITP2c0P3PkP1g0L4vzT18lPvYUXZgTYYgVdqzVchYGMzzjQgUldy7jS1szc4MCNwbFaLIjM4rxSIYWRTE1UwzzRGImS3gVcjImSyfDZyIFaOE2bqbTcZkVLXIUb3Pmbx7zaj4xa4clSM01J1UVYUkScucUSo81aO0TVYkyay4BLYcmXwDTNp41M141cyI0RPUVRYQTZAgSP1sjPogTcoUict3zXZE0YpolRNEmSQE1Uq7lV1UVT1U2Uu4jbLA0UiciZFglZPAGTY0VascGLhgTSvo2TDEyLqElPzjyLh8jX0jCNu4RZvg2c4.ya1bybSIDYmwjPtszYAg0Qxk2QYQjbxgzaR8jKNUFcqEmUqkWLqUTYZ4zYD8VNHczPgckczfjaZYybzoVaXgmclMGcYIUbRgFMQc1TmYSdHkGdMo1UZMFQIEGaTUjMv.CRJITNi4BS2XDNn4BbEgjd4YVNHsFTQgTTMkDSxIFSPIUPzcjQyk0UIsDS2Hyb1YmTxcjRYE1UiYkMAQSdugGciUmY0MWPWcidrU2ctnGQycSPigGNMMmT0MzYgAEdRojVq7FVwU1TWsVLLU2cDISa0UlPRolTq4hMxcCMoQSdrwzTYgTPqnjXS4BUBkTNJ4xPoY1TKsxSBszTtQUNBoFTGwTbxAUSm4DV5kUaOImXwoUbykkTAMybXAEYOUDMzQmcmQlRqrTUro0ZgM1ZzHkRwUkYNY1J3DDcDo1Yyo2ajo1SGEUd44xS5kEU1EVMHYibn0zYsUERmcGaU0jSsciRD4RXXk0MRsVY5YkUiEDU1cmMzImMtbVXnASQy3FYnc2SvM2czkjTXUiTJUmLVkyQn4hXSAUQB0FYJESMyvDVSoVPrcCLucTMIkGYBYDMAMiZVshXxLWP4YWXFo1TnkyQqYyaj0FNZcmaOQGU4f1Uv0VSJEzJGUVSNA0RJIjVVsxYV81QrklMlYVc0Y1LikTQxQWZzwVTz81U5ozLRAWXSo1XUEUZiYjT1DTd3HjcYUCQ2.UY3YyQtzVTBEmV3ElREAUQ2zFQyXUVwHGZAU2ZIgmMlAkZTo0J5MlMhIUNtkiS1YVZnIVM4TDS2YiKtMmYPEWcYcFQioUQowFauAmb4TjPWk1MJg1aP4zPxLEcGwzaQwVZzbSZ0MEMAkVZ2rRchw1XRU1bKIjUQMlbTQ2UJkyZWgEZMcSaA0VQJAUZRY1UMEzQTIzaWkWYyY2JWYjK47FatYjSNMTX2Y0XyrBVEESaWIySuIyTqP1asMTXhwlQxkmciUCUYgSdwrBLYsFbEgDUxHWdnQCRsUSRXESSUkSUQ4hSsYyJSUiRkgiPQQGbTsRRMUiMYkldzYDT4XSXCETaNI2aAYGVxUmaqcmdU4Vaz4lQLwTXVA0PSkSajM2U2fCZGcSTJYVY1rVcTECSMICNhUmYOoTMLolLzk0cVEichM1LMoDd1b2UA81MWA0T5QDT2H2My3TbjwFRHEicZ0zLCwVXJgjaBUiZQACLoczYtUiZmMkUhgyS5kzT28VXSACQybDaB8DQAo0cJ4zUsEWM50VcU8jStEjLxQ2bukSMukDdMolKisVRqjlLqIUZHcGNu4RMIgCNN0DcOgzMHYkZWQjawkVdqnVNgYiXmMiPE0VPzIGb5okTWoFVLwlXy31PpomK5sjc1HVY4UUUygEcCgiZ1DiRC0zY4MFTJQkZjk2SVcyXnMjLIYkcs4hLv4DaIICLyITXzojUxgWS5k2J1jSNvgmaxXiYwYjK0zFQtIUQzw1QrYzPGI2bC4Tazk2RvPmMN01ctvzb3QmQwgTbxY1P3rVVSsFRiUGb1DyUtglMFolTJcCTJUFRL41P4fSdMQ0JQoWd2ckXyTmaRElQ14ld2zjdu4jbi8TXZAkYoYFcyPyUvTCaH8jQqIjbuQGMOYDYYYlZLklQ3ASbFUidPMibCwjUEUmaYg1YqUSPsgFSLY1TPYFRkkWZtvTbtjlSqXjUiQ0ZO4TavMyL4olPYsRUu4lTmYCNBYTVwLiZZUDSZASTVAmKwojYoo1MkckdIIzYtoWPUIkL0E1X2cVNtDjR3UVZBEkargjUwMjblAEUUAWMLQzZuwTU0X1MXQWRDgUa44lMqrTUMYUL5kyXEciPTomZIIiXNcFM1UlY2DSMpI2aHsxYLYVaCYjdMEVTUM1PuY0JwTSaU0FZvwzStHFT4A0J4AyLzQEaPkVMDgybxQmclgiPKEyRDU2ZGMGUxYELkgTPMUzbowFLY0VMqTlavoWL4ETcLQzMB8VdmMlSvI1YgUjbLkWTvMGTLwTMtzFL2PTahEFTWM2SLYmSqgmPt3jLwkVNq4xLrQiX4vDS2jySSYSP0gST3UkYYIDMt7jbYgjZy0TTkQUQwrxQDMETFcjM1sFYDoGS4fkUJI0QJA2SIomM1QGZV8VT2.2bWoDQBoEa5QjVgIla34VUzT1bIQWL0TyJM0VQIUyL4M1JRkDaIICbvQlcD8DZ1.EYXYEQLUyZ0giVHgiKQQkc4c1SRcTcEQDMpElQIEmML0Taz81XY4Tbz7TZFIVcBMDNOwTVjMFcSMFbQsRSrUWNHYFMuMmS2shVnkFYskDUvnmVvX0MtY0aFQUMNUUZnQ1SwfSYFMVUscjX5gDSJYkMgYjPXU1XvTyaVImTmoESTsjVCEEaqEFQuQEa4IyPMMmTJgTXBIzYKUibNk1XZYlU3jSZmI0TI4BU3rlTZomcuM1LvkzbDYyL38FdzjyT2jmM3IlbA8lR3UyYqbEcCQkdDElbzQlT4PWRvLjcEAmRLIVZycWSiwDNMg2Mw3FNqbzcEolarICcOkWaj4VLLM0cZMCTXMiV14DLhs1LYcUat3BRyEVRpQUZqzzL5YSUt3jcSg2PtA2bXkmSYIiXGAkSKkENwoUPHQ1X4jTdykmLnkVRi81ZXIyS4rRSxoVV2.mbJEyLIoTYGI0MrIyLloWaJUlQUACQgI1axLEVBMDaqTSTJsTVysRdPQEZxwFM2fWb4flKFITV2EmTJEkSqrVM1LDU5k0J3TjPNkyUzgjRJAmUxUVVV4RMiAESCQST2DyQhMzbAclaqT2XQ4xS0jWa40zcAglZIEjboMVZJcUQ0jkKqzzXpMDR2T2Mw4VMjIGSME2QCMibhcTNUEiPIYla0TkLtYmMwHiU0rlQNgWLnkDMN41bRQjXzXkPCY1SQ4TcqLFNNUCZzDmUxkFYS4zTJkkSIoWd1b1JJM2JZAUcOYlQKgFZ3XlVGkGRKQSPPQzcDgGSGwTTFc0Mx8Da34xYVojRL4lP2D2Yk81YK0FTKcyXy.SSHAmTwISQLsDSvsDd3TmctECLsgyRtjiRmgyb3sjM1IzXzLlUFkVYlsBLNcEYF8DVqkDbXcyMGYjdwnTMlAWVkwVLwTSPyLiczQSaXQGRQEDV0kzcEEmZGglYBIzPiYTRUQzUpQjSPQVP2DFUZMkYHESVhgSZAU1Q5Y0MrIDS5ICd3vTVScSSnsjTgMUPyX0PXIER1oDMR8zQhYDbAkzLQMiVyUCUn81cWo1YuUiUBoDNhQjQ10VPlcTaJQEdwLSZmQkKQokPqomaMsFazglZxgyUNYjZtXmRmslYNg0XMgWP34BUq3hYoI0UtTlKFciaogySvsxZqbyLwA2XqQmch41Q5E1UQoDbyzFN5gVMiMFcgMmdxMiX1EUR4UmXuQSVTcSZvYUbKUiXWgFRwfmV3kjSxQCQ5gFTtTGaY0lStXUavcib1nkLzrxTCMFbus1UKoUatMCTDwFVts1ZlwDRAQ0S0MyXhEmaWcEMrMjX5UVQIYjMVU1ZXoTUvP1QFoDLI4jbEkDYOslKpQSTTMzJUE1RXUiLS0VZWEzZnYUPzfWYPk2QWQUYYUyTm4TRSM2P4LSRHklY5MmTnQ0UrYmbrMWQYoFdsEjc5QTZ2DiXrElbxD1RxkiLwjkVBQiREUUVWMjQEklZywlRzcCa24RPEA0ZVYVPzkiK0MjSiclanomaxE1QxUETYo1bJAiPtUSaosRNwjVS1bENDgyXYU0PY0lRTIjbJYSL1XDdSQEM58lTSkFQQUGSAwDLg0zZ4XVPmAWQN8jTRIDajIlXVsVS28jZM4jU1AyRH8jawf2ZqEiU3vTN4rRcJICdiY0LV4VQDQWL08jaUAUMXkSPwIVd3f2cyU0Q3nEZuEVLKIibyjSXK4zY0.WZoQiS0LkTQcFb58zQpoGRtTVPxMiUUASQ54BUF4FMGETZkUzcTk0P4LGRVUjbB0jYvUlPtsRU1XCRg4TQFMjYhsxQQc0cqEkPW0ldQgjUIoGYKQlRjo1Q4vzYQUjQk4VRp4RbYkzRwQ0bMEGdhYmXoYEazs1T0fmKmwFZxzTT5g1P33DdmozbtUWV1HyUwLTN4vjYn0lZKwjYHglTCQlYTMlMGQmULEUQIgzMkYUbmcSavUjQw0laBQCdKslZ3sjRRM1TJYWLtjzMLAUQOQyQCEDQ5AiPxYDU3HWZt7VMQciVzXFNzbScvXFbkkDRqo2QyPGZHkkXuIUXFkFbHITNFoGQK4lQxjlaXQ1J3sTd5cSVXQ0LSk2PVgELMYibkI0cmkDT331YggWRWolV0n0QB4jLwbmMnMzPTwzTxgCUCoWPmMkVzgSZuoVXxbUcIkVXznzPOMzLvUCdWszUZY0RLkTZysRX4jUTI4lbVUmQxUjTiU2Z3kzPH4TY0METvUWVHQFMAgmZ0D0SoIGTzIiMwkVNU0FRZokchMUXNIyap0jdwsVTAECZMkiP2fzJtcVTX0Tdn0FZ0o1bxI1U0HjV0ckMVkCZZYzXQU0cVAEZu8TRBMFMs0FVwPSPxIzMzAEcGsxTzj1M3U0SWMVX00zSnEjbukkVpkWMUkGS0TyLXgESic2LKISStsTdYMGbgwjU4fTLkIjboYyXvcVUN4RPLIkbtnDSj0lMhUFY4sRY2w1YWIWUxQVbt.mYqTVa4bFdL4hVpgDbQIDbzszargkRu4VdWkEQx.0PUASVtESMPE2MVYyPxPUNoElR1LkPO4RUjQFVhQVZTEUYUECbYIWS0AUTtgFdZk0UPQFN3oGStTiMCIVc3.UcDIFYKYSQos1SnsxUp0FajIDdSwlMjAmXXECTZkkamM0Jhk1a4jDd1UCV3wFU0TSMtPEL2X1QCozb3g2Qhwjc1zFMCcSS4UiLscjdhMUXiMWSE0TM24RdkM0Q4HCNEgCQLUELBEUXYgjURIWdBImQrYTLk8DMkAmctjUNscyZ2kDcv0lPsg2ZtHUNEomSSEFQnEWU1nlKK0DQxA0JxbCZWc2TA8jT2ESZIE0aroEa3HScEkmSEImdqb0P5AWNxkmKxj2X3oFRXEmRtQTMVkDUyLFR0MEMXEiMlEDQWslcsAyQ0D0an0VawgjYVgESs81ZWMzM5YiQXgUaFgFV3IDLwIDS1YjdQQzULs1axQVbxoVd1jVPRkSQNQiLKQTLgoFRqTWXrYUXQElPTMlMt3xU3o2JJcyJ2oUUt71axYyQKcCS4LUUAgCTLIGYwA0Ql4TLR41JwEEV1ECds8VdEMycQo1PvjSUBoGLZEVUKACVvAiZZACR4Mycg8VPwL1cPMlbzDDM4ACY3U1atTCYvLCVEQyJT4zY2fTTUMGQvQkd5UUNRQ2S0ImVZkUYKgEUSQSU4v1TXQUVvDGdgkjLzISbyYEUqHzROg1PsASXHEkdmETbusjKzU0bTIzciM0J0MSXOMUMzXyJXo2SWUDZ43BTYwFTxTlPT0Vam4lSzzFTqf1TnQmbMszZLczYxcWSDgmdr0jZUUVXPgGNDkGaKAmKikVSvjEd0Q2csEyS1EDZOE2S2USbtsxQ2LlQrU1SyXFdyPVXskVdwjGYZ4lPgI2RPg0bybCdBk0J171TpElaqrlYkQEVNUidBQDT1TSNrMzQI4jYikiVxYTXxHiVwfGLnoFNZQ2bnIEaS4zSvv1aM4jPr8Vbwc2JsEVTp0lcXoma1nzUxQiZyUVUyn0av3RRHEVdxH1YUkET2AGa131TxrBYKESQpslLwMkbog2PEQ0LZQmMHYVbtYUZBglKHckZ3IWPjoGaxbDYHUiTBwFNtgmSWQ0SxXEdOwTMx.WdiQSZ0UGRUYVPWEVZHYkLUUjRtMkQqv1YRcFaykmKTo1S1kjY4j2c2DiUNQSL0LkYxcldKQVTCYCNOsxTZEyZ1byMCAyQjESdwgjc0HEd0gybIkzJ3cSMyDES1TSQ1olMGQFV3gSXWMlc1sTbhYCLMUFYQczYycCRi0VPJ8TZz7VazMmMIE0QvkFbrwzawbDZ1DDTigEZroFSJkkZos1JzvTM2cDToUlTtAUL2nGNSgFcr0VN48VcmM1cvUCZ2M1QtwjbSEFTr01Y3D0aQsjKzAiZtkyJ0MyPYQ1Y5AUUWsjcpMFN04VYVICZkQCU2gWM4MVL58jbJclKXAmMXUTUokicwciSiY1X1TlVTo1Mrc1M04jPw.CZT4VNQMCM1gELqTkXFMSM38lPxjiMSUFMkgiS0jUSJgCNybScFoFSwTldMIkLpMWR1UiUAQFNlokPSIWVxkVYzIVdToWSZQ1YMIjaA4lbYEFRR41SQcSYAoESxDDVl0lT0ozQrclSlkGMXkWP4fVVnIjZoQTNIICSxbTUwIlR5E1Mxf0c4EkUgsRPnwVaAkDMEI0bQgjMyYTRUsDN20VcAs1ZAolM3bES4XEZO4TSwXjYPQyXmAyStgDaGQTQV4BUpMEdtQUSjYGZVEictQiKvgkPCICQqITLMciXyIzcXUDYNkTZEkCV0cUYykWNTgyLno2SkUVY2Q1StQlMkU0YxgSL2MmUrcUV5sTVZczYDoWZt3VMnYUaxkTaQQFbybycGIzLpwDVqX1R2zzbjoTRzc2RAQUViwlLIESUwPTaEACTxX1S0EWQzbib3HmMzkSYFk0RqUTdOIVZ3fSLsQTXLgzZw.2XHYTV4MFQCkTNsoVMhc1P131clsTSiEyX0EGMgszYAwjK5EWYRQGQS8VYnkSbRMWSxPTPFUGNgclbtsRPnQmM5sVSWUUUTYjPyjlUJElV2DCdoQUYi8jVYgiQCkUYYEyUDESdyEjQtcCaNEzMSQiT0gmXDUFRyvlcHAyUIIDZxLDQxY0Z1XSM4f1RSgTZgUUUYMERoQTXZsVV4sRP0.mZUE1MCEmanESYLYTROoVb2PGZ2g2PmMDcqLCdvHjPLc2Q4UzPmQ2Q0XFL0zjP1PUNvHzYpAWYxMmah4FUD8FYuQWUscDLNoUUhwzJB0Fd2YlQUkGT1HFMJQ1aiAEVZMSPwM1QoEiatoFbqDUaMcVb4oWPGg0QZ4TcAk1QLIlK3HTUR0TbJoGQmU1QgYCZyDyU3sRb13zJqkVRzMkPqDCLPMiT5UFTPMWS3IzaSU0Uh0TThk1Jv3lbZQmY0cyRx.CLxkTc4XCVwPDU4o2JyTDMIEiMUYCMpo2PQ4FaFszbyk1X3IjVyAUP3U2ZDMSMBQmY4oFVYkzYK4TMqHyJ4ACSEY0JucGL14FcQkyMCcyasYFMZIlPwkjcmEzLOEVP33DcqDiQLkzLtQScmQUZvjEbxXzU4sDStXiVVIGSko2MTcjU0UWN0fmYzI0Qt7jRwcWc1IUaZgUY18VQgcjKX0FbzoUc0gESMw1Jz0jLpwVNGIWQQACZTAkQVYVZuEmXxPSSPomSk0DTYQSMukmaVQjKtAyMsEFYKUVY3ElZYEmSGAUND4VZzjDNFkGRSMmLAMjbMo1QTEDUGUiU3fmU2sxX0TyZtP1XO4VRkgyUFgCR18jRZYiZQoVY5Y1XxQSdFczUBsRU2UWXJISax8VXxHiaOISYOIEYUASdxDTUrMlVJoGRnkDdHUTcYASXkkVawfiZjQGbjYjUFgSQ3gjXxUGTLUjahECULMGdoM0RSEUP4HyMLEFRgcSN3ojZJQkYz31bOYGQs8DQQgEMRMFRtckRyn1Lg4lV1TFcZEWMZcyPmE1Ynk0TzbUT28Tczb1Myk0QpEjQJMWLi0jYH4jagMTREQUMFoWSVIyLVgkb14Fb47FVvb1JIcUaNwzQqfkRPojbjUDMRMVQlQiVTY0U2wzbYcidpQUUT4BMiE1MLQ1YVQUXPYGLRUSLzjWQz0TP0IWR2gkd3rVZzLEcBEiVvMDVLEma0HDUgIDLEYTRTICZlkCMuYlL1E2P0ETTFEDR0LzLXoVXD01XikSZNUyY5oFTTojZSYlaIMCZLgkR2PWapsRbiUUYmYTMtLkM1gWUEokKy7FLYY1LiMGLwoFZyoWZCI0b4Y2TxEVT3MVVZI2ThQjT50zZq81S0YELHomKhshU0MjXlg1L2IiaXUyYioEU4QERrYELt81PgUSY5QiYYgzMkQ0M1AiaHMUVpETRHIyURIWMEo2Yxolcwn0Q0jDRUE2bYIUazfELnACStXmQXkSNAkmYIMiaVIjMBIScIUSQ2QmSBACTEsDSiYVP4Q0TRM0LVkkQtE0UhgTZvPVQxTkVFYGUMQ2XU4zbgkGNkUlXxYFdUYGQrsVRPMTcvQmLZYjUY0VZLs1UrQEYv7TcIMSMEglMyrRTtYSUJMiZII0T3AicJgVPjgERVgzXXIjTvc0PLUmRsIkP04RSZQ2ZFIyQUYEagEDdw.ULUAkUwzTNQwFaiASVWQSV5EUSsgzcJsFVxMWMpUCYyYDYTklT2j1TkAiZxfGRogEbpMkYYY2Jh4lc27VPSQlS2TUQLE1ZRsTMg0DUs4lK0IDc1vlQEglV3oFU3XzRnsTUDgkKDQ1bPcTLUgjQNEDMGY1Y0UlYSoGcPkFLlQVUwEmb3ETZTUkYIgmcNE2Yow1TVkzJgQjavjFY541T4LGTZ0zbVEkVtTmT5oFYMYyXz4lY3DkRtgVbwc1cBYEVxXTLLkVT0jzMmUlYFoTMx7lLK8DS2gzL1XmaWU0atclQ5AULjAkLtf1JxrTdY8zTIQmTBEjUVkSN3XDa3oTSVklPg4VYoImRtITQLA0X4fUcUIVdV0FbKshRqIWLFEGYRglVwPkdEMUMEklUOslP4kVNNgVTnkFMOkFQn8jZCozZZYlY0PUcEI1QVcSaLYWS2c0XzAGL08jP08TNS4jdZISVD8lKLM1YtcDZhIlVTcSM0IlY3bGbqflZtnlV3kSX2XUVYwVRC4TcAQTaIcDVM8FTR4FTjciVzEDTxXjTCkiLtXDdwjyTqUiLhI0JvAyM2EEMhMlcno2T4fFbvPUMtjUZucyZKM1JZISNYYVSxEUZiMVbDETMK8TPEAUQyITLQAmLHEEd2cWN2bUQHk0SvjTa1fDNkc0X0PiUnIzRycjQzcicg8lUugDd5Y0RKUScNoWcBgzR1EUTD4TXzg1UGAybzgiXAIUMyfmYzjkMXo0MvbUUkc2YynjRtzjMlY2QwLVargWQwUCToYGRzHEb3QmbhUTNLk1LSMyZrwDb54xJIMiLt8Td0cVb0LlL3EFRyQWXMsjXHYVcpoVRN8DZv0VYXwlXs81JqbmSsY2atHDdBoGShU2UwbWMTMiRtQFR2ciRYMGZlYWaUI1aHclMVslcV8jUGQWYyACRrMUPlkiTTcGRq8lKrQzZ2o0ZDklTwHCV2bUMxojRYU2XvwFZvf1XqkmdyIkdRMlR4fGavHlYjUDLk4Ta4PzLGICLB8VQwPiXHM1MIkmRhwFVZkyaLsFYwL2ZYoEU4IictnTX2MFSFkGMsE1cBgUbzfzMrclavX2Q2MlaXUFRJolXTklcSciM2okSYkkTycSNyjVUMITZycmV40TUJsFbIgGM2g1SP0VQBY0SxrhYBcGZE8VbqcycUEGQ0bTLHgkSq8FREgVSYoVav3xLVozU1LCYzQiYq8jVhQCSyjTaWsBLAgjXIkGRv0Va2AiXKEVY0H1aXc1bvDCZ14TQSkCNSMkbMQWasEWS1U2Xq.CcqcFTyLCaFQVTyA0SqDUM2AkLREzXV4VdxLiXIUVV4gldjEmYroGb0A0YroUSJUWLAUiS2HUQBkyZt0jbyoVcCg1Png1ZQkGcEw1TngkMqzFMiwTXxMWPkcjcyDTSvQCdyrhPhQ0JP0jMDcGTy7jKvQ2PAoTSwvVSZYCU4IkQSkGY3U2bq7jc0Y0XRQVMyIWa1MCcqbVY4LCZTUSbKIFLDc0XvUTLxAET3vTaIc2aZkidp8FSOQyQjc0YkEyQAMmLVYiPNoVM0UzMqvlKJYkbngETqTCTiQlVrIjbKAUSwnmX3HDNEAUb2TGQTojQ34jYnwzYvQkTs8DQnICN5k1Jt.2b07FdKgDQmQGUmQVN4nmT3QjQuc2L1UjZpMyM37VZNgWQ33TRlk2RPIDMgcTa0T0Z3UFULUma2kGLDIEQUMSXwQib4H1RL0FYAMDQ54DcVMEa2ISLTIUPEQjKt4DVF4lRqgkUyUjZOMEZ1AGMTckbqjETgEDTwkFaG0DYFIFMZ0FNNQDZqEDcFYkcPI1Qjw1PzEEV0PyYBc1JtUDap8zQV8zMCAyZoQyRHgjRDkyZqczUvnWaSs1TtvlcWMUMXIURJIzMzkmRr8TYykFUn01QUg2MEcUUy.yRBMzXtYkMWAULPkWRmkzcZgmMDUUdl41UJU1R3YDVqgzayfjStgGasMFLMQFa0oFQxIVRTImMlYCayD2TvUDTRoGYHojdHM2RqXEbiI0cK0VNqAmSogmZjg2RPMESOA2My3BRzjDYNYiQEslMCkzY1IVMoE0XwkiZJMCRBcVSRoVNCoFaZMzM1bySt3hM3DUPHo2RzclThQyaIc0cHUUMVMlT0rjXwcWY2sVSWoURUUFNqbGU2QEQz41MoUFM4HmSGMGV2MWYWwTSPYSVUsxQ4v1LAsBQzLVdCgWc27jT4E2SncEYzrhLYU2Pg0DV4.WR4j0REgFYJcTSgAkXyAmUz.EQ0cDaDQVbWgEZk0lcqM1Z3TVRAoETGQmaoYTbzMjZUcCQKAUMQs1bq0lTCQkaiojQjgSMRQlVpQlbOE0PG8FLX4jXTYURMciPWsVMwfDNvs1RqciP241PysFUQc2Z1njLj8DaFslYw7lSBolMuoESOM0JkQjd0MyPL0jSCQGYZomdBsjbtnzSqHzUPomXvYkcSUkSz.WbjIGLQwVdlYySgM1YD4hcFgUdUMmcjACZWYzaZISUpgVLZMSYT4TLwomMlYSL2.UNng1LlcScKYEUZEESxDzXgQ1bnE1cvbEQOc1UAAWQuw1LAYlKMkTc3QiVookMm4VSHk1RuEEViMCbQYGT3HzPIsjSOokVnMERzkUNmgTZF4jdhMjZDgmPwnVQ1kkLyjEVrESUXEldWAmMYkWVtbEasc0a1kFMkI2atzzQ0k1Y2QELvbFVkklQj8lLM4DZVgiKvrRS3ozPQwlUzIFVJcCdvTSYzzFYv3lb0ESYBICNyIVLkUzUlYDMp4xPqE0QN4xQzD1X4shPiEGSWEFMsY1T1EEUGImXzLzRIYyRzMVaOQyJvQibLQWcy3jMzM1a2Imchg0ZCk1MYg0UJ4TX1HVat7DT2kVdXojdiUkM3.CMN4zLxMkY4zTcNEDVtjlKxYGcGUEZukmKg0VMJo2Tzs1cK4TY0LkUC8VSZoDQtQCT0LlcqXTSoACYwMiLxXzcEsTUPE1b0MlQWkCTsUGT0rDLVsFQlMkSEk0JHQiMQkTQGo1cyIVM0jETNQkP0H1cmsxJRQDLBMUUkMiQxvDTmQ2cPQFQ1QyJuEkMrYSQIoEULkjRrYlM1P2Xr4hKnMVYVM2UkEkS4Lib04jYCEjaGwFLw4FM2UiZmg1Pzz1U1QzbkU0aqb0M4XUPLUkZ3QyLIcSUFAEaWkiMO0lMYY2LLoUSx.ibIwFbzT2Lj8FZukEQ0kUXsYmXQ41Z5shZqAmdKQ1JNMTbjE1ZkUiVpMSPZcyRuE2JPczJZYiLsUkMXEjdz3VS3Xld4kkYjoGLqACYqrVMqESaSUicrY2T581X2szQ1jFUskTP4I2QzjyaRIFaGUTY4vlbvjlQoI2bwTzJAITXAQENOIlMG4zc2HTbvQSXmwzQxUGRLISdzAGZKEzcMoESR8FNQAUZys1TtPGQkM2Jzo1Q4UEN0LVZGsTdJcWYnUkcUg2MXoDU2jVajUybm8zTxXWYvMiS0EWMgYTVho0Z3EEV0QjRskWbZc2bZQicGklRlgEUF4TZIUkPo8TXTQEZrgDV0H1L4szb2XUN5YyXLgGbHc1SyUzLikkZLIFNmUkdUk0ZYUyYKQSTwjmdOkyU4YVVyYmbIUyRX01MJ4xZKgiXCgkR1jFcpITVvcDYJk0YvXzYwDjV3gVUtLmQ2kVN1wzcro1YoImbjIkdMk1ZqL2RNASVkoGYNwDT1PkUqQDZv4RR2EmSqACbMoTRUUjbP8VRi0TRqjjLLUTYV0lbznzMEkTQvsTSmg2c0IUXqg1axsxR4fkKx3laZ4DVzU0LxEWMishXTEGQYETXQoUU2o1XPojcYc0RnkVSg4xPsYVb4MEUgUEd0j1QQc1aEYCZPEiVWIFYXEGUOkyTqc1Prckby3jQLgyRPQld2kDVTIGdjcTarMzcpsVLlkib5sjSQ4hXwkTSSckMK0TMjcCZ4YSYsczZ1IFYCoTV4cjUwPkSrszQQsFMpYyJ3okYTIzSx.GcjYjSyPWVHc0XJgGctUUUAIEZXcEZFIzSIcjU4vFauQWaLkiUHs1PnAiZyoTcvjUYq.0b2fDcFECcsklaGMkLKsTVzkSY0fEdgclcVMUNA4jbUMyZp8VMKIzTqkzUiAkLRQCdw8DVX8lMnEmcxXidpMUQnIiV3MjdvI1MlAiZJQUPhIzTnc1Q2gVauUkPYUTTvXUcPoUawMyT5EyTzUiRBESQk0FR101RZoTcYUkVr0FatsBSIkiVNIEY1kETlYzXQMmKL4zZisBMK4Fa4YkUlIySzHmb0kVLrgTYyIiP3kFMMI0ZUMzUYcGRTsRNyTkQPIyXSI1LjgDbYQSPxTmPuoTLsQSXyISQzXVUGEjUoo2RzgzLt.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.UMRszPTcjduMWNUIWS1MkLKsFUhY0JmcSdtfmVTQ1PFIVdQgUX20VVFUCQkgWPycCTAcFd3cyYUQSS37VUUclbwAyawUDVYQGYl8jQoUlQ0HSQBgDStz1aLokdukCNI0DLCciL2.Ect71cAcidhUVTWoUb5kSXJcVRwgSLpMjX4nWMWgjbAYzXrQWdEUUNq0jK03jQlUCaIgmL3MyPzEULtEycm4jcoI1TioWQ0HmMvvVTI01J3k1QHgmQxEzaTQCSvY1XtrzT5kkZ4PEUPMWUKwzLFI1YtAyYroGYNQjc2DWbgYULugWaRcmK4U2b1QjTsE0Pk4la4DkQvrTVZoTU2cFRoAWctL2PPQiUAQDM28zRskiYXEkSzYSUvrTPAgFRzk2MwMkMKkkcrE0L17jczQUPhIlPjo1MxjjcX8jZXgyazLWazXSPqb0Q0ISVKUVNKwzS4nEQTYUUAQkd4UiTxLSQYkSNSQlVvzzbJg0Q3UUcFMyQtISYzHETP8TR5MFRYMSUlkiYzHzZ0n1QDYGVKYFb4ESZSMmdzYEdv0FUEkjKiQzajMkckklKC0FNHAWPUUkR1kmSZIVN1sFV5ASYyESc4olKmgVUmEzSpk0MqEiK0QVT1YTQPoTTwwzcgg2ZpoFMgEjLIolPWQGN3v1c4T0SzbDbzASYIU1Qg8TN13xZvjDZwQEZxMjLY0DY0w1bKszalkTRxg0TzfybAUUYRkyQK4TQBYUMLUiUM0DT33RZicEVsEkL2zlcCc2SN4DZ2HTQUgVakUkKBgmTGEUVAgGU2DCNv3RdggVVwQSMpgUTKgTZ0L0QhcVUT8lMD4hM2EUY1ozJsIkPgkTQxXVLpAGTAcjQuUFa0TyMvblRAciQ1AWSxU2RzYWSjYibOMFVWkWTxM1TEk1XBcTQh4RPuUVRPAiQxvTUmgyJzISR0bCNFUmL4TVYTQGVkcmPzXCbSQCLTYlbjUFcpMlcCQlUFEyUHcFZKoUQLcFLKIUdWgjQZgER0vzUXYkTZYSd4HkSCEjMiYyJjQWR4bGcjwjb2LUdOAGUqkyaFA2JzQDcO8jLzA0bwbVcvUiMRkTRwTTSzrzav7zYDszR2gkVQkyTBQTX5ImRvjSbu4FMUcVaXY2ROAiKoQzQz4hP4EFb3X2YyLkcicVZRsjZ0jCcEEGUgQyJv8FcQAkZ3szJt.yTAIzX2kWaCUlbqYUSpAUN2X2SsoFVuYFR23lLCMDZ2oTLtP0ZxoDYuszUIkDQZ0lMpkFNQs1JmwVQyoVbWIWZYQEUjYiU0oVY1YVMGUlZkEiSwUzamgkP4PGTuwVa2A0R1ckTIYCQpIGdlgDL071MyLkTYMmY2U0QE8lRFIWNkU0PgQCTigzJybWM4YFcEYFMuQFZFYlPkE1XxzTUDY1J2M1cnU0QyblaScjXugTRxTWUKsBQGYkTsEkSKc2RYcmblYWTVgCVlAic0MEbtL2Z1fESu4TXPgDSigkdOEkcPEWSusTdwMmV2ICaTUicDImb4bkaZkTLzoDayMWU0g0JCcUY5sVNlk1P03lK4n0Sug2cr4DV3oGcEM0ZPQCMgw1cx3lLOolV2g2UTACS4DWPDEFTI8DUZIzRzLUQiQSLyciSxkiMpMycvM2QjEiUVckYwkCdgAmKp0jbtkiM1YibAYSVrsBMBIWPyEmVFIFYyMWMBc1Zg0VUwLGZVEVV0wlKpEFQyD1SvrBYm8VVKwjP0olXlImY13TMPE0Zn4hUqHVYSQEcvclVIklM0cjKr0TPw8zXqLCcXQEQxc1STciQvjiLDolRHshSvoDMN4lUBEVY2cVTNoTVqfzb5k1QOEEbRIGQqHGZgEzYMczRCM1Xq7zbTQjSx31cUMGbtTmVMgGbPwlXJECUVMDdFEER1IEc2MSMzfiaDMFNqvjS2L2U3D2X0wVb2nEZjU1PwIyXjIWPPkmPiIEcmUkLvQkbgozUE4hZvXlSWsxYKkCQ0cCZMU2JXYVVzDzRu4VMzTyJnQDUhMlPlIlVwYlMmUGclIFRLwzQM8FTIETRJgUNA4BR1bjVUk2bQU1XKQWNTgkKqomR1fCSz.GQZQzLUk0Y3QmLJkkYIo2SRIzLx.iQNgGdgETTEI2c2gSQQglPmUSXGITMtAGbSoDbMI1XikFVQgmR0k0MhM1JlIkSKYCaRMzYnomQpgSa2DWZr41YZgSbtzjMyf1JXgkYvoWQ2ImV3LVTxYGaCgjLx7TVFsFc4HCc0PGVLImU5oTQyIWVyDzSp0jMnshURUjRvclPzDjVCc2PBgzLtXidRgyTSIlXgQzSUA2aHkUdzk0UGs1YGwDYXgkYzwzcL8VTAMVTVY0T0.CMQQ1ZCoGZTkkXUIkRjMSd4cicqHTLQEjPr8lY5shRZUSM4AUbWISaxEWStUVSoASMZIFdV41cV0FcWE0UtE0YkAST0XGSZUkUIUjclUkQQw1YDYkarU1cjQVXx3jaiQ0ZxTEZEEiKWUDR1XFMvo0ZksxZwEFLHEWUtImUkcUPUk2byQSLtzTRCkUUNwzZBcTdRUiYtQEctY1aEsVd04FUUEmVJE2P5E0bMsFQHMlQJQicgk1ULMEYv4jdCg1XEE1MrcWZZYkajQUPE0jXDI1RE0lQ3.ycUkTLrQlSWc2XpoldloDZ4A0JRkyaQEGTJckTjMEShcUS2jmP1sTb2MWaEUVYwnVdLgGLSU1PtjVTBITduEWbNIDRA4BSjEmMpIycFkDLsA0ZqfTUZgCMSkkdsgWNyvjYkg0XqYUUgcEcYIldhcWPxIiUWQFVYokXRM1PqkyLDkUavgWRtnjd0MVbxkWZJkDV4j0JBsRXssjawrzQyXyQXsjcRQyby4Fb0H1atP0JRozZ4X2Tqn1LHQSSS0zapcFUvfkd1Pibl8lT5USV2DjSFcDaVcWR3YyYvrVbgYGU5EGNmE1coMSTt7DUX8zXqnUUq.SR081SzfibCEkP3U2aD8TSCUSZ2LSLsM1a2sBUxHWXtIVUtHUczQ0Y2.WYvglakgEbXMmTE4ja2rxcLg0YFoFV0IzJvY1JF4VSEQzZzAiSlcEbxXkdlQVdvLkbqXyRoAmRNkFSyImaRsxMtcDazoDQ4YSVvQjdzDFaEQTT1TiZ3.ycPMGcyn1a4QDTkkmVKQzUqjWdpQ1P1EEa4HmQngyP2sVX1nGUUASRh4TLyTkPOU0aVI0YjMkSHM1c4ACTxT2aqDGaCUlVHkCZxIVbCoGNyHkXtPkTRMSM1sBNQkULUciRB4jbIwlPUomQyPyYEoUUtH0MgcEdXgkYQ01LEoFdxHUN0cSXM4xMsQGNy4TLFU1R2M1Q4vjZGQkUYAkRr0DbPoEU2AGN4PyLIkzUwHjTZUlVhI1L28zM2DSRqcyTEsTPxslPyXCLNITYNMCZ3oWPqEicxnWSIMjMDkDNJUDQBoTXPMEY3QGczIiRn81LOszLwjEc1AGdh4RavE0QX4RVEoGTsQidokEV3kEYNcFLWE2YSAyJI4TVKQyJK8FYsEyTjEDYNElP2QWTyXTdmMkLjgDMrkTUAcmRkMlKWozT3cCUVUGUIUGTygFTBY2R20jdXo2MCcCcKIDb1bUblg1ZicGQvcCYBI0crcWLjcFYyQCNEgVSYE1L0QmbwYFQwUVcxwzPYcSSx3Tc3rRNZEmSQcUdvYDS1fDd3ciLkYUdsMlbCM0SwszZUokX0MzRAsFVXsjMnEmShEEbSUVLuglKMYkaQkCZJAUayDlUrMSNrolUU4BdGclZmIjbCo0STUGZBoVRo0TSngUSMokYJc2YDAiQ08zbkciazIWMPoVQxfENqIjbtM0MxjESwgFatbyZYMyLlcDap8DYRc1bUYCM5UUamIGRNIUNwfCcgwzMMQURyXTa3M1YGQUV2DSQ0oUQyXiU3PTQ4bWSvfkXZolRj4lUyQ0SKs1JUcUXYgzLgczPmgiUKUlXpQCcKUWR2oERn8VMqMWcQ8DYqojQZIjaAEkR13lcKI1LDojQjUDT3zVcxwzZAITcCcTVR4TTVEzLxfDMzsjTok0YxQzaVQGZUgDUlQWLkcCRpQiLWgEdDcSUkYTSXsFRNcyQqsRSPUVMMojXvgVNqb2Z1IyUQcFchMlRnc2YNkWLHESN0f0RqXVVOshRlYDVZQkTVQGZAsjZiIDUxPWaUgSSGUGM0EyR001R54hPNEDSLgWQrsRYqQjY0LkaZcUSDMmZDcmaqTkKH0jS1LmbwvjQQkSV2D2JgMUQQg1PY8FUwjSTxbGcxg0QOUET3TyJJUSXIoUPVgWP3v1SrIWYXk2PVoEYzgVaXIlYJESV5sDLyMScxPCTVAGdqMkdrYTbXUjM2XCT2vVaRQGasUTNoczLtElTsMEM3PGZqDmdLgyQwPCTksjU1zjcQU1PvETZMMkLHgDL30zLsIkPmgSZWMmQNY2JqY2RnMiQqIGdrEkP2XzQ48TP43FVUMFM2MWbl8zL2w1XhMmMvUyZoYlYoUWTX4haqoGT3UzROQGb1blVYYkLLkkY3cCTvYSZ5AyaVgCa2EidCEzZvDjbqYjaNA2P4gFbtXUcBICNLIjK0DjY33xRz7TS44VLvj2ZVMGNJYkRnoTbUslKVQGZMAUZqY2ZxX1RFsRVVcjMIckQNoDZ40TTSMyMWkDaHgkKssRU0LmXwPSU2XCVCcWT3YUXPEibiUVPjk1UZwFNlMTaTcmM2YzStPDdJ0zbPckcNgSYxIlM1b1SBQ1JwUES0PVQN4BToECctLmcAMiKOEUPTgDYkYiSUglavMkTEwFRWA2L3IlP1nVStT0QpIyQ5EiV1bzayQCTCEmdyczMtQURicFc0LzZ3LkMRMWXLUCaxTiazX2Y0U0buomTrQjPGoFQzv1PmUyaSUSbPoFNhQlUW0FNEECMPElKM0VZuIFaU4BYnY0SOoFQkcjVLACLrolaxTyU3kjSyTGbosTS1.UN1oUMq0DNUMjPNcmQ3szbKAkR4YDdRQiSwEUQykjMT0zQjUkXS41MFsjSXslPvUUV1MzTOcTdm4jVxjmXloTdQwjdkQiQv4RMw4RPJgzRjokYBc2QlolRtMyaTkGc58DMAEULVQiLjYlKvMDS0c1UwfyLko2ZsoVZosFdvDkbt4lakg1aYEmTqTTdtbFcOQycOMDY4HSPZMDd3Lmc5YkTq41ZsgjRYMCb40lXUUyRjombYgERrElaoMWYqwjYyECamIEYZUDVvDSazb1b3jzJRc2TZgyczczRMIVTxUCaNckYGUUNxgyYFEEMWckdO0TPNM1M1M1ZpQmKFwVNAMyUQ0lLMkiRBg1aRYVbNgEUZETcG4lZ1QVc1nDLpgkMqDVc1nmaoQlPMU0TWwjSBQWMIcCbj8zRzLSdFcGd4LUUjAkXIoEUhomaOQiZwLTZEkWP4E0J0rTYtPVd1XVazgEMggWcYgCLFMVPkc0J4XjVMg0QSgTU34FN37jPGk2Pz01aJkULnQlLRElQhoTTq01TvYyZS8lMhMCSJ4DaQwjRznTdR01PAsVPDgkZ5QEZOckcwTic5ESTzDUSzY2S2w1MscGMXUiXv4zZTckb0E1JqrVXwzDT1kiRJASQRwVYL0VQCQmYUUDZDUlMVwjLzvTchU1M0QmKHoFNAkmQ4AySzTEUDk0cggDVOs1T4HGZLYUPvvlbzHTNX4jbvzla2PkS2HjSWQEQ1jiUyQ0Mg4xXHQkTTESLqAkdMg2RgQiR3bSUKUWYRMmX3fkLFcEbOYSYYMlcvoFMUIVa3n1Z5ciRxnzZpASLlUUN3IEbgAkRkETLrsRdxYEVXoFUyPzJrc2QpMzbHwDNRUmSyMSXvg1Y0TzUuYyPLQkcpsxYRUCRBk2SC81b1LDQB0jdosxaJ0jYpIkPjUSahoWaVQVP4AmY5cWbsoFVXglMp8DdxXjPtHjYRMCawHibCkVSyDmRvQWVjM0P0A0XNUmckIjMWIlcyAyJqDkU00VVYEUNw0TYzrxTyn2ZwTyR3vTRPkUcoAkU54VXMkzZyETdyckRvYyL4MlZ14jVZA2ayIWVkoFN5wzT0XCLro1SiMlLQY1c2TUNwflSwXjXBwjPzfzSGszXzDERwUVdxbkKwA0Z4kiU2DlaMIUMvA2ZkE1Y4XFUPkVZysFNJA2PAc0M34FSRQSU1YidukiSzkSP1E2ZIIjTUsFV18jPSMVN2fDLkg1PzY2LyDDUv7DSEA0QqLEZqj1UPcyTxojZyrhYMc1UNwTVWY1Sxf2X3cTdtQUbn4VcKciUQcGboESZ0XCQDYCMoU2XucWTtLTMUUFU5QlTDMja0YSXxwTcQwjLDMiUTU1coUkd4YiawMFZ4LGNVYmPxDUSKgEZwDWNCEWZnshKj0TMtb1U0PTdMQmP5YDMGQTSq0TQzT1T2M0SWkGMNwFcQQTdNMURVElU3ozUxH2QhYzRxPjRIY1bvMzSoMGYrUGT2ECYVEmYtfCM4TTNBIiMnMGU0T2TZMVcIgya4vzPQwzXYM1YxUFUZgSL4Y1byMDMrYiVRAmXAYELxflbCIWRKkEUSU1MT4FbyfUQFMSRiYmPRQWYnYmdrcWQSUjayXkTtASUzgWaNcWMOoGUHsTXwjTcIYkMZMycDIFMB4zQqDyMqjkRqTWU0gEMmICcRUGbE8lbTElUZU2aJ0lSxDCZDUlKyIlct8DaxUSSCoTZZEma2PyJZUSNyMyTpojX2gjKvT1MxHzP1gkbJUzXmICRXY1JCEyY4TUNGEzXuo2Y4YjYUUVX2bjaAEEalEzY1vlSm8TLqnWQlQ2Lxn1Szj0QPsxUjE2QpI1c0sjQzjCTjYFLgwVXEgDLSs1aoIlatHSZqgFctMkaQMmcyLWV0.GLsoTU2.SY2jiQBU0YAEGbIg2aU0DRVYyQloVXwolQxMzbgciZGMVMPUVaTYTZWESbpcSUnEyawg0a2I2QloTV0o2PHU2MrQzYVY0MrICbqb0JjckUpsRR4UTLzrTXkYWNCo0TQEWLyshdNsTZUcVRvQVaDAGZLIyMpo2PisDNkoUVyglZZcyYYg0ZTo2cKUSUlkicwLDQQ81STYWQwoVQogSN4gyMSQlM2bVQNMEdlIjMoU1MCcmPJkjRB4lQz4hLPE2ROozMxMyZKEjbgMiVKUmMvHWX27za5cTR0UjaGcVLEc2JOYmagESLU4RVhgiPEUzSBkENlA0JBE0Xhc0a4kkP20zJuk0MDomYHY2QZYmPFAWNtDVdBY0ToQiTOokTxDkRRkTaykUY3bVLwIUUzDWRRIkdxEVNFoGY3D1YYkESNMUVwIDNLo0c2n1blAEMFQEQqgVQiElZKcScyjSNqbyRkMVcuo0RhsjKr8zcNYGTNkiTP0lSx8VZ1Y2btfmaqU1cgYFUkYSaRUyMnAGb0PSMwPzRXoET4XWQnYEdqzDdiQjaLQ0XDYGd3nWSQIDLFs1a0UkLDcWNNQybkQlYYIyJYcFRDMTQ5EkTFkVU1.EbQ4VLMU1aosRPXYCN2XCYtYEQEgmU2bGNHk1RZUDMjQjXoQEQiE1bxc2avkjQMMyX4nUNNYkLxEGU1DiTyDDTIcWPHYzU1IFRNshZqAiSM0TMOwTUxshRIUzZAUWXiUzU0n0UtgjTH8zTHcSVSUya3jzQhoDb4XiZt3VXs81atAENwMEUvnUbYYzYRwTP2PmQjUUN3fDdWM1YyHyJKkiPqXGTvj2ZSkycyXUUDkkSR4Bd371Qr8lKHUTX24lawvDMzczRso2UuEyJm8FaRwFNsYlKXQ2JL81LvHGaDUCM4IEbiEmdQMmZxYSdyozSigFd1UGZ3gzQ4fmV3LkdZAWLNszMCUTPvrzRlIWXRoWSvPSNJUFMt0TNYwVLjoDRqI0RvbVa3szM4fWVJIycP4DVz7jZkISYTgmRqnUL2gVLBAGLNYza1XzcKMyUYAEQzcETKMjRZkmcFIVajw1J1ckdk4Fd3nGVIQWRuEWZTkTV3r1J5wlMWg0YlUTRuEWLXYSRxUVaUQkLqn0b34DSvgkTqnTdyU2SSUidpIWdPY1Qjc0bkYyazcyZvUUSvI2YkYUMtLFSQcEaJckS3nWRJQiTSciRksRLsQzc2TDZsEmPvUmTAw1MZAWa3vjKYcEagMkcyHjVwDiaGgSPWkyUw7FQOUCLyozQnU2bhkmT5USVDsFbwTmLJomaMQzTigWYxcVZHECRRUyTWoFRHQ1QtYTRJgVR1fSLsQiUrUERk0DZWITQ1AicPMiV2HFcNMFaGYyJ0sTdzI0coETbX4lR14RL2cSXj8zQLE2MzQjVlElcZshZpMzXOEWLKUSTLgjatcESxj1MmkzczfjY1jidygEUNgGM03BSNQEVisjRO4RZtTlL1QFVIgmSvQGaPYlTkIWQLcDNyn2XWEkMWQGZNgVTow1S4f1by4laZwlahsRUDMjU3bld14FMFoELxIlSvHzZ03VR3YkVCYyMDkTYjwlPAkEVoQDZzgkdR4xQyHUa3DSbYQWdTkEd0H1X3MyYlk2SHcWQNYTUTECTqMSQ0YiaWoUL1M0ZlsDU43lUygDLvnmMBQUVIwjdT4zY5c0QNUSc2MjaMUGT0PSQNcyRqIja3slXxU2cyPmVtbDTzjkTp8DVsMSNH4hZCgUYJMUNBcGbZckYO4lc1LUY03lZSQVQmQ0P0oVT24VMLoWMjgGUsc0R13lcNQCLvLFUtISd4gSRpgCajw1Pr8zbGgDZ1g0XScyMqkyTAYGZhc2SuM0T1ElUHc2QqHWY1UzU3YlTv4lY3nTT0DybLE1ZicjQ0wlLNolV3sjQ1k1J3HmQWkmQGcldK0TLl0lV1Q1TE0TMWEERNcUZmcSVrckRqQzX2MGZ4LkZK4DcrIkQgoDY5kCN4EEdhQET1HiQSk0XTQiLt.CUW0VNpYELPgVaBIjZYQCTEglb2g2JvMSav3RVh0VQEojPlEUQuoVZXgyPQ0TbzTjbzgCLFkmULYiV0ozU2bFcJIFQLoTQhwDTx4TNOcCUqkGULQDbyUSXSAmQrIVUWYkRYQCVxn2P3rDNvPCMmECLGkyJwMSUBgGTVAkXxHCTvECSgkia3cCa3jUQWQSaYoUZzvDdznWc0UkdJozQhMWdXwVRhE1RkE2ZzLkV4ESagwjbikGS0nmVQA2QuA2ayHGUlUzcPY1amslcWYCdSkGTJITNCwTXDI0cpETMFYiZBcEa2g0ZTIEcSkDV4YELAA2XzIzTBQDRxP0JIUWSiYlM0giVtfVNyjicg81Y0EzMHMCLqnlbQE0YAcCUXYkMZQWR4IGTwHmc2DVLgUiVy.yRrAUQU8zaxUySHQ0Jr0zPUQiZSk0QOUGN4fyU07lTpoWLPoVQIclL2LSZFcSS2EUZV4hMZoWVxDWLBUyMkkDQE4VUzTiXtLkUH8FdPgGUQomLZojdgckTCoka5MVS5o0aq4hXEACd2nEa4blbXgzRAUESiIDUEsjLXo0X3M1QkgzcEUkUqk1cAc1TJM0XssjM2LUMyTiT1TVUM8jSWoGQzUSdAISZEcmcBgmcyA0ZtHFTp8TX0YFVDkic5gjblQkUUslZ4cmTxUkaHkyR5k2MHUVd1wVdI0VatU1RI4jLOMzPQITRRolcyYVZvrRbJclRCEjRCQzY2jza4ojSQ4BTVshKt3xc0UCVs0VTPUyUBo1XuM0bLcCMCEmToIDL28lV3Q2b2UjSWkiUg4RS1zjS3IUb5UmYr8TSFkjXTcSMKo0Yw8VNj8zbVUlcSoETybzLF8FdqfVQYgUaVgGMnQyLxkDQtojcz8VTggFbtQkPAM1JQwFNvgSVDkFU0YCdo0TMhAiY3o1aU8DbzjjbxslLTkGNvkCL0.0RNMjLvLFaxPGQEgCR2XVUQ41Zz4zbxrjQBY2L0f1PnomYtDlcugWXggTNOoEUGsVVWQCczjzTGkmUP8DMMQEZJMWatHSaVcEbt8TMIQGaQwTX2XjVBo1QZckLAgiStYCaQMSZRMScqckT5MENQYCR3AESHAWSyLSU1vTdy7FZZ4BLhQ2aLMkQLkjUrcSQlYyL0Y2aGcDLDYzXqAWMRo0SDgFSJISa0jyJtg1MRI0LkcyXjUSTzkSRy0lRNMkTyXCUvUVRTIzcxoGdD41aPszRAMkMOk0bLoGdVEWRFE2c0DUYNkWYHcTN4TjPogUSCgiPuEiZZYmZIkmTOYyUAQmX2MCNvczbLMyJvU2XowjTLk2R2U2ctHlRXcER4oUdwbiYx4xPs8Dd1glXlUGQwTEQqkCZ2cjSjk0R3jTZsACdqcETVUSQUYSSyLFSybUMJIEVyIjRu4lQt3TdVE2PCU1S2XlSq41T2jkahYiR1bWaVwjStU1PmYTZ5ojU2zFVNMmTWwTbFYybiQ2YpEWN5sDQkcTLOQiK4.SQyD2TukSb3ASM5QUZow1Rww1YXgkaW0VcTQDQSIiZG8DQBkGaCc2U3zDdDMEdyUiRrI0SZMCQvzTX0H2LqUFbx3RXBg0UvbzRQ4xbVUGUKUkZGkTZQk0ThMUVN8lXlMTSlUiatHSSLgDLCYlU2fWRhkjQlEkKJgUaJQCYvrzUl8DSkQGTr8VMqHDSms1b2.SQZYiSBIGb2DyT1fTSuoTPNIDbJcjT3cEVzPDal0VYr4VYYQzZxY1SmcVQhIDY0f0ULQSZIYzJD81ajUjdTYTZ2PUdjMEY3QTRMMUQYsTdXQmdwL2LwnDRpc0UHUTPkkVbZg0X0fWPK8lRV8VcHomUtglaxYlRBczSCckYwb1aPQVSXcmP3gSNHwjPKEiXXUmMmkDQqDCYvI2ZYMEQqw1LOgkayTDb43lQNESNBcmLHcTQggSbxg1MUsVXzMjVRcGY2UES20jTtP1YQ4FY0YDY2cWMjAkctXTXm4TTQYmVJcGb1XiMoYEaJkzPWQjMDoTNGEyc371XzLmVDIyQgcCdiQSPYIWRwTVaUwzZ3QyYUsxYtsBdxgELq01UlImSFUUbs0jR4EWTIAkK0AiUlczQi4jQxPkL2HEZBszQqbCNtIGSWYUdGMDd1YDdVwFMxjycFUFNvYFT1LiKxzTUYM2aqfEQgslXTolTqoUdkETLF0VVToUdFkzbMI1XAckUGkjKPckKhYiK4MWPVgWayDGSHMmXnwlKhUTMwciU0MyL1bjT3LlUN81P08VTtHlKGIjUAIDQTgTUtISMF8lcj4jX1YSMCAyQs4FLMImLVASPwYTXkUTTYYSPQg2SzXGZP0lKiE0Y2IjbIY0U2wDTwT0TiI2YzLidFI2cogUTJgSMv7jUwECMgw1cFUkYzTkcWQSM2oUSzYFdHAyYHIla4DGQQkFNsEWQuQWZ0XyTzgGcHA0UOMVQGQDT3gTS4PmTU4jUIcWZSYlM1HDVqfEaWMGMCQlQsQlRpIWP0j0ZiAEQwcTQrsFVkMGSRkSR1kjSp0zP5QEaqYzM3o1bMgEMDoFMJ4xPVETbrIzUksVVoEWa4Q1byQURGgFVMEmM0vzPpcjZmgTVso0PRshTuQ2c0gCYlUjMxshZVYFVqI1UxfkXTEyTFkzU1YzX2vFQqbSNVkmXSoWTtD2aXYmb1H0QDYlXZgzZMsFbwEyP2DmZIglUxk2Qyo2P2shcDg2Y0g1XOM0ZLUiTgYEMSwDMuYjKIUESlYVdwfTLscjbsgzTC8jPMYzSv8DS4fmKzMzcBYWQ3bCVNYGMuQidYkjP3XTPNIkR4LWLqH0MLkWVpAWaWsRZvozazsjKIsTTV8TL0g0b3bEaxQCS07lbxPTT0EjLOY2LVgyYTQ1c33DRjUzXKYCYqgzXSkUXrklKKMyYyzzZBoDVrgza4X2SyP2UmMEZB0FQWk0JiUjYlMjcJwzTwMGNBkGMzbmdRsBZ4HDc0HGavfkSoIkRLE0JjcmKV0jShg2PpkCZh4TZtTmKp8TQ0MEZSYyXAYTUNgDQIwlMAYmZUElT2LmPCUSZ2njcSEVbocUUlM2QMszbjkSSQwDbVsFVDQ2Lx.ESiI1ZqbkVWQWXJMjQFMVYu8DRHQmbzvjc0bWVw4jKlckSL0VLNozZFA0Q1j1L5IzP0oWUSUDNx4BbmkVUOQWMqD2UJgiaSIVN1XyTD0TZKMUXgEDZqElPwImM2cCdDMCbIwjQ4wDTMgDZv7lbjUDVIcUSFolPDs1SsQiYyP2RFEDMYI1M3nVPMMCU5UjKSc1SjwjYRQVcEQER2ckMho1M0LkLukSQyQlUTQWcwECRkkDRKYkZSsjKLMERX4lLUYETnoVPGwTaGAmQpI1Ry.ScBQTLnkyaHAibS01Q3HURog1ZDgzbIgTNSEjKt3hKDAkKt3hKt3hKt3hKpkiKt3hKMszZpMEQt3hKt31Tt3hKt3hKt3hKA4hKt3hYwH1azXkKt3hKt3hKt3hKtM2TJcDa2QWVpg2PJM2RsoVVNUybyITPt3hKt3hKt3BT4IURzPTPt3hKtDjKt3hKlEjKt3hKt3hKt3BQMUkTNUjKt3hKP4hKt3hKA4hKt3BRAola4bjKt3hKt.EQlYTZikVMt3hcq3hZ1EjLyDSXK8FZxYWVF4hKt3hKt3hKt3BQt3hKt3hKt3hKt3hKt3hKpYWPt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hK1UCckgTPp4hKt3hapkVd3AmSW4FSNgCbOEScVciczPzPt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKt3hKtPjKt3hKt3hKt3hKA4hKt3BRt3hKtXWPt3hKtHiKlsjKpMjKz4hKL4xLB4hct.kKt3hKt3hKt3hKtvyKIMzasA2atUlaz4COIUDYoQ2Pu4Fcx8FarUlb9.iK77RREQVZzMzatQmbuwFakImO77hUSQ0LPwVcmklaSQWXzUlO.."
									}
,
									"fileref" : 									{
										"name" : "LABS",
										"filename" : "LABS.maxsnap",
										"filepath" : "~/Documents/Max 8/Snapshots",
										"filepos" : -1,
										"snapshotfileid" : "b07d1fa9d07dc947b6ba618b4cd27f88"
									}

								}
 ]
						}

					}
,
					"text" : "vst~ \"C74_VST3:/Kontakt 7\"",
					"varname" : "vst~",
					"viewvisibility" : 1
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-35",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 571.200008511543274, 448.000006675720215, 115.0, 22.0 ],
					"text" : "prepend /arc/ring/all"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-36",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 572.000008523464203, 396.800005912780762, 98.0, 22.0 ],
					"text" : "route /arc/ring/all"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-13",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 427.200006365776062, 448.000006675720215, 133.0, 22.0 ],
					"text" : "prepend /arc/ring/range"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-12",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 428.000006377696991, 396.800005912780762, 117.0, 22.0 ],
					"text" : "route /arc/ring/range"
				}

			}
, 			{
				"box" : 				{
					"args" : [ "/arc" ],
					"bgmode" : 0,
					"border" : 0,
					"clickthrough" : 0,
					"enablehscroll" : 0,
					"enablevscroll" : 0,
					"id" : "obj-7",
					"lockeddragscroll" : 0,
					"lockedsize" : 0,
					"maxclass" : "bpatcher",
					"name" : "serialosc.maxpat",
					"numinlets" : 2,
					"numoutlets" : 4,
					"offset" : [ 0.0, 0.0 ],
					"outlettype" : [ "", "int", "", "" ],
					"patching_rect" : [ 427.200006365776062, 501.600007474422455, 201.0, 24.0 ],
					"varname" : "serialosc[3]",
					"viewvisibility" : 1
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 214.600001692771912, 538.400008022785187, 144.0, 22.0 ],
					"text" : "routepass /grid-a/grid/key"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-44",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 214.600001692771912, 453.600006759166718, 179.0, 22.0 ],
					"text" : "prepend /grid-a/grid/led/level/col"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-47",
					"maxclass" : "newobj",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 215.200003206729889, 396.800005912780762, 163.0, 22.0 ],
					"text" : "route /grid-a/grid/led/level/col"
				}

			}
, 			{
				"box" : 				{
					"args" : [ "/grid-a" ],
					"bgmode" : 0,
					"border" : 0,
					"clickthrough" : 0,
					"enablehscroll" : 0,
					"enablevscroll" : 0,
					"id" : "obj-50",
					"lockeddragscroll" : 0,
					"lockedsize" : 0,
					"maxclass" : "bpatcher",
					"name" : "serialosc.maxpat",
					"numinlets" : 2,
					"numoutlets" : 4,
					"offset" : [ 0.0, 0.0 ],
					"outlettype" : [ "", "int", "", "" ],
					"patching_rect" : [ 214.40000319480896, 501.600007474422455, 201.0, 24.0 ],
					"varname" : "serialosc[2]",
					"viewvisibility" : 1
				}

			}
, 			{
				"box" : 				{
					"autosave" : 1,
					"id" : "obj-1",
					"inletInfo" : 					{
						"IOInfo" : [  ]
					}
,
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 2,
					"outletInfo" : 					{
						"IOInfo" : [ 							{
								"type" : "midi",
								"index" : -1,
								"tag" : "",
								"comment" : ""
							}
 ]
					}
,
					"outlettype" : [ "int", "list" ],
					"patcher" : 					{
						"fileversion" : 1,
						"appversion" : 						{
							"major" : 8,
							"minor" : 6,
							"revision" : 3,
							"architecture" : "x64",
							"modernui" : 1
						}
,
						"classnamespace" : "rnbo",
						"rect" : [ 184.0, 166.0, 1090.0, 816.0 ],
						"bglocked" : 0,
						"openinpresentation" : 0,
						"default_fontsize" : 12.0,
						"default_fontface" : 0,
						"default_fontname" : "Lato",
						"gridonopen" : 1,
						"gridsize" : [ 15.0, 15.0 ],
						"gridsnaponopen" : 1,
						"objectsnaponopen" : 1,
						"statusbarvisible" : 2,
						"toolbarvisible" : 1,
						"lefttoolbarpinned" : 0,
						"toptoolbarpinned" : 0,
						"righttoolbarpinned" : 0,
						"bottomtoolbarpinned" : 0,
						"toolbars_unpinned_last_save" : 0,
						"tallnewobj" : 0,
						"boxanimatetime" : 200,
						"enablehscroll" : 1,
						"enablevscroll" : 1,
						"devicewidth" : 0.0,
						"description" : "",
						"digest" : "",
						"tags" : "",
						"style" : "",
						"subpatcher_template" : "",
						"assistshowspatchername" : 0,
						"title" : "seq64m",
						"boxes" : [ 							{
								"box" : 								{
									"id" : "obj-19",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1494.666711211204529, 1125.333366870880127, 37.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "t_obj-19",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t 120"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-18",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1494.666711211204529, 1086.666699051856995, 43.0, 23.0 ],
									"rnbo_classname" : "tempo",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "tempo_obj-18",
									"text" : "tempo"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-191",
									"linecount" : 4,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 1122.666700124740601, 1812.000054001808167, 46.0, 64.0 ],
									"text" : "ratchet\npitch\nvel\ndur"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-189",
									"linecount" : 2,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 970.666695594787598, 1729.333384871482849, 46.0, 35.0 ],
									"text" : "filter vel 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-188",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1094.666699290275574, 1777.333386301994324, 52.0, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "list.rot_obj-188",
									"text" : "list.rot 2"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-183",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1066.666698455810547, 1737.333385109901428, 47.0, 23.0 ],
									"rnbo_classname" : "route",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "route_obj-183",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"selector1" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "list", "number", "bang" ],
												"digest" : "Number or List to be routed",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "selector1",
												"type" : "number",
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 0",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "route",
										"aliasOf" : "route",
										"classname" : "route",
										"operator" : 0,
										"versionId" : -1778059630,
										"changesPatcherIO" : 0
									}
,
									"text" : "route 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-181",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1066.666698455810547, 1692.00005042552948, 56.0, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "list.rot_obj-181",
									"text" : "list.rot -1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-170",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 194.666672468185425, 1102.666699528694153, 59.0, 23.0 ],
									"rnbo_classname" : "tickstoms",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "tickstoms_obj-170",
									"text" : "tickstoms"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-172",
									"maxclass" : "flonum",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 194.666672468185425, 1141.333367347717285, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "float",
										"preset" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "number_obj-172"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-174",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 194.666672468185425, 1026.666697263717651, 56.0, 23.0 ],
									"rnbo_classname" : "loadbang",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "loadbang_obj-174",
									"text" : "loadbang"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-179",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 194.666672468185425, 1066.666698455810547, 29.5, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "message_obj-179",
									"text" : "120"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-164",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1094.666699290275574, 2141.333397150039673, 48.000000715255737, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "t_obj-164",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (list).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "list",
												"digest" : "Output order 2 (list).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t l 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-163",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1154.666701078414917, 1934.666724324226379, 56.0, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "list.rot_obj-163",
									"text" : "list.rot -1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-146",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1094.666699290275574, 1889.333389639854431, 78.400001168251038, 23.0 ],
									"rnbo_classname" : "route",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "route_obj-146",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"selector1" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "list", "number", "bang" ],
												"digest" : "Number or List to be routed",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "selector1",
												"type" : "number",
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 1",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "route",
										"aliasOf" : "route",
										"classname" : "route",
										"operator" : 0,
										"versionId" : -1778059630,
										"changesPatcherIO" : 0
									}
,
									"text" : "route 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-32",
									"maxclass" : "newobj",
									"numinlets" : 5,
									"numoutlets" : 4,
									"outlettype" : [ "", "", "", "" ],
									"patching_rect" : [ 349.333343744277954, 500.000014901161194, 76.0, 23.0 ],
									"rnbo_classname" : "counter",
									"rnbo_extra_attributes" : 									{
										"inc" : 1.0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "counter_obj-32",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"carryflag" : 											{
												"attrOrProp" : 1,
												"digest" : "Set underflow/overflow output type",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "numeric", "bang" ],
												"type" : "enum",
												"defaultValue" : "numeric"
											}
,
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "numbers or bangs here are counted",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "bang"
											}
,
											"direction" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Direction: 0 = Up, 1 = Down, 2 = UpDown",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"resetnext" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset Counter to Number on Next Clock",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"resetnow" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset Counter to Number Immediately",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"maximum" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Maximum",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "9999999"
											}
,
											"output" : 											{
												"attrOrProp" : 1,
												"digest" : "Current Count",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"underflow" : 											{
												"attrOrProp" : 1,
												"digest" : "Underflow (Counter Hit Minimum)",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"overflow" : 											{
												"attrOrProp" : 1,
												"digest" : "Overflow (Counter Hit Maximum)",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"carry" : 											{
												"attrOrProp" : 1,
												"digest" : "Carry Count",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"minimum" : 											{
												"attrOrProp" : 1,
												"digest" : "minimum",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"inc" : 											{
												"attrOrProp" : 2,
												"digest" : "Increment",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : "bang",
												"digest" : "numbers or bangs here are counted",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "direction",
												"type" : "number",
												"digest" : "Set Direction: 0 = Up, 1 = Down, 2 = UpDown",
												"docked" : 0
											}
, 											{
												"name" : "resetnext",
												"type" : [ "number", "bang" ],
												"digest" : "Reset Counter to Number on Next Clock",
												"docked" : 0
											}
, 											{
												"name" : "resetnow",
												"type" : [ "number", "bang" ],
												"digest" : "Reset Counter to Number Immediately",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "maximum",
												"type" : "number",
												"digest" : "Set Maximum",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "output",
												"type" : "number",
												"digest" : "Current Count",
												"docked" : 0
											}
, 											{
												"name" : "underflow",
												"type" : [ "bang", "number" ],
												"digest" : "Underflow (Counter Hit Minimum)",
												"docked" : 0
											}
, 											{
												"name" : "overflow",
												"type" : [ "bang", "number" ],
												"digest" : "Overflow (Counter Hit Maximum)",
												"docked" : 0
											}
, 											{
												"name" : "carry",
												"type" : "number",
												"digest" : "Carry Count",
												"docked" : 0
											}
 ],
										"helpname" : "counter",
										"aliasOf" : "counter",
										"classname" : "counter",
										"operator" : 0,
										"versionId" : -1448073941,
										"changesPatcherIO" : 0
									}
,
									"text" : "counter 0 63"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-26",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 190.666672348976135, 789.333356857299805, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "prepend_obj-26",
									"text" : "prepend 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-22",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 69.333335399627686, 700.000020861625671, 141.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "t_obj-22",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-8",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 190.666672348976135, 838.666691660881042, 114.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "outport_obj-8",
									"text" : "outport /arc/ring/all"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-264",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1494.666711211204529, 1161.333367943763733, 59.0, 23.0 ],
									"rnbo_classname" : "tickstoms",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "tickstoms_obj-264",
									"text" : "tickstoms"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-263",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1362.666707277297974, 1249.333370566368103, 151.369852006435394, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "*_obj-263",
									"text" : "* 150."
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-262",
									"maxclass" : "flonum",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1362.666707277297974, 1200.000035762786865, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "float",
										"preset" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "number_obj-262"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-260",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1362.666707277297974, 1160.00003457069397, 93.0, 23.0 ],
									"rnbo_classname" : "expr",
									"rnbo_extra_attributes" : 									{
										"safemath" : 1,
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "expr_obj-260",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset all state and params to initial values",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "in1",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "out1",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"expr" : 											{
												"attrOrProp" : 2,
												"digest" : "expr",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"hot" : 											{
												"attrOrProp" : 2,
												"digest" : "Trigger computation on all inlets.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"safemath" : 											{
												"attrOrProp" : 2,
												"digest" : "Use safe math expressions (e.g.: division by 0 will not crash).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "in1",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "out1",
												"docked" : 0
											}
 ],
										"helpname" : "expr",
										"aliasOf" : "expr",
										"classname" : "expr",
										"operator" : 0,
										"versionId" : -1920135016,
										"changesPatcherIO" : 0
									}
,
									"text" : "expr pow(2\\, in1)"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-248",
									"maxclass" : "flonum",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1494.666711211204529, 1200.000035762786865, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "float",
										"preset" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "number_obj-248"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-168",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 913.333360552787781, 1329.333372950553894, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "number_obj-168"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-176",
									"linecount" : 2,
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 913.333360552787781, 1281.333371520042419, 154.000004589557648, 37.0 ],
									"rnbo_classname" : "param",
									"rnbo_extra_attributes" : 									{
										"order" : "0",
										"meta" : "",
										"tonormalized" : "",
										"preset" : 1,
										"displayorder" : "-",
										"ctlin" : 0.0,
										"sendinit" : 1,
										"enum" : "",
										"displayname" : "",
										"fromnormalized" : "",
										"exponent" : 1.0,
										"unit" : ""
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "Root",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"value" : 											{
												"attrOrProp" : 2,
												"digest" : "Set initial value",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Initial Value",
												"displayorder" : 3
											}
,
											"normalizedvalue" : 											{
												"attrOrProp" : 1,
												"digest" : "Set value normalized. ",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset param to initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"normalized" : 											{
												"attrOrProp" : 1,
												"digest" : "Normalized parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"name" : 											{
												"attrOrProp" : 2,
												"digest" : "Name of the parameter",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "Parameter Name",
												"mandatory" : 1
											}
,
											"enum" : 											{
												"attrOrProp" : 2,
												"digest" : "Use an enumerated output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"label" : "Enum Values",
												"displayorder" : 6
											}
,
											"minimum" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 0,
												"aliases" : [ "min" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"min" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 1,
												"aliasOf" : "minimum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"maximum" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 0,
												"aliases" : [ "max" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"max" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 1,
												"aliasOf" : "maximum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"exponent" : 											{
												"attrOrProp" : 2,
												"digest" : "Scale values exponentially",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Exponent",
												"displayorder" : 7
											}
,
											"steps" : 											{
												"attrOrProp" : 2,
												"digest" : "Divide the output into a number of discrete steps",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Steps",
												"displayorder" : 8
											}
,
											"displayName" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED: Use the lower case 'displayname' instead",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "symbol",
												"label" : "Display Name"
											}
,
											"displayname" : 											{
												"attrOrProp" : 2,
												"digest" : "A more readable name for the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Display Name",
												"displayorder" : 14
											}
,
											"unit" : 											{
												"attrOrProp" : 2,
												"digest" : "A symbol to describe the unit of the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Unit",
												"displayorder" : 15
											}
,
											"tonormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a real parameter value to its normalized form.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "To Normalized Expression",
												"displayorder" : 10
											}
,
											"fromnormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a normalized parameter into its actual parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "From Normalized Expression",
												"displayorder" : 9
											}
,
											"order" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which initial parameter values will be sent out on patcher load. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "0",
												"label" : "Restore Order",
												"displayorder" : 12
											}
,
											"displayorder" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which parameters will show up in a list of all parameters. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "-",
												"label" : "Display Order",
												"displayorder" : 13
											}
,
											"sendinit" : 											{
												"attrOrProp" : 2,
												"digest" : "Send initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Send Init",
												"displayorder" : 4
											}
,
											"ctlin" : 											{
												"attrOrProp" : 2,
												"digest" : "MIDI controller number to control this parameter.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"label" : "MIDI Controller Number.",
												"displayorder" : 16
											}
,
											"meta" : 											{
												"attrOrProp" : 2,
												"digest" : "A JSON formatted string containing metadata for use by the exported code",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Metadata",
												"displayorder" : 17
											}
,
											"nopreset" : 											{
												"attrOrProp" : 2,
												"digest" : "Do not add this value to the preset [DEPRECATED - USE @preset 0 instead].",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"preset" : 											{
												"attrOrProp" : 2,
												"digest" : "Add this value to the preset.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Include In Preset",
												"displayorder" : 11
											}

										}
,
										"inputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalizedvalue",
												"type" : "number",
												"digest" : "Set value normalized. ",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalized",
												"type" : "number",
												"digest" : "Normalized parameter value.",
												"docked" : 0
											}
 ],
										"helpname" : "param",
										"aliasOf" : "param",
										"classname" : "param",
										"operator" : 0,
										"versionId" : -1940971094,
										"changesPatcherIO" : 0
									}
,
									"text" : "param Root @min 0 @max 127 @value 60 @steps 128",
									"varname" : "Root"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-180",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1025.333363890647888, 1434.666709423065186, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "number_obj-180"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-185",
									"linecount" : 2,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 1025.333363890647888, 1334.666706442832947, 125.0, 35.0 ],
									"text" : "input scale defination in TTID format"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-186",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1025.333363890647888, 1484.000044226646423, 121.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "p_obj-186",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.tttobin"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-187",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1025.333363890647888, 1384.000041246414185, 324.0, 23.0 ],
									"rnbo_classname" : "param",
									"rnbo_extra_attributes" : 									{
										"order" : "0",
										"meta" : "",
										"tonormalized" : "",
										"preset" : 1,
										"displayorder" : "-",
										"ctlin" : 0.0,
										"sendinit" : 1,
										"enum" : "",
										"displayname" : "",
										"fromnormalized" : "",
										"exponent" : 1.0,
										"unit" : ""
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "Scale",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"value" : 											{
												"attrOrProp" : 2,
												"digest" : "Set initial value",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Initial Value",
												"displayorder" : 3
											}
,
											"normalizedvalue" : 											{
												"attrOrProp" : 1,
												"digest" : "Set value normalized. ",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset param to initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"normalized" : 											{
												"attrOrProp" : 1,
												"digest" : "Normalized parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"name" : 											{
												"attrOrProp" : 2,
												"digest" : "Name of the parameter",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "Parameter Name",
												"mandatory" : 1
											}
,
											"enum" : 											{
												"attrOrProp" : 2,
												"digest" : "Use an enumerated output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"label" : "Enum Values",
												"displayorder" : 6
											}
,
											"minimum" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 0,
												"aliases" : [ "min" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"min" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 1,
												"aliasOf" : "minimum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"maximum" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 0,
												"aliases" : [ "max" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"max" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 1,
												"aliasOf" : "maximum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"exponent" : 											{
												"attrOrProp" : 2,
												"digest" : "Scale values exponentially",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Exponent",
												"displayorder" : 7
											}
,
											"steps" : 											{
												"attrOrProp" : 2,
												"digest" : "Divide the output into a number of discrete steps",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Steps",
												"displayorder" : 8
											}
,
											"displayName" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED: Use the lower case 'displayname' instead",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "symbol",
												"label" : "Display Name"
											}
,
											"displayname" : 											{
												"attrOrProp" : 2,
												"digest" : "A more readable name for the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Display Name",
												"displayorder" : 14
											}
,
											"unit" : 											{
												"attrOrProp" : 2,
												"digest" : "A symbol to describe the unit of the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Unit",
												"displayorder" : 15
											}
,
											"tonormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a real parameter value to its normalized form.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "To Normalized Expression",
												"displayorder" : 10
											}
,
											"fromnormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a normalized parameter into its actual parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "From Normalized Expression",
												"displayorder" : 9
											}
,
											"order" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which initial parameter values will be sent out on patcher load. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "0",
												"label" : "Restore Order",
												"displayorder" : 12
											}
,
											"displayorder" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which parameters will show up in a list of all parameters. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "-",
												"label" : "Display Order",
												"displayorder" : 13
											}
,
											"sendinit" : 											{
												"attrOrProp" : 2,
												"digest" : "Send initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Send Init",
												"displayorder" : 4
											}
,
											"ctlin" : 											{
												"attrOrProp" : 2,
												"digest" : "MIDI controller number to control this parameter.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"label" : "MIDI Controller Number.",
												"displayorder" : 16
											}
,
											"meta" : 											{
												"attrOrProp" : 2,
												"digest" : "A JSON formatted string containing metadata for use by the exported code",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Metadata",
												"displayorder" : 17
											}
,
											"nopreset" : 											{
												"attrOrProp" : 2,
												"digest" : "Do not add this value to the preset [DEPRECATED - USE @preset 0 instead].",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"preset" : 											{
												"attrOrProp" : 2,
												"digest" : "Add this value to the preset.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Include In Preset",
												"displayorder" : 11
											}

										}
,
										"inputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalizedvalue",
												"type" : "number",
												"digest" : "Set value normalized. ",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalized",
												"type" : "number",
												"digest" : "Normalized parameter value.",
												"docked" : 0
											}
 ],
										"helpname" : "param",
										"aliasOf" : "param",
										"classname" : "param",
										"operator" : 0,
										"versionId" : -1940971094,
										"changesPatcherIO" : 0
									}
,
									"text" : "param Scale @min 0 @max 4095 @value 1453 @steps 4096",
									"varname" : "Scale"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-61",
									"maxclass" : "newobj",
									"numinlets" : 3,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 890.666693210601807, 1549.333379507064819, 134.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "p_obj-61",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "rotation in",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "root",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in3",
												"displayName" : "TTID",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.rottomidi"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-17",
									"linecount" : 2,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 2870.666752219200134, 744.000022172927856, 150.0, 35.0 ],
									"text" : "change thsee for different sets of preset notes"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-13",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1197.333369016647339, 2269.333400964736938, 109.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "p_obj-13",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "in1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "signal"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "signal",
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.ptob"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-175",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 349.333343744277954, 557.333349943161011, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "number_obj-175"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-165",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2610.666744470596313, 352.00001049041748, 43.0, 23.0 ],
									"rnbo_classname" : "tempo",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "tempo_obj-165",
									"text" : "tempo"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-162",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 81.333335757255554, 1189.33336877822876, 55.0, 23.0 ],
									"rnbo_classname" : "pipe",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "pipe_obj-162",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "Anything to be delayed",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Delayed number",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"time" : 											{
												"attrOrProp" : 1,
												"digest" : "Delay time",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "300"
											}
,
											"flush" : 											{
												"attrOrProp" : 1,
												"digest" : "Stop delay and output current value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"stop" : 											{
												"attrOrProp" : 1,
												"digest" : "Stop delay",
												"isalias" : 0,
												"aliases" : [ "clear" ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"clear" : 											{
												"attrOrProp" : 1,
												"digest" : "Stop delay",
												"isalias" : 1,
												"aliasOf" : "stop",
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "Anything to be delayed",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "time",
												"type" : "number",
												"digest" : "Delay time",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Delayed number",
												"docked" : 0
											}
 ],
										"helpname" : "pipe",
										"aliasOf" : "pipe",
										"classname" : "pipe",
										"operator" : 0,
										"versionId" : 734053540,
										"changesPatcherIO" : 0
									}
,
									"text" : "pipe 300"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-154",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 846.666691899299622, 29.33333420753479, 154.0, 23.0 ],
									"rnbo_classname" : "param",
									"rnbo_extra_attributes" : 									{
										"order" : "0",
										"meta" : "",
										"maximum" : 1.0,
										"steps" : 0.0,
										"tonormalized" : "",
										"preset" : 1,
										"value" : 0.0,
										"displayorder" : "-",
										"ctlin" : 0.0,
										"sendinit" : 1,
										"displayname" : "",
										"fromnormalized" : "",
										"minimum" : 0.0,
										"exponent" : 1.0,
										"unit" : ""
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "Chase",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"value" : 											{
												"attrOrProp" : 2,
												"digest" : "Set initial value",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Initial Value",
												"displayorder" : 3
											}
,
											"normalizedvalue" : 											{
												"attrOrProp" : 1,
												"digest" : "Set value normalized. ",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset param to initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"normalized" : 											{
												"attrOrProp" : 1,
												"digest" : "Normalized parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"name" : 											{
												"attrOrProp" : 2,
												"digest" : "Name of the parameter",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "Parameter Name",
												"mandatory" : 1
											}
,
											"enum" : 											{
												"attrOrProp" : 2,
												"digest" : "Use an enumerated output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"label" : "Enum Values",
												"displayorder" : 6
											}
,
											"minimum" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 0,
												"aliases" : [ "min" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"min" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 1,
												"aliasOf" : "minimum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"maximum" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 0,
												"aliases" : [ "max" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"max" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 1,
												"aliasOf" : "maximum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"exponent" : 											{
												"attrOrProp" : 2,
												"digest" : "Scale values exponentially",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Exponent",
												"displayorder" : 7
											}
,
											"steps" : 											{
												"attrOrProp" : 2,
												"digest" : "Divide the output into a number of discrete steps",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Steps",
												"displayorder" : 8
											}
,
											"displayName" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED: Use the lower case 'displayname' instead",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "symbol",
												"label" : "Display Name"
											}
,
											"displayname" : 											{
												"attrOrProp" : 2,
												"digest" : "A more readable name for the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Display Name",
												"displayorder" : 14
											}
,
											"unit" : 											{
												"attrOrProp" : 2,
												"digest" : "A symbol to describe the unit of the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Unit",
												"displayorder" : 15
											}
,
											"tonormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a real parameter value to its normalized form.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "To Normalized Expression",
												"displayorder" : 10
											}
,
											"fromnormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a normalized parameter into its actual parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "From Normalized Expression",
												"displayorder" : 9
											}
,
											"order" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which initial parameter values will be sent out on patcher load. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "0",
												"label" : "Restore Order",
												"displayorder" : 12
											}
,
											"displayorder" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which parameters will show up in a list of all parameters. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "-",
												"label" : "Display Order",
												"displayorder" : 13
											}
,
											"sendinit" : 											{
												"attrOrProp" : 2,
												"digest" : "Send initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Send Init",
												"displayorder" : 4
											}
,
											"ctlin" : 											{
												"attrOrProp" : 2,
												"digest" : "MIDI controller number to control this parameter.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"label" : "MIDI Controller Number.",
												"displayorder" : 16
											}
,
											"meta" : 											{
												"attrOrProp" : 2,
												"digest" : "A JSON formatted string containing metadata for use by the exported code",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Metadata",
												"displayorder" : 17
											}
,
											"nopreset" : 											{
												"attrOrProp" : 2,
												"digest" : "Do not add this value to the preset [DEPRECATED - USE @preset 0 instead].",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"preset" : 											{
												"attrOrProp" : 2,
												"digest" : "Add this value to the preset.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Include In Preset",
												"displayorder" : 11
											}

										}
,
										"inputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalizedvalue",
												"type" : "number",
												"digest" : "Set value normalized. ",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalized",
												"type" : "number",
												"digest" : "Normalized parameter value.",
												"docked" : 0
											}
 ],
										"helpname" : "param",
										"aliasOf" : "param",
										"classname" : "param",
										"operator" : 0,
										"versionId" : -1940971094,
										"changesPatcherIO" : 0
									}
,
									"text" : "param Chase @enum off on",
									"varname" : "Chase"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-148",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 886.666693091392517, 78.666669011116028, 38.0, 21.0 ],
									"text" : "chase"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-140",
									"maxclass" : "toggle",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "int" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 846.666691899299622, 77.333335638046265, 24.0, 24.0 ],
									"rnbo_classname" : "toggle",
									"rnbo_extra_attributes" : 									{
										"order" : "",
										"preset" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "toggle_obj-140"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-133",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 846.666691899299622, 129.333337187767029, 31.0, 23.0 ],
									"rnbo_classname" : "gate",
									"rnbo_extra_attributes" : 									{
										"outputs" : 1.0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "gate_obj-133",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"onoff" : 											{
												"attrOrProp" : 1,
												"digest" : "0 Closes gate, non-zero opens the corresponding gate outlet",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"outputs" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "onoff",
												"type" : "number",
												"digest" : "0 Closes gate, non-zero opens the corresponding gate outlet",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Incoming gated message",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Gated Output 1",
												"docked" : 0
											}
 ],
										"helpname" : "gate",
										"aliasOf" : "gate",
										"classname" : "gate",
										"operator" : 0,
										"versionId" : 1220277655,
										"changesPatcherIO" : 0
									}
,
									"text" : "gate"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-226",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 2610.666744470596313, 308.000009179115295, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "number_obj-226"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-214",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 2654.666745781898499, 540.000016093254089, 46.0, 23.0 ],
									"rnbo_classname" : "change",
									"rnbo_extra_attributes" : 									{
										"mode" : "default"
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "change_obj-214",
									"text" : "change"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-213",
									"maxclass" : "newobj",
									"numinlets" : 9,
									"numoutlets" : 9,
									"outlettype" : [ "", "", "", "", "", "", "", "", "" ],
									"patching_rect" : [ 2654.666745781898499, 580.000017285346985, 119.0, 23.0 ],
									"rnbo_classname" : "select",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "select_obj-213",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Number to test",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"test1" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (1) to Match",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"test2" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (2) to Match",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "1"
											}
,
											"test3" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (3) to Match",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"test4" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (4) to Match",
												"defaultarg" : 4,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "3"
											}
,
											"test5" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (5) to Match",
												"defaultarg" : 5,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "4"
											}
,
											"test6" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (6) to Match",
												"defaultarg" : 6,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "5"
											}
,
											"test7" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (7) to Match",
												"defaultarg" : 7,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "6"
											}
,
											"test8" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (8) to Match",
												"defaultarg" : 8,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "7"
											}
,
											"match1" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 0",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match2" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match3" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 2",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match4" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 3",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match5" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 4",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match6" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 5",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match7" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 6",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match8" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 7",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"nomatch" : 											{
												"attrOrProp" : 1,
												"digest" : "Input if Input Doesn't Match",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "number", "bang" ],
												"digest" : "Number to test",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "test1",
												"type" : "number",
												"digest" : "Set Value (1) to Match",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "test2",
												"type" : "number",
												"digest" : "Set Value (2) to Match",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "test3",
												"type" : "number",
												"digest" : "Set Value (3) to Match",
												"defaultarg" : 3,
												"docked" : 0
											}
, 											{
												"name" : "test4",
												"type" : "number",
												"digest" : "Set Value (4) to Match",
												"defaultarg" : 4,
												"docked" : 0
											}
, 											{
												"name" : "test5",
												"type" : "number",
												"digest" : "Set Value (5) to Match",
												"defaultarg" : 5,
												"docked" : 0
											}
, 											{
												"name" : "test6",
												"type" : "number",
												"digest" : "Set Value (6) to Match",
												"defaultarg" : 6,
												"docked" : 0
											}
, 											{
												"name" : "test7",
												"type" : "number",
												"digest" : "Set Value (7) to Match",
												"defaultarg" : 7,
												"docked" : 0
											}
, 											{
												"name" : "test8",
												"type" : "number",
												"digest" : "Set Value (8) to Match",
												"defaultarg" : 8,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : "bang",
												"digest" : "Bang if input matches 0",
												"docked" : 0
											}
, 											{
												"name" : "match2",
												"type" : "bang",
												"digest" : "Bang if input matches 1",
												"docked" : 0
											}
, 											{
												"name" : "match3",
												"type" : "bang",
												"digest" : "Bang if input matches 2",
												"docked" : 0
											}
, 											{
												"name" : "match4",
												"type" : "bang",
												"digest" : "Bang if input matches 3",
												"docked" : 0
											}
, 											{
												"name" : "match5",
												"type" : "bang",
												"digest" : "Bang if input matches 4",
												"docked" : 0
											}
, 											{
												"name" : "match6",
												"type" : "bang",
												"digest" : "Bang if input matches 5",
												"docked" : 0
											}
, 											{
												"name" : "match7",
												"type" : "bang",
												"digest" : "Bang if input matches 6",
												"docked" : 0
											}
, 											{
												"name" : "match8",
												"type" : "bang",
												"digest" : "Bang if input matches 7",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "number", "bang" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "select",
										"aliasOf" : "select",
										"classname" : "select",
										"operator" : 0,
										"versionId" : 902197102,
										"changesPatcherIO" : 0
									}
,
									"text" : "select 0 1 2 3 4 5 6 7"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-212",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 156.000004649162292, 1341.333373308181763, 35.0, 23.0 ],
									"rnbo_classname" : "%",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "%_obj-212",
									"text" : "% 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-200",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 69.333335399627686, 742.666688799858093, 58.0, 23.0 ],
									"rnbo_classname" : "append",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "append_obj-200",
									"text" : "append 8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-196",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 69.333335399627686, 789.333356857299805, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "prepend_obj-196",
									"text" : "prepend 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-195",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 69.333335399627686, 838.666691660881042, 118.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "outport_obj-195",
									"text" : "outport /arc/ring/set"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-184",
									"maxclass" : "newobj",
									"numinlets" : 6,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2609.33341109752655, 273.333341479301453, 116.0, 23.0 ],
									"rnbo_classname" : "scale",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "scale_obj-184",
									"text" : "scale 0 1999 32 190"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-160",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2609.33341109752655, 173.333338499069214, 246.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "p_obj-160",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.bounded-accum @args 0 2000"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-177",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 2609.33341109752655, 213.333339691162109, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 8,
									"rnbo_uniqueid" : "number_obj-177"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-69",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 2422.666738867759705, 440.000013113021851, 209.0, 23.0 ],
									"rnbo_classname" : "param",
									"rnbo_extra_attributes" : 									{
										"order" : "0",
										"meta" : "",
										"maximum" : 1.0,
										"steps" : 0.0,
										"tonormalized" : "",
										"preset" : 1,
										"value" : 0.0,
										"displayorder" : "-",
										"ctlin" : 0.0,
										"sendinit" : 1,
										"displayname" : "",
										"fromnormalized" : "",
										"minimum" : 0.0,
										"exponent" : 1.0,
										"unit" : ""
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "Notelist",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"value" : 											{
												"attrOrProp" : 2,
												"digest" : "Set initial value",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Initial Value",
												"displayorder" : 3
											}
,
											"normalizedvalue" : 											{
												"attrOrProp" : 1,
												"digest" : "Set value normalized. ",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset param to initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"normalized" : 											{
												"attrOrProp" : 1,
												"digest" : "Normalized parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"name" : 											{
												"attrOrProp" : 2,
												"digest" : "Name of the parameter",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "Parameter Name",
												"mandatory" : 1
											}
,
											"enum" : 											{
												"attrOrProp" : 2,
												"digest" : "Use an enumerated output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"label" : "Enum Values",
												"displayorder" : 6
											}
,
											"minimum" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 0,
												"aliases" : [ "min" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"min" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 1,
												"aliasOf" : "minimum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"maximum" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 0,
												"aliases" : [ "max" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"max" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 1,
												"aliasOf" : "maximum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"exponent" : 											{
												"attrOrProp" : 2,
												"digest" : "Scale values exponentially",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Exponent",
												"displayorder" : 7
											}
,
											"steps" : 											{
												"attrOrProp" : 2,
												"digest" : "Divide the output into a number of discrete steps",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Steps",
												"displayorder" : 8
											}
,
											"displayName" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED: Use the lower case 'displayname' instead",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "symbol",
												"label" : "Display Name"
											}
,
											"displayname" : 											{
												"attrOrProp" : 2,
												"digest" : "A more readable name for the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Display Name",
												"displayorder" : 14
											}
,
											"unit" : 											{
												"attrOrProp" : 2,
												"digest" : "A symbol to describe the unit of the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Unit",
												"displayorder" : 15
											}
,
											"tonormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a real parameter value to its normalized form.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "To Normalized Expression",
												"displayorder" : 10
											}
,
											"fromnormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a normalized parameter into its actual parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "From Normalized Expression",
												"displayorder" : 9
											}
,
											"order" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which initial parameter values will be sent out on patcher load. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "0",
												"label" : "Restore Order",
												"displayorder" : 12
											}
,
											"displayorder" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which parameters will show up in a list of all parameters. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "-",
												"label" : "Display Order",
												"displayorder" : 13
											}
,
											"sendinit" : 											{
												"attrOrProp" : 2,
												"digest" : "Send initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Send Init",
												"displayorder" : 4
											}
,
											"ctlin" : 											{
												"attrOrProp" : 2,
												"digest" : "MIDI controller number to control this parameter.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"label" : "MIDI Controller Number.",
												"displayorder" : 16
											}
,
											"meta" : 											{
												"attrOrProp" : 2,
												"digest" : "A JSON formatted string containing metadata for use by the exported code",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Metadata",
												"displayorder" : 17
											}
,
											"nopreset" : 											{
												"attrOrProp" : 2,
												"digest" : "Do not add this value to the preset [DEPRECATED - USE @preset 0 instead].",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"preset" : 											{
												"attrOrProp" : 2,
												"digest" : "Add this value to the preset.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Include In Preset",
												"displayorder" : 11
											}

										}
,
										"inputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalizedvalue",
												"type" : "number",
												"digest" : "Set value normalized. ",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalized",
												"type" : "number",
												"digest" : "Normalized parameter value.",
												"docked" : 0
											}
 ],
										"helpname" : "param",
										"aliasOf" : "param",
										"classname" : "param",
										"operator" : 0,
										"versionId" : -1940971094,
										"changesPatcherIO" : 0
									}
,
									"text" : "param Notelist @enum 1 2 3 4 5 6 7 8",
									"varname" : "Notelist"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-91",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 2381.333404302597046, 365.333344221115112, 29.5, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "t_obj-91",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-95",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 401.333345293998718, 179.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "p_obj-95",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.euclidean-modulo"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-108",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 292.000008702278137, 36.0, 23.0 ],
									"rnbo_classname" : "trunc",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "trunc_obj-108",
									"text" : "trunc"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-109",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 2381.333404302597046, 509.333348512649536, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 9,
									"rnbo_uniqueid" : "number_obj-109"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-113",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 684.000020384788513, 45.0, 23.0 ],
									"rnbo_classname" : "pack",
									"rnbo_extra_attributes" : 									{
										"length" : 0.0,
										"list" : ""
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "pack_obj-113",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "out",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"length" : 											{
												"attrOrProp" : 2,
												"digest" : "how many things to pack",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"list" : 											{
												"attrOrProp" : 2,
												"digest" : "the list to initialize the {@objectname} object with",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "number",
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "out",
												"docked" : 0
											}
 ],
										"helpname" : "pack",
										"aliasOf" : "pack",
										"classname" : "pack",
										"operator" : 0,
										"versionId" : 2113152561,
										"changesPatcherIO" : 0
									}
,
									"text" : "pack i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-119",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 720.000021457672119, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "prepend_obj-119",
									"text" : "prepend 2"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-123",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 752.000022411346436, 58.0, 23.0 ],
									"rnbo_classname" : "append",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "append_obj-123",
									"text" : "append 8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-124",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 196.000005841255188, 148.0, 23.0 ],
									"rnbo_classname" : "accum",
									"rnbo_extra_attributes" : 									{
										"hot" : 0,
										"min" : 0.0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "accum_obj-124",
									"text" : "accum 0 @resetmode post"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-125",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 2381.333404302597046, 333.333343267440796, 46.0, 23.0 ],
									"rnbo_classname" : "change",
									"rnbo_extra_attributes" : 									{
										"mode" : "default"
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "change_obj-125",
									"text" : "change"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-126",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 2482.666740655899048, 648.000019311904907, 114.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "outport_obj-126",
									"text" : "outport /arc/ring/all"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-127",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2482.666740655899048, 596.000017762184143, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "prepend_obj-127",
									"text" : "prepend 2"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-128",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 2381.333404302597046, 560.000016689300537, 111.333336651325226, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "t_obj-128",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-129",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2414.666738629341125, 648.000019311904907, 29.5, 23.0 ],
									"rnbo_classname" : "+",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "+_obj-129",
									"text" : "+ 7"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-130",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 596.000017762184143, 29.5, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "*_obj-130",
									"text" : "* 8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-131",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 2381.333404302597046, 780.000023245811462, 132.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "outport_obj-131",
									"text" : "outport /arc/ring/range"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-132",
									"maxclass" : "newobj",
									"numinlets" : 6,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2381.333404302597046, 233.333340287208557, 96.0, 23.0 ],
									"rnbo_classname" : "scale",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "scale_obj-132",
									"text" : "scale 0 1000 0 7"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-65",
									"maxclass" : "newobj",
									"numinlets" : 0,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1021.333363771438599, 1004.000029921531677, 67.0, 23.0 ],
									"rnbo_classname" : "r",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "r_obj-65",
									"text" : "r notelanes"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-64",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 2666.666746139526367, 937.333361268043518, 68.0, 23.0 ],
									"rnbo_classname" : "s",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "s_obj-64",
									"text" : "s notelanes"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-59",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 877.333359479904175, 90.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "message_obj-59",
									"text" : "-8 0 1 2 3 4 5 6"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-63",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 841.333358407020569, 102.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "message_obj-63",
									"text" : "-6 -4 1 3 4 8 9 10"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-47",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 809.333357453346252, 102.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "message_obj-47",
									"text" : "-5 -4 0 4 5 8 9 11"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-49",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 777.333356499671936, 102.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "message_obj-49",
									"text" : "-5 -4 0 4 5 8 9 10"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-57",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 744.000022172927856, 99.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "message_obj-57",
									"text" : "-7 -3 -3 2 3 5 8 9"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-37",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 712.00002121925354, 100.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "message_obj-37",
									"text" : "0 2 3 5 7 8 10 11"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-31",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 680.000020265579224, 100.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 8,
									"rnbo_uniqueid" : "message_obj-31",
									"text" : "0 2 3 5 8 10 11 7"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-30",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2734.66674816608429, 641.333352446556091, 99.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 9,
									"rnbo_uniqueid" : "message_obj-30",
									"text" : "-7 -4 -1 0 2 3 4 5"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-29",
									"maxclass" : "newobj",
									"numinlets" : 0,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 994.666696310043335, 965.333362102508545, 96.0, 23.0 ],
									"rnbo_classname" : "inport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "inport_obj-29",
									"text" : "inport /notepool"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-36",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 442.666679859161377, 1262.666704297065735, 35.0, 23.0 ],
									"rnbo_classname" : "%",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "%_obj-36",
									"text" : "% 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-25",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patcher" : 									{
										"fileversion" : 1,
										"appversion" : 										{
											"major" : 8,
											"minor" : 6,
											"revision" : 3,
											"architecture" : "x64",
											"modernui" : 1
										}
,
										"classnamespace" : "rnbo",
										"rect" : [ 116.0, 125.0, 1248.0, 904.0 ],
										"bglocked" : 0,
										"openinpresentation" : 0,
										"default_fontsize" : 12.0,
										"default_fontface" : 0,
										"default_fontname" : "Lato",
										"gridonopen" : 1,
										"gridsize" : [ 15.0, 15.0 ],
										"gridsnaponopen" : 1,
										"objectsnaponopen" : 1,
										"statusbarvisible" : 2,
										"toolbarvisible" : 1,
										"lefttoolbarpinned" : 0,
										"toptoolbarpinned" : 0,
										"righttoolbarpinned" : 0,
										"bottomtoolbarpinned" : 0,
										"toolbars_unpinned_last_save" : 0,
										"tallnewobj" : 0,
										"boxanimatetime" : 200,
										"enablehscroll" : 1,
										"enablevscroll" : 1,
										"devicewidth" : 0.0,
										"description" : "",
										"digest" : "",
										"tags" : "",
										"style" : "",
										"subpatcher_template" : "",
										"assistshowspatchername" : 0,
										"title" : "draw_col",
										"boxes" : [ 											{
												"box" : 												{
													"id" : "obj-13",
													"maxclass" : "newobj",
													"numinlets" : 2,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 6.666666865348816, 242.666673898696899, 58.0, 23.0 ],
													"rnbo_classname" : "append",
													"rnbo_extra_attributes" : 													{
														"hot" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "append_obj-13",
													"text" : "append 0"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-274",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 0,
													"patching_rect" : [ 50.0, 364.0, 183.0, 23.0 ],
													"rnbo_classname" : "outport",
													"rnbo_extra_attributes" : 													{
														"meta" : ""
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "outport_obj-274",
													"text" : "outport /grid-a/grid/led/level/col"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-246",
													"maxclass" : "newobj",
													"numinlets" : 6,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 87.0, 155.0, 75.0, 23.0 ],
													"rnbo_classname" : "scale",
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "scale_obj-246",
													"text" : "scale 0 7 8 1"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-198",
													"linecount" : 2,
													"maxclass" : "comment",
													"numinlets" : 1,
													"numoutlets" : 0,
													"patching_rect" : [ 71.0, 316.0, 97.0, 35.0 ],
													"text" : "col\nLED states of col"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-192",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 3,
													"outlettype" : [ "", "", "" ],
													"patching_rect" : [ 50.0, 100.0, 57.40000057220459, 23.0 ],
													"rnbo_classname" : "unjoin",
													"rnbo_extra_attributes" : 													{
														"outsize" : 1.0,
														"outlets" : 2.0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "unjoin_obj-192",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"input" : 															{
																"attrOrProp" : 1,
																"digest" : "Input",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"inlet" : 1,
																"type" : "list"
															}
,
															"out1" : 															{
																"attrOrProp" : 1,
																"digest" : "Output 1",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"out2" : 															{
																"attrOrProp" : 1,
																"digest" : "Output 2",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"extra" : 															{
																"attrOrProp" : 1,
																"digest" : "Extra",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"outlets" : 															{
																"attrOrProp" : 2,
																"digest" : "Number of outlets (items to break the list into)",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "2"
															}
,
															"outsize" : 															{
																"attrOrProp" : 2,
																"digest" : "Output size",
																"defaultarg" : 2,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "1"
															}

														}
,
														"inputs" : [ 															{
																"name" : "input",
																"type" : "list",
																"digest" : "Input",
																"hot" : 1,
																"docked" : 0
															}
 ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : "list",
																"digest" : "Output 1",
																"docked" : 0
															}
, 															{
																"name" : "out2",
																"type" : "list",
																"digest" : "Output 2",
																"docked" : 0
															}
, 															{
																"name" : "extra",
																"type" : "list",
																"digest" : "Extra",
																"docked" : 0
															}
 ],
														"helpname" : "unjoin",
														"aliasOf" : "unjoin",
														"classname" : "unjoin",
														"operator" : 0,
														"versionId" : 514688208,
														"changesPatcherIO" : 0
													}
,
													"text" : "unjoin"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-191",
													"maxclass" : "newobj",
													"numinlets" : 2,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 50.0, 283.0, 57.40000057220459, 23.0 ],
													"rnbo_classname" : "list.join",
													"rnbo_extra_attributes" : 													{
														"hot" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "list.join_obj-191",
													"text" : "list.join"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-176",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patcher" : 													{
														"fileversion" : 1,
														"appversion" : 														{
															"major" : 8,
															"minor" : 6,
															"revision" : 3,
															"architecture" : "x64",
															"modernui" : 1
														}
,
														"classnamespace" : "rnbo",
														"rect" : [ 84.0, 150.0, 640.0, 480.0 ],
														"bglocked" : 0,
														"openinpresentation" : 0,
														"default_fontsize" : 12.0,
														"default_fontface" : 0,
														"default_fontname" : "Lato",
														"gridonopen" : 1,
														"gridsize" : [ 15.0, 15.0 ],
														"gridsnaponopen" : 1,
														"objectsnaponopen" : 1,
														"statusbarvisible" : 2,
														"toolbarvisible" : 1,
														"lefttoolbarpinned" : 0,
														"toptoolbarpinned" : 0,
														"righttoolbarpinned" : 0,
														"bottomtoolbarpinned" : 0,
														"toolbars_unpinned_last_save" : 0,
														"tallnewobj" : 0,
														"boxanimatetime" : 200,
														"enablehscroll" : 1,
														"enablevscroll" : 1,
														"devicewidth" : 0.0,
														"description" : "",
														"digest" : "",
														"tags" : "",
														"style" : "",
														"subpatcher_template" : "",
														"assistshowspatchername" : 0,
														"title" : "generate_col",
														"boxes" : [ 															{
																"box" : 																{
																	"id" : "obj-173",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.0, 308.800003111362457, 43.0, 23.0 ],
																	"rnbo_classname" : "list.rev",
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.rev_obj-173",
																	"text" : "list.rev"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-168",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 2,
																	"outlettype" : [ "", "" ],
																	"patching_rect" : [ 80.300000011920929, 100.0, 29.5, 23.0 ],
																	"rnbo_classname" : "t",
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "t_obj-168",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"out1" : 																			{
																				"attrOrProp" : 1,
																				"digest" : "Output order 2 (bang).",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"outlet" : 1,
																				"type" : "bang"
																			}
,
																			"out2" : 																			{
																				"attrOrProp" : 1,
																				"digest" : "Output order 1 (number).",
																				"defaultarg" : 2,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"outlet" : 1,
																				"type" : "number"
																			}
,
																			"triggers" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "list"
																			}

																		}
,
																		"inputs" : [ 																			{
																				"name" : "input",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "input to distribute",
																				"hot" : 1,
																				"docked" : 0
																			}
 ],
																		"outputs" : [ 																			{
																				"name" : "out1",
																				"type" : "bang",
																				"digest" : "Output order 2 (bang).",
																				"defaultarg" : 1,
																				"docked" : 0
																			}
, 																			{
																				"name" : "out2",
																				"type" : "number",
																				"digest" : "Output order 1 (number).",
																				"defaultarg" : 2,
																				"docked" : 0
																			}
 ],
																		"helpname" : "trigger",
																		"aliasOf" : "trigger",
																		"classname" : "t",
																		"operator" : 0,
																		"versionId" : -1133428571,
																		"changesPatcherIO" : 0
																	}
,
																	"text" : "t b i"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-163",
																	"maxclass" : "newobj",
																	"numinlets" : 2,
																	"numoutlets" : 2,
																	"outlettype" : [ "", "" ],
																	"patching_rect" : [ 50.800000011920929, 273.600002586841583, 59.0, 23.0 ],
																	"rnbo_classname" : "list.slice",
																	"rnbo_extra_attributes" : 																	{
																		"hot" : 0
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.slice_obj-163",
																	"text" : "list.slice 8"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-162",
																	"maxclass" : "newobj",
																	"numinlets" : 2,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.800000011920929, 221.600001811981201, 59.0, 23.0 ],
																	"rnbo_classname" : "list.rot",
																	"rnbo_extra_attributes" : 																	{
																		"hot" : 0
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.rot_obj-162",
																	"text" : "list.rot"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-161",
																	"maxclass" : "message",
																	"numinlets" : 2,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.800000011920929, 168.80000102519989, 166.0, 23.0 ],
																	"rnbo_classname" : "message",
																	"rnbo_extra_attributes" : 																	{
																		"text" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "message_obj-161",
																	"text" : "0 0 0 0 0 0 0 0 8 8 8 8 8 8 8 8"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-174",
																	"maxclass" : "newobj",
																	"numinlets" : 0,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 80.29997607907103, 40.000032596801702, 28.0, 23.0 ],
																	"rnbo_classname" : "in",
																	"rnbo_extra_attributes" : 																	{
																		"meta" : "",
																		"comment" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "in_obj-174",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"index" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "inlet number",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "number",
																				"mandatory" : 1
																			}
,
																			"comment" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "mouse over comment",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol"
																			}
,
																			"meta" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "A JSON formatted string containing metadata for use by the exported code",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol",
																				"defaultValue" : "",
																				"label" : "Metadata",
																				"displayorder" : 3
																			}

																		}
,
																		"inputs" : [  ],
																		"outputs" : [ 																			{
																				"name" : "out1",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "value from inlet with index 1",
																				"displayName" : "",
																				"docked" : 0
																			}
 ],
																		"helpname" : "in",
																		"aliasOf" : "in",
																		"classname" : "in",
																		"operator" : 0,
																		"versionId" : 1219109108,
																		"changesPatcherIO" : 1
																	}
,
																	"text" : "in 1"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-175",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 0,
																	"patching_rect" : [ 49.999988079071045, 391.799959596801727, 36.0, 23.0 ],
																	"rnbo_classname" : "out",
																	"rnbo_extra_attributes" : 																	{
																		"meta" : "",
																		"comment" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "out_obj-175",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"index" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "outlet number",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "number",
																				"mandatory" : 1
																			}
,
																			"comment" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "mouse over comment",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol"
																			}
,
																			"meta" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "A JSON formatted string containing metadata for use by the exported code",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol",
																				"defaultValue" : "",
																				"label" : "Metadata",
																				"displayorder" : 3
																			}

																		}
,
																		"inputs" : [ 																			{
																				"name" : "in1",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "value sent to outlet with index 1",
																				"displayName" : "",
																				"hot" : 1,
																				"docked" : 0
																			}
 ],
																		"outputs" : [  ],
																		"helpname" : "out",
																		"aliasOf" : "out",
																		"classname" : "out",
																		"operator" : 0,
																		"versionId" : -735743983,
																		"changesPatcherIO" : 1
																	}
,
																	"text" : "out 1"
																}

															}
 ],
														"lines" : [ 															{
																"patchline" : 																{
																	"destination" : [ "obj-162", 0 ],
																	"source" : [ "obj-161", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-163", 0 ],
																	"source" : [ "obj-162", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-173", 0 ],
																	"source" : [ "obj-163", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-161", 0 ],
																	"source" : [ "obj-168", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-162", 1 ],
																	"source" : [ "obj-168", 1 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-175", 0 ],
																	"source" : [ "obj-173", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-168", 0 ],
																	"source" : [ "obj-174", 0 ]
																}

															}
 ],
														"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
														"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
														"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
														"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
														"bgfillcolor_type" : "color",
														"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
														"bgfillcolor_angle" : 270.0,
														"bgfillcolor_proportion" : 0.39,
														"bgfillcolor_autogradient" : 0.0
													}
,
													"patching_rect" : [ 87.0, 236.0, 85.0, 23.0 ],
													"rnbo_classname" : "p",
													"rnbo_extra_attributes" : 													{
														"receivemode" : "local",
														"polyphony" : -1.0,
														"args" : [  ],
														"exposevoiceparams" : 0,
														"notecontroller" : 0,
														"voicecontrol" : "simple"
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "generate_col",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"target" : 															{
																"attrOrProp" : 1,
																"digest" : "target",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 0,
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "0"
															}
,
															"mute" : 															{
																"attrOrProp" : 1,
																"digest" : "mute",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number"
															}
,
															"__probingout1" : 															{
																"attrOrProp" : 1,
																"digest" : "__probingout1",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "signal"
															}
,
															"voicestatus" : 															{
																"attrOrProp" : 1,
																"digest" : "voicestatus",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "list"
															}
,
															"activevoices" : 															{
																"attrOrProp" : 1,
																"digest" : "activevoices",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 0,
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number"
															}
,
															"polyphony" : 															{
																"attrOrProp" : 2,
																"digest" : "Polyphony of the subpatcher.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "-1"
															}
,
															"exposevoiceparams" : 															{
																"attrOrProp" : 2,
																"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "bool",
																"defaultValue" : "false"
															}
,
															"title" : 															{
																"attrOrProp" : 2,
																"digest" : "Title of the subpatcher",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"file" : 															{
																"attrOrProp" : 2,
																"digest" : "rnbo file to load",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"voicecontrol" : 															{
																"attrOrProp" : 2,
																"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"enum" : [ "simple", "user" ],
																"type" : "enum",
																"defaultValue" : "simple"
															}
,
															"notecontroller" : 															{
																"attrOrProp" : 2,
																"digest" : "DEPRECATED. Use voicecontrol instead.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"receivemode" : 															{
																"attrOrProp" : 2,
																"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"enum" : [ "local", "compensated" ],
																"type" : "enum",
																"defaultValue" : "local"
															}
,
															"args" : 															{
																"attrOrProp" : 2,
																"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}

														}
,
														"inputs" : [ 															{
																"name" : "in1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "in1",
																"displayName" : "",
																"hot" : 1,
																"docked" : 0
															}
 ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "out1",
																"displayName" : "",
																"docked" : 0
															}
 ],
														"helpname" : "patcher",
														"aliasOf" : "rnbo",
														"classname" : "p",
														"operator" : 0,
														"versionId" : 88895198,
														"changesPatcherIO" : 0
													}
,
													"text" : "p generate_col",
													"varname" : "generate_col"
												}

											}
, 											{
												"box" : 												{
													"format" : 0,
													"id" : "obj-171",
													"maxclass" : "number",
													"maximum" : 8,
													"minimum" : 0,
													"numinlets" : 1,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"parameter_enable" : 0,
													"patching_rect" : [ 87.0, 192.0, 50.0, 23.0 ],
													"rnbo_classname" : "number",
													"rnbo_extra_attributes" : 													{
														"minimum" : 0,
														"maximum" : 8,
														"order" : "",
														"initialFormat" : "integer",
														"preset" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "number_obj-171"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-47",
													"maxclass" : "newobj",
													"numinlets" : 0,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 50.0, 40.0, 28.0, 23.0 ],
													"rnbo_classname" : "in",
													"rnbo_extra_attributes" : 													{
														"meta" : "",
														"comment" : ""
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "in_obj-47",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"index" : 															{
																"attrOrProp" : 2,
																"digest" : "inlet number",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"mandatory" : 1
															}
,
															"comment" : 															{
																"attrOrProp" : 2,
																"digest" : "mouse over comment",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol"
															}
,
															"meta" : 															{
																"attrOrProp" : 2,
																"digest" : "A JSON formatted string containing metadata for use by the exported code",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"defaultValue" : "",
																"label" : "Metadata",
																"displayorder" : 3
															}

														}
,
														"inputs" : [  ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "value from inlet with index 1",
																"displayName" : "",
																"docked" : 0
															}
 ],
														"helpname" : "in",
														"aliasOf" : "in",
														"classname" : "in",
														"operator" : 0,
														"versionId" : 1219109108,
														"changesPatcherIO" : 1
													}
,
													"text" : "in 1"
												}

											}
 ],
										"lines" : [ 											{
												"patchline" : 												{
													"destination" : [ "obj-191", 0 ],
													"source" : [ "obj-13", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-176", 0 ],
													"source" : [ "obj-171", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-191", 1 ],
													"source" : [ "obj-176", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-274", 0 ],
													"source" : [ "obj-191", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-13", 0 ],
													"source" : [ "obj-192", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-246", 0 ],
													"source" : [ "obj-192", 1 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-171", 0 ],
													"source" : [ "obj-246", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-192", 0 ],
													"source" : [ "obj-47", 0 ]
												}

											}
 ],
										"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
										"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
										"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
										"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
										"bgfillcolor_type" : "color",
										"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
										"bgfillcolor_angle" : 270.0,
										"bgfillcolor_proportion" : 0.39,
										"bgfillcolor_autogradient" : 0.0
									}
,
									"patching_rect" : [ 80.000002384185791, 1536.000045776367188, 65.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "draw_col",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [  ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p draw_col",
									"varname" : "draw_col"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-12",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patcher" : 									{
										"fileversion" : 1,
										"appversion" : 										{
											"major" : 8,
											"minor" : 6,
											"revision" : 3,
											"architecture" : "x64",
											"modernui" : 1
										}
,
										"classnamespace" : "rnbo",
										"rect" : [ 116.0, 125.0, 1248.0, 904.0 ],
										"bglocked" : 0,
										"openinpresentation" : 0,
										"default_fontsize" : 12.0,
										"default_fontface" : 0,
										"default_fontname" : "Lato",
										"gridonopen" : 1,
										"gridsize" : [ 15.0, 15.0 ],
										"gridsnaponopen" : 1,
										"objectsnaponopen" : 1,
										"statusbarvisible" : 2,
										"toolbarvisible" : 1,
										"lefttoolbarpinned" : 0,
										"toptoolbarpinned" : 0,
										"righttoolbarpinned" : 0,
										"bottomtoolbarpinned" : 0,
										"toolbars_unpinned_last_save" : 0,
										"tallnewobj" : 0,
										"boxanimatetime" : 200,
										"enablehscroll" : 1,
										"enablevscroll" : 1,
										"devicewidth" : 0.0,
										"description" : "",
										"digest" : "",
										"tags" : "",
										"style" : "",
										"subpatcher_template" : "",
										"assistshowspatchername" : 0,
										"title" : "draw_col",
										"boxes" : [ 											{
												"box" : 												{
													"id" : "obj-13",
													"maxclass" : "newobj",
													"numinlets" : 2,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 6.666666865348816, 242.666673898696899, 58.0, 23.0 ],
													"rnbo_classname" : "append",
													"rnbo_extra_attributes" : 													{
														"hot" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "append_obj-13",
													"text" : "append 0"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-274",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 0,
													"patching_rect" : [ 65.0, 397.0, 183.0, 23.0 ],
													"rnbo_classname" : "outport",
													"rnbo_extra_attributes" : 													{
														"meta" : ""
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "outport_obj-274",
													"text" : "outport /grid-a/grid/led/level/col"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-246",
													"maxclass" : "newobj",
													"numinlets" : 6,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 87.0, 155.0, 75.0, 23.0 ],
													"rnbo_classname" : "scale",
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "scale_obj-246",
													"text" : "scale 0 7 8 1"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-198",
													"linecount" : 2,
													"maxclass" : "comment",
													"numinlets" : 1,
													"numoutlets" : 0,
													"patching_rect" : [ 71.0, 316.0, 97.0, 35.0 ],
													"text" : "col\nLED states of col"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-192",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 3,
													"outlettype" : [ "", "", "" ],
													"patching_rect" : [ 50.0, 100.0, 57.40000057220459, 23.0 ],
													"rnbo_classname" : "unjoin",
													"rnbo_extra_attributes" : 													{
														"outsize" : 1.0,
														"outlets" : 2.0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "unjoin_obj-192",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"input" : 															{
																"attrOrProp" : 1,
																"digest" : "Input",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"inlet" : 1,
																"type" : "list"
															}
,
															"out1" : 															{
																"attrOrProp" : 1,
																"digest" : "Output 1",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"out2" : 															{
																"attrOrProp" : 1,
																"digest" : "Output 2",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"extra" : 															{
																"attrOrProp" : 1,
																"digest" : "Extra",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"outlets" : 															{
																"attrOrProp" : 2,
																"digest" : "Number of outlets (items to break the list into)",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "2"
															}
,
															"outsize" : 															{
																"attrOrProp" : 2,
																"digest" : "Output size",
																"defaultarg" : 2,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "1"
															}

														}
,
														"inputs" : [ 															{
																"name" : "input",
																"type" : "list",
																"digest" : "Input",
																"hot" : 1,
																"docked" : 0
															}
 ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : "list",
																"digest" : "Output 1",
																"docked" : 0
															}
, 															{
																"name" : "out2",
																"type" : "list",
																"digest" : "Output 2",
																"docked" : 0
															}
, 															{
																"name" : "extra",
																"type" : "list",
																"digest" : "Extra",
																"docked" : 0
															}
 ],
														"helpname" : "unjoin",
														"aliasOf" : "unjoin",
														"classname" : "unjoin",
														"operator" : 0,
														"versionId" : 514688208,
														"changesPatcherIO" : 0
													}
,
													"text" : "unjoin"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-191",
													"maxclass" : "newobj",
													"numinlets" : 2,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 50.0, 283.0, 57.40000057220459, 23.0 ],
													"rnbo_classname" : "list.join",
													"rnbo_extra_attributes" : 													{
														"hot" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "list.join_obj-191",
													"text" : "list.join"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-176",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patcher" : 													{
														"fileversion" : 1,
														"appversion" : 														{
															"major" : 8,
															"minor" : 6,
															"revision" : 3,
															"architecture" : "x64",
															"modernui" : 1
														}
,
														"classnamespace" : "rnbo",
														"rect" : [ 84.0, 150.0, 640.0, 480.0 ],
														"bglocked" : 0,
														"openinpresentation" : 0,
														"default_fontsize" : 12.0,
														"default_fontface" : 0,
														"default_fontname" : "Lato",
														"gridonopen" : 1,
														"gridsize" : [ 15.0, 15.0 ],
														"gridsnaponopen" : 1,
														"objectsnaponopen" : 1,
														"statusbarvisible" : 2,
														"toolbarvisible" : 1,
														"lefttoolbarpinned" : 0,
														"toptoolbarpinned" : 0,
														"righttoolbarpinned" : 0,
														"bottomtoolbarpinned" : 0,
														"toolbars_unpinned_last_save" : 0,
														"tallnewobj" : 0,
														"boxanimatetime" : 200,
														"enablehscroll" : 1,
														"enablevscroll" : 1,
														"devicewidth" : 0.0,
														"description" : "",
														"digest" : "",
														"tags" : "",
														"style" : "",
														"subpatcher_template" : "",
														"assistshowspatchername" : 0,
														"title" : "generate_col",
														"boxes" : [ 															{
																"box" : 																{
																	"id" : "obj-173",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.0, 308.800003111362457, 43.0, 23.0 ],
																	"rnbo_classname" : "list.rev",
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.rev_obj-173",
																	"text" : "list.rev"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-168",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 2,
																	"outlettype" : [ "", "" ],
																	"patching_rect" : [ 80.300000011920929, 100.0, 29.5, 23.0 ],
																	"rnbo_classname" : "t",
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "t_obj-168",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"out1" : 																			{
																				"attrOrProp" : 1,
																				"digest" : "Output order 2 (bang).",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"outlet" : 1,
																				"type" : "bang"
																			}
,
																			"out2" : 																			{
																				"attrOrProp" : 1,
																				"digest" : "Output order 1 (number).",
																				"defaultarg" : 2,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"outlet" : 1,
																				"type" : "number"
																			}
,
																			"triggers" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "list"
																			}

																		}
,
																		"inputs" : [ 																			{
																				"name" : "input",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "input to distribute",
																				"hot" : 1,
																				"docked" : 0
																			}
 ],
																		"outputs" : [ 																			{
																				"name" : "out1",
																				"type" : "bang",
																				"digest" : "Output order 2 (bang).",
																				"defaultarg" : 1,
																				"docked" : 0
																			}
, 																			{
																				"name" : "out2",
																				"type" : "number",
																				"digest" : "Output order 1 (number).",
																				"defaultarg" : 2,
																				"docked" : 0
																			}
 ],
																		"helpname" : "trigger",
																		"aliasOf" : "trigger",
																		"classname" : "t",
																		"operator" : 0,
																		"versionId" : -1133428571,
																		"changesPatcherIO" : 0
																	}
,
																	"text" : "t b i"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-163",
																	"maxclass" : "newobj",
																	"numinlets" : 2,
																	"numoutlets" : 2,
																	"outlettype" : [ "", "" ],
																	"patching_rect" : [ 50.800000011920929, 273.600002586841583, 59.0, 23.0 ],
																	"rnbo_classname" : "list.slice",
																	"rnbo_extra_attributes" : 																	{
																		"hot" : 0
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.slice_obj-163",
																	"text" : "list.slice 8"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-162",
																	"maxclass" : "newobj",
																	"numinlets" : 2,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.800000011920929, 221.600001811981201, 59.0, 23.0 ],
																	"rnbo_classname" : "list.rot",
																	"rnbo_extra_attributes" : 																	{
																		"hot" : 0
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.rot_obj-162",
																	"text" : "list.rot"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-161",
																	"maxclass" : "message",
																	"numinlets" : 2,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.800000011920929, 168.80000102519989, 222.0, 23.0 ],
																	"rnbo_classname" : "message",
																	"rnbo_extra_attributes" : 																	{
																		"text" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "message_obj-161",
																	"text" : "0 0 0 0 0 0 0 0 12 12 12 12 12 12 12 12"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-174",
																	"maxclass" : "newobj",
																	"numinlets" : 0,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 80.29997607907103, 40.000032596801702, 28.0, 23.0 ],
																	"rnbo_classname" : "in",
																	"rnbo_extra_attributes" : 																	{
																		"meta" : "",
																		"comment" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "in_obj-174",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"index" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "inlet number",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "number",
																				"mandatory" : 1
																			}
,
																			"comment" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "mouse over comment",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol"
																			}
,
																			"meta" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "A JSON formatted string containing metadata for use by the exported code",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol",
																				"defaultValue" : "",
																				"label" : "Metadata",
																				"displayorder" : 3
																			}

																		}
,
																		"inputs" : [  ],
																		"outputs" : [ 																			{
																				"name" : "out1",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "value from inlet with index 1",
																				"displayName" : "",
																				"docked" : 0
																			}
 ],
																		"helpname" : "in",
																		"aliasOf" : "in",
																		"classname" : "in",
																		"operator" : 0,
																		"versionId" : 1219109108,
																		"changesPatcherIO" : 1
																	}
,
																	"text" : "in 1"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-175",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 0,
																	"patching_rect" : [ 49.999988079071045, 391.799959596801727, 36.0, 23.0 ],
																	"rnbo_classname" : "out",
																	"rnbo_extra_attributes" : 																	{
																		"meta" : "",
																		"comment" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "out_obj-175",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"index" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "outlet number",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "number",
																				"mandatory" : 1
																			}
,
																			"comment" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "mouse over comment",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol"
																			}
,
																			"meta" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "A JSON formatted string containing metadata for use by the exported code",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol",
																				"defaultValue" : "",
																				"label" : "Metadata",
																				"displayorder" : 3
																			}

																		}
,
																		"inputs" : [ 																			{
																				"name" : "in1",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "value sent to outlet with index 1",
																				"displayName" : "",
																				"hot" : 1,
																				"docked" : 0
																			}
 ],
																		"outputs" : [  ],
																		"helpname" : "out",
																		"aliasOf" : "out",
																		"classname" : "out",
																		"operator" : 0,
																		"versionId" : -735743983,
																		"changesPatcherIO" : 1
																	}
,
																	"text" : "out 1"
																}

															}
 ],
														"lines" : [ 															{
																"patchline" : 																{
																	"destination" : [ "obj-162", 0 ],
																	"source" : [ "obj-161", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-163", 0 ],
																	"source" : [ "obj-162", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-173", 0 ],
																	"source" : [ "obj-163", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-161", 0 ],
																	"source" : [ "obj-168", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-162", 1 ],
																	"source" : [ "obj-168", 1 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-175", 0 ],
																	"source" : [ "obj-173", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-168", 0 ],
																	"source" : [ "obj-174", 0 ]
																}

															}
 ],
														"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
														"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
														"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
														"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
														"bgfillcolor_type" : "color",
														"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
														"bgfillcolor_angle" : 270.0,
														"bgfillcolor_proportion" : 0.39,
														"bgfillcolor_autogradient" : 0.0
													}
,
													"patching_rect" : [ 87.0, 236.0, 85.0, 23.0 ],
													"rnbo_classname" : "p",
													"rnbo_extra_attributes" : 													{
														"receivemode" : "local",
														"polyphony" : -1.0,
														"args" : [  ],
														"exposevoiceparams" : 0,
														"notecontroller" : 0,
														"voicecontrol" : "simple"
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "generate_col",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"target" : 															{
																"attrOrProp" : 1,
																"digest" : "target",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 0,
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "0"
															}
,
															"mute" : 															{
																"attrOrProp" : 1,
																"digest" : "mute",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number"
															}
,
															"__probingout1" : 															{
																"attrOrProp" : 1,
																"digest" : "__probingout1",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "signal"
															}
,
															"voicestatus" : 															{
																"attrOrProp" : 1,
																"digest" : "voicestatus",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "list"
															}
,
															"activevoices" : 															{
																"attrOrProp" : 1,
																"digest" : "activevoices",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 0,
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number"
															}
,
															"polyphony" : 															{
																"attrOrProp" : 2,
																"digest" : "Polyphony of the subpatcher.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "-1"
															}
,
															"exposevoiceparams" : 															{
																"attrOrProp" : 2,
																"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "bool",
																"defaultValue" : "false"
															}
,
															"title" : 															{
																"attrOrProp" : 2,
																"digest" : "Title of the subpatcher",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"file" : 															{
																"attrOrProp" : 2,
																"digest" : "rnbo file to load",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"voicecontrol" : 															{
																"attrOrProp" : 2,
																"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"enum" : [ "simple", "user" ],
																"type" : "enum",
																"defaultValue" : "simple"
															}
,
															"notecontroller" : 															{
																"attrOrProp" : 2,
																"digest" : "DEPRECATED. Use voicecontrol instead.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"receivemode" : 															{
																"attrOrProp" : 2,
																"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"enum" : [ "local", "compensated" ],
																"type" : "enum",
																"defaultValue" : "local"
															}
,
															"args" : 															{
																"attrOrProp" : 2,
																"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}

														}
,
														"inputs" : [ 															{
																"name" : "in1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "in1",
																"displayName" : "",
																"hot" : 1,
																"docked" : 0
															}
 ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "out1",
																"displayName" : "",
																"docked" : 0
															}
 ],
														"helpname" : "patcher",
														"aliasOf" : "rnbo",
														"classname" : "p",
														"operator" : 0,
														"versionId" : 88895198,
														"changesPatcherIO" : 0
													}
,
													"text" : "p generate_col",
													"varname" : "generate_col"
												}

											}
, 											{
												"box" : 												{
													"format" : 0,
													"id" : "obj-171",
													"maxclass" : "number",
													"maximum" : 8,
													"minimum" : 0,
													"numinlets" : 1,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"parameter_enable" : 0,
													"patching_rect" : [ 87.0, 192.0, 50.0, 23.0 ],
													"rnbo_classname" : "number",
													"rnbo_extra_attributes" : 													{
														"minimum" : 0,
														"maximum" : 8,
														"order" : "",
														"initialFormat" : "integer",
														"preset" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "number_obj-171"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-47",
													"maxclass" : "newobj",
													"numinlets" : 0,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 50.0, 40.0, 28.0, 23.0 ],
													"rnbo_classname" : "in",
													"rnbo_extra_attributes" : 													{
														"meta" : "",
														"comment" : ""
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "in_obj-47",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"index" : 															{
																"attrOrProp" : 2,
																"digest" : "inlet number",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"mandatory" : 1
															}
,
															"comment" : 															{
																"attrOrProp" : 2,
																"digest" : "mouse over comment",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol"
															}
,
															"meta" : 															{
																"attrOrProp" : 2,
																"digest" : "A JSON formatted string containing metadata for use by the exported code",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"defaultValue" : "",
																"label" : "Metadata",
																"displayorder" : 3
															}

														}
,
														"inputs" : [  ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "value from inlet with index 1",
																"displayName" : "",
																"docked" : 0
															}
 ],
														"helpname" : "in",
														"aliasOf" : "in",
														"classname" : "in",
														"operator" : 0,
														"versionId" : 1219109108,
														"changesPatcherIO" : 1
													}
,
													"text" : "in 1"
												}

											}
 ],
										"lines" : [ 											{
												"patchline" : 												{
													"destination" : [ "obj-191", 0 ],
													"source" : [ "obj-13", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-176", 0 ],
													"source" : [ "obj-171", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-191", 1 ],
													"source" : [ "obj-176", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-274", 0 ],
													"source" : [ "obj-191", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-13", 0 ],
													"source" : [ "obj-192", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-246", 0 ],
													"source" : [ "obj-192", 1 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-171", 0 ],
													"source" : [ "obj-246", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-192", 0 ],
													"source" : [ "obj-47", 0 ]
												}

											}
 ],
										"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
										"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
										"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
										"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
										"bgfillcolor_type" : "color",
										"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
										"bgfillcolor_angle" : 270.0,
										"bgfillcolor_proportion" : 0.39,
										"bgfillcolor_autogradient" : 0.0
									}
,
									"patching_rect" : [ 370.666677713394165, 1445.333376407623291, 65.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "draw_col[1]",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [  ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p draw_col",
									"varname" : "draw_col[1]"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-7",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 353.333343863487244, 617.333351731300354, 40.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "t_obj-7",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 3 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 3 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 3,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-33",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 645.333352565765381, 257.333341002464294, 47.0, 23.0 ],
									"rnbo_classname" : "route",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "route_obj-33",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"selector1" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "list", "number", "bang" ],
												"digest" : "Number or List to be routed",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "selector1",
												"type" : "number",
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 1",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "route",
										"aliasOf" : "route",
										"classname" : "route",
										"operator" : 0,
										"versionId" : -1778059630,
										"changesPatcherIO" : 0
									}
,
									"text" : "route 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-28",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 645.333352565765381, 214.666673064231873, 56.0, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "list.rot_obj-28",
									"text" : "list.rot -2"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-94",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 0,
									"patching_rect" : [ 1197.333369016647339, 2621.333411455154419, 49.0, 23.0 ],
									"rnbo_classname" : "midiout",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "midiout_obj-94",
									"text" : "midiout"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-93",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1197.333369016647339, 2522.666741847991943, 188.0, 23.0 ],
									"rnbo_classname" : "pack",
									"rnbo_extra_attributes" : 									{
										"length" : 0.0,
										"list" : ""
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "pack_obj-93",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "out",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"length" : 											{
												"attrOrProp" : 2,
												"digest" : "how many things to pack",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"list" : 											{
												"attrOrProp" : 2,
												"digest" : "the list to initialize the {@objectname} object with",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "number",
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "out",
												"docked" : 0
											}
 ],
										"helpname" : "pack",
										"aliasOf" : "pack",
										"classname" : "pack",
										"operator" : 0,
										"versionId" : 2113152561,
										"changesPatcherIO" : 0
									}
,
									"text" : "pack i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-92",
									"maxclass" : "newobj",
									"numinlets" : 7,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1197.333369016647339, 2573.333410024642944, 82.0, 23.0 ],
									"rnbo_classname" : "midiformat",
									"rnbo_extra_attributes" : 									{
										"bendmode" : "float"
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "midiformat_obj-92",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"midimessage" : 											{
												"attrOrProp" : 1,
												"digest" : "MIDI Message Output",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"noteonoroff" : 											{
												"attrOrProp" : 1,
												"digest" : "Note-on or Note-off (list: pitch, velocity)",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"polypressure" : 											{
												"attrOrProp" : 1,
												"digest" : "Poly Key Pressure (list: Key, Value)",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"controlchange" : 											{
												"attrOrProp" : 1,
												"digest" : "Control Change (list: Controller Number, Value)",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"programchange" : 											{
												"attrOrProp" : 1,
												"digest" : "Program Change",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"aftertouch" : 											{
												"attrOrProp" : 1,
												"digest" : "After Touch",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"pitchbend" : 											{
												"attrOrProp" : 1,
												"digest" : "Pitch Bend (0 to 127)",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "64"
											}
,
											"channel" : 											{
												"attrOrProp" : 1,
												"digest" : "Set MIDI Channel",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"bendmode" : 											{
												"attrOrProp" : 2,
												"digest" : "0 for Pitch Bend (0-127), 1 for Pitch Bend (-1. to 1.), 2 for Pitch Bend (-8192 to 8191)",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "lores", "float", "hires" ],
												"type" : "enum",
												"defaultValue" : "float"
											}

										}
,
										"inputs" : [ 											{
												"name" : "noteonoroff",
												"type" : "list",
												"digest" : "Note-on or Note-off (list: pitch, velocity)",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "polypressure",
												"type" : "list",
												"digest" : "Poly Key Pressure (list: Key, Value)",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "controlchange",
												"type" : "list",
												"digest" : "Control Change (list: Controller Number, Value)",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "programchange",
												"type" : "number",
												"digest" : "Program Change",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "aftertouch",
												"type" : "number",
												"digest" : "After Touch",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "pitchbend",
												"type" : "number",
												"digest" : "Pitch Bend (0 to 127)",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "channel",
												"type" : "number",
												"digest" : "Set MIDI Channel",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "midimessage",
												"type" : "number",
												"digest" : "MIDI Message Output",
												"docked" : 0
											}
 ],
										"helpname" : "midiformat",
										"aliasOf" : "midiformat",
										"classname" : "midiformat",
										"operator" : 0,
										"versionId" : 1682565515,
										"changesPatcherIO" : 0
									}
,
									"text" : "midiformat"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-82",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1600.00004768371582, 625.333351969718933, 29.5, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 10,
									"rnbo_uniqueid" : "message_obj-82",
									"text" : "6"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-73",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1600.00004768371582, 662.666686415672302, 74.0, 23.0 ],
									"rnbo_classname" : "list.group",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "list.group_obj-73",
									"text" : "list.group 64"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-67",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1818.666720867156982, 264.00000786781311, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 10,
									"rnbo_uniqueid" : "number_obj-67"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-6",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1841.333388209342957, 440.000013113021851, 290.0, 23.0 ],
									"rnbo_classname" : "param",
									"rnbo_extra_attributes" : 									{
										"order" : "0",
										"meta" : "",
										"maximum" : 1.0,
										"steps" : 0.0,
										"tonormalized" : "",
										"preset" : 1,
										"displayorder" : "-",
										"ctlin" : 0.0,
										"sendinit" : 1,
										"displayname" : "",
										"fromnormalized" : "",
										"minimum" : 0.0,
										"exponent" : 1.0,
										"unit" : ""
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "Lane",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"value" : 											{
												"attrOrProp" : 2,
												"digest" : "Set initial value",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Initial Value",
												"displayorder" : 3
											}
,
											"normalizedvalue" : 											{
												"attrOrProp" : 1,
												"digest" : "Set value normalized. ",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset param to initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"normalized" : 											{
												"attrOrProp" : 1,
												"digest" : "Normalized parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"name" : 											{
												"attrOrProp" : 2,
												"digest" : "Name of the parameter",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "Parameter Name",
												"mandatory" : 1
											}
,
											"enum" : 											{
												"attrOrProp" : 2,
												"digest" : "Use an enumerated output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"label" : "Enum Values",
												"displayorder" : 6
											}
,
											"minimum" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 0,
												"aliases" : [ "min" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"min" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 1,
												"aliasOf" : "minimum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"maximum" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 0,
												"aliases" : [ "max" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"max" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 1,
												"aliasOf" : "maximum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"exponent" : 											{
												"attrOrProp" : 2,
												"digest" : "Scale values exponentially",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Exponent",
												"displayorder" : 7
											}
,
											"steps" : 											{
												"attrOrProp" : 2,
												"digest" : "Divide the output into a number of discrete steps",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Steps",
												"displayorder" : 8
											}
,
											"displayName" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED: Use the lower case 'displayname' instead",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "symbol",
												"label" : "Display Name"
											}
,
											"displayname" : 											{
												"attrOrProp" : 2,
												"digest" : "A more readable name for the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Display Name",
												"displayorder" : 14
											}
,
											"unit" : 											{
												"attrOrProp" : 2,
												"digest" : "A symbol to describe the unit of the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Unit",
												"displayorder" : 15
											}
,
											"tonormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a real parameter value to its normalized form.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "To Normalized Expression",
												"displayorder" : 10
											}
,
											"fromnormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a normalized parameter into its actual parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "From Normalized Expression",
												"displayorder" : 9
											}
,
											"order" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which initial parameter values will be sent out on patcher load. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "0",
												"label" : "Restore Order",
												"displayorder" : 12
											}
,
											"displayorder" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which parameters will show up in a list of all parameters. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "-",
												"label" : "Display Order",
												"displayorder" : 13
											}
,
											"sendinit" : 											{
												"attrOrProp" : 2,
												"digest" : "Send initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Send Init",
												"displayorder" : 4
											}
,
											"ctlin" : 											{
												"attrOrProp" : 2,
												"digest" : "MIDI controller number to control this parameter.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"label" : "MIDI Controller Number.",
												"displayorder" : 16
											}
,
											"meta" : 											{
												"attrOrProp" : 2,
												"digest" : "A JSON formatted string containing metadata for use by the exported code",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Metadata",
												"displayorder" : 17
											}
,
											"nopreset" : 											{
												"attrOrProp" : 2,
												"digest" : "Do not add this value to the preset [DEPRECATED - USE @preset 0 instead].",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"preset" : 											{
												"attrOrProp" : 2,
												"digest" : "Add this value to the preset.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Include In Preset",
												"displayorder" : 11
											}

										}
,
										"inputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalizedvalue",
												"type" : "number",
												"digest" : "Set value normalized. ",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalized",
												"type" : "number",
												"digest" : "Normalized parameter value.",
												"docked" : 0
											}
 ],
										"helpname" : "param",
										"aliasOf" : "param",
										"classname" : "param",
										"operator" : 0,
										"versionId" : -1940971094,
										"changesPatcherIO" : 0
									}
,
									"text" : "param Lane 0 @enum Pitch Velocity Duration Ratchet",
									"varname" : "Lane"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-2",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 2177.333398222923279, 440.000013113021851, 153.0, 23.0 ],
									"rnbo_classname" : "param",
									"rnbo_extra_attributes" : 									{
										"order" : "0",
										"meta" : "",
										"maximum" : 1.0,
										"steps" : 0.0,
										"tonormalized" : "",
										"preset" : 1,
										"value" : 0.0,
										"displayorder" : "-",
										"ctlin" : 0.0,
										"sendinit" : 1,
										"displayname" : "",
										"fromnormalized" : "",
										"minimum" : 0.0,
										"exponent" : 1.0,
										"unit" : ""
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "Page",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"value" : 											{
												"attrOrProp" : 2,
												"digest" : "Set initial value",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Initial Value",
												"displayorder" : 3
											}
,
											"normalizedvalue" : 											{
												"attrOrProp" : 1,
												"digest" : "Set value normalized. ",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "Reset param to initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"normalized" : 											{
												"attrOrProp" : 1,
												"digest" : "Normalized parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"name" : 											{
												"attrOrProp" : 2,
												"digest" : "Name of the parameter",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "Parameter Name",
												"mandatory" : 1
											}
,
											"enum" : 											{
												"attrOrProp" : 2,
												"digest" : "Use an enumerated output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"label" : "Enum Values",
												"displayorder" : 6
											}
,
											"minimum" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 0,
												"aliases" : [ "min" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"min" : 											{
												"attrOrProp" : 2,
												"digest" : "Minimum value",
												"isalias" : 1,
												"aliasOf" : "minimum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Minimum",
												"displayorder" : 1
											}
,
											"maximum" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 0,
												"aliases" : [ "max" ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"max" : 											{
												"attrOrProp" : 2,
												"digest" : "Maximum value",
												"isalias" : 1,
												"aliasOf" : "maximum",
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Maximum",
												"displayorder" : 2
											}
,
											"exponent" : 											{
												"attrOrProp" : 2,
												"digest" : "Scale values exponentially",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1",
												"label" : "Exponent",
												"displayorder" : 7
											}
,
											"steps" : 											{
												"attrOrProp" : 2,
												"digest" : "Divide the output into a number of discrete steps",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0",
												"label" : "Steps",
												"displayorder" : 8
											}
,
											"displayName" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED: Use the lower case 'displayname' instead",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "symbol",
												"label" : "Display Name"
											}
,
											"displayname" : 											{
												"attrOrProp" : 2,
												"digest" : "A more readable name for the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Display Name",
												"displayorder" : 14
											}
,
											"unit" : 											{
												"attrOrProp" : 2,
												"digest" : "A symbol to describe the unit of the parameter in an external RNBO target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Unit",
												"displayorder" : 15
											}
,
											"tonormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a real parameter value to its normalized form.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "To Normalized Expression",
												"displayorder" : 10
											}
,
											"fromnormalized" : 											{
												"attrOrProp" : 2,
												"digest" : "Converts a normalized parameter into its actual parameter value.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"label" : "From Normalized Expression",
												"displayorder" : 9
											}
,
											"order" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which initial parameter values will be sent out on patcher load. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "0",
												"label" : "Restore Order",
												"displayorder" : 12
											}
,
											"displayorder" : 											{
												"attrOrProp" : 2,
												"digest" : "Order in which parameters will show up in a list of all parameters. The order can be numeric or symbolic ('first' and 'last')",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "-",
												"label" : "Display Order",
												"displayorder" : 13
											}
,
											"sendinit" : 											{
												"attrOrProp" : 2,
												"digest" : "Send initial value",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Send Init",
												"displayorder" : 4
											}
,
											"ctlin" : 											{
												"attrOrProp" : 2,
												"digest" : "MIDI controller number to control this parameter.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"label" : "MIDI Controller Number.",
												"displayorder" : 16
											}
,
											"meta" : 											{
												"attrOrProp" : 2,
												"digest" : "A JSON formatted string containing metadata for use by the exported code",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"defaultValue" : "",
												"label" : "Metadata",
												"displayorder" : 17
											}
,
											"nopreset" : 											{
												"attrOrProp" : 2,
												"digest" : "Do not add this value to the preset [DEPRECATED - USE @preset 0 instead].",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 1,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"preset" : 											{
												"attrOrProp" : 2,
												"digest" : "Add this value to the preset.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "true",
												"label" : "Include In Preset",
												"displayorder" : 11
											}

										}
,
										"inputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalizedvalue",
												"type" : "number",
												"digest" : "Set value normalized. ",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "value",
												"type" : "number",
												"digest" : "Parameter value",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "normalized",
												"type" : "number",
												"digest" : "Normalized parameter value.",
												"docked" : 0
											}
 ],
										"helpname" : "param",
										"aliasOf" : "param",
										"classname" : "param",
										"operator" : 0,
										"versionId" : -1940971094,
										"changesPatcherIO" : 0
									}
,
									"text" : "param Page @enum 1 2 3 4",
									"varname" : "Page"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-161",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1673.333383202552795, 1137.333367228507996, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 11,
									"rnbo_uniqueid" : "number_obj-161"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-159",
									"maxclass" : "newobj",
									"numinlets" : 6,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1673.333383202552795, 1100.000032782554626, 75.0, 23.0 ],
									"rnbo_classname" : "scale",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "scale_obj-159",
									"text" : "scale 0 7 8 1"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-155",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1673.333383202552795, 1044.000031113624573, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 12,
									"rnbo_uniqueid" : "number_obj-155"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-147",
									"maxclass" : "flonum",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1433.333376049995422, 2090.666728973388672, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "float",
										"preset" : 0
									}
,
									"rnbo_serial" : 13,
									"rnbo_uniqueid" : "number_obj-147"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-144",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1433.333376049995422, 2056.000061273574829, 29.5, 23.0 ],
									"rnbo_classname" : "!/",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "!/_obj-144",
									"text" : "!/ 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-143",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1414.666708827018738, 2141.333397150039673, 37.0, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "*_obj-143",
									"text" : "*"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-142",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1169.333368182182312, 2090.666728973388672, 23.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "t_obj-142",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t 0"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-141",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1197.333369016647339, 2141.333397150039673, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 14,
									"rnbo_uniqueid" : "number_obj-141"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-139",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1169.333368182182312, 2056.000061273574829, 33.0, 23.0 ],
									"rnbo_classname" : "sel",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "sel_obj-139",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Number to test",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"test1" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (1) to Match",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"match1" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 0",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"nomatch" : 											{
												"attrOrProp" : 1,
												"digest" : "Input if Input Doesn't Match",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "number", "bang" ],
												"digest" : "Number to test",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "test1",
												"type" : "number",
												"digest" : "Set Value (1) to Match",
												"defaultarg" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : "bang",
												"digest" : "Bang if input matches 0",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "number", "bang" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "select",
										"aliasOf" : "select",
										"classname" : "sel",
										"operator" : 0,
										"versionId" : 902197102,
										"changesPatcherIO" : 0
									}
,
									"text" : "sel 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-138",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 5,
									"outlettype" : [ "", "", "", "", "" ],
									"patching_rect" : [ 1154.666701078414917, 2009.333393216133118, 75.0, 23.0 ],
									"rnbo_classname" : "unjoin",
									"rnbo_extra_attributes" : 									{
										"outsize" : 1.0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "unjoin_obj-138",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Input",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 2",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 3",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out4" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 4",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"extra" : 											{
												"attrOrProp" : 1,
												"digest" : "Extra",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"outlets" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets (items to break the list into)",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"outsize" : 											{
												"attrOrProp" : 2,
												"digest" : "Output size",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : "list",
												"digest" : "Input",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "list",
												"digest" : "Output 1",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "list",
												"digest" : "Output 2",
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "list",
												"digest" : "Output 3",
												"docked" : 0
											}
, 											{
												"name" : "out4",
												"type" : "list",
												"digest" : "Output 4",
												"docked" : 0
											}
, 											{
												"name" : "extra",
												"type" : "list",
												"digest" : "Extra",
												"docked" : 0
											}
 ],
										"helpname" : "unjoin",
										"aliasOf" : "unjoin",
										"classname" : "unjoin",
										"operator" : 0,
										"versionId" : 514688208,
										"changesPatcherIO" : 0
									}
,
									"text" : "unjoin 4"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-137",
									"maxclass" : "newobj",
									"numinlets" : 3,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1378.666707754135132, 2217.333399415016174, 55.0, 23.0 ],
									"rnbo_classname" : "join",
									"rnbo_extra_attributes" : 									{
										"triggers" : "0"
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "join_obj-137",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "Combined items",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "reset",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"in0" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 0",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 1",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 2",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"inlets" : 											{
												"attrOrProp" : 2,
												"digest" : "How many items to combine",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "Which inlets should trigger output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in0",
												"type" : "list",
												"digest" : "Input 0",
												"docked" : 0
											}
, 											{
												"name" : "in1",
												"type" : "list",
												"digest" : "Input 1",
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "list",
												"digest" : "Input 2",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "Combined items",
												"docked" : 0
											}
 ],
										"helpname" : "join",
										"aliasOf" : "join",
										"classname" : "join",
										"operator" : 0,
										"versionId" : 762058701,
										"changesPatcherIO" : 0
									}
,
									"text" : "join 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-136",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 5,
									"outlettype" : [ "", "", "", "", "" ],
									"patching_rect" : [ 1378.666707754135132, 2009.333393216133118, 91.0, 23.0 ],
									"rnbo_classname" : "unjoin",
									"rnbo_extra_attributes" : 									{
										"outsize" : 1.0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "unjoin_obj-136",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Input",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 2",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 3",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out4" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 4",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"extra" : 											{
												"attrOrProp" : 1,
												"digest" : "Extra",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"outlets" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets (items to break the list into)",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"outsize" : 											{
												"attrOrProp" : 2,
												"digest" : "Output size",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : "list",
												"digest" : "Input",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "list",
												"digest" : "Output 1",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "list",
												"digest" : "Output 2",
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "list",
												"digest" : "Output 3",
												"docked" : 0
											}
, 											{
												"name" : "out4",
												"type" : "list",
												"digest" : "Output 4",
												"docked" : 0
											}
, 											{
												"name" : "extra",
												"type" : "list",
												"digest" : "Extra",
												"docked" : 0
											}
 ],
										"helpname" : "unjoin",
										"aliasOf" : "unjoin",
										"classname" : "unjoin",
										"operator" : 0,
										"versionId" : 514688208,
										"changesPatcherIO" : 0
									}
,
									"text" : "unjoin 4"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-135",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1154.666701078414917, 1973.333392143249512, 243.200003623962402, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 8,
									"rnbo_uniqueid" : "t_obj-135",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (list).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (list).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "list",
												"digest" : "Output order 2 (list).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "list",
												"digest" : "Output order 1 (list).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t l l"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-122",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 4,
									"outlettype" : [ "", "", "", "" ],
									"patching_rect" : [ 1197.333369016647339, 2369.333403944969177, 272.5, 23.0 ],
									"rnbo_classname" : "unjoin",
									"rnbo_extra_attributes" : 									{
										"outsize" : 1.0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "unjoin_obj-122",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Input",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 2",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 3",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"extra" : 											{
												"attrOrProp" : 1,
												"digest" : "Extra",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"outlets" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets (items to break the list into)",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"outsize" : 											{
												"attrOrProp" : 2,
												"digest" : "Output size",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : "list",
												"digest" : "Input",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "list",
												"digest" : "Output 1",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "list",
												"digest" : "Output 2",
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "list",
												"digest" : "Output 3",
												"docked" : 0
											}
, 											{
												"name" : "extra",
												"type" : "list",
												"digest" : "Extra",
												"docked" : 0
											}
 ],
										"helpname" : "unjoin",
										"aliasOf" : "unjoin",
										"classname" : "unjoin",
										"operator" : 0,
										"versionId" : 514688208,
										"changesPatcherIO" : 0
									}
,
									"text" : "unjoin 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-121",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1197.333369016647339, 2321.333402514457703, 200.999981164932251, 23.0 ],
									"rnbo_classname" : "list.reg",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "list.reg_obj-121",
									"text" : "list.reg"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-86",
									"maxclass" : "newobj",
									"numinlets" : 4,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1066.666698455810547, 1590.666714072227478, 305.0, 23.0 ],
									"rnbo_classname" : "join",
									"rnbo_extra_attributes" : 									{
										"triggers" : "0"
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "join_obj-86",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "Combined items",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "reset",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"in0" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 0",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 1",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 2",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"in3" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 3",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"inlets" : 											{
												"attrOrProp" : 2,
												"digest" : "How many items to combine",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "Which inlets should trigger output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in0",
												"type" : "list",
												"digest" : "Input 0",
												"docked" : 0
											}
, 											{
												"name" : "in1",
												"type" : "list",
												"digest" : "Input 1",
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "list",
												"digest" : "Input 2",
												"docked" : 0
											}
, 											{
												"name" : "in3",
												"type" : "list",
												"digest" : "Input 3",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "Combined items",
												"docked" : 0
											}
 ],
										"helpname" : "join",
										"aliasOf" : "join",
										"classname" : "join",
										"operator" : 0,
										"versionId" : 762058701,
										"changesPatcherIO" : 0
									}
,
									"text" : "join 4"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-81",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 4,
									"outlettype" : [ "", "", "", "" ],
									"patching_rect" : [ 682.66668701171875, 701.333354234695435, 677.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 9,
									"rnbo_uniqueid" : "t_obj-81",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 4 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 3 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out4" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 4,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 4 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 3 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 3,
												"docked" : 0
											}
, 											{
												"name" : "out4",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 4,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i i i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-74",
									"linecount" : 4,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 1090.666699171066284, 1618.666714906692505, 46.0, 64.0 ],
									"text" : "pitch\nvel\ndur\nratchet"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-71",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 854.666692137718201, 356.00001060962677, 46.0, 23.0 ],
									"rnbo_classname" : "change",
									"rnbo_extra_attributes" : 									{
										"mode" : "default"
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "change_obj-71",
									"text" : "change"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-60",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 380.000011324882507, 733.333355188369751, 46.0, 23.0 ],
									"rnbo_classname" : "change",
									"rnbo_extra_attributes" : 									{
										"mode" : "default"
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "change_obj-60",
									"text" : "change"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-58",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 302.666675686836243, 949.333361625671387, 31.0, 23.0 ],
									"rnbo_classname" : "gate",
									"rnbo_extra_attributes" : 									{
										"outputs" : 1.0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "gate_obj-58",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"onoff" : 											{
												"attrOrProp" : 1,
												"digest" : "0 Closes gate, non-zero opens the corresponding gate outlet",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"outputs" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "onoff",
												"type" : "number",
												"digest" : "0 Closes gate, non-zero opens the corresponding gate outlet",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Incoming gated message",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Gated Output 1",
												"docked" : 0
											}
 ],
										"helpname" : "gate",
										"aliasOf" : "gate",
										"classname" : "gate",
										"operator" : 0,
										"versionId" : 1220277655,
										"changesPatcherIO" : 0
									}
,
									"text" : "gate"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-50",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 80.000002384185791, 1470.666710495948792, 52.0, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "list.rot_obj-50",
									"text" : "list.rot 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-51",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 96.000002861022949, 1429.333375930786133, 55.0, 21.0 ],
									"text" : "value col"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-52",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 80.000002384185791, 1389.333374738693237, 95.200001418590546, 23.0 ],
									"rnbo_classname" : "pack",
									"rnbo_extra_attributes" : 									{
										"length" : 0.0,
										"list" : ""
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "pack_obj-52",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "out",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"length" : 											{
												"attrOrProp" : 2,
												"digest" : "how many things to pack",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"list" : 											{
												"attrOrProp" : 2,
												"digest" : "the list to initialize the {@objectname} object with",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "number",
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "out",
												"docked" : 0
											}
 ],
										"helpname" : "pack",
										"aliasOf" : "pack",
										"classname" : "pack",
										"operator" : 0,
										"versionId" : 2113152561,
										"changesPatcherIO" : 0
									}
,
									"text" : "pack i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-53",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 81.333335757255554, 1238.666703581809998, 90.666669368743896, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 10,
									"rnbo_uniqueid" : "t_obj-53",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 3 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 3 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 3,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-54",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 80.000002384185791, 1341.333373308181763, 54.833334684371948, 23.0 ],
									"rnbo_classname" : "list.mth",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "list.mth_obj-54",
									"text" : "list.mth"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-56",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 81.333335757255554, 1286.666705012321472, 143.200002133846283, 23.0 ],
									"rnbo_classname" : "list.reg",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "list.reg_obj-56",
									"text" : "list.reg"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-48",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patcher" : 									{
										"fileversion" : 1,
										"appversion" : 										{
											"major" : 8,
											"minor" : 6,
											"revision" : 3,
											"architecture" : "x64",
											"modernui" : 1
										}
,
										"classnamespace" : "rnbo",
										"rect" : [ 116.0, 125.0, 1248.0, 904.0 ],
										"bglocked" : 0,
										"openinpresentation" : 0,
										"default_fontsize" : 12.0,
										"default_fontface" : 0,
										"default_fontname" : "Lato",
										"gridonopen" : 1,
										"gridsize" : [ 15.0, 15.0 ],
										"gridsnaponopen" : 1,
										"objectsnaponopen" : 1,
										"statusbarvisible" : 2,
										"toolbarvisible" : 1,
										"lefttoolbarpinned" : 0,
										"toptoolbarpinned" : 0,
										"righttoolbarpinned" : 0,
										"bottomtoolbarpinned" : 0,
										"toolbars_unpinned_last_save" : 0,
										"tallnewobj" : 0,
										"boxanimatetime" : 200,
										"enablehscroll" : 1,
										"enablevscroll" : 1,
										"devicewidth" : 0.0,
										"description" : "",
										"digest" : "",
										"tags" : "",
										"style" : "",
										"subpatcher_template" : "",
										"assistshowspatchername" : 0,
										"title" : "draw_col",
										"boxes" : [ 											{
												"box" : 												{
													"id" : "obj-13",
													"maxclass" : "newobj",
													"numinlets" : 2,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 6.666666865348816, 242.666673898696899, 58.0, 23.0 ],
													"rnbo_classname" : "append",
													"rnbo_extra_attributes" : 													{
														"hot" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "append_obj-13",
													"text" : "append 0"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-274",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 0,
													"patching_rect" : [ 50.0, 360.0, 183.0, 23.0 ],
													"rnbo_classname" : "outport",
													"rnbo_extra_attributes" : 													{
														"meta" : ""
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "outport_obj-274",
													"text" : "outport /grid-a/grid/led/level/col"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-246",
													"maxclass" : "newobj",
													"numinlets" : 6,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 87.0, 155.0, 75.0, 23.0 ],
													"rnbo_classname" : "scale",
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "scale_obj-246",
													"text" : "scale 0 7 8 1"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-198",
													"linecount" : 2,
													"maxclass" : "comment",
													"numinlets" : 1,
													"numoutlets" : 0,
													"patching_rect" : [ 71.0, 316.0, 97.0, 35.0 ],
													"text" : "col\nLED states of col"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-192",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 3,
													"outlettype" : [ "", "", "" ],
													"patching_rect" : [ 50.0, 100.0, 57.40000057220459, 23.0 ],
													"rnbo_classname" : "unjoin",
													"rnbo_extra_attributes" : 													{
														"outsize" : 1.0,
														"outlets" : 2.0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "unjoin_obj-192",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"input" : 															{
																"attrOrProp" : 1,
																"digest" : "Input",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"inlet" : 1,
																"type" : "list"
															}
,
															"out1" : 															{
																"attrOrProp" : 1,
																"digest" : "Output 1",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"out2" : 															{
																"attrOrProp" : 1,
																"digest" : "Output 2",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"extra" : 															{
																"attrOrProp" : 1,
																"digest" : "Extra",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"outlet" : 1,
																"type" : "list"
															}
,
															"outlets" : 															{
																"attrOrProp" : 2,
																"digest" : "Number of outlets (items to break the list into)",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "2"
															}
,
															"outsize" : 															{
																"attrOrProp" : 2,
																"digest" : "Output size",
																"defaultarg" : 2,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "1"
															}

														}
,
														"inputs" : [ 															{
																"name" : "input",
																"type" : "list",
																"digest" : "Input",
																"hot" : 1,
																"docked" : 0
															}
 ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : "list",
																"digest" : "Output 1",
																"docked" : 0
															}
, 															{
																"name" : "out2",
																"type" : "list",
																"digest" : "Output 2",
																"docked" : 0
															}
, 															{
																"name" : "extra",
																"type" : "list",
																"digest" : "Extra",
																"docked" : 0
															}
 ],
														"helpname" : "unjoin",
														"aliasOf" : "unjoin",
														"classname" : "unjoin",
														"operator" : 0,
														"versionId" : 514688208,
														"changesPatcherIO" : 0
													}
,
													"text" : "unjoin"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-191",
													"maxclass" : "newobj",
													"numinlets" : 2,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 50.0, 283.0, 57.40000057220459, 23.0 ],
													"rnbo_classname" : "list.join",
													"rnbo_extra_attributes" : 													{
														"hot" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "list.join_obj-191",
													"text" : "list.join"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-176",
													"maxclass" : "newobj",
													"numinlets" : 1,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patcher" : 													{
														"fileversion" : 1,
														"appversion" : 														{
															"major" : 8,
															"minor" : 6,
															"revision" : 3,
															"architecture" : "x64",
															"modernui" : 1
														}
,
														"classnamespace" : "rnbo",
														"rect" : [ 84.0, 150.0, 640.0, 480.0 ],
														"bglocked" : 0,
														"openinpresentation" : 0,
														"default_fontsize" : 12.0,
														"default_fontface" : 0,
														"default_fontname" : "Lato",
														"gridonopen" : 1,
														"gridsize" : [ 15.0, 15.0 ],
														"gridsnaponopen" : 1,
														"objectsnaponopen" : 1,
														"statusbarvisible" : 2,
														"toolbarvisible" : 1,
														"lefttoolbarpinned" : 0,
														"toptoolbarpinned" : 0,
														"righttoolbarpinned" : 0,
														"bottomtoolbarpinned" : 0,
														"toolbars_unpinned_last_save" : 0,
														"tallnewobj" : 0,
														"boxanimatetime" : 200,
														"enablehscroll" : 1,
														"enablevscroll" : 1,
														"devicewidth" : 0.0,
														"description" : "",
														"digest" : "",
														"tags" : "",
														"style" : "",
														"subpatcher_template" : "",
														"assistshowspatchername" : 0,
														"title" : "generate_col",
														"boxes" : [ 															{
																"box" : 																{
																	"id" : "obj-173",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.0, 308.800003111362457, 43.0, 23.0 ],
																	"rnbo_classname" : "list.rev",
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.rev_obj-173",
																	"text" : "list.rev"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-168",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 2,
																	"outlettype" : [ "", "" ],
																	"patching_rect" : [ 80.300000011920929, 100.0, 29.5, 23.0 ],
																	"rnbo_classname" : "t",
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "t_obj-168",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"out1" : 																			{
																				"attrOrProp" : 1,
																				"digest" : "Output order 2 (bang).",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"outlet" : 1,
																				"type" : "bang"
																			}
,
																			"out2" : 																			{
																				"attrOrProp" : 1,
																				"digest" : "Output order 1 (number).",
																				"defaultarg" : 2,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"outlet" : 1,
																				"type" : "number"
																			}
,
																			"triggers" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "list"
																			}

																		}
,
																		"inputs" : [ 																			{
																				"name" : "input",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "input to distribute",
																				"hot" : 1,
																				"docked" : 0
																			}
 ],
																		"outputs" : [ 																			{
																				"name" : "out1",
																				"type" : "bang",
																				"digest" : "Output order 2 (bang).",
																				"defaultarg" : 1,
																				"docked" : 0
																			}
, 																			{
																				"name" : "out2",
																				"type" : "number",
																				"digest" : "Output order 1 (number).",
																				"defaultarg" : 2,
																				"docked" : 0
																			}
 ],
																		"helpname" : "trigger",
																		"aliasOf" : "trigger",
																		"classname" : "t",
																		"operator" : 0,
																		"versionId" : -1133428571,
																		"changesPatcherIO" : 0
																	}
,
																	"text" : "t b i"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-163",
																	"maxclass" : "newobj",
																	"numinlets" : 2,
																	"numoutlets" : 2,
																	"outlettype" : [ "", "" ],
																	"patching_rect" : [ 50.800000011920929, 273.600002586841583, 59.0, 23.0 ],
																	"rnbo_classname" : "list.slice",
																	"rnbo_extra_attributes" : 																	{
																		"hot" : 0
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.slice_obj-163",
																	"text" : "list.slice 8"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-162",
																	"maxclass" : "newobj",
																	"numinlets" : 2,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.800000011920929, 221.600001811981201, 59.0, 23.0 ],
																	"rnbo_classname" : "list.rot",
																	"rnbo_extra_attributes" : 																	{
																		"hot" : 0
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "list.rot_obj-162",
																	"text" : "list.rot"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-161",
																	"maxclass" : "message",
																	"numinlets" : 2,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 50.800000011920929, 168.80000102519989, 166.0, 23.0 ],
																	"rnbo_classname" : "message",
																	"rnbo_extra_attributes" : 																	{
																		"text" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "message_obj-161",
																	"text" : "0 0 0 0 0 0 0 0 8 8 8 8 8 8 8 8"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-174",
																	"maxclass" : "newobj",
																	"numinlets" : 0,
																	"numoutlets" : 1,
																	"outlettype" : [ "" ],
																	"patching_rect" : [ 80.29997607907103, 40.000032596801702, 28.0, 23.0 ],
																	"rnbo_classname" : "in",
																	"rnbo_extra_attributes" : 																	{
																		"meta" : "",
																		"comment" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "in_obj-174",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"index" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "inlet number",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "number",
																				"mandatory" : 1
																			}
,
																			"comment" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "mouse over comment",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol"
																			}
,
																			"meta" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "A JSON formatted string containing metadata for use by the exported code",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol",
																				"defaultValue" : "",
																				"label" : "Metadata",
																				"displayorder" : 3
																			}

																		}
,
																		"inputs" : [  ],
																		"outputs" : [ 																			{
																				"name" : "out1",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "value from inlet with index 1",
																				"displayName" : "",
																				"docked" : 0
																			}
 ],
																		"helpname" : "in",
																		"aliasOf" : "in",
																		"classname" : "in",
																		"operator" : 0,
																		"versionId" : 1219109108,
																		"changesPatcherIO" : 1
																	}
,
																	"text" : "in 1"
																}

															}
, 															{
																"box" : 																{
																	"id" : "obj-175",
																	"maxclass" : "newobj",
																	"numinlets" : 1,
																	"numoutlets" : 0,
																	"patching_rect" : [ 49.999988079071045, 391.799959596801727, 36.0, 23.0 ],
																	"rnbo_classname" : "out",
																	"rnbo_extra_attributes" : 																	{
																		"meta" : "",
																		"comment" : ""
																	}
,
																	"rnbo_serial" : 1,
																	"rnbo_uniqueid" : "out_obj-175",
																	"rnboinfo" : 																	{
																		"needsInstanceInfo" : 1,
																		"argnames" : 																		{
																			"index" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "outlet number",
																				"defaultarg" : 1,
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "number",
																				"mandatory" : 1
																			}
,
																			"comment" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "mouse over comment",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol"
																			}
,
																			"meta" : 																			{
																				"attrOrProp" : 2,
																				"digest" : "A JSON formatted string containing metadata for use by the exported code",
																				"isalias" : 0,
																				"aliases" : [  ],
																				"settable" : 1,
																				"attachable" : 0,
																				"isparam" : 0,
																				"deprecated" : 0,
																				"type" : "symbol",
																				"defaultValue" : "",
																				"label" : "Metadata",
																				"displayorder" : 3
																			}

																		}
,
																		"inputs" : [ 																			{
																				"name" : "in1",
																				"type" : [ "bang", "number", "list" ],
																				"digest" : "value sent to outlet with index 1",
																				"displayName" : "",
																				"hot" : 1,
																				"docked" : 0
																			}
 ],
																		"outputs" : [  ],
																		"helpname" : "out",
																		"aliasOf" : "out",
																		"classname" : "out",
																		"operator" : 0,
																		"versionId" : -735743983,
																		"changesPatcherIO" : 1
																	}
,
																	"text" : "out 1"
																}

															}
 ],
														"lines" : [ 															{
																"patchline" : 																{
																	"destination" : [ "obj-162", 0 ],
																	"source" : [ "obj-161", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-163", 0 ],
																	"source" : [ "obj-162", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-173", 0 ],
																	"source" : [ "obj-163", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-161", 0 ],
																	"source" : [ "obj-168", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-162", 1 ],
																	"source" : [ "obj-168", 1 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-175", 0 ],
																	"source" : [ "obj-173", 0 ]
																}

															}
, 															{
																"patchline" : 																{
																	"destination" : [ "obj-168", 0 ],
																	"source" : [ "obj-174", 0 ]
																}

															}
 ],
														"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
														"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
														"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
														"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
														"bgfillcolor_type" : "color",
														"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
														"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
														"bgfillcolor_angle" : 270.0,
														"bgfillcolor_proportion" : 0.39,
														"bgfillcolor_autogradient" : 0.0
													}
,
													"patching_rect" : [ 87.0, 236.0, 85.0, 23.0 ],
													"rnbo_classname" : "p",
													"rnbo_extra_attributes" : 													{
														"receivemode" : "local",
														"polyphony" : -1.0,
														"args" : [  ],
														"exposevoiceparams" : 0,
														"notecontroller" : 0,
														"voicecontrol" : "simple"
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "generate_col",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"target" : 															{
																"attrOrProp" : 1,
																"digest" : "target",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 0,
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "0"
															}
,
															"mute" : 															{
																"attrOrProp" : 1,
																"digest" : "mute",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number"
															}
,
															"__probingout1" : 															{
																"attrOrProp" : 1,
																"digest" : "__probingout1",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "signal"
															}
,
															"voicestatus" : 															{
																"attrOrProp" : 1,
																"digest" : "voicestatus",
																"isalias" : 0,
																"aliases" : [  ],
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "list"
															}
,
															"activevoices" : 															{
																"attrOrProp" : 1,
																"digest" : "activevoices",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 0,
																"attachable" : 1,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number"
															}
,
															"polyphony" : 															{
																"attrOrProp" : 2,
																"digest" : "Polyphony of the subpatcher.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"defaultValue" : "-1"
															}
,
															"exposevoiceparams" : 															{
																"attrOrProp" : 2,
																"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "bool",
																"defaultValue" : "false"
															}
,
															"title" : 															{
																"attrOrProp" : 2,
																"digest" : "Title of the subpatcher",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"file" : 															{
																"attrOrProp" : 2,
																"digest" : "rnbo file to load",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"voicecontrol" : 															{
																"attrOrProp" : 2,
																"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"enum" : [ "simple", "user" ],
																"type" : "enum",
																"defaultValue" : "simple"
															}
,
															"notecontroller" : 															{
																"attrOrProp" : 2,
																"digest" : "DEPRECATED. Use voicecontrol instead.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}
,
															"receivemode" : 															{
																"attrOrProp" : 2,
																"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"enum" : [ "local", "compensated" ],
																"type" : "enum",
																"defaultValue" : "local"
															}
,
															"args" : 															{
																"attrOrProp" : 2,
																"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"doNotShowInMaxInspector" : 1
															}

														}
,
														"inputs" : [ 															{
																"name" : "in1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "in1",
																"displayName" : "",
																"hot" : 1,
																"docked" : 0
															}
 ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "out1",
																"displayName" : "",
																"docked" : 0
															}
 ],
														"helpname" : "patcher",
														"aliasOf" : "rnbo",
														"classname" : "p",
														"operator" : 0,
														"versionId" : 88895198,
														"changesPatcherIO" : 0
													}
,
													"text" : "p generate_col",
													"varname" : "generate_col"
												}

											}
, 											{
												"box" : 												{
													"format" : 0,
													"id" : "obj-171",
													"maxclass" : "number",
													"maximum" : 8,
													"minimum" : 0,
													"numinlets" : 1,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"parameter_enable" : 0,
													"patching_rect" : [ 87.0, 192.0, 50.0, 23.0 ],
													"rnbo_classname" : "number",
													"rnbo_extra_attributes" : 													{
														"minimum" : 0,
														"maximum" : 8,
														"order" : "",
														"initialFormat" : "integer",
														"preset" : 0
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "number_obj-171"
												}

											}
, 											{
												"box" : 												{
													"id" : "obj-47",
													"maxclass" : "newobj",
													"numinlets" : 0,
													"numoutlets" : 1,
													"outlettype" : [ "" ],
													"patching_rect" : [ 50.0, 40.0, 28.0, 23.0 ],
													"rnbo_classname" : "in",
													"rnbo_extra_attributes" : 													{
														"meta" : "",
														"comment" : ""
													}
,
													"rnbo_serial" : 1,
													"rnbo_uniqueid" : "in_obj-47",
													"rnboinfo" : 													{
														"needsInstanceInfo" : 1,
														"argnames" : 														{
															"index" : 															{
																"attrOrProp" : 2,
																"digest" : "inlet number",
																"defaultarg" : 1,
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "number",
																"mandatory" : 1
															}
,
															"comment" : 															{
																"attrOrProp" : 2,
																"digest" : "mouse over comment",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol"
															}
,
															"meta" : 															{
																"attrOrProp" : 2,
																"digest" : "A JSON formatted string containing metadata for use by the exported code",
																"isalias" : 0,
																"aliases" : [  ],
																"settable" : 1,
																"attachable" : 0,
																"isparam" : 0,
																"deprecated" : 0,
																"type" : "symbol",
																"defaultValue" : "",
																"label" : "Metadata",
																"displayorder" : 3
															}

														}
,
														"inputs" : [  ],
														"outputs" : [ 															{
																"name" : "out1",
																"type" : [ "bang", "number", "list" ],
																"digest" : "value from inlet with index 1",
																"displayName" : "",
																"docked" : 0
															}
 ],
														"helpname" : "in",
														"aliasOf" : "in",
														"classname" : "in",
														"operator" : 0,
														"versionId" : 1219109108,
														"changesPatcherIO" : 1
													}
,
													"text" : "in 1"
												}

											}
 ],
										"lines" : [ 											{
												"patchline" : 												{
													"destination" : [ "obj-191", 0 ],
													"source" : [ "obj-13", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-176", 0 ],
													"source" : [ "obj-171", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-191", 1 ],
													"source" : [ "obj-176", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-274", 0 ],
													"source" : [ "obj-191", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-13", 0 ],
													"source" : [ "obj-192", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-246", 0 ],
													"source" : [ "obj-192", 1 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-171", 0 ],
													"source" : [ "obj-246", 0 ]
												}

											}
, 											{
												"patchline" : 												{
													"destination" : [ "obj-192", 0 ],
													"source" : [ "obj-47", 0 ]
												}

											}
 ],
										"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
										"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
										"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
										"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
										"bgfillcolor_type" : "color",
										"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
										"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
										"bgfillcolor_angle" : 270.0,
										"bgfillcolor_proportion" : 0.39,
										"bgfillcolor_autogradient" : 0.0
									}
,
									"patching_rect" : [ 645.333352565765381, 1162.666701316833496, 65.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 8,
									"rnbo_uniqueid" : "draw_col[2]",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [  ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p draw_col",
									"varname" : "draw_col[2]"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-46",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 370.666677713394165, 1386.666707992553711, 52.0, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "list.rot_obj-46",
									"text" : "list.rot 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-45",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 680.000020265579224, 1132.000033736228943, 54.0, 21.0 ],
									"text" : "col value"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-43",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 400.000011920928955, 1345.333373427391052, 55.0, 21.0 ],
									"text" : "value col"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-41",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 370.666677713394165, 1306.66670560836792, 90.33333545923233, 23.0 ],
									"rnbo_classname" : "pack",
									"rnbo_extra_attributes" : 									{
										"length" : 0.0,
										"list" : ""
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "pack_obj-41",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "out",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"length" : 											{
												"attrOrProp" : 2,
												"digest" : "how many things to pack",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"list" : 											{
												"attrOrProp" : 2,
												"digest" : "the list to initialize the {@objectname} object with",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "number",
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "out",
												"docked" : 0
											}
 ],
										"helpname" : "pack",
										"aliasOf" : "pack",
										"classname" : "pack",
										"operator" : 0,
										"versionId" : 2113152561,
										"changesPatcherIO" : 0
									}
,
									"text" : "pack i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-35",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 370.666677713394165, 1174.666701674461365, 90.666669368743896, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 11,
									"rnbo_uniqueid" : "t_obj-35",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 3 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out3" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 3 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 3,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-34",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 370.666677713394165, 1262.666704297065735, 54.833334684371948, 23.0 ],
									"rnbo_classname" : "list.mth",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "list.mth_obj-34",
									"text" : "list.mth"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-27",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 370.666677713394165, 1224.000036478042603, 147.200002193450928, 23.0 ],
									"rnbo_classname" : "list.reg",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "list.reg_obj-27",
									"text" : "list.reg"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-24",
									"maxclass" : "toggle",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "int" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 380.000011324882507, 881.333359599113464, 24.0, 24.0 ],
									"rnbo_classname" : "toggle",
									"rnbo_extra_attributes" : 									{
										"order" : "",
										"preset" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "toggle_obj-24"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-21",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 380.000011324882507, 830.666691422462463, 29.5, 23.0 ],
									"rnbo_classname" : "==",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "==_obj-21",
									"text" : "=="
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-11",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 380.000011324882507, 778.666689872741699, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 15,
									"rnbo_uniqueid" : "number_obj-11"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-5",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 380.000011324882507, 694.666687369346619, 31.0, 23.0 ],
									"rnbo_classname" : "/",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "/_obj-5",
									"text" : "/ 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-10",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 2137.333397030830383, 365.333344221115112, 29.5, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 12,
									"rnbo_uniqueid" : "t_obj-10",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 4"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-9",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1826.666721105575562, 365.333344221115112, 29.5, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 13,
									"rnbo_uniqueid" : "t_obj-9",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 4"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-4",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 401.333345293998718, 179.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 9,
									"rnbo_uniqueid" : "p_obj-4",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.euclidean-modulo"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-3",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 752.000022411346436, 542.666682839393616, 29.5, 23.0 ],
									"rnbo_classname" : "+",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "+_obj-3",
									"text" : "+ 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-354",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 292.000008702278137, 36.0, 23.0 ],
									"rnbo_classname" : "trunc",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "trunc_obj-354",
									"text" : "trunc"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-353",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1825.333387732505798, 293.3333420753479, 36.0, 23.0 ],
									"rnbo_classname" : "trunc",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "trunc_obj-353",
									"text" : "trunc"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-348",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 2137.333397030830383, 509.333348512649536, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 16,
									"rnbo_uniqueid" : "number_obj-348"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-347",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1825.333387732505798, 509.333348512649536, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 17,
									"rnbo_uniqueid" : "number_obj-347"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-333",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 684.000020384788513, 45.0, 23.0 ],
									"rnbo_classname" : "pack",
									"rnbo_extra_attributes" : 									{
										"length" : 0.0,
										"list" : ""
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "pack_obj-333",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "out",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"length" : 											{
												"attrOrProp" : 2,
												"digest" : "how many things to pack",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"list" : 											{
												"attrOrProp" : 2,
												"digest" : "the list to initialize the {@objectname} object with",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "number",
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "out",
												"docked" : 0
											}
 ],
										"helpname" : "pack",
										"aliasOf" : "pack",
										"classname" : "pack",
										"operator" : 0,
										"versionId" : 2113152561,
										"changesPatcherIO" : 0
									}
,
									"text" : "pack i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-334",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 720.000021457672119, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "prepend_obj-334",
									"text" : "prepend 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-335",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 752.000022411346436, 58.0, 23.0 ],
									"rnbo_classname" : "append",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "append_obj-335",
									"text" : "append 8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-336",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 196.000005841255188, 148.0, 23.0 ],
									"rnbo_classname" : "accum",
									"rnbo_extra_attributes" : 									{
										"hot" : 0,
										"min" : 0.0
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "accum_obj-336",
									"text" : "accum 0 @resetmode post"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-337",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 2137.333397030830383, 333.333343267440796, 46.0, 23.0 ],
									"rnbo_classname" : "change",
									"rnbo_extra_attributes" : 									{
										"mode" : "default"
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "change_obj-337",
									"text" : "change"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-338",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 2237.333400011062622, 648.000019311904907, 114.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "outport_obj-338",
									"text" : "outport /arc/ring/all"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-339",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2237.333400011062622, 596.000017762184143, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "prepend_obj-339",
									"text" : "prepend 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-340",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 2137.333397030830383, 560.000016689300537, 111.333336651325226, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 14,
									"rnbo_uniqueid" : "t_obj-340",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-341",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2170.666731357574463, 648.000019311904907, 32.0, 23.0 ],
									"rnbo_classname" : "+",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "+_obj-341",
									"text" : "+ 15"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-342",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 596.000017762184143, 31.0, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "*_obj-342",
									"text" : "* 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-343",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 2137.333397030830383, 780.000023245811462, 132.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "outport_obj-343",
									"text" : "outport /arc/ring/range"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-344",
									"maxclass" : "newobj",
									"numinlets" : 6,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 2137.333397030830383, 233.333340287208557, 96.0, 23.0 ],
									"rnbo_classname" : "scale",
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "scale_obj-344",
									"text" : "scale 0 1000 0 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-329",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1826.666721105575562, 401.333345293998718, 179.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 10,
									"rnbo_uniqueid" : "p_obj-329",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.euclidean-modulo"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-314",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1826.666721105575562, 684.000020384788513, 45.0, 23.0 ],
									"rnbo_classname" : "pack",
									"rnbo_extra_attributes" : 									{
										"length" : 0.0,
										"list" : ""
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "pack_obj-314",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "out",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"in2" : 											{
												"attrOrProp" : 1,
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"length" : 											{
												"attrOrProp" : 2,
												"digest" : "how many things to pack",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"list" : 											{
												"attrOrProp" : 2,
												"digest" : "the list to initialize the {@objectname} object with",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : "number",
												"digest" : "number to be list element 1",
												"defaultarg" : 1,
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : "number",
												"digest" : "number to be list element 2",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "out",
												"docked" : 0
											}
 ],
										"helpname" : "pack",
										"aliasOf" : "pack",
										"classname" : "pack",
										"operator" : 0,
										"versionId" : 2113152561,
										"changesPatcherIO" : 0
									}
,
									"text" : "pack i i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-313",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1826.666721105575562, 717.333354711532593, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "prepend_obj-313",
									"text" : "prepend 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-311",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1826.666721105575562, 749.333355665206909, 58.0, 23.0 ],
									"rnbo_classname" : "append",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "append_obj-311",
									"text" : "append 8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-309",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1817.333387494087219, 196.000005841255188, 148.0, 23.0 ],
									"rnbo_classname" : "accum",
									"rnbo_extra_attributes" : 									{
										"hot" : 0,
										"min" : 0.0
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "accum_obj-309",
									"text" : "accum 0 @resetmode post"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-308",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 1825.333387732505798, 325.333343029022217, 46.0, 23.0 ],
									"rnbo_classname" : "change",
									"rnbo_extra_attributes" : 									{
										"mode" : "default"
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "change_obj-308",
									"text" : "change"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-306",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 1918.666723847389221, 645.333352565765381, 114.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "outport_obj-306",
									"text" : "outport /arc/ring/all"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-305",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1918.666723847389221, 593.333351016044617, 62.0, 23.0 ],
									"rnbo_classname" : "prepend",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 8,
									"rnbo_uniqueid" : "prepend_obj-305",
									"text" : "prepend 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-301",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1826.666721105575562, 560.000016689300537, 111.333336651325226, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 15,
									"rnbo_uniqueid" : "t_obj-301",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "number",
												"digest" : "Output order 2 (number).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t i 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-303",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1853.333388566970825, 645.333352565765381, 32.0, 23.0 ],
									"rnbo_classname" : "+",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "+_obj-303",
									"text" : "+ 15"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-23",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1826.666721105575562, 593.333351016044617, 31.0, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "*_obj-23",
									"text" : "* 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-20",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 1826.666721105575562, 780.000023245811462, 132.0, 23.0 ],
									"rnbo_classname" : "outport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 8,
									"rnbo_uniqueid" : "outport_obj-20",
									"text" : "outport /arc/ring/range"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-298",
									"maxclass" : "newobj",
									"numinlets" : 6,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1817.333387494087219, 233.333340287208557, 96.0, 23.0 ],
									"rnbo_classname" : "scale",
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "scale_obj-298",
									"text" : "scale 0 1000 0 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-294",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 641.333352446556091, 581.333350658416748, 29.5, 23.0 ],
									"rnbo_classname" : "i",
									"rnbo_extra_attributes" : 									{
										"initial" : 0.0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "i_obj-294",
									"text" : "i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-293",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 840.000025033950806, 418.66667914390564, 29.5, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 16,
									"rnbo_uniqueid" : "t_obj-293",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-288",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 794.666690349578857, 902.666693568229675, 29.5, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "*_obj-288",
									"text" : "* -1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-252",
									"maxclass" : "newobj",
									"numinlets" : 5,
									"numoutlets" : 5,
									"outlettype" : [ "", "", "", "", "" ],
									"patching_rect" : [ 641.333352446556091, 640.000019073486328, 844.000012576580048, 23.0 ],
									"rnbo_classname" : "sel",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "sel_obj-252",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Number to test",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number"
											}
,
											"test1" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (1) to Match",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"test2" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (2) to Match",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "1"
											}
,
											"test3" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (3) to Match",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"test4" : 											{
												"attrOrProp" : 1,
												"digest" : "Set Value (4) to Match",
												"defaultarg" : 4,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "3"
											}
,
											"match1" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 0",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match2" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match3" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 2",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"match4" : 											{
												"attrOrProp" : 1,
												"digest" : "Bang if input matches 3",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"nomatch" : 											{
												"attrOrProp" : 1,
												"digest" : "Input if Input Doesn't Match",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "number", "bang" ],
												"digest" : "Number to test",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "test1",
												"type" : "number",
												"digest" : "Set Value (1) to Match",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "test2",
												"type" : "number",
												"digest" : "Set Value (2) to Match",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "test3",
												"type" : "number",
												"digest" : "Set Value (3) to Match",
												"defaultarg" : 3,
												"docked" : 0
											}
, 											{
												"name" : "test4",
												"type" : "number",
												"digest" : "Set Value (4) to Match",
												"defaultarg" : 4,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : "bang",
												"digest" : "Bang if input matches 0",
												"docked" : 0
											}
, 											{
												"name" : "match2",
												"type" : "bang",
												"digest" : "Bang if input matches 1",
												"docked" : 0
											}
, 											{
												"name" : "match3",
												"type" : "bang",
												"digest" : "Bang if input matches 2",
												"docked" : 0
											}
, 											{
												"name" : "match4",
												"type" : "bang",
												"digest" : "Bang if input matches 3",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "number", "bang" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "select",
										"aliasOf" : "select",
										"classname" : "sel",
										"operator" : 0,
										"versionId" : 902197102,
										"changesPatcherIO" : 0
									}
,
									"text" : "sel 0 1 2 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-221",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 645.333352565765381, 445.333346605300903, 75.800000846385956, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 17,
									"rnbo_uniqueid" : "t_obj-221",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (list).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "list",
												"digest" : "Output order 1 (list).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b l"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-194",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 666.666686534881592, 1044.000031113624573, 90.0, 21.0 ],
									"text" : "list of 16 values"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-190",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 645.333352565765381, 1100.000032782554626, 67.0, 23.0 ],
									"rnbo_classname" : "listfunnel",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "listfunnel_obj-190",
									"text" : "listfunnel 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-182",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 645.333352565765381, 989.333362817764282, 66.0, 23.0 ],
									"rnbo_classname" : "list.slice",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "list.slice_obj-182",
									"text" : "list.slice 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-178",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 645.333352565765381, 938.666694641113281, 166.400002479553223, 23.0 ],
									"rnbo_classname" : "list.rot",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "list.rot_obj-178",
									"text" : "list.rot"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-158",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1197.333369016647339, 2426.666738986968994, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 18,
									"rnbo_uniqueid" : "number_obj-158"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-157",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1281.333371520042419, 2426.666738986968994, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 19,
									"rnbo_uniqueid" : "number_obj-157"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-156",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1365.3333740234375, 2426.666738986968994, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 20,
									"rnbo_uniqueid" : "number_obj-156"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-111",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1422.666709065437317, 1012.000030159950256, 43.0, 23.0 ],
									"rnbo_classname" : "list.rev",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "list.rev_obj-111",
									"text" : "list.rev"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-112",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1422.666709065437317, 940.000028014183044, 56.0, 23.0 ],
									"rnbo_classname" : "loadbang",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "loadbang_obj-112",
									"text" : "loadbang"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-115",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1362.666707277297974, 1005.33336329460144, 47.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 18,
									"rnbo_uniqueid" : "t_obj-115",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-116",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1362.666707277297974, 1112.000033140182495, 47.0, 23.0 ],
									"rnbo_classname" : "list.mth",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "list.mth_obj-116",
									"text" : "list.mth"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-118",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1422.666709065437317, 976.00002908706665, 95.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 11,
									"rnbo_uniqueid" : "message_obj-118",
									"text" : "-2 -1 0 1 2 3 4 5"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-120",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1362.666707277297974, 1060.000031590461731, 80.0, 23.0 ],
									"rnbo_classname" : "list.reg",
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "list.reg_obj-120",
									"text" : "list.reg"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-150",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1362.666707277297974, 952.000028371810913, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 21,
									"rnbo_uniqueid" : "number_obj-150"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-110",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 936.000027894973755, 1033.333364129066467, 43.0, 23.0 ],
									"rnbo_classname" : "list.rev",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "list.rev_obj-110",
									"text" : "list.rev"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-96",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1182.666701912879944, 1036.000030875205994, 43.0, 23.0 ],
									"rnbo_classname" : "list.rev",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "list.rev_obj-96",
									"text" : "list.rev"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-77",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1182.666701912879944, 957.333361864089966, 56.0, 23.0 ],
									"rnbo_classname" : "loadbang",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "loadbang_obj-77",
									"text" : "loadbang"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-78",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1109.333366394042969, 1033.333364129066467, 47.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 19,
									"rnbo_uniqueid" : "t_obj-78",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-79",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1109.333366394042969, 1154.666701078414917, 47.0, 23.0 ],
									"rnbo_classname" : "list.mth",
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "list.mth_obj-79",
									"text" : "list.mth"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-83",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1182.666701912879944, 998.666696429252625, 141.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 12,
									"rnbo_uniqueid" : "message_obj-83",
									"text" : "0 16 32 48 64 80 96 112"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-84",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1109.333366394042969, 1086.666699051856995, 91.780815243721008, 23.0 ],
									"rnbo_classname" : "list.reg",
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "list.reg_obj-84",
									"text" : "list.reg"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-85",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 1109.333366394042969, 982.666695952415466, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 22,
									"rnbo_uniqueid" : "number_obj-85"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-76",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 349.333343744277954, 445.333346605300903, 163.0, 23.0 ],
									"rnbo_classname" : "metro",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "metro_obj-76",
									"text" : "metro 16n @lock 1 @active 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-55",
									"maxclass" : "newobj",
									"numinlets" : 4,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1301.333372116088867, 769.333356261253357, 168.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 11,
									"rnbo_uniqueid" : "p_obj-55",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in3",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in4",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in4",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out2",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.funbuff.rnbopat"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-72",
									"maxclass" : "newobj",
									"numinlets" : 4,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1081.333365559577942, 769.333356261253357, 168.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 12,
									"rnbo_uniqueid" : "p_obj-72",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in3",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in4",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in4",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out2",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.funbuff.rnbopat"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-40",
									"maxclass" : "newobj",
									"numinlets" : 4,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 869.333359241485596, 780.000023245811462, 168.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 13,
									"rnbo_uniqueid" : "p_obj-40",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in3",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in4",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in4",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out2",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.funbuff.rnbopat"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-167",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "signal", "signal", "" ],
									"patching_rect" : [ 1197.333369016647339, 2217.333399415016174, 143.0, 23.0 ],
									"rnbo_classname" : "subdiv~",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "subdiv~_obj-167",
									"text" : "subdiv~ 1 @syncupdate 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-166",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "signal" ],
									"patching_rect" : [ 1260.000037550926208, 2141.333397150039673, 120.0, 23.0 ],
									"rnbo_classname" : "phasor~",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "phasor~_obj-166",
									"text" : "phasor~ 16n @lock 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-152",
									"linecount" : 2,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 826.666691303253174, 497.333348155021667, 55.0, 35.0 ],
									"text" : "parameter (0-3)"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-153",
									"maxclass" : "flonum",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 757.333355903625488, 490.666681289672852, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "float",
										"preset" : 0
									}
,
									"rnbo_serial" : 23,
									"rnbo_uniqueid" : "number_obj-153"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-151",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 906.666693687438965, 222.666673302650452, 55.0, 21.0 ],
									"text" : "page 0-3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-149",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 4,
									"outlettype" : [ "", "", "", "" ],
									"patching_rect" : [ 749.333355665206909, 581.333350658416748, 566.0, 23.0 ],
									"rnbo_classname" : "gate",
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "gate_obj-149",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"onoff" : 											{
												"attrOrProp" : 1,
												"digest" : "0 Closes gate, non-zero opens the corresponding gate outlet",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"outputs" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "onoff",
												"type" : "number",
												"digest" : "0 Closes gate, non-zero opens the corresponding gate outlet",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Incoming gated message",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Gated Output 1",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Gated Output 2",
												"docked" : 0
											}
, 											{
												"name" : "out3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Gated Output 3",
												"docked" : 0
											}
, 											{
												"name" : "out4",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Gated Output 4",
												"docked" : 0
											}
 ],
										"helpname" : "gate",
										"aliasOf" : "gate",
										"classname" : "gate",
										"operator" : 0,
										"versionId" : 1220277655,
										"changesPatcherIO" : 0
									}
,
									"text" : "gate 4 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-107",
									"maxclass" : "newobj",
									"numinlets" : 3,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 1197.333369016647339, 2477.333407163619995, 188.0, 23.0 ],
									"rnbo_classname" : "makenote",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "makenote_obj-107",
									"text" : "makenote 64 120 @repeatmode 1"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-105",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 936.000027894973755, 893.333359956741333, 56.0, 23.0 ],
									"rnbo_classname" : "loadbang",
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "loadbang_obj-105",
									"text" : "loadbang"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-103",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 874.666692733764648, 1021.333363771438599, 50.0, 23.0 ],
									"rnbo_classname" : "t",
									"rnbo_serial" : 20,
									"rnbo_uniqueid" : "t_obj-103",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "bang"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "number"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "The number of arguments determines the number of outlets. \t\t\t\t\t\tEach outlet sends out either a whole number, float, bang or list, \t\t\t\t\t\tas identified by symbol arguments (i, f, b, l). \t\t\t\t\t\tIf there are no arguments, there are two outlets, both of which send a float.",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "bang", "number", "list" ],
												"digest" : "input to distribute",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "bang",
												"digest" : "Output order 2 (bang).",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "number",
												"digest" : "Output order 1 (number).",
												"defaultarg" : 2,
												"docked" : 0
											}
 ],
										"helpname" : "trigger",
										"aliasOf" : "trigger",
										"classname" : "t",
										"operator" : 0,
										"versionId" : -1133428571,
										"changesPatcherIO" : 0
									}
,
									"text" : "t b i"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-101",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 874.666692733764648, 1162.666701316833496, 47.0, 23.0 ],
									"rnbo_classname" : "list.mth",
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "list.mth_obj-101",
									"text" : "list.mth"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-100",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 936.000027894973755, 928.000027656555176, 99.0, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 13,
									"rnbo_uniqueid" : "message_obj-100",
									"text" : "-7 -4 -1 0 2 3 4 5"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-98",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 874.666692733764648, 1110.666699767112732, 80.166635870933533, 23.0 ],
									"rnbo_classname" : "list.reg",
									"rnbo_serial" : 6,
									"rnbo_uniqueid" : "list.reg_obj-98",
									"text" : "list.reg"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-97",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 874.666692733764648, 974.666695713996887, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 24,
									"rnbo_uniqueid" : "number_obj-97"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-80",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 645.333352565765381, 400.000011920928955, 38.0, 23.0 ],
									"rnbo_classname" : "join",
									"rnbo_extra_attributes" : 									{
										"triggers" : "0"
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "join_obj-80",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"out" : 											{
												"attrOrProp" : 1,
												"digest" : "Combined items",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"reset" : 											{
												"attrOrProp" : 1,
												"digest" : "reset",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bang"
											}
,
											"in0" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 0",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"in1" : 											{
												"attrOrProp" : 1,
												"digest" : "Input 1",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list",
												"defaultValue" : "0"
											}
,
											"inlets" : 											{
												"attrOrProp" : 2,
												"digest" : "How many items to combine",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"triggers" : 											{
												"attrOrProp" : 2,
												"digest" : "Which inlets should trigger output",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list",
												"defaultValue" : "0"
											}

										}
,
										"inputs" : [ 											{
												"name" : "in0",
												"type" : "list",
												"digest" : "Input 0",
												"docked" : 0
											}
, 											{
												"name" : "in1",
												"type" : "list",
												"digest" : "Input 1",
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out",
												"type" : "list",
												"digest" : "Combined items",
												"docked" : 0
											}
 ],
										"helpname" : "join",
										"aliasOf" : "join",
										"classname" : "join",
										"operator" : 0,
										"versionId" : 762058701,
										"changesPatcherIO" : 0
									}
,
									"text" : "join 2"
								}

							}
, 							{
								"box" : 								{
									"format" : 0,
									"id" : "obj-75",
									"maxclass" : "number",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 850.666692018508911, 309.333342552185059, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : "<none>",
										"maximum" : "<none>",
										"order" : "",
										"initialFormat" : "integer",
										"preset" : 0
									}
,
									"rnbo_serial" : 25,
									"rnbo_uniqueid" : "number_obj-75"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-70",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 846.666691899299622, 268.0000079870224, 31.0, 23.0 ],
									"rnbo_classname" : "*",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 7,
									"rnbo_uniqueid" : "*_obj-70",
									"text" : "* 16"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-68",
									"maxclass" : "flonum",
									"maximum" : 3.0,
									"minimum" : 0.0,
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"parameter_enable" : 0,
									"patching_rect" : [ 846.666691899299622, 221.333339929580688, 50.0, 23.0 ],
									"rnbo_classname" : "number",
									"rnbo_extra_attributes" : 									{
										"minimum" : 0.0,
										"maximum" : 3.0,
										"order" : "",
										"initialFormat" : "float",
										"preset" : 0
									}
,
									"rnbo_serial" : 26,
									"rnbo_uniqueid" : "number_obj-68"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-66",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 645.333352565765381, 356.00001060962677, 174.0, 23.0 ],
									"rnbo_classname" : "+",
									"rnbo_extra_attributes" : 									{
										"hot" : 0
									}
,
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "+_obj-66",
									"text" : "+ 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-15",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 645.333352565765381, 304.000009059906006, 51.0, 23.0 ],
									"rnbo_classname" : "unjoin",
									"rnbo_extra_attributes" : 									{
										"outsize" : 1.0
									}
,
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "unjoin_obj-15",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"input" : 											{
												"attrOrProp" : 1,
												"digest" : "Input",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "list"
											}
,
											"out1" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"out2" : 											{
												"attrOrProp" : 1,
												"digest" : "Output 2",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"extra" : 											{
												"attrOrProp" : 1,
												"digest" : "Extra",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"outlet" : 1,
												"type" : "list"
											}
,
											"outlets" : 											{
												"attrOrProp" : 2,
												"digest" : "Number of outlets (items to break the list into)",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"outsize" : 											{
												"attrOrProp" : 2,
												"digest" : "Output size",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "1"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : "list",
												"digest" : "Input",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : "list",
												"digest" : "Output 1",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : "list",
												"digest" : "Output 2",
												"docked" : 0
											}
, 											{
												"name" : "extra",
												"type" : "list",
												"digest" : "Extra",
												"docked" : 0
											}
 ],
										"helpname" : "unjoin",
										"aliasOf" : "unjoin",
										"classname" : "unjoin",
										"operator" : 0,
										"versionId" : 514688208,
										"changesPatcherIO" : 0
									}
,
									"text" : "unjoin 2"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-145",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1516.00004518032074, 662.666686415672302, 74.0, 23.0 ],
									"rnbo_classname" : "list.group",
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "list.group_obj-145",
									"text" : "list.group 64"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-117",
									"maxclass" : "newobj",
									"numinlets" : 1,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1506.666711568832397, 534.666682600975037, 56.0, 23.0 ],
									"rnbo_classname" : "loadbang",
									"rnbo_serial" : 5,
									"rnbo_uniqueid" : "loadbang_obj-117",
									"text" : "loadbang"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-114",
									"linecount" : 2,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 69.333335399627686, 77.333335638046265, 213.600003182888031, 35.0 ],
									"text" : "64 step polyphonic sequencer for monome 128 and arc"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-106",
									"maxclass" : "message",
									"numinlets" : 2,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1538.666712522506714, 625.333351969718933, 29.5, 23.0 ],
									"rnbo_classname" : "message",
									"rnbo_extra_attributes" : 									{
										"text" : ""
									}
,
									"rnbo_serial" : 14,
									"rnbo_uniqueid" : "message_obj-106",
									"text" : "7"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-104",
									"maxclass" : "newobj",
									"numinlets" : 2,
									"numoutlets" : 3,
									"outlettype" : [ "", "", "" ],
									"patching_rect" : [ 1506.666711568832397, 574.666683793067932, 51.0, 23.0 ],
									"rnbo_classname" : "uzi",
									"rnbo_serial" : 1,
									"rnbo_uniqueid" : "uzi_obj-104",
									"text" : "uzi 64 0"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-102",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 69.333335399627686, 52.000001549720764, 52.0, 21.0 ],
									"text" : "seq64M"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-87",
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 868.000025868415833, 172.000005125999451, 168.0, 21.0 ],
									"text" : "4 pages of 16 steps = 64 steps"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-16",
									"linecount" : 2,
									"maxclass" : "comment",
									"numinlets" : 1,
									"numoutlets" : 0,
									"patching_rect" : [ 773.333356380462646, 605.333351373672485, 38.0, 35.0 ],
									"text" : "pitch 1-8"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-14",
									"maxclass" : "newobj",
									"numinlets" : 4,
									"numoutlets" : 2,
									"outlettype" : [ "", "" ],
									"patching_rect" : [ 645.333352565765381, 769.333356261253357, 168.0, 23.0 ],
									"rnbo_classname" : "p",
									"rnbo_extra_attributes" : 									{
										"receivemode" : "local",
										"polyphony" : -1.0,
										"args" : [  ],
										"exposevoiceparams" : 0,
										"notecontroller" : 0,
										"voicecontrol" : "simple"
									}
,
									"rnbo_serial" : 14,
									"rnbo_uniqueid" : "p_obj-14",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"target" : 											{
												"attrOrProp" : 1,
												"digest" : "target",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"mute" : 											{
												"attrOrProp" : 1,
												"digest" : "mute",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"__probingout1" : 											{
												"attrOrProp" : 1,
												"digest" : "__probingout1",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "signal"
											}
,
											"voicestatus" : 											{
												"attrOrProp" : 1,
												"digest" : "voicestatus",
												"isalias" : 0,
												"aliases" : [  ],
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "list"
											}
,
											"activevoices" : 											{
												"attrOrProp" : 1,
												"digest" : "activevoices",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 0,
												"attachable" : 1,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number"
											}
,
											"polyphony" : 											{
												"attrOrProp" : 2,
												"digest" : "Polyphony of the subpatcher.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "number",
												"defaultValue" : "-1"
											}
,
											"exposevoiceparams" : 											{
												"attrOrProp" : 2,
												"digest" : "Expose per voice versions of the contained parameters (only valid in polyphonic subpatchers).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "bool",
												"defaultValue" : "false"
											}
,
											"title" : 											{
												"attrOrProp" : 2,
												"digest" : "Title of the subpatcher",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"file" : 											{
												"attrOrProp" : 2,
												"digest" : "rnbo file to load",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"voicecontrol" : 											{
												"attrOrProp" : 2,
												"digest" : "Chooses the way that polyphonic voices are controlled. 'simple' (or 'midi') will automatically allocate voices for \tincoming MIDI notes. Setting it to 'user' (or 'none') will switch off MIDI \tvoice allocation and start with all voices unmuted.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "simple", "user" ],
												"type" : "enum",
												"defaultValue" : "simple"
											}
,
											"notecontroller" : 											{
												"attrOrProp" : 2,
												"digest" : "DEPRECATED. Use voicecontrol instead.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}
,
											"receivemode" : 											{
												"attrOrProp" : 2,
												"digest" : "Do receive~ objects get the signal from a send~ inside the patcher directly (without latency), or compensated (with latency, aligned with all other voices).",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"enum" : [ "local", "compensated" ],
												"type" : "enum",
												"defaultValue" : "local"
											}
,
											"args" : 											{
												"attrOrProp" : 2,
												"digest" : "Replacement args for the subpatcher, everything named #1, #2 etc. will be replaced with the according argument.",
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"type" : "symbol",
												"doNotShowInMaxInspector" : 1
											}

										}
,
										"inputs" : [ 											{
												"name" : "in1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in1",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in2",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in3",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "in4",
												"type" : [ "bang", "number", "list" ],
												"digest" : "in4",
												"displayName" : "",
												"hot" : 1,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "out1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out1",
												"displayName" : "",
												"docked" : 0
											}
, 											{
												"name" : "out2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "out2",
												"displayName" : "",
												"docked" : 0
											}
 ],
										"helpname" : "patcher",
										"aliasOf" : "rnbo",
										"classname" : "p",
										"operator" : 0,
										"versionId" : 88895198,
										"changesPatcherIO" : 0
									}
,
									"text" : "p @file stretta.funbuff.rnbopat"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-38",
									"maxclass" : "newobj",
									"numinlets" : 5,
									"numoutlets" : 5,
									"outlettype" : [ "", "", "", "", "" ],
									"patching_rect" : [ 1817.333387494087219, 93.333336114883423, 1038.0, 23.0 ],
									"rnbo_classname" : "route",
									"rnbo_serial" : 4,
									"rnbo_uniqueid" : "route_obj-38",
									"rnboinfo" : 									{
										"needsInstanceInfo" : 1,
										"argnames" : 										{
											"selector1" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "0"
											}
,
											"selector2" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 2",
												"defaultarg" : 2,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "1"
											}
,
											"selector3" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 3",
												"defaultarg" : 3,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "2"
											}
,
											"selector4" : 											{
												"attrOrProp" : 1,
												"digest" : "Change selector for Match 4",
												"defaultarg" : 4,
												"isalias" : 0,
												"aliases" : [  ],
												"settable" : 1,
												"attachable" : 0,
												"isparam" : 0,
												"deprecated" : 0,
												"inlet" : 1,
												"type" : "number",
												"defaultValue" : "3"
											}

										}
,
										"inputs" : [ 											{
												"name" : "input",
												"type" : [ "list", "number", "bang" ],
												"digest" : "Number or List to be routed",
												"hot" : 1,
												"docked" : 0
											}
, 											{
												"name" : "selector1",
												"type" : "number",
												"digest" : "Change selector for Match 1",
												"defaultarg" : 1,
												"docked" : 0
											}
, 											{
												"name" : "selector2",
												"type" : "number",
												"digest" : "Change selector for Match 2",
												"defaultarg" : 2,
												"docked" : 0
											}
, 											{
												"name" : "selector3",
												"type" : "number",
												"digest" : "Change selector for Match 3",
												"defaultarg" : 3,
												"docked" : 0
											}
, 											{
												"name" : "selector4",
												"type" : "number",
												"digest" : "Change selector for Match 4",
												"defaultarg" : 4,
												"docked" : 0
											}
 ],
										"outputs" : [ 											{
												"name" : "match1",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 0",
												"docked" : 0
											}
, 											{
												"name" : "match2",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 1",
												"docked" : 0
											}
, 											{
												"name" : "match3",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 2",
												"docked" : 0
											}
, 											{
												"name" : "match4",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Output if input matches 3",
												"docked" : 0
											}
, 											{
												"name" : "nomatch",
												"type" : [ "bang", "number", "list" ],
												"digest" : "Input if Input Doesn't Match",
												"docked" : 0
											}
 ],
										"helpname" : "route",
										"aliasOf" : "route",
										"classname" : "route",
										"operator" : 0,
										"versionId" : -1778059630,
										"changesPatcherIO" : 0
									}
,
									"text" : "route 0 1 2 3"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-39",
									"maxclass" : "newobj",
									"numinlets" : 0,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 1817.333387494087219, 53.333334922790527, 119.0, 23.0 ],
									"rnbo_classname" : "inport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 2,
									"rnbo_uniqueid" : "inport_obj-39",
									"text" : "inport /arc/enc/delta"
								}

							}
, 							{
								"box" : 								{
									"id" : "obj-1",
									"maxclass" : "newobj",
									"numinlets" : 0,
									"numoutlets" : 1,
									"outlettype" : [ "" ],
									"patching_rect" : [ 645.333352565765381, 176.00000524520874, 128.0, 23.0 ],
									"rnbo_classname" : "inport",
									"rnbo_extra_attributes" : 									{
										"meta" : ""
									}
,
									"rnbo_serial" : 3,
									"rnbo_uniqueid" : "inport_obj-1",
									"text" : "inport /grid-a/grid/key"
								}

							}
 ],
						"lines" : [ 							{
								"patchline" : 								{
									"destination" : [ "obj-28", 0 ],
									"source" : [ "obj-1", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-4", 1 ],
									"source" : [ "obj-10", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-4", 0 ],
									"source" : [ "obj-10", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-110", 0 ],
									"source" : [ "obj-100", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-61", 0 ],
									"source" : [ "obj-101", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-101", 1 ],
									"source" : [ "obj-103", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-98", 0 ],
									"source" : [ "obj-103", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-106", 0 ],
									"order" : 1,
									"source" : [ "obj-104", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-82", 0 ],
									"order" : 0,
									"source" : [ "obj-104", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-100", 0 ],
									"source" : [ "obj-105", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-145", 0 ],
									"source" : [ "obj-106", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-93", 1 ],
									"source" : [ "obj-107", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-93", 0 ],
									"source" : [ "obj-107", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-125", 0 ],
									"source" : [ "obj-108", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-128", 0 ],
									"order" : 1,
									"source" : [ "obj-109", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-214", 0 ],
									"order" : 0,
									"source" : [ "obj-109", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-133", 1 ],
									"order" : 0,
									"source" : [ "obj-11", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-21", 0 ],
									"order" : 1,
									"source" : [ "obj-11", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-98", 1 ],
									"source" : [ "obj-110", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-120", 1 ],
									"source" : [ "obj-111", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-118", 0 ],
									"source" : [ "obj-112", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-119", 0 ],
									"source" : [ "obj-113", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-116", 1 ],
									"source" : [ "obj-115", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-120", 0 ],
									"source" : [ "obj-115", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-260", 0 ],
									"source" : [ "obj-116", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-104", 0 ],
									"source" : [ "obj-117", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-111", 0 ],
									"source" : [ "obj-118", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-123", 0 ],
									"source" : [ "obj-119", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-116", 0 ],
									"source" : [ "obj-120", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-122", 0 ],
									"source" : [ "obj-121", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-156", 0 ],
									"source" : [ "obj-122", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-157", 0 ],
									"source" : [ "obj-122", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-158", 0 ],
									"source" : [ "obj-122", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-131", 0 ],
									"source" : [ "obj-123", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-132", 0 ],
									"source" : [ "obj-124", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-91", 0 ],
									"source" : [ "obj-125", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-126", 0 ],
									"source" : [ "obj-127", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-127", 0 ],
									"source" : [ "obj-128", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-130", 0 ],
									"source" : [ "obj-128", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-113", 1 ],
									"source" : [ "obj-129", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-121", 0 ],
									"source" : [ "obj-13", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-113", 0 ],
									"order" : 1,
									"source" : [ "obj-130", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-129", 0 ],
									"order" : 0,
									"source" : [ "obj-130", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-108", 0 ],
									"source" : [ "obj-132", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-68", 0 ],
									"source" : [ "obj-133", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-136", 0 ],
									"source" : [ "obj-135", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-138", 0 ],
									"source" : [ "obj-135", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-137", 1 ],
									"source" : [ "obj-136", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-137", 0 ],
									"source" : [ "obj-136", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-143", 0 ],
									"source" : [ "obj-136", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-144", 0 ],
									"source" : [ "obj-136", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-121", 1 ],
									"source" : [ "obj-137", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-139", 0 ],
									"source" : [ "obj-138", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-141", 0 ],
									"source" : [ "obj-138", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-142", 0 ],
									"source" : [ "obj-139", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-178", 0 ],
									"order" : 0,
									"source" : [ "obj-14", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-27", 1 ],
									"order" : 1,
									"source" : [ "obj-14", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-56", 1 ],
									"order" : 2,
									"source" : [ "obj-14", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-97", 0 ],
									"source" : [ "obj-14", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-133", 0 ],
									"source" : [ "obj-140", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-167", 0 ],
									"source" : [ "obj-141", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-141", 0 ],
									"source" : [ "obj-142", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-137", 2 ],
									"source" : [ "obj-143", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-147", 0 ],
									"source" : [ "obj-144", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-14", 3 ],
									"order" : 2,
									"source" : [ "obj-145", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-55", 3 ],
									"order" : 0,
									"source" : [ "obj-145", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-72", 3 ],
									"order" : 1,
									"source" : [ "obj-145", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-163", 0 ],
									"source" : [ "obj-146", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-164", 0 ],
									"source" : [ "obj-146", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-143", 1 ],
									"source" : [ "obj-147", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-14", 2 ],
									"source" : [ "obj-149", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-40", 2 ],
									"source" : [ "obj-149", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-55", 2 ],
									"source" : [ "obj-149", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-72", 2 ],
									"source" : [ "obj-149", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-66", 0 ],
									"source" : [ "obj-15", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-80", 1 ],
									"source" : [ "obj-15", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-115", 0 ],
									"source" : [ "obj-150", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-294", 0 ],
									"order" : 1,
									"source" : [ "obj-153", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-3", 0 ],
									"order" : 0,
									"source" : [ "obj-153", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-140", 0 ],
									"source" : [ "obj-154", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-159", 0 ],
									"source" : [ "obj-155", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-107", 2 ],
									"source" : [ "obj-156", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-107", 1 ],
									"source" : [ "obj-157", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-107", 0 ],
									"source" : [ "obj-158", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-161", 0 ],
									"source" : [ "obj-159", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-177", 0 ],
									"source" : [ "obj-160", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-86", 3 ],
									"source" : [ "obj-161", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-53", 0 ],
									"source" : [ "obj-162", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-135", 0 ],
									"source" : [ "obj-163", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-122", 0 ],
									"midpoints" : [ 1104.166699290275574, 2355.98661595582962, 1206.833369016647339, 2355.98661595582962 ],
									"source" : [ "obj-164", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-167", 0 ],
									"source" : [ "obj-164", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-167", 0 ],
									"source" : [ "obj-166", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-13", 0 ],
									"source" : [ "obj-167", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-61", 1 ],
									"source" : [ "obj-168", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-172", 0 ],
									"source" : [ "obj-170", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-162", 1 ],
									"source" : [ "obj-172", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-179", 0 ],
									"source" : [ "obj-174", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-22", 0 ],
									"order" : 1,
									"source" : [ "obj-175", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-7", 0 ],
									"order" : 0,
									"source" : [ "obj-175", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-168", 0 ],
									"source" : [ "obj-176", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-184", 0 ],
									"source" : [ "obj-177", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-182", 0 ],
									"source" : [ "obj-178", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-170", 0 ],
									"source" : [ "obj-179", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-19", 0 ],
									"source" : [ "obj-18", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-186", 0 ],
									"source" : [ "obj-180", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-183", 0 ],
									"source" : [ "obj-181", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-190", 0 ],
									"source" : [ "obj-182", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-188", 0 ],
									"source" : [ "obj-183", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-226", 0 ],
									"source" : [ "obj-184", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-61", 2 ],
									"source" : [ "obj-186", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-180", 0 ],
									"source" : [ "obj-187", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-146", 0 ],
									"source" : [ "obj-188", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-264", 0 ],
									"source" : [ "obj-19", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-48", 0 ],
									"source" : [ "obj-190", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-195", 0 ],
									"source" : [ "obj-196", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-348", 0 ],
									"source" : [ "obj-2", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-196", 0 ],
									"source" : [ "obj-200", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-24", 0 ],
									"source" : [ "obj-21", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-52", 1 ],
									"source" : [ "obj-212", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-30", 0 ],
									"source" : [ "obj-213", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-31", 0 ],
									"source" : [ "obj-213", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-37", 0 ],
									"source" : [ "obj-213", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-47", 0 ],
									"source" : [ "obj-213", 5 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-49", 0 ],
									"source" : [ "obj-213", 4 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-57", 0 ],
									"source" : [ "obj-213", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-59", 0 ],
									"source" : [ "obj-213", 7 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-63", 0 ],
									"source" : [ "obj-213", 6 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-213", 0 ],
									"source" : [ "obj-214", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-200", 0 ],
									"source" : [ "obj-22", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-26", 0 ],
									"source" : [ "obj-22", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-149", 1 ],
									"source" : [ "obj-221", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-294", 0 ],
									"source" : [ "obj-221", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-165", 0 ],
									"source" : [ "obj-226", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-303", 0 ],
									"order" : 0,
									"source" : [ "obj-23", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-314", 0 ],
									"order" : 1,
									"source" : [ "obj-23", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-58", 0 ],
									"source" : [ "obj-24", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-263", 1 ],
									"source" : [ "obj-248", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-14", 0 ],
									"source" : [ "obj-252", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-40", 0 ],
									"source" : [ "obj-252", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-55", 0 ],
									"source" : [ "obj-252", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-72", 0 ],
									"source" : [ "obj-252", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-8", 0 ],
									"source" : [ "obj-26", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-262", 0 ],
									"source" : [ "obj-260", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-263", 0 ],
									"source" : [ "obj-262", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-86", 2 ],
									"source" : [ "obj-263", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-248", 0 ],
									"source" : [ "obj-264", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-34", 0 ],
									"source" : [ "obj-27", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-33", 0 ],
									"source" : [ "obj-28", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-178", 1 ],
									"source" : [ "obj-288", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-110", 0 ],
									"source" : [ "obj-29", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-288", 0 ],
									"source" : [ "obj-293", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-294", 0 ],
									"source" : [ "obj-293", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-252", 0 ],
									"source" : [ "obj-294", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-67", 0 ],
									"source" : [ "obj-298", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-149", 0 ],
									"source" : [ "obj-3", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-30", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-23", 0 ],
									"source" : [ "obj-301", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-305", 0 ],
									"source" : [ "obj-301", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-314", 1 ],
									"source" : [ "obj-303", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-306", 0 ],
									"source" : [ "obj-305", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-9", 0 ],
									"source" : [ "obj-308", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-298", 0 ],
									"source" : [ "obj-309", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-31", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-20", 0 ],
									"source" : [ "obj-311", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-311", 0 ],
									"source" : [ "obj-313", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-313", 0 ],
									"source" : [ "obj-314", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-175", 0 ],
									"source" : [ "obj-32", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-347", 0 ],
									"source" : [ "obj-329", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-15", 0 ],
									"source" : [ "obj-33", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-334", 0 ],
									"source" : [ "obj-333", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-335", 0 ],
									"source" : [ "obj-334", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-343", 0 ],
									"source" : [ "obj-335", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-344", 0 ],
									"source" : [ "obj-336", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-10", 0 ],
									"source" : [ "obj-337", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-338", 0 ],
									"source" : [ "obj-339", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-41", 0 ],
									"source" : [ "obj-34", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-339", 0 ],
									"source" : [ "obj-340", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-342", 0 ],
									"source" : [ "obj-340", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-333", 1 ],
									"source" : [ "obj-341", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-333", 0 ],
									"order" : 1,
									"source" : [ "obj-342", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-341", 0 ],
									"order" : 0,
									"source" : [ "obj-342", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-354", 0 ],
									"source" : [ "obj-344", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-153", 0 ],
									"order" : 1,
									"source" : [ "obj-347", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-301", 0 ],
									"order" : 0,
									"source" : [ "obj-347", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-340", 0 ],
									"order" : 0,
									"source" : [ "obj-348", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-68", 0 ],
									"order" : 1,
									"source" : [ "obj-348", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-27", 0 ],
									"source" : [ "obj-35", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-34", 1 ],
									"source" : [ "obj-35", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-36", 0 ],
									"source" : [ "obj-35", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-308", 0 ],
									"source" : [ "obj-353", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-337", 0 ],
									"source" : [ "obj-354", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-41", 1 ],
									"source" : [ "obj-36", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-37", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-124", 0 ],
									"source" : [ "obj-38", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-160", 0 ],
									"source" : [ "obj-38", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-309", 0 ],
									"source" : [ "obj-38", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-336", 0 ],
									"source" : [ "obj-38", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-38", 0 ],
									"source" : [ "obj-39", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-348", 0 ],
									"source" : [ "obj-4", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-178", 0 ],
									"order" : 0,
									"source" : [ "obj-40", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-27", 1 ],
									"order" : 1,
									"source" : [ "obj-40", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-56", 1 ],
									"order" : 2,
									"source" : [ "obj-40", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-85", 0 ],
									"source" : [ "obj-40", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-46", 0 ],
									"source" : [ "obj-41", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-12", 0 ],
									"source" : [ "obj-46", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-47", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-49", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-60", 0 ],
									"source" : [ "obj-5", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-25", 0 ],
									"source" : [ "obj-50", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-50", 0 ],
									"source" : [ "obj-52", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-212", 0 ],
									"source" : [ "obj-53", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-54", 1 ],
									"source" : [ "obj-53", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-56", 0 ],
									"source" : [ "obj-53", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-52", 0 ],
									"source" : [ "obj-54", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-155", 0 ],
									"source" : [ "obj-55", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-178", 0 ],
									"order" : 0,
									"source" : [ "obj-55", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-27", 1 ],
									"order" : 1,
									"source" : [ "obj-55", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-56", 1 ],
									"order" : 2,
									"source" : [ "obj-55", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-54", 0 ],
									"source" : [ "obj-56", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-57", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-162", 0 ],
									"order" : 1,
									"source" : [ "obj-58", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-35", 0 ],
									"order" : 0,
									"source" : [ "obj-58", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-59", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-347", 0 ],
									"source" : [ "obj-6", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-11", 0 ],
									"source" : [ "obj-60", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-86", 0 ],
									"source" : [ "obj-61", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-64", 0 ],
									"source" : [ "obj-63", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-110", 0 ],
									"source" : [ "obj-65", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-80", 0 ],
									"source" : [ "obj-66", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-353", 0 ],
									"source" : [ "obj-67", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-21", 1 ],
									"order" : 1,
									"source" : [ "obj-68", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-70", 0 ],
									"order" : 0,
									"source" : [ "obj-68", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-109", 0 ],
									"source" : [ "obj-69", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-5", 0 ],
									"source" : [ "obj-7", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-58", 1 ],
									"source" : [ "obj-7", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-81", 0 ],
									"source" : [ "obj-7", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-75", 0 ],
									"source" : [ "obj-70", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-293", 0 ],
									"order" : 0,
									"source" : [ "obj-71", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-66", 1 ],
									"order" : 1,
									"source" : [ "obj-71", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-150", 0 ],
									"source" : [ "obj-72", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-178", 0 ],
									"order" : 0,
									"source" : [ "obj-72", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-27", 1 ],
									"order" : 1,
									"source" : [ "obj-72", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-56", 1 ],
									"order" : 2,
									"source" : [ "obj-72", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-40", 3 ],
									"source" : [ "obj-73", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-71", 0 ],
									"source" : [ "obj-75", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-32", 0 ],
									"source" : [ "obj-76", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-83", 0 ],
									"source" : [ "obj-77", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-79", 1 ],
									"source" : [ "obj-78", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-84", 0 ],
									"source" : [ "obj-78", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-86", 1 ],
									"source" : [ "obj-79", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-221", 0 ],
									"source" : [ "obj-80", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-14", 1 ],
									"source" : [ "obj-81", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-40", 1 ],
									"source" : [ "obj-81", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-55", 1 ],
									"source" : [ "obj-81", 3 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-72", 1 ],
									"source" : [ "obj-81", 2 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-73", 0 ],
									"source" : [ "obj-82", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-96", 0 ],
									"source" : [ "obj-83", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-79", 0 ],
									"source" : [ "obj-84", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-78", 0 ],
									"source" : [ "obj-85", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-181", 0 ],
									"source" : [ "obj-86", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-329", 1 ],
									"source" : [ "obj-9", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-329", 0 ],
									"source" : [ "obj-9", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-95", 1 ],
									"source" : [ "obj-91", 1 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-95", 0 ],
									"source" : [ "obj-91", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-94", 0 ],
									"source" : [ "obj-92", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-92", 0 ],
									"source" : [ "obj-93", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-109", 0 ],
									"source" : [ "obj-95", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-84", 1 ],
									"source" : [ "obj-96", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-103", 0 ],
									"source" : [ "obj-97", 0 ]
								}

							}
, 							{
								"patchline" : 								{
									"destination" : [ "obj-101", 0 ],
									"source" : [ "obj-98", 0 ]
								}

							}
 ],
						"default_bgcolor" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
						"color" : [ 0.929412, 0.929412, 0.352941, 1.0 ],
						"elementcolor" : [ 0.357540726661682, 0.515565991401672, 0.861786782741547, 1.0 ],
						"accentcolor" : [ 0.343034118413925, 0.506230533123016, 0.86220508813858, 1.0 ],
						"stripecolor" : [ 0.258338063955307, 0.352425158023834, 0.511919498443604, 1.0 ],
						"bgfillcolor_type" : "color",
						"bgfillcolor_color" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
						"bgfillcolor_color1" : [ 0.031372549019608, 0.125490196078431, 0.211764705882353, 1.0 ],
						"bgfillcolor_color2" : [ 0.263682, 0.004541, 0.038797, 1.0 ],
						"bgfillcolor_angle" : 270.0,
						"bgfillcolor_proportion" : 0.39,
						"bgfillcolor_autogradient" : 0.0,
						"export_config" : 						{
							"oscquery-export" : 							{
								"rnbo_standalone01._oscjson._tcp.local.-rnbo_standalone01" : 								{
									"copy_dependencies" : 1
								}

							}

						}

					}
,
					"patching_rect" : [ 113.600001692771912, 345.600005149841309, 120.0, 22.0 ],
					"rnboattrcache" : 					{
						"Root" : 						{
							"label" : "Root",
							"isEnum" : 0,
							"parsestring" : ""
						}
,
						"Scale" : 						{
							"label" : "Scale",
							"isEnum" : 0,
							"parsestring" : ""
						}
,
						"Chase" : 						{
							"label" : "Chase",
							"isEnum" : 1,
							"parsestring" : "\"off\" \"on\""
						}
,
						"Lane" : 						{
							"label" : "Lane",
							"isEnum" : 1,
							"parsestring" : "\"Pitch\" \"Velocity\" \"Duration\" \"Ratchet\""
						}
,
						"Page" : 						{
							"label" : "Page",
							"isEnum" : 1,
							"parsestring" : "\"1\" \"2\" \"3\" \"4\""
						}
,
						"Notelist" : 						{
							"label" : "Notelist",
							"isEnum" : 1,
							"parsestring" : "\"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\""
						}

					}
,
					"rnboversion" : "1.3.2-alpha.1",
					"saved_attribute_attributes" : 					{
						"valueof" : 						{
							"parameter_invisible" : 1,
							"parameter_longname" : "rnbo~",
							"parameter_modmode" : 0,
							"parameter_shortname" : "rnbo~",
							"parameter_type" : 3
						}

					}
,
					"saved_object_attributes" : 					{
						"optimization" : "O1",
						"parameter_enable" : 1,
						"uuid" : "bc5a8ccd-1485-11ef-8ccd-3a39a70e40da"
					}
,
					"snapshot" : 					{
						"filetype" : "C74Snapshot",
						"version" : 2,
						"minorversion" : 0,
						"name" : "snapshotlist",
						"origin" : "rnbo~",
						"type" : "list",
						"subtype" : "Undefined",
						"embed" : 1,
						"snapshot" : 						{
							"__sps" : 							{
								"p_obj-95" : 								{

								}
,
								"p_obj-4" : 								{

								}
,
								"draw_col" : 								{
									"__sps" : 									{
										"generate_col" : 										{

										}

									}

								}
,
								"p_obj-329" : 								{

								}
,
								"p_obj-13" : 								{

								}
,
								"p_obj-55" : 								{

								}
,
								"p_obj-186" : 								{

								}
,
								"p_obj-40" : 								{

								}
,
								"p_obj-160" : 								{

								}
,
								"p_obj-72" : 								{

								}
,
								"draw_col[2]" : 								{
									"__sps" : 									{
										"generate_col" : 										{

										}

									}

								}
,
								"draw_col[1]" : 								{
									"__sps" : 									{
										"generate_col" : 										{

										}

									}

								}
,
								"p_obj-14" : 								{

								}
,
								"p_obj-61" : 								{
									"__sps" : 									{
										"p_obj-16" : 										{

										}

									}

								}

							}
,
							"Notelist" : 							{
								"value" : 0.0
							}
,
							"Page" : 							{
								"value" : 0.0
							}
,
							"Lane" : 							{
								"value" : 2.0
							}
,
							"Scale" : 							{
								"value" : 1453.0
							}
,
							"Root" : 							{
								"value" : 60.0
							}
,
							"Chase" : 							{
								"value" : 0.0
							}
,
							"__presetid" : "seq64m"
						}
,
						"snapshotlist" : 						{
							"current_snapshot" : 0,
							"entries" : [ 								{
									"filetype" : "C74Snapshot",
									"version" : 2,
									"minorversion" : 0,
									"name" : "grid-momentaries",
									"origin" : "seq64m",
									"type" : "rnbo",
									"subtype" : "",
									"embed" : 0,
									"snapshot" : 									{
										"__sps" : 										{
											"p_obj-95" : 											{

											}
,
											"p_obj-4" : 											{

											}
,
											"draw_col" : 											{
												"__sps" : 												{
													"generate_col" : 													{

													}

												}

											}
,
											"p_obj-329" : 											{

											}
,
											"p_obj-13" : 											{

											}
,
											"p_obj-55" : 											{

											}
,
											"p_obj-186" : 											{

											}
,
											"p_obj-40" : 											{

											}
,
											"p_obj-160" : 											{

											}
,
											"p_obj-72" : 											{

											}
,
											"draw_col[2]" : 											{
												"__sps" : 												{
													"generate_col" : 													{

													}

												}

											}
,
											"draw_col[1]" : 											{
												"__sps" : 												{
													"generate_col" : 													{

													}

												}

											}
,
											"p_obj-14" : 											{

											}
,
											"p_obj-61" : 											{
												"__sps" : 												{
													"p_obj-16" : 													{

													}

												}

											}

										}
,
										"Notelist" : 										{
											"value" : 0.0
										}
,
										"Page" : 										{
											"value" : 0.0
										}
,
										"Lane" : 										{
											"value" : 2.0
										}
,
										"Scale" : 										{
											"value" : 1453.0
										}
,
										"Root" : 										{
											"value" : 60.0
										}
,
										"Chase" : 										{
											"value" : 0.0
										}
,
										"__presetid" : "seq64m"
									}
,
									"fileref" : 									{
										"name" : "grid-momentaries",
										"filename" : "grid-momentaries_20240522.maxsnap",
										"filepath" : "~/Documents/Max 8/Snapshots",
										"filepos" : -1,
										"snapshotfileid" : "e86b2682ab43ba45715c5d72751d4136"
									}

								}
 ]
						}

					}
,
					"text" : "rnbo~ @title seq64m",
					"varname" : "rnbo~"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-10", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-12", 0 ],
					"midpoints" : [ 224.100001692771912, 379.700005501508713, 437.500006377696991, 379.700005501508713 ],
					"order" : 3,
					"source" : [ "obj-1", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-14", 0 ],
					"midpoints" : [ 224.100001692771912, 381.700005531311035, 842.5, 381.700005531311035 ],
					"order" : 0,
					"source" : [ "obj-1", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-27", 0 ],
					"midpoints" : [ 224.100001692771912, 379.700005501508713, 704.700010359287262, 379.700005501508713 ],
					"order" : 1,
					"source" : [ "obj-1", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-36", 0 ],
					"midpoints" : [ 224.100001692771912, 379.700005501508713, 581.500008523464203, 379.700005501508713 ],
					"order" : 2,
					"source" : [ "obj-1", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-47", 0 ],
					"order" : 4,
					"source" : [ "obj-1", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-22", 0 ],
					"source" : [ "obj-10", 7 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"source" : [ "obj-11", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-13", 0 ],
					"source" : [ "obj-12", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-13", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-2", 0 ],
					"source" : [ "obj-14", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-24", 0 ],
					"source" : [ "obj-15", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-15", 0 ],
					"source" : [ "obj-16", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-16", 0 ],
					"source" : [ "obj-17", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-30", 1 ],
					"order" : 0,
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"midpoints" : [ 842.0, 485.200006693601608, 436.700006365776062, 485.200006693601608 ],
					"order" : 1,
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"midpoints" : [ 436.700006365776062, 601.133345365524292, 53.433353543281555, 601.133345365524292, 53.433353543281555, 310.733344972133636, 123.100001692771912, 310.733344972133636 ],
					"source" : [ "obj-21", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-23", 1 ],
					"source" : [ "obj-22", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-23", 0 ],
					"source" : [ "obj-22", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"source" : [ "obj-24", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-44", 0 ],
					"source" : [ "obj-25", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"midpoints" : [ 703.900010347366333, 485.300007075071335, 436.700006365776062, 485.300007075071335 ],
					"source" : [ "obj-26", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-26", 0 ],
					"source" : [ "obj-27", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"source" : [ "obj-28", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-86", 0 ],
					"source" : [ "obj-291", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-29", 0 ],
					"source" : [ "obj-32", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-291", 0 ],
					"source" : [ "obj-326", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"midpoints" : [ 580.700008511543274, 485.300007075071335, 436.700006365776062, 485.300007075071335 ],
					"source" : [ "obj-35", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-35", 0 ],
					"source" : [ "obj-36", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"midpoints" : [ 224.100001692771912, 579.133345425128937, 89.733354866504669, 579.133345425128937, 89.733354866504669, 340.133345425128937, 123.100001692771912, 340.133345425128937 ],
					"source" : [ "obj-4", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-50", 0 ],
					"source" : [ "obj-44", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-25", 0 ],
					"source" : [ "obj-47", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-50", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"source" : [ "obj-6", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-21", 0 ],
					"source" : [ "obj-7", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-9", 0 ],
					"source" : [ "obj-8", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-85", 0 ],
					"source" : [ "obj-86", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-29", 0 ],
					"source" : [ "obj-9", 0 ]
				}

			}
 ],
		"parameters" : 		{
			"obj-1" : [ "rnbo~", "rnbo~", 0 ],
			"obj-17::obj-556::obj-28" : [ "1185_pitch-bin", "1049_pitch-bin", 0 ],
			"obj-22" : [ "vst~", "vst~", 0 ],
			"obj-85" : [ "toggle[6]", "toggle[1]", 0 ],
			"parameterbanks" : 			{
				"0" : 				{
					"index" : 0,
					"name" : "",
					"parameters" : [ "-", "-", "-", "-", "-", "-", "-", "-" ]
				}

			}
,
			"inherited_shortname" : 1
		}
,
		"dependency_cache" : [ 			{
				"name" : "LABS.maxsnap",
				"bootpath" : "~/Documents/Max 8/Snapshots",
				"patcherrelativepath" : "../../../../Snapshots",
				"type" : "mx@s",
				"implicit" : 1
			}
, 			{
				"name" : "bp.bintoks.maxpat",
				"bootpath" : "~/Documents/Max 8/Packages/hin/patchers",
				"patcherrelativepath" : "../../../hin/patchers",
				"type" : "JSON",
				"implicit" : 1
			}
, 			{
				"name" : "bp.bintott.maxpat",
				"bootpath" : "~/Documents/Max 8/Packages/hin/patchers",
				"patcherrelativepath" : "../../../hin/patchers",
				"type" : "JSON",
				"implicit" : 1
			}
, 			{
				"name" : "bp.kspitch.maxpat",
				"bootpath" : "~/Documents/Max 8/Packages/hin/patchers",
				"patcherrelativepath" : "../../../hin/patchers",
				"type" : "JSON",
				"implicit" : 1
			}
, 			{
				"name" : "bp.kstobin.maxpat",
				"bootpath" : "~/Documents/Max 8/Packages/hin/patchers",
				"patcherrelativepath" : "../../../hin/patchers",
				"type" : "JSON",
				"implicit" : 1
			}
, 			{
				"name" : "grid-momentaries_20240522.maxsnap",
				"bootpath" : "~/Documents/Max 8/Snapshots",
				"patcherrelativepath" : "../../../../Snapshots",
				"type" : "mx@s",
				"implicit" : 1
			}
, 			{
				"name" : "serialosc.js",
				"bootpath" : "C74:/packages/BEAP/patchers",
				"type" : "TEXT",
				"implicit" : 1
			}
, 			{
				"name" : "serialosc.maxpat",
				"bootpath" : "C74:/packages/BEAP/patchers",
				"type" : "JSON",
				"implicit" : 1
			}
 ],
		"autosave" : 0
	}

}
